+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.662 I build: 3902 (693c8bf0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.860 I main: llama backend init
0.00.003.106 I main: load the model and apply lora adapter, if any
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.025.276 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.497 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.583 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.594 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.596 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.599 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.601 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.602 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.603 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.604 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.606 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.614 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.618 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.619 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.619 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.620 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.154.289 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.252.591 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.078 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.087 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.088 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.089 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.090 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.091 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.092 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.096 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.097 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.098 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.099 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.271.101 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.109 I llama_model_loader: - type  f32:   37 tensors
0.00.271.114 I llama_model_loader: - type q8_0:  127 tensors
0.00.453.081 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.514.516 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.515.537 I llm_load_vocab: special tokens cache size = 5
0.00.613.021 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.613.089 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.613.091 I llm_load_print_meta: arch             = gemma
0.00.613.091 I llm_load_print_meta: vocab type       = SPM
0.00.613.093 I llm_load_print_meta: n_vocab          = 256000
0.00.613.095 I llm_load_print_meta: n_merges         = 0
0.00.613.095 I llm_load_print_meta: vocab_only       = 0
0.00.613.096 I llm_load_print_meta: n_ctx_train      = 8192
0.00.613.096 I llm_load_print_meta: n_embd           = 2048
0.00.613.097 I llm_load_print_meta: n_layer          = 18
0.00.613.159 I llm_load_print_meta: n_head           = 8
0.00.613.168 I llm_load_print_meta: n_head_kv        = 1
0.00.613.169 I llm_load_print_meta: n_rot            = 256
0.00.613.169 I llm_load_print_meta: n_swa            = 0
0.00.613.182 I llm_load_print_meta: n_embd_head_k    = 256
0.00.613.186 I llm_load_print_meta: n_embd_head_v    = 256
0.00.613.191 I llm_load_print_meta: n_gqa            = 8
0.00.613.196 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.613.204 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.613.205 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.613.207 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.613.208 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.613.209 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.613.209 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.613.215 I llm_load_print_meta: n_ff             = 16384
0.00.613.216 I llm_load_print_meta: n_expert         = 0
0.00.613.217 I llm_load_print_meta: n_expert_used    = 0
0.00.613.217 I llm_load_print_meta: causal attn      = 1
0.00.613.218 I llm_load_print_meta: pooling type     = 0
0.00.613.218 I llm_load_print_meta: rope type        = 2
0.00.613.218 I llm_load_print_meta: rope scaling     = linear
0.00.613.220 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.613.230 I llm_load_print_meta: freq_scale_train = 1
0.00.613.242 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.613.243 I llm_load_print_meta: rope_finetuned   = unknown
0.00.613.243 I llm_load_print_meta: ssm_d_conv       = 0
0.00.613.243 I llm_load_print_meta: ssm_d_inner      = 0
0.00.613.244 I llm_load_print_meta: ssm_d_state      = 0
0.00.613.244 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.613.245 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.613.246 I llm_load_print_meta: model type       = 2B
0.00.613.249 I llm_load_print_meta: model ftype      = Q8_0
0.00.613.250 I llm_load_print_meta: model params     = 2.51 B
0.00.613.251 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.613.251 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.613.252 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.613.252 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.613.253 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.613.253 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.613.253 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.613.254 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.613.260 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.613.261 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.613.262 I llm_load_print_meta: max token length = 93
0.00.613.429 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.714.867 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.714.878 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.714.878 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.714.879 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.714.880 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.714.880 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.720.616 I llama_new_context_with_model: n_ctx      = 8192
0.00.720.624 I llama_new_context_with_model: n_batch    = 2048
0.00.720.625 I llama_new_context_with_model: n_ubatch   = 512
0.00.720.625 I llama_new_context_with_model: flash_attn = 0
0.00.720.628 I llama_new_context_with_model: freq_base  = 10000.0
0.00.720.629 I llama_new_context_with_model: freq_scale = 1
0.00.749.737 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.749.776 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.749.891 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.751.280 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.751.286 I llama_new_context_with_model: graph nodes  = 601
0.00.751.286 I llama_new_context_with_model: graph splits = 1
0.00.751.303 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.363.283 I main: llama threadpool init, n_threads = 4
0.01.363.294 I 
0.01.363.403 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.363.408 I 
0.01.363.591 I sampler seed: 2302268553
0.01.363.602 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.363.608 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.363.612 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.363.612 I 
 increamically, a magnificent symphony of sound emanating from the heavens.

**Identify the figurative elements used in the text.**

The provided text uses several figurative elements

0.14.882.242 I llama_perf_sampler_print:    sampling time =      49.21 ms /    33 runs   (    1.49 ms per token,   670.61 tokens per second)
0.14.882.245 I llama_perf_context_print:        load time =    1360.00 ms
0.14.882.246 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.882.253 I llama_perf_context_print:        eval time =   13437.04 ms /    32 runs   (  419.91 ms per token,     2.38 tokens per second)
0.14.882.254 I llama_perf_context_print:       total time =   13518.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.658 I build: 3902 (693c8bf0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.865 I main: llama backend init
0.00.002.834 I main: load the model and apply lora adapter, if any
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.025.241 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.336 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.350 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.352 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.356 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.357 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.358 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.362 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.363 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.364 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.372 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.373 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.374 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.376 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.378 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.655 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.252.100 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.714 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.722 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.723 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.724 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.725 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.726 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.727 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.731 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.732 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.733 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.270.734 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.270.735 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.270.743 I llama_model_loader: - type  f32:   37 tensors
0.00.270.748 I llama_model_loader: - type q8_0:  127 tensors
0.00.444.470 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.505.208 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.506.238 I llm_load_vocab: special tokens cache size = 5
0.00.601.931 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.602.000 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.602.001 I llm_load_print_meta: arch             = gemma
0.00.602.002 I llm_load_print_meta: vocab type       = SPM
0.00.602.002 I llm_load_print_meta: n_vocab          = 256000
0.00.602.004 I llm_load_print_meta: n_merges         = 0
0.00.602.005 I llm_load_print_meta: vocab_only       = 0
0.00.602.005 I llm_load_print_meta: n_ctx_train      = 8192
0.00.602.006 I llm_load_print_meta: n_embd           = 2048
0.00.602.006 I llm_load_print_meta: n_layer          = 18
0.00.602.071 I llm_load_print_meta: n_head           = 8
0.00.602.079 I llm_load_print_meta: n_head_kv        = 1
0.00.602.080 I llm_load_print_meta: n_rot            = 256
0.00.602.080 I llm_load_print_meta: n_swa            = 0
0.00.602.080 I llm_load_print_meta: n_embd_head_k    = 256
0.00.602.081 I llm_load_print_meta: n_embd_head_v    = 256
0.00.602.085 I llm_load_print_meta: n_gqa            = 8
0.00.602.090 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.602.095 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.602.096 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.602.098 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.602.098 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.602.099 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.602.099 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.602.118 I llm_load_print_meta: n_ff             = 16384
0.00.602.119 I llm_load_print_meta: n_expert         = 0
0.00.602.120 I llm_load_print_meta: n_expert_used    = 0
0.00.602.120 I llm_load_print_meta: causal attn      = 1
0.00.602.120 I llm_load_print_meta: pooling type     = 0
0.00.602.121 I llm_load_print_meta: rope type        = 2
0.00.602.121 I llm_load_print_meta: rope scaling     = linear
0.00.602.123 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.602.123 I llm_load_print_meta: freq_scale_train = 1
0.00.602.124 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.602.124 I llm_load_print_meta: rope_finetuned   = unknown
0.00.602.124 I llm_load_print_meta: ssm_d_conv       = 0
0.00.602.125 I llm_load_print_meta: ssm_d_inner      = 0
0.00.602.125 I llm_load_print_meta: ssm_d_state      = 0
0.00.602.125 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.602.125 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.602.126 I llm_load_print_meta: model type       = 2B
0.00.602.127 I llm_load_print_meta: model ftype      = Q8_0
0.00.602.128 I llm_load_print_meta: model params     = 2.51 B
0.00.602.129 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.602.129 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.602.130 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.602.130 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.602.130 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.602.131 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.602.131 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.602.132 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.602.137 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.602.139 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.602.140 I llm_load_print_meta: max token length = 93
0.00.602.305 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.696.402 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.702.087 I llama_new_context_with_model: n_ctx      = 8192
0.00.702.094 I llama_new_context_with_model: n_batch    = 2048
0.00.702.094 I llama_new_context_with_model: n_ubatch   = 512
0.00.702.094 I llama_new_context_with_model: flash_attn = 0
0.00.702.097 I llama_new_context_with_model: freq_base  = 10000.0
0.00.702.097 I llama_new_context_with_model: freq_scale = 1
0.00.731.582 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.731.626 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.731.742 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.733.113 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.733.119 I llama_new_context_with_model: graph nodes  = 601
0.00.733.120 I llama_new_context_with_model: graph splits = 1
0.00.733.135 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.342.827 I main: llama threadpool init, n_threads = 4
0.01.342.837 I 
0.01.342.944 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.342.948 I 
0.01.343.113 I sampler seed: 1346533371
0.01.343.123 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.343.130 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.343.131 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.343.132 I 
 increasities and all the associated issues. [end of text]


0.05.113.877 I llama_perf_sampler_print:    sampling time =      13.96 ms /    10 runs   (    1.40 ms per token,   716.33 tokens per second)
0.05.113.892 I llama_perf_context_print:        load time =    1339.80 ms
0.05.113.894 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.05.113.895 I llama_perf_context_print:        eval time =    3746.62 ms /     9 runs   (  416.29 ms per token,     2.40 tokens per second)
0.05.113.896 I llama_perf_context_print:       total time =    3771.06 ms /    10 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.647 I build: 3902 (693c8bf0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.842 I main: llama backend init
0.00.002.767 I main: load the model and apply lora adapter, if any
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.024.595 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.793 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.877 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.888 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.891 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.895 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.899 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.900 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.901 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.902 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.903 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.910 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.911 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.912 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.913 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.914 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.371 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.671 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.119 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.127 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.128 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.129 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.130 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.131 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.132 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.136 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.137 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.139 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.270.139 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.270.141 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.270.148 I llama_model_loader: - type  f32:   37 tensors
0.00.270.152 I llama_model_loader: - type q8_0:  127 tensors
0.00.460.595 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.515.215 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.516.254 I llm_load_vocab: special tokens cache size = 5
0.00.623.887 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.623.957 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.623.961 I llm_load_print_meta: arch             = gemma
0.00.623.962 I llm_load_print_meta: vocab type       = SPM
0.00.623.963 I llm_load_print_meta: n_vocab          = 256000
0.00.623.965 I llm_load_print_meta: n_merges         = 0
0.00.623.966 I llm_load_print_meta: vocab_only       = 0
0.00.623.966 I llm_load_print_meta: n_ctx_train      = 8192
0.00.623.966 I llm_load_print_meta: n_embd           = 2048
0.00.623.967 I llm_load_print_meta: n_layer          = 18
0.00.624.031 I llm_load_print_meta: n_head           = 8
0.00.624.041 I llm_load_print_meta: n_head_kv        = 1
0.00.624.041 I llm_load_print_meta: n_rot            = 256
0.00.624.042 I llm_load_print_meta: n_swa            = 0
0.00.624.043 I llm_load_print_meta: n_embd_head_k    = 256
0.00.624.043 I llm_load_print_meta: n_embd_head_v    = 256
0.00.624.048 I llm_load_print_meta: n_gqa            = 8
0.00.624.052 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.624.057 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.624.058 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.624.060 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.624.060 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.624.061 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.624.061 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.624.066 I llm_load_print_meta: n_ff             = 16384
0.00.624.067 I llm_load_print_meta: n_expert         = 0
0.00.624.067 I llm_load_print_meta: n_expert_used    = 0
0.00.624.067 I llm_load_print_meta: causal attn      = 1
0.00.624.068 I llm_load_print_meta: pooling type     = 0
0.00.624.068 I llm_load_print_meta: rope type        = 2
0.00.624.069 I llm_load_print_meta: rope scaling     = linear
0.00.624.070 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.624.071 I llm_load_print_meta: freq_scale_train = 1
0.00.624.072 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.624.072 I llm_load_print_meta: rope_finetuned   = unknown
0.00.624.073 I llm_load_print_meta: ssm_d_conv       = 0
0.00.624.076 I llm_load_print_meta: ssm_d_inner      = 0
0.00.624.076 I llm_load_print_meta: ssm_d_state      = 0
0.00.624.076 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.624.077 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.624.077 I llm_load_print_meta: model type       = 2B
0.00.624.078 I llm_load_print_meta: model ftype      = Q8_0
0.00.624.079 I llm_load_print_meta: model params     = 2.51 B
0.00.624.080 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.624.080 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.624.081 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.624.081 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.624.081 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.624.082 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.624.082 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.624.083 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.624.088 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.624.090 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.624.090 I llm_load_print_meta: max token length = 93
0.00.624.250 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.702.502 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.702.512 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.702.513 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.702.514 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.702.514 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.702.515 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.708.266 I llama_new_context_with_model: n_ctx      = 8192
0.00.708.273 I llama_new_context_with_model: n_batch    = 2048
0.00.708.274 I llama_new_context_with_model: n_ubatch   = 512
0.00.708.274 I llama_new_context_with_model: flash_attn = 0
0.00.708.277 I llama_new_context_with_model: freq_base  = 10000.0
0.00.708.278 I llama_new_context_with_model: freq_scale = 1
0.00.737.781 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.737.824 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.737.945 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.739.420 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.739.426 I llama_new_context_with_model: graph nodes  = 601
0.00.739.427 I llama_new_context_with_model: graph splits = 1
0.00.739.442 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.362.913 I main: llama threadpool init, n_threads = 4
0.01.362.926 I 
0.01.363.035 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.363.039 I 
0.01.363.225 I sampler seed: 1420147107
0.01.363.236 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.363.242 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.363.243 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.363.243 I 
 increasities and then state the final answer.

Answer: 10

Explanation:

The given statement is incorrect. The correct answer should be 5

0.15.034.167 I llama_perf_sampler_print:    sampling time =      49.22 ms /    33 runs   (    1.49 ms per token,   670.53 tokens per second)
0.15.034.195 I llama_perf_context_print:        load time =    1359.97 ms
0.15.034.198 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.034.200 I llama_perf_context_print:        eval time =   13589.21 ms /    32 runs   (  424.66 ms per token,     2.35 tokens per second)
0.15.034.202 I llama_perf_context_print:       total time =   13671.26 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.642 I build: 3902 (693c8bf0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.853 I main: llama backend init
0.00.002.797 I main: load the model and apply lora adapter, if any
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.024.618 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.908 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.995 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.006 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.008 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.012 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.014 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.015 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.017 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.018 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.019 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.027 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.029 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.030 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.031 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.032 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.348 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.713 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.124 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.132 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.133 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.134 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.135 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.136 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.137 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.141 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.142 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.143 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.270.144 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.270.145 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.270.154 I llama_model_loader: - type  f32:   37 tensors
0.00.270.158 I llama_model_loader: - type q8_0:  127 tensors
0.00.452.372 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.505.469 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.506.458 I llm_load_vocab: special tokens cache size = 5
0.00.603.685 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.603.755 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.603.759 I llm_load_print_meta: arch             = gemma
0.00.603.760 I llm_load_print_meta: vocab type       = SPM
0.00.603.761 I llm_load_print_meta: n_vocab          = 256000
0.00.603.763 I llm_load_print_meta: n_merges         = 0
0.00.603.764 I llm_load_print_meta: vocab_only       = 0
0.00.603.764 I llm_load_print_meta: n_ctx_train      = 8192
0.00.603.765 I llm_load_print_meta: n_embd           = 2048
0.00.603.765 I llm_load_print_meta: n_layer          = 18
0.00.603.828 I llm_load_print_meta: n_head           = 8
0.00.603.838 I llm_load_print_meta: n_head_kv        = 1
0.00.603.838 I llm_load_print_meta: n_rot            = 256
0.00.603.838 I llm_load_print_meta: n_swa            = 0
0.00.603.839 I llm_load_print_meta: n_embd_head_k    = 256
0.00.603.840 I llm_load_print_meta: n_embd_head_v    = 256
0.00.603.845 I llm_load_print_meta: n_gqa            = 8
0.00.603.850 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.603.855 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.603.859 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.603.860 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.603.861 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.603.861 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.603.862 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.603.867 I llm_load_print_meta: n_ff             = 16384
0.00.603.868 I llm_load_print_meta: n_expert         = 0
0.00.603.869 I llm_load_print_meta: n_expert_used    = 0
0.00.603.869 I llm_load_print_meta: causal attn      = 1
0.00.603.869 I llm_load_print_meta: pooling type     = 0
0.00.603.870 I llm_load_print_meta: rope type        = 2
0.00.603.870 I llm_load_print_meta: rope scaling     = linear
0.00.603.871 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.603.872 I llm_load_print_meta: freq_scale_train = 1
0.00.603.873 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.603.874 I llm_load_print_meta: rope_finetuned   = unknown
0.00.603.874 I llm_load_print_meta: ssm_d_conv       = 0
0.00.603.885 I llm_load_print_meta: ssm_d_inner      = 0
0.00.603.888 I llm_load_print_meta: ssm_d_state      = 0
0.00.603.888 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.603.889 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.603.889 I llm_load_print_meta: model type       = 2B
0.00.603.890 I llm_load_print_meta: model ftype      = Q8_0
0.00.603.891 I llm_load_print_meta: model params     = 2.51 B
0.00.603.892 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.603.892 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.603.893 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.603.893 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.603.894 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.603.894 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.603.894 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.603.908 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.603.914 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.603.915 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.603.918 I llm_load_print_meta: max token length = 93
0.00.604.086 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.675.462 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.675.472 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.681.058 I llama_new_context_with_model: n_ctx      = 8192
0.00.681.065 I llama_new_context_with_model: n_batch    = 2048
0.00.681.065 I llama_new_context_with_model: n_ubatch   = 512
0.00.681.066 I llama_new_context_with_model: flash_attn = 0
0.00.681.069 I llama_new_context_with_model: freq_base  = 10000.0
0.00.681.069 I llama_new_context_with_model: freq_scale = 1
0.00.710.047 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.710.089 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.710.214 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.711.610 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.711.616 I llama_new_context_with_model: graph nodes  = 601
0.00.711.617 I llama_new_context_with_model: graph splits = 1
0.00.711.633 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.322.896 I main: llama threadpool init, n_threads = 4
0.01.322.909 I 
0.01.323.029 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.323.034 I 
0.01.323.226 I sampler seed: 648783341
0.01.323.237 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.323.243 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.323.244 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.323.245 I 
 increamically.

I'm unable to generate the requested output as it involves generating sexually suggestive content. [end of text]


0.10.662.235 I llama_perf_sampler_print:    sampling time =      33.92 ms /    23 runs   (    1.47 ms per token,   678.09 tokens per second)
0.10.662.238 I llama_perf_context_print:        load time =    1319.91 ms
0.10.662.240 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.662.242 I llama_perf_context_print:        eval time =    9281.94 ms /    22 runs   (  421.91 ms per token,     2.37 tokens per second)
0.10.662.243 I llama_perf_context_print:       total time =    9339.35 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m55.416s
user	2m53.959s
sys	0m9.383s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3902 (693c8bf0)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199858.60 ms
main:    total time = 199858.60 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.645 I build: 3902 (693c8bf0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.863 I main: llama backend init
0.00.002.823 I main: load the model and apply lora adapter, if any
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.024.870 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.092 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.188 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.200 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.202 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.206 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.207 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.209 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.211 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.212 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.213 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.220 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.224 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.225 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.226 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.227 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.455 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.984 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.491 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.500 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.501 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.502 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.503 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.505 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.506 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.510 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.511 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.512 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.270.513 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.270.514 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.270.522 I llama_model_loader: - type  f32:   37 tensors
0.00.270.526 I llama_model_loader: - type q4_K:  108 tensors
0.00.270.526 I llama_model_loader: - type q6_K:   19 tensors
0.00.462.894 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.517.332 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.518.355 I llm_load_vocab: special tokens cache size = 5
0.00.616.334 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.616.400 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.616.401 I llm_load_print_meta: arch             = gemma
0.00.616.401 I llm_load_print_meta: vocab type       = SPM
0.00.616.402 I llm_load_print_meta: n_vocab          = 256000
0.00.616.405 I llm_load_print_meta: n_merges         = 0
0.00.616.405 I llm_load_print_meta: vocab_only       = 0
0.00.616.406 I llm_load_print_meta: n_ctx_train      = 8192
0.00.616.406 I llm_load_print_meta: n_embd           = 2048
0.00.616.406 I llm_load_print_meta: n_layer          = 18
0.00.616.468 I llm_load_print_meta: n_head           = 8
0.00.616.475 I llm_load_print_meta: n_head_kv        = 1
0.00.616.476 I llm_load_print_meta: n_rot            = 256
0.00.616.477 I llm_load_print_meta: n_swa            = 0
0.00.616.477 I llm_load_print_meta: n_embd_head_k    = 256
0.00.616.479 I llm_load_print_meta: n_embd_head_v    = 256
0.00.616.484 I llm_load_print_meta: n_gqa            = 8
0.00.616.489 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.616.494 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.616.496 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.616.498 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.616.499 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.616.500 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.616.501 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.616.506 I llm_load_print_meta: n_ff             = 16384
0.00.616.506 I llm_load_print_meta: n_expert         = 0
0.00.616.507 I llm_load_print_meta: n_expert_used    = 0
0.00.616.519 I llm_load_print_meta: causal attn      = 1
0.00.616.519 I llm_load_print_meta: pooling type     = 0
0.00.616.533 I llm_load_print_meta: rope type        = 2
0.00.616.537 I llm_load_print_meta: rope scaling     = linear
0.00.616.538 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.616.546 I llm_load_print_meta: freq_scale_train = 1
0.00.616.550 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.616.550 I llm_load_print_meta: rope_finetuned   = unknown
0.00.616.551 I llm_load_print_meta: ssm_d_conv       = 0
0.00.616.551 I llm_load_print_meta: ssm_d_inner      = 0
0.00.616.552 I llm_load_print_meta: ssm_d_state      = 0
0.00.616.552 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.616.552 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.616.553 I llm_load_print_meta: model type       = 2B
0.00.616.554 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.616.555 I llm_load_print_meta: model params     = 2.51 B
0.00.616.556 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.616.557 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.616.558 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.616.558 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.616.567 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.616.569 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.616.570 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.616.570 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.616.577 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.616.579 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.616.579 I llm_load_print_meta: max token length = 93
0.00.616.745 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.676.085 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.676.094 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.676.095 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.676.095 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.676.096 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.676.097 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.681.736 I llama_new_context_with_model: n_ctx      = 8192
0.00.681.744 I llama_new_context_with_model: n_batch    = 2048
0.00.681.744 I llama_new_context_with_model: n_ubatch   = 512
0.00.681.745 I llama_new_context_with_model: flash_attn = 0
0.00.681.748 I llama_new_context_with_model: freq_base  = 10000.0
0.00.681.749 I llama_new_context_with_model: freq_scale = 1
0.00.710.438 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.710.482 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.710.598 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.712.001 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.712.008 I llama_new_context_with_model: graph nodes  = 601
0.00.712.008 I llama_new_context_with_model: graph splits = 1
0.00.712.024 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.290.878 I main: llama threadpool init, n_threads = 4
0.01.290.890 I 
0.01.290.996 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.291.000 I 
0.01.291.166 I sampler seed: 2957759417
0.01.291.177 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.291.184 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.291.185 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.291.185 I 
 seconde, un organisme vivant qui a eu une influence majeure sur l'évolution des animaux.

**a)** Déterminer le nom du groupe d'

0.12.265.674 I llama_perf_sampler_print:    sampling time =      49.24 ms /    33 runs   (    1.49 ms per token,   670.19 tokens per second)
0.12.265.678 I llama_perf_context_print:        load time =    1287.87 ms
0.12.265.690 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.265.692 I llama_perf_context_print:        eval time =   10892.86 ms /    32 runs   (  340.40 ms per token,     2.94 tokens per second)
0.12.265.694 I llama_perf_context_print:       total time =   10974.81 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3902 (693c8bf0)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198889.12 ms
main:    total time = 198889.12 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.650 I build: 3902 (693c8bf0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.844 I main: llama backend init
0.00.002.803 I main: load the model and apply lora adapter, if any
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.024.869 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.982 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.998 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.000 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.004 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.007 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.008 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.010 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.011 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.012 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.019 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.021 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.022 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.023 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.024 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.583 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.252.366 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.954 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.964 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.966 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.967 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.968 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.970 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.971 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.976 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.977 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.987 I llama_model_loader: - type  f32:   37 tensors
0.00.270.990 I llama_model_loader: - type q4_K:  108 tensors
0.00.270.991 I llama_model_loader: - type q6_K:   19 tensors
0.00.460.175 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.519.944 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.520.954 I llm_load_vocab: special tokens cache size = 5
0.00.618.888 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.618.957 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.618.959 I llm_load_print_meta: arch             = gemma
0.00.618.959 I llm_load_print_meta: vocab type       = SPM
0.00.618.960 I llm_load_print_meta: n_vocab          = 256000
0.00.618.962 I llm_load_print_meta: n_merges         = 0
0.00.618.963 I llm_load_print_meta: vocab_only       = 0
0.00.618.963 I llm_load_print_meta: n_ctx_train      = 8192
0.00.618.964 I llm_load_print_meta: n_embd           = 2048
0.00.618.964 I llm_load_print_meta: n_layer          = 18
0.00.619.030 I llm_load_print_meta: n_head           = 8
0.00.619.038 I llm_load_print_meta: n_head_kv        = 1
0.00.619.039 I llm_load_print_meta: n_rot            = 256
0.00.619.039 I llm_load_print_meta: n_swa            = 0
0.00.619.039 I llm_load_print_meta: n_embd_head_k    = 256
0.00.619.040 I llm_load_print_meta: n_embd_head_v    = 256
0.00.619.044 I llm_load_print_meta: n_gqa            = 8
0.00.619.050 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.619.054 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.619.056 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.619.057 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.619.058 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.619.058 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.619.058 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.619.063 I llm_load_print_meta: n_ff             = 16384
0.00.619.064 I llm_load_print_meta: n_expert         = 0
0.00.619.064 I llm_load_print_meta: n_expert_used    = 0
0.00.619.065 I llm_load_print_meta: causal attn      = 1
0.00.619.065 I llm_load_print_meta: pooling type     = 0
0.00.619.065 I llm_load_print_meta: rope type        = 2
0.00.619.066 I llm_load_print_meta: rope scaling     = linear
0.00.619.067 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.619.067 I llm_load_print_meta: freq_scale_train = 1
0.00.619.068 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.619.068 I llm_load_print_meta: rope_finetuned   = unknown
0.00.619.068 I llm_load_print_meta: ssm_d_conv       = 0
0.00.619.068 I llm_load_print_meta: ssm_d_inner      = 0
0.00.619.069 I llm_load_print_meta: ssm_d_state      = 0
0.00.619.069 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.619.069 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.619.070 I llm_load_print_meta: model type       = 2B
0.00.619.071 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.619.072 I llm_load_print_meta: model params     = 2.51 B
0.00.619.072 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.619.073 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.619.073 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.619.073 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.619.074 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.619.074 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.619.074 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.619.075 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.619.081 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.619.082 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.619.083 I llm_load_print_meta: max token length = 93
0.00.619.248 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.677.807 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.683.480 I llama_new_context_with_model: n_ctx      = 8192
0.00.683.487 I llama_new_context_with_model: n_batch    = 2048
0.00.683.488 I llama_new_context_with_model: n_ubatch   = 512
0.00.683.488 I llama_new_context_with_model: flash_attn = 0
0.00.683.492 I llama_new_context_with_model: freq_base  = 10000.0
0.00.683.493 I llama_new_context_with_model: freq_scale = 1
0.00.714.061 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.714.103 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.714.221 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.715.563 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.715.570 I llama_new_context_with_model: graph nodes  = 601
0.00.715.570 I llama_new_context_with_model: graph splits = 1
0.00.715.587 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.296.312 I main: llama threadpool init, n_threads = 4
0.01.296.325 I 
0.01.296.431 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.296.435 I 
0.01.296.602 I sampler seed: 729028586
0.01.296.616 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.296.623 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.296.626 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.296.626 I 
 encompantly the following sentence: "The importance of education lies in its ability to empower individuals and societies to achieve their full potential."

This sentence is a bit

0.12.224.506 I llama_perf_sampler_print:    sampling time =      49.14 ms /    33 runs   (    1.49 ms per token,   671.54 tokens per second)
0.12.224.509 I llama_perf_context_print:        load time =    1293.33 ms
0.12.224.510 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.224.526 I llama_perf_context_print:        eval time =   10843.39 ms /    32 runs   (  338.86 ms per token,     2.95 tokens per second)
0.12.224.528 I llama_perf_context_print:       total time =   10928.20 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m6.142s
user	50m24.449s
sys	0m6.347s
