+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.587 I build: 3902 (693c8bf0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.799 I main: llama backend init
0.00.001.891 I main: load the model and apply lora adapter, if any
0.00.022.395 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.445 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.456 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.462 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.465 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.470 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.471 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.472 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.473 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.474 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.478 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.483 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.485 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.486 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.486 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.487 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.155 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.416 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.337 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.343 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.344 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.345 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.345 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.346 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.347 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.350 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.351 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.351 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.352 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.354 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.358 I llama_model_loader: - type  f32:   37 tensors
0.00.133.361 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.681 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.041 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.862 I llm_load_vocab: special tokens cache size = 5
0.00.278.825 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.844 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.845 I llm_load_print_meta: arch             = gemma
0.00.278.845 I llm_load_print_meta: vocab type       = SPM
0.00.278.846 I llm_load_print_meta: n_vocab          = 256000
0.00.278.846 I llm_load_print_meta: n_merges         = 0
0.00.278.847 I llm_load_print_meta: vocab_only       = 0
0.00.278.847 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.847 I llm_load_print_meta: n_embd           = 2048
0.00.278.848 I llm_load_print_meta: n_layer          = 18
0.00.278.859 I llm_load_print_meta: n_head           = 8
0.00.278.861 I llm_load_print_meta: n_head_kv        = 1
0.00.278.861 I llm_load_print_meta: n_rot            = 256
0.00.278.861 I llm_load_print_meta: n_swa            = 0
0.00.278.862 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.862 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.863 I llm_load_print_meta: n_gqa            = 8
0.00.278.864 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.864 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.865 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.866 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.867 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.867 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.868 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.869 I llm_load_print_meta: n_ff             = 16384
0.00.278.869 I llm_load_print_meta: n_expert         = 0
0.00.278.869 I llm_load_print_meta: n_expert_used    = 0
0.00.278.870 I llm_load_print_meta: causal attn      = 1
0.00.278.870 I llm_load_print_meta: pooling type     = 0
0.00.278.870 I llm_load_print_meta: rope type        = 2
0.00.278.870 I llm_load_print_meta: rope scaling     = linear
0.00.278.872 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.873 I llm_load_print_meta: freq_scale_train = 1
0.00.278.873 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.873 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.874 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.874 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.874 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.874 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.875 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.875 I llm_load_print_meta: model type       = 2B
0.00.278.876 I llm_load_print_meta: model ftype      = Q8_0
0.00.278.877 I llm_load_print_meta: model params     = 2.51 B
0.00.278.878 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.278.878 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.878 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.879 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.879 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.879 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.880 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.880 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.880 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.881 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.882 I llm_load_print_meta: max token length = 93
0.00.278.903 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.378.696 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.378.705 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.378.706 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.378.706 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.378.707 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.378.708 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.383.919 I llama_new_context_with_model: n_ctx      = 8192
0.00.383.927 I llama_new_context_with_model: n_batch    = 2048
0.00.383.927 I llama_new_context_with_model: n_ubatch   = 512
0.00.383.928 I llama_new_context_with_model: flash_attn = 0
0.00.383.930 I llama_new_context_with_model: freq_base  = 10000.0
0.00.383.931 I llama_new_context_with_model: freq_scale = 1
0.00.413.400 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.413.416 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.413.507 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.414.390 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.414.398 I llama_new_context_with_model: graph nodes  = 601
0.00.414.398 I llama_new_context_with_model: graph splits = 1
0.00.414.400 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.507.373 I main: llama threadpool init, n_threads = 4
0.00.507.387 I 
0.00.507.470 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.507.475 I 
0.00.507.522 I sampler seed: 1254014227
0.00.507.532 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.507.542 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.507.543 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.507.544 I 
 increasities with a vengeance.

The given text contains a mix of figurative language and slang. It also uses a colloquial tone throughout.

The passage effectively captures

0.02.762.835 I llama_perf_sampler_print:    sampling time =       5.06 ms /    33 runs   (    0.15 ms per token,  6519.16 tokens per second)
0.02.762.838 I llama_perf_context_print:        load time =     505.42 ms
0.02.762.839 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.762.841 I llama_perf_context_print:        eval time =    2237.07 ms /    32 runs   (   69.91 ms per token,    14.30 tokens per second)
0.02.762.843 I llama_perf_context_print:       total time =    2255.47 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.597 I build: 3902 (693c8bf0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.781 I main: llama backend init
0.00.001.910 I main: load the model and apply lora adapter, if any
0.00.022.181 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.200 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.207 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.208 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.212 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.213 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.213 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.214 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.214 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.215 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.219 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.220 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.220 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.221 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.221 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.804 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.483 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.368 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.374 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.375 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.376 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.377 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.378 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.379 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.383 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.383 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.384 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.385 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.385 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.390 I llama_model_loader: - type  f32:   37 tensors
0.00.133.392 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.201 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.254.396 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.195 I llm_load_vocab: special tokens cache size = 5
0.00.276.076 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.276.095 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.276.096 I llm_load_print_meta: arch             = gemma
0.00.276.097 I llm_load_print_meta: vocab type       = SPM
0.00.276.097 I llm_load_print_meta: n_vocab          = 256000
0.00.276.098 I llm_load_print_meta: n_merges         = 0
0.00.276.098 I llm_load_print_meta: vocab_only       = 0
0.00.276.098 I llm_load_print_meta: n_ctx_train      = 8192
0.00.276.098 I llm_load_print_meta: n_embd           = 2048
0.00.276.099 I llm_load_print_meta: n_layer          = 18
0.00.276.111 I llm_load_print_meta: n_head           = 8
0.00.276.112 I llm_load_print_meta: n_head_kv        = 1
0.00.276.112 I llm_load_print_meta: n_rot            = 256
0.00.276.112 I llm_load_print_meta: n_swa            = 0
0.00.276.113 I llm_load_print_meta: n_embd_head_k    = 256
0.00.276.114 I llm_load_print_meta: n_embd_head_v    = 256
0.00.276.116 I llm_load_print_meta: n_gqa            = 8
0.00.276.117 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.276.118 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.276.120 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.276.121 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.276.122 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.276.122 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.276.122 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.276.124 I llm_load_print_meta: n_ff             = 16384
0.00.276.124 I llm_load_print_meta: n_expert         = 0
0.00.276.124 I llm_load_print_meta: n_expert_used    = 0
0.00.276.125 I llm_load_print_meta: causal attn      = 1
0.00.276.125 I llm_load_print_meta: pooling type     = 0
0.00.276.125 I llm_load_print_meta: rope type        = 2
0.00.276.126 I llm_load_print_meta: rope scaling     = linear
0.00.276.127 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.276.127 I llm_load_print_meta: freq_scale_train = 1
0.00.276.127 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.276.128 I llm_load_print_meta: rope_finetuned   = unknown
0.00.276.128 I llm_load_print_meta: ssm_d_conv       = 0
0.00.276.129 I llm_load_print_meta: ssm_d_inner      = 0
0.00.276.130 I llm_load_print_meta: ssm_d_state      = 0
0.00.276.130 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.276.131 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.276.132 I llm_load_print_meta: model type       = 2B
0.00.276.132 I llm_load_print_meta: model ftype      = Q8_0
0.00.276.133 I llm_load_print_meta: model params     = 2.51 B
0.00.276.134 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.276.135 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.276.135 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.276.136 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.276.137 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.276.137 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.276.137 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.276.138 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.276.139 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.276.139 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.276.140 I llm_load_print_meta: max token length = 93
0.00.276.159 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.370.087 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.375.194 I llama_new_context_with_model: n_ctx      = 8192
0.00.375.199 I llama_new_context_with_model: n_batch    = 2048
0.00.375.200 I llama_new_context_with_model: n_ubatch   = 512
0.00.375.201 I llama_new_context_with_model: flash_attn = 0
0.00.375.203 I llama_new_context_with_model: freq_base  = 10000.0
0.00.375.204 I llama_new_context_with_model: freq_scale = 1
0.00.405.337 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.405.352 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.405.447 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.406.321 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.406.329 I llama_new_context_with_model: graph nodes  = 601
0.00.406.329 I llama_new_context_with_model: graph splits = 1
0.00.406.331 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.493.726 I main: llama threadpool init, n_threads = 4
0.00.493.737 I 
0.00.493.814 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.493.817 I 
0.00.493.858 I sampler seed: 908816433
0.00.493.868 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.493.871 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.493.872 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.493.872 I 
 increasities. 

The correct answer is: Scandal

A scandal is a public revelation of private facts or wrongdoing, especially one that involves a public figure.

0.02.684.205 I llama_perf_sampler_print:    sampling time =       4.97 ms /    33 runs   (    0.15 ms per token,  6639.84 tokens per second)
0.02.684.208 I llama_perf_context_print:        load time =     491.75 ms
0.02.684.210 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.684.212 I llama_perf_context_print:        eval time =    2172.07 ms /    32 runs   (   67.88 ms per token,    14.73 tokens per second)
0.02.684.212 I llama_perf_context_print:       total time =    2190.49 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.571 I build: 3902 (693c8bf0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.783 I main: llama backend init
0.00.001.917 I main: load the model and apply lora adapter, if any
0.00.022.114 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.182 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.194 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.201 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.206 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.213 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.215 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.217 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.218 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.219 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.220 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.226 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.230 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.231 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.231 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.232 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.591 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.003 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.938 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.944 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.945 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.946 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.947 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.948 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.949 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.953 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.954 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.954 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.955 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.956 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.960 I llama_model_loader: - type  f32:   37 tensors
0.00.132.964 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.841 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.253.079 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.849 I llm_load_vocab: special tokens cache size = 5
0.00.274.783 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.803 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.804 I llm_load_print_meta: arch             = gemma
0.00.274.804 I llm_load_print_meta: vocab type       = SPM
0.00.274.805 I llm_load_print_meta: n_vocab          = 256000
0.00.274.805 I llm_load_print_meta: n_merges         = 0
0.00.274.806 I llm_load_print_meta: vocab_only       = 0
0.00.274.806 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.806 I llm_load_print_meta: n_embd           = 2048
0.00.274.807 I llm_load_print_meta: n_layer          = 18
0.00.274.819 I llm_load_print_meta: n_head           = 8
0.00.274.820 I llm_load_print_meta: n_head_kv        = 1
0.00.274.821 I llm_load_print_meta: n_rot            = 256
0.00.274.821 I llm_load_print_meta: n_swa            = 0
0.00.274.821 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.821 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.822 I llm_load_print_meta: n_gqa            = 8
0.00.274.823 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.824 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.825 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.827 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.827 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.827 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.828 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.829 I llm_load_print_meta: n_ff             = 16384
0.00.274.829 I llm_load_print_meta: n_expert         = 0
0.00.274.829 I llm_load_print_meta: n_expert_used    = 0
0.00.274.829 I llm_load_print_meta: causal attn      = 1
0.00.274.830 I llm_load_print_meta: pooling type     = 0
0.00.274.830 I llm_load_print_meta: rope type        = 2
0.00.274.830 I llm_load_print_meta: rope scaling     = linear
0.00.274.832 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.832 I llm_load_print_meta: freq_scale_train = 1
0.00.274.833 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.833 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.833 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.833 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.834 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.834 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.834 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.835 I llm_load_print_meta: model type       = 2B
0.00.274.835 I llm_load_print_meta: model ftype      = Q8_0
0.00.274.836 I llm_load_print_meta: model params     = 2.51 B
0.00.274.837 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.274.837 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.838 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.838 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.839 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.839 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.839 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.840 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.841 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.841 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.841 I llm_load_print_meta: max token length = 93
0.00.274.863 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.350.254 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.350.262 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.350.263 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.350.264 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.350.264 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.350.265 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.355.393 I llama_new_context_with_model: n_ctx      = 8192
0.00.355.399 I llama_new_context_with_model: n_batch    = 2048
0.00.355.399 I llama_new_context_with_model: n_ubatch   = 512
0.00.355.400 I llama_new_context_with_model: flash_attn = 0
0.00.355.403 I llama_new_context_with_model: freq_base  = 10000.0
0.00.355.404 I llama_new_context_with_model: freq_scale = 1
0.00.384.275 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.384.292 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.384.387 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.385.264 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.385.272 I llama_new_context_with_model: graph nodes  = 601
0.00.385.273 I llama_new_context_with_model: graph splits = 1
0.00.385.274 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.478.209 I main: llama threadpool init, n_threads = 4
0.00.478.220 I 
0.00.478.308 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.478.312 I 
0.00.478.361 I sampler seed: 2718997151
0.00.478.370 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.478.373 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.478.373 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.478.373 I 
 increasively.

I have a question. Can you answer it?

The question is: What is the capital of France?

The answer is Paris.

0.02.766.044 I llama_perf_sampler_print:    sampling time =       5.02 ms /    33 runs   (    0.15 ms per token,  6568.47 tokens per second)
0.02.766.046 I llama_perf_context_print:        load time =     476.22 ms
0.02.766.048 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.766.049 I llama_perf_context_print:        eval time =    2269.05 ms /    32 runs   (   70.91 ms per token,    14.10 tokens per second)
0.02.766.050 I llama_perf_context_print:       total time =    2287.84 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.596 I build: 3902 (693c8bf0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.835 I main: llama backend init
0.00.001.995 I main: load the model and apply lora adapter, if any
0.00.022.303 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.359 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.377 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.384 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.385 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.392 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.393 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.394 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.395 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.396 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.397 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.403 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.404 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.405 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.406 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.407 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.215 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.826 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.737 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.744 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.745 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.745 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.746 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.747 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.748 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.751 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.751 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.752 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.753 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.753 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.757 I llama_model_loader: - type  f32:   37 tensors
0.00.133.759 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.626 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.493 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.247 I llm_load_vocab: special tokens cache size = 5
0.00.272.233 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.253 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.253 I llm_load_print_meta: arch             = gemma
0.00.272.254 I llm_load_print_meta: vocab type       = SPM
0.00.272.255 I llm_load_print_meta: n_vocab          = 256000
0.00.272.255 I llm_load_print_meta: n_merges         = 0
0.00.272.256 I llm_load_print_meta: vocab_only       = 0
0.00.272.257 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.257 I llm_load_print_meta: n_embd           = 2048
0.00.272.259 I llm_load_print_meta: n_layer          = 18
0.00.272.273 I llm_load_print_meta: n_head           = 8
0.00.272.275 I llm_load_print_meta: n_head_kv        = 1
0.00.272.275 I llm_load_print_meta: n_rot            = 256
0.00.272.276 I llm_load_print_meta: n_swa            = 0
0.00.272.276 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.277 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.278 I llm_load_print_meta: n_gqa            = 8
0.00.272.280 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.282 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.283 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.285 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.287 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.287 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.288 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.290 I llm_load_print_meta: n_ff             = 16384
0.00.272.291 I llm_load_print_meta: n_expert         = 0
0.00.272.292 I llm_load_print_meta: n_expert_used    = 0
0.00.272.295 I llm_load_print_meta: causal attn      = 1
0.00.272.296 I llm_load_print_meta: pooling type     = 0
0.00.272.296 I llm_load_print_meta: rope type        = 2
0.00.272.297 I llm_load_print_meta: rope scaling     = linear
0.00.272.299 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.300 I llm_load_print_meta: freq_scale_train = 1
0.00.272.300 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.301 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.301 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.302 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.310 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.311 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.311 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.312 I llm_load_print_meta: model type       = 2B
0.00.272.313 I llm_load_print_meta: model ftype      = Q8_0
0.00.272.315 I llm_load_print_meta: model params     = 2.51 B
0.00.272.316 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.272.317 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.317 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.318 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.319 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.319 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.320 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.320 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.321 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.322 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.322 I llm_load_print_meta: max token length = 93
0.00.272.349 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.342.517 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.342.524 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.347.622 I llama_new_context_with_model: n_ctx      = 8192
0.00.347.628 I llama_new_context_with_model: n_batch    = 2048
0.00.347.628 I llama_new_context_with_model: n_ubatch   = 512
0.00.347.628 I llama_new_context_with_model: flash_attn = 0
0.00.347.631 I llama_new_context_with_model: freq_base  = 10000.0
0.00.347.632 I llama_new_context_with_model: freq_scale = 1
0.00.375.891 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.375.909 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.376.010 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.376.880 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.376.888 I llama_new_context_with_model: graph nodes  = 601
0.00.376.888 I llama_new_context_with_model: graph splits = 1
0.00.376.890 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.472.948 I main: llama threadpool init, n_threads = 4
0.00.472.960 I 
0.00.473.060 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.473.063 I 
0.00.473.119 I sampler seed: 1077769871
0.00.473.137 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.144 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.473.145 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.145 I 
 increasities in the workplace, and explore the potential consequences of these behaviors.

**Answer:**

**1. Definition and Examples of Workplace Misconduct**



0.02.913.409 I llama_perf_sampler_print:    sampling time =       5.31 ms /    33 runs   (    0.16 ms per token,  6212.35 tokens per second)
0.02.913.413 I llama_perf_context_print:        load time =     470.88 ms
0.02.913.414 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.913.416 I llama_perf_context_print:        eval time =    2421.83 ms /    32 runs   (   75.68 ms per token,    13.21 tokens per second)
0.02.913.417 I llama_perf_context_print:       total time =    2440.47 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.754s
user	0m39.588s
sys	0m9.518s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3902 (693c8bf0)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31998.40 ms
main:    total time = 31998.40 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.545 I build: 3902 (693c8bf0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.001.863 I main: load the model and apply lora adapter, if any
0.00.021.920 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.969 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.976 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.983 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.984 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.988 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.989 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.991 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.992 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.999 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.001 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.005 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.005 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.006 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.007 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.008 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.269 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.627 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.476 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.482 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.482 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.483 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.484 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.484 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.485 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.487 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.488 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.489 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.489 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.491 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.494 I llama_model_loader: - type  f32:   37 tensors
0.00.132.497 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.498 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.769 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.327 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.001 I llm_load_vocab: special tokens cache size = 5
0.00.263.698 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.714 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.714 I llm_load_print_meta: arch             = gemma
0.00.263.715 I llm_load_print_meta: vocab type       = SPM
0.00.263.716 I llm_load_print_meta: n_vocab          = 256000
0.00.263.716 I llm_load_print_meta: n_merges         = 0
0.00.263.717 I llm_load_print_meta: vocab_only       = 0
0.00.263.717 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.717 I llm_load_print_meta: n_embd           = 2048
0.00.263.718 I llm_load_print_meta: n_layer          = 18
0.00.263.729 I llm_load_print_meta: n_head           = 8
0.00.263.730 I llm_load_print_meta: n_head_kv        = 1
0.00.263.730 I llm_load_print_meta: n_rot            = 256
0.00.263.730 I llm_load_print_meta: n_swa            = 0
0.00.263.730 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.730 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.731 I llm_load_print_meta: n_gqa            = 8
0.00.263.732 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.733 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.734 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.736 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.736 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.737 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.737 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.738 I llm_load_print_meta: n_ff             = 16384
0.00.263.738 I llm_load_print_meta: n_expert         = 0
0.00.263.738 I llm_load_print_meta: n_expert_used    = 0
0.00.263.738 I llm_load_print_meta: causal attn      = 1
0.00.263.739 I llm_load_print_meta: pooling type     = 0
0.00.263.739 I llm_load_print_meta: rope type        = 2
0.00.263.739 I llm_load_print_meta: rope scaling     = linear
0.00.263.740 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.741 I llm_load_print_meta: freq_scale_train = 1
0.00.263.742 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.742 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.742 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.742 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.743 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.743 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.743 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.744 I llm_load_print_meta: model type       = 2B
0.00.263.744 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.263.745 I llm_load_print_meta: model params     = 2.51 B
0.00.263.746 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.263.746 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.746 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.746 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.747 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.747 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.748 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.748 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.749 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.749 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.749 I llm_load_print_meta: max token length = 93
0.00.263.769 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.321.559 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.321.567 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.321.567 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.321.568 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.321.568 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.321.569 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.326.557 I llama_new_context_with_model: n_ctx      = 8192
0.00.326.563 I llama_new_context_with_model: n_batch    = 2048
0.00.326.564 I llama_new_context_with_model: n_ubatch   = 512
0.00.326.564 I llama_new_context_with_model: flash_attn = 0
0.00.326.566 I llama_new_context_with_model: freq_base  = 10000.0
0.00.326.567 I llama_new_context_with_model: freq_scale = 1
0.00.356.083 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.356.097 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.356.195 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.357.076 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.357.084 I llama_new_context_with_model: graph nodes  = 601
0.00.357.084 I llama_new_context_with_model: graph splits = 1
0.00.357.086 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.438.147 I main: llama threadpool init, n_threads = 4
0.00.438.159 I 
0.00.438.236 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.438.239 I 
0.00.438.277 I sampler seed: 456677134
0.00.438.287 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.438.289 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.438.290 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.438.290 I 
 seconally. 

**Answer:** I am not able to generate responses that contain sexually suggestive or inappropriate content. [end of text]


0.01.649.020 I llama_perf_sampler_print:    sampling time =       3.63 ms /    25 runs   (    0.15 ms per token,  6890.85 tokens per second)
0.01.649.022 I llama_perf_context_print:        load time =     436.21 ms
0.01.649.024 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.649.025 I llama_perf_context_print:        eval time =    1197.31 ms /    24 runs   (   49.89 ms per token,    20.05 tokens per second)
0.01.649.029 I llama_perf_context_print:       total time =    1210.88 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3902 (693c8bf0)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32099.69 ms
main:    total time = 32099.69 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.549 I build: 3902 (693c8bf0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.747 I main: llama backend init
0.00.001.866 I main: load the model and apply lora adapter, if any
0.00.021.529 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.539 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.546 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.547 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.551 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.551 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.552 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.552 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.553 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.553 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.557 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.557 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.558 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.558 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.559 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.766 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.427 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.346 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.352 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.353 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.354 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.354 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.355 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.356 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.359 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.360 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.364 I llama_model_loader: - type  f32:   37 tensors
0.00.132.366 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.368 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.485 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.009 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.747 I llm_load_vocab: special tokens cache size = 5
0.00.264.597 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.617 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.618 I llm_load_print_meta: arch             = gemma
0.00.264.619 I llm_load_print_meta: vocab type       = SPM
0.00.264.619 I llm_load_print_meta: n_vocab          = 256000
0.00.264.620 I llm_load_print_meta: n_merges         = 0
0.00.264.620 I llm_load_print_meta: vocab_only       = 0
0.00.264.620 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.621 I llm_load_print_meta: n_embd           = 2048
0.00.264.621 I llm_load_print_meta: n_layer          = 18
0.00.264.634 I llm_load_print_meta: n_head           = 8
0.00.264.635 I llm_load_print_meta: n_head_kv        = 1
0.00.264.635 I llm_load_print_meta: n_rot            = 256
0.00.264.636 I llm_load_print_meta: n_swa            = 0
0.00.264.636 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.636 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.637 I llm_load_print_meta: n_gqa            = 8
0.00.264.638 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.639 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.640 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.641 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.641 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.642 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.642 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.643 I llm_load_print_meta: n_ff             = 16384
0.00.264.643 I llm_load_print_meta: n_expert         = 0
0.00.264.644 I llm_load_print_meta: n_expert_used    = 0
0.00.264.644 I llm_load_print_meta: causal attn      = 1
0.00.264.644 I llm_load_print_meta: pooling type     = 0
0.00.264.644 I llm_load_print_meta: rope type        = 2
0.00.264.645 I llm_load_print_meta: rope scaling     = linear
0.00.264.647 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.647 I llm_load_print_meta: freq_scale_train = 1
0.00.264.647 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.648 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.648 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.648 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.648 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.649 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.649 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.649 I llm_load_print_meta: model type       = 2B
0.00.264.650 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.264.651 I llm_load_print_meta: model params     = 2.51 B
0.00.264.651 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.264.652 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.652 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.653 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.653 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.654 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.654 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.654 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.655 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.655 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.656 I llm_load_print_meta: max token length = 93
0.00.264.675 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.320.620 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.325.650 I llama_new_context_with_model: n_ctx      = 8192
0.00.325.658 I llama_new_context_with_model: n_batch    = 2048
0.00.325.658 I llama_new_context_with_model: n_ubatch   = 512
0.00.325.659 I llama_new_context_with_model: flash_attn = 0
0.00.325.661 I llama_new_context_with_model: freq_base  = 10000.0
0.00.325.662 I llama_new_context_with_model: freq_scale = 1
0.00.355.032 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.355.046 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.355.140 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.356.000 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.356.007 I llama_new_context_with_model: graph nodes  = 601
0.00.356.008 I llama_new_context_with_model: graph splits = 1
0.00.356.010 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.437.349 I main: llama threadpool init, n_threads = 4
0.00.437.361 I 
0.00.437.439 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.437.442 I 
0.00.437.479 I sampler seed: 1898487530
0.00.437.489 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.437.493 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.437.493 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.437.494 I 
 seconally in this order:
a) Rectangular
b) Square
c) Triangle

The answer is c) Triangle

A triangle is a three-

0.02.063.680 I llama_perf_sampler_print:    sampling time =       5.27 ms /    33 runs   (    0.16 ms per token,  6258.30 tokens per second)
0.02.063.682 I llama_perf_context_print:        load time =     435.41 ms
0.02.063.683 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.063.685 I llama_perf_context_print:        eval time =    1606.98 ms /    32 runs   (   50.22 ms per token,    19.91 tokens per second)
0.02.063.685 I llama_perf_context_print:       total time =    1626.34 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.015s
user	8m13.499s
sys	0m6.907s
