+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.572 I build: 4153 (e4c122b9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.766 I main: llama backend init
0.00.000.772 I main: load the model and apply lora adapter, if any
0.00.021.517 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.523 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.531 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.540 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.541 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.545 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.546 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.547 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.548 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.549 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.549 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.553 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.554 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.555 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.555 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.556 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.042 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.616 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.462 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.469 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.470 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.471 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.472 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.473 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.474 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.477 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.477 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.478 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.479 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.480 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.485 I llama_model_loader: - type  f32:   37 tensors
0.00.131.486 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.449 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.292 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.240.788 I llm_load_vocab: special tokens cache size = 5
0.00.261.589 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.261.602 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.261.602 I llm_load_print_meta: arch             = gemma
0.00.261.603 I llm_load_print_meta: vocab type       = SPM
0.00.261.604 I llm_load_print_meta: n_vocab          = 256000
0.00.261.604 I llm_load_print_meta: n_merges         = 0
0.00.261.604 I llm_load_print_meta: vocab_only       = 0
0.00.261.605 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.605 I llm_load_print_meta: n_embd           = 2048
0.00.261.605 I llm_load_print_meta: n_layer          = 18
0.00.261.616 I llm_load_print_meta: n_head           = 8
0.00.261.617 I llm_load_print_meta: n_head_kv        = 1
0.00.261.617 I llm_load_print_meta: n_rot            = 256
0.00.261.617 I llm_load_print_meta: n_swa            = 0
0.00.261.618 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.618 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.619 I llm_load_print_meta: n_gqa            = 8
0.00.261.620 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.621 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.622 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.623 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.623 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.624 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.624 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.625 I llm_load_print_meta: n_ff             = 16384
0.00.261.625 I llm_load_print_meta: n_expert         = 0
0.00.261.626 I llm_load_print_meta: n_expert_used    = 0
0.00.261.626 I llm_load_print_meta: causal attn      = 1
0.00.261.626 I llm_load_print_meta: pooling type     = 0
0.00.261.626 I llm_load_print_meta: rope type        = 2
0.00.261.627 I llm_load_print_meta: rope scaling     = linear
0.00.261.628 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.629 I llm_load_print_meta: freq_scale_train = 1
0.00.261.629 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.629 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.630 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.630 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.630 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.630 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.631 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.631 I llm_load_print_meta: model type       = 2B
0.00.261.632 I llm_load_print_meta: model ftype      = Q8_0
0.00.261.633 I llm_load_print_meta: model params     = 2.51 B
0.00.261.634 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.261.634 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.634 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.635 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.635 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.635 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.636 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.636 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.636 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.637 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.637 I llm_load_print_meta: max token length = 93
0.00.362.328 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.362.333 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.362.334 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.362.335 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.362.335 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.362.336 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.367.614 I llama_new_context_with_model: n_seq_max     = 1
0.00.367.619 I llama_new_context_with_model: n_ctx         = 4096
0.00.367.620 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.367.620 I llama_new_context_with_model: n_batch       = 2048
0.00.367.621 I llama_new_context_with_model: n_ubatch      = 512
0.00.367.621 I llama_new_context_with_model: flash_attn    = 0
0.00.367.624 I llama_new_context_with_model: freq_base     = 10000.0
0.00.367.624 I llama_new_context_with_model: freq_scale    = 1
0.00.367.625 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.382.214 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.382.228 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.382.319 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.383.605 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.383.611 I llama_new_context_with_model: graph nodes  = 601
0.00.383.612 I llama_new_context_with_model: graph splits = 1
0.00.383.614 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.468.226 I main: llama threadpool init, n_threads = 4
0.00.468.239 I 
0.00.468.315 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.468.318 I 
0.00.468.361 I sampler seed: 1419867129
0.00.468.372 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.468.377 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.468.378 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.468.378 I 
 maneuvred. The word is "anomaly".

**Anomaly** is a deviation from what is expected or usual. It is something that deviates

0.02.700.421 I llama_perf_sampler_print:    sampling time =       4.60 ms /    33 runs   (    0.14 ms per token,  7178.59 tokens per second)
0.02.700.423 I llama_perf_context_print:        load time =     467.43 ms
0.02.700.425 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.700.427 I llama_perf_context_print:        eval time =    2214.03 ms /    32 runs   (   69.19 ms per token,    14.45 tokens per second)
0.02.700.429 I llama_perf_context_print:       total time =    2232.20 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.547 I build: 4153 (e4c122b9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.000.746 I main: load the model and apply lora adapter, if any
0.00.020.959 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.020.973 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.980 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.981 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.985 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.986 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.987 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.988 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.989 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.989 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.993 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.993 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.994 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.994 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.995 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.217 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.367 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.265 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.271 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.272 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.272 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.273 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.274 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.274 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.277 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.277 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.279 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.280 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.280 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.285 I llama_model_loader: - type  f32:   37 tensors
0.00.130.286 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.870 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.023 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.648 I llm_load_vocab: special tokens cache size = 5
0.00.266.329 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.351 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.351 I llm_load_print_meta: arch             = gemma
0.00.266.352 I llm_load_print_meta: vocab type       = SPM
0.00.266.353 I llm_load_print_meta: n_vocab          = 256000
0.00.266.353 I llm_load_print_meta: n_merges         = 0
0.00.266.354 I llm_load_print_meta: vocab_only       = 0
0.00.266.354 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.354 I llm_load_print_meta: n_embd           = 2048
0.00.266.354 I llm_load_print_meta: n_layer          = 18
0.00.266.367 I llm_load_print_meta: n_head           = 8
0.00.266.368 I llm_load_print_meta: n_head_kv        = 1
0.00.266.368 I llm_load_print_meta: n_rot            = 256
0.00.266.369 I llm_load_print_meta: n_swa            = 0
0.00.266.369 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.370 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.370 I llm_load_print_meta: n_gqa            = 8
0.00.266.372 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.373 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.373 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.375 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.375 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.375 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.376 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.377 I llm_load_print_meta: n_ff             = 16384
0.00.266.377 I llm_load_print_meta: n_expert         = 0
0.00.266.377 I llm_load_print_meta: n_expert_used    = 0
0.00.266.378 I llm_load_print_meta: causal attn      = 1
0.00.266.378 I llm_load_print_meta: pooling type     = 0
0.00.266.378 I llm_load_print_meta: rope type        = 2
0.00.266.379 I llm_load_print_meta: rope scaling     = linear
0.00.266.380 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.381 I llm_load_print_meta: freq_scale_train = 1
0.00.266.381 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.381 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.381 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.382 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.382 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.382 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.382 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.383 I llm_load_print_meta: model type       = 2B
0.00.266.383 I llm_load_print_meta: model ftype      = Q8_0
0.00.266.384 I llm_load_print_meta: model params     = 2.51 B
0.00.266.385 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.266.385 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.386 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.386 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.387 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.387 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.387 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.388 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.388 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.388 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.389 I llm_load_print_meta: max token length = 93
0.00.358.080 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.363.314 I llama_new_context_with_model: n_seq_max     = 1
0.00.363.320 I llama_new_context_with_model: n_ctx         = 4096
0.00.363.320 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.363.321 I llama_new_context_with_model: n_batch       = 2048
0.00.363.321 I llama_new_context_with_model: n_ubatch      = 512
0.00.363.322 I llama_new_context_with_model: flash_attn    = 0
0.00.363.324 I llama_new_context_with_model: freq_base     = 10000.0
0.00.363.325 I llama_new_context_with_model: freq_scale    = 1
0.00.363.326 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.378.867 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.378.881 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.378.972 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.380.193 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.380.200 I llama_new_context_with_model: graph nodes  = 601
0.00.380.200 I llama_new_context_with_model: graph splits = 1
0.00.380.202 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.527 I main: llama threadpool init, n_threads = 4
0.00.461.542 I 
0.00.461.613 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.461.616 I 
0.00.461.661 I sampler seed: 4205726445
0.00.461.672 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.461.676 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.461.677 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.461.678 I 
 increasities, and other forms of sexual harassment in the workplace. [end of text]


0.01.406.197 I llama_perf_sampler_print:    sampling time =       2.25 ms /    15 runs   (    0.15 ms per token,  6669.63 tokens per second)
0.01.406.199 I llama_perf_context_print:        load time =     460.76 ms
0.01.406.201 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.406.203 I llama_perf_context_print:        eval time =     935.29 ms /    14 runs   (   66.81 ms per token,    14.97 tokens per second)
0.01.406.205 I llama_perf_context_print:       total time =     944.68 ms /    15 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.534 I build: 4153 (e4c122b9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.763 I main: llama backend init
0.00.000.770 I main: load the model and apply lora adapter, if any
0.00.021.452 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.462 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.470 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.474 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.475 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.480 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.484 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.484 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.485 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.485 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.486 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.490 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.491 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.491 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.492 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.493 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.968 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.346 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.143 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.149 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.149 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.150 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.151 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.152 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.153 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.155 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.155 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.156 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.157 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.158 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.162 I llama_model_loader: - type  f32:   37 tensors
0.00.131.163 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.531 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.024 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.600 I llm_load_vocab: special tokens cache size = 5
0.00.267.561 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.579 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.580 I llm_load_print_meta: arch             = gemma
0.00.267.580 I llm_load_print_meta: vocab type       = SPM
0.00.267.581 I llm_load_print_meta: n_vocab          = 256000
0.00.267.581 I llm_load_print_meta: n_merges         = 0
0.00.267.582 I llm_load_print_meta: vocab_only       = 0
0.00.267.582 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.582 I llm_load_print_meta: n_embd           = 2048
0.00.267.583 I llm_load_print_meta: n_layer          = 18
0.00.267.599 I llm_load_print_meta: n_head           = 8
0.00.267.600 I llm_load_print_meta: n_head_kv        = 1
0.00.267.601 I llm_load_print_meta: n_rot            = 256
0.00.267.601 I llm_load_print_meta: n_swa            = 0
0.00.267.601 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.602 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.602 I llm_load_print_meta: n_gqa            = 8
0.00.267.603 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.604 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.605 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.606 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.607 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.607 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.608 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.609 I llm_load_print_meta: n_ff             = 16384
0.00.267.609 I llm_load_print_meta: n_expert         = 0
0.00.267.609 I llm_load_print_meta: n_expert_used    = 0
0.00.267.610 I llm_load_print_meta: causal attn      = 1
0.00.267.610 I llm_load_print_meta: pooling type     = 0
0.00.267.610 I llm_load_print_meta: rope type        = 2
0.00.267.611 I llm_load_print_meta: rope scaling     = linear
0.00.267.612 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.612 I llm_load_print_meta: freq_scale_train = 1
0.00.267.612 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.613 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.613 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.613 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.614 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.614 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.618 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.618 I llm_load_print_meta: model type       = 2B
0.00.267.619 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.620 I llm_load_print_meta: model params     = 2.51 B
0.00.267.621 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.621 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.622 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.622 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.622 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.623 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.623 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.623 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.623 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.624 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.624 I llm_load_print_meta: max token length = 93
0.00.345.293 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.345.300 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.345.300 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.345.301 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.345.302 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.345.302 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.350.334 I llama_new_context_with_model: n_seq_max     = 1
0.00.350.341 I llama_new_context_with_model: n_ctx         = 4096
0.00.350.341 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.350.342 I llama_new_context_with_model: n_batch       = 2048
0.00.350.342 I llama_new_context_with_model: n_ubatch      = 512
0.00.350.343 I llama_new_context_with_model: flash_attn    = 0
0.00.350.345 I llama_new_context_with_model: freq_base     = 10000.0
0.00.350.346 I llama_new_context_with_model: freq_scale    = 1
0.00.350.347 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.365.288 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.365.306 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.365.401 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.367.147 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.367.153 I llama_new_context_with_model: graph nodes  = 601
0.00.367.154 I llama_new_context_with_model: graph splits = 1
0.00.367.156 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.340 I main: llama threadpool init, n_threads = 4
0.00.452.354 I 
0.00.452.430 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.452.433 I 
0.00.452.482 I sampler seed: 3406862588
0.00.452.493 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.495 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.452.496 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.496 I 
 increasities in the realm of AI and machine learning.

**1. Explain the key issues with using adversarial learning in AI.**

**2. Discuss the

0.02.724.496 I llama_perf_sampler_print:    sampling time =       4.70 ms /    33 runs   (    0.14 ms per token,  7027.26 tokens per second)
0.02.724.499 I llama_perf_context_print:        load time =     451.55 ms
0.02.724.500 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.724.501 I llama_perf_context_print:        eval time =    2253.96 ms /    32 runs   (   70.44 ms per token,    14.20 tokens per second)
0.02.724.502 I llama_perf_context_print:       total time =    2272.17 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.560 I build: 4153 (e4c122b9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.761 I main: llama backend init
0.00.000.768 I main: load the model and apply lora adapter, if any
0.00.021.177 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.189 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.197 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.202 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.203 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.207 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.207 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.208 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.209 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.209 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.210 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.214 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.216 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.216 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.217 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.218 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.814 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.113 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.945 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.951 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.952 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.953 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.953 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.954 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.955 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.957 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.958 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.959 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.959 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.130.960 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.964 I llama_model_loader: - type  f32:   37 tensors
0.00.130.966 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.590 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.150 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.714 I llm_load_vocab: special tokens cache size = 5
0.00.267.634 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.650 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.651 I llm_load_print_meta: arch             = gemma
0.00.267.651 I llm_load_print_meta: vocab type       = SPM
0.00.267.652 I llm_load_print_meta: n_vocab          = 256000
0.00.267.652 I llm_load_print_meta: n_merges         = 0
0.00.267.653 I llm_load_print_meta: vocab_only       = 0
0.00.267.653 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.653 I llm_load_print_meta: n_embd           = 2048
0.00.267.654 I llm_load_print_meta: n_layer          = 18
0.00.267.666 I llm_load_print_meta: n_head           = 8
0.00.267.666 I llm_load_print_meta: n_head_kv        = 1
0.00.267.667 I llm_load_print_meta: n_rot            = 256
0.00.267.667 I llm_load_print_meta: n_swa            = 0
0.00.267.667 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.668 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.669 I llm_load_print_meta: n_gqa            = 8
0.00.267.670 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.671 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.672 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.673 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.674 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.674 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.674 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.675 I llm_load_print_meta: n_ff             = 16384
0.00.267.676 I llm_load_print_meta: n_expert         = 0
0.00.267.676 I llm_load_print_meta: n_expert_used    = 0
0.00.267.676 I llm_load_print_meta: causal attn      = 1
0.00.267.677 I llm_load_print_meta: pooling type     = 0
0.00.267.677 I llm_load_print_meta: rope type        = 2
0.00.267.678 I llm_load_print_meta: rope scaling     = linear
0.00.267.679 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.679 I llm_load_print_meta: freq_scale_train = 1
0.00.267.680 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.680 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.680 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.680 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.681 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.681 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.681 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.682 I llm_load_print_meta: model type       = 2B
0.00.267.682 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.683 I llm_load_print_meta: model params     = 2.51 B
0.00.267.684 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.684 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.685 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.685 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.685 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.685 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.686 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.686 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.686 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.687 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.687 I llm_load_print_meta: max token length = 93
0.00.338.931 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.338.938 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.344.107 I llama_new_context_with_model: n_seq_max     = 1
0.00.344.113 I llama_new_context_with_model: n_ctx         = 4096
0.00.344.113 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.344.114 I llama_new_context_with_model: n_batch       = 2048
0.00.344.114 I llama_new_context_with_model: n_ubatch      = 512
0.00.344.115 I llama_new_context_with_model: flash_attn    = 0
0.00.344.117 I llama_new_context_with_model: freq_base     = 10000.0
0.00.344.118 I llama_new_context_with_model: freq_scale    = 1
0.00.344.119 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.358.734 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.358.747 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.358.853 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.090 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.360.096 I llama_new_context_with_model: graph nodes  = 601
0.00.360.096 I llama_new_context_with_model: graph splits = 1
0.00.360.098 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.448.831 I main: llama threadpool init, n_threads = 4
0.00.448.844 I 
0.00.448.918 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.448.921 I 
0.00.448.961 I sampler seed: 4057120254
0.00.448.972 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.448.975 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.448.976 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.448.976 I 
 increamically.

I'm not sure what you're talking about. Can you please provide more context or specify your question? [end of text]


0.02.560.396 I llama_perf_sampler_print:    sampling time =       4.52 ms /    29 runs   (    0.16 ms per token,  6414.51 tokens per second)
0.02.560.398 I llama_perf_context_print:        load time =     448.04 ms
0.02.560.399 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.560.400 I llama_perf_context_print:        eval time =    2094.30 ms /    28 runs   (   74.80 ms per token,    13.37 tokens per second)
0.02.560.401 I llama_perf_context_print:       total time =    2111.57 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.917s
user	0m33.109s
sys	0m9.279s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4153 (e4c122b9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40183.70 ms
main:    total time = 40183.70 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.568 I build: 4153 (e4c122b9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.771 I main: llama backend init
0.00.000.777 I main: load the model and apply lora adapter, if any
0.00.021.721 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.731 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.739 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.744 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.744 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.749 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.750 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.751 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.751 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.751 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.752 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.755 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.756 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.757 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.758 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.759 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.199 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.976 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.800 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.806 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.807 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.808 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.809 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.810 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.811 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.814 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.815 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.816 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.816 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.818 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.821 I llama_model_loader: - type  f32:   37 tensors
0.00.130.822 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.823 I llama_model_loader: - type q6_K:   19 tensors
0.00.201.130 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.872 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.484 I llm_load_vocab: special tokens cache size = 5
0.00.266.189 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.205 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.206 I llm_load_print_meta: arch             = gemma
0.00.266.207 I llm_load_print_meta: vocab type       = SPM
0.00.266.208 I llm_load_print_meta: n_vocab          = 256000
0.00.266.208 I llm_load_print_meta: n_merges         = 0
0.00.266.208 I llm_load_print_meta: vocab_only       = 0
0.00.266.209 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.209 I llm_load_print_meta: n_embd           = 2048
0.00.266.209 I llm_load_print_meta: n_layer          = 18
0.00.266.221 I llm_load_print_meta: n_head           = 8
0.00.266.222 I llm_load_print_meta: n_head_kv        = 1
0.00.266.222 I llm_load_print_meta: n_rot            = 256
0.00.266.222 I llm_load_print_meta: n_swa            = 0
0.00.266.223 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.223 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.224 I llm_load_print_meta: n_gqa            = 8
0.00.266.225 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.226 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.227 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.228 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.228 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.229 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.229 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.230 I llm_load_print_meta: n_ff             = 16384
0.00.266.231 I llm_load_print_meta: n_expert         = 0
0.00.266.231 I llm_load_print_meta: n_expert_used    = 0
0.00.266.231 I llm_load_print_meta: causal attn      = 1
0.00.266.231 I llm_load_print_meta: pooling type     = 0
0.00.266.232 I llm_load_print_meta: rope type        = 2
0.00.266.232 I llm_load_print_meta: rope scaling     = linear
0.00.266.234 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.235 I llm_load_print_meta: freq_scale_train = 1
0.00.266.235 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.235 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.235 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.236 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.236 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.236 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.236 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.237 I llm_load_print_meta: model type       = 2B
0.00.266.237 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.266.238 I llm_load_print_meta: model params     = 2.51 B
0.00.266.239 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.266.239 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.240 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.240 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.240 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.240 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.241 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.241 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.241 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.242 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.242 I llm_load_print_meta: max token length = 93
0.00.325.004 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.325.011 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.325.012 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.325.013 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.325.013 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.325.014 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.330.333 I llama_new_context_with_model: n_seq_max     = 1
0.00.330.340 I llama_new_context_with_model: n_ctx         = 4096
0.00.330.341 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.330.341 I llama_new_context_with_model: n_batch       = 2048
0.00.330.342 I llama_new_context_with_model: n_ubatch      = 512
0.00.330.343 I llama_new_context_with_model: flash_attn    = 0
0.00.330.346 I llama_new_context_with_model: freq_base     = 10000.0
0.00.330.347 I llama_new_context_with_model: freq_scale    = 1
0.00.330.348 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.345.508 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.345.525 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.345.620 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.346.904 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.346.910 I llama_new_context_with_model: graph nodes  = 601
0.00.346.911 I llama_new_context_with_model: graph splits = 1
0.00.346.913 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.422.779 I main: llama threadpool init, n_threads = 4
0.00.422.792 I 
0.00.422.869 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.422.872 I 
0.00.422.914 I sampler seed: 1709163731
0.00.422.925 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.422.930 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.422.931 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.422.931 I 
 maneuvously. [end of text]


0.00.665.638 I llama_perf_sampler_print:    sampling time =       0.82 ms /     6 runs   (    0.14 ms per token,  7308.16 tokens per second)
0.00.665.641 I llama_perf_context_print:        load time =     421.98 ms
0.00.665.642 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.665.644 I llama_perf_context_print:        eval time =     238.80 ms /     5 runs   (   47.76 ms per token,    20.94 tokens per second)
0.00.665.644 I llama_perf_context_print:       total time =     242.87 ms /     6 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4153 (e4c122b9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40157.95 ms
main:    total time = 40157.95 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.529 I build: 4153 (e4c122b9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.717 I main: llama backend init
0.00.000.724 I main: load the model and apply lora adapter, if any
0.00.020.806 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.020.821 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.827 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.832 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.836 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.837 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.838 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.838 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.839 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.840 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.844 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.844 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.845 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.845 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.020.846 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.192 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.122.951 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.129.740 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.129.747 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.129.747 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.129.748 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.129.748 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.129.750 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.129.751 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.129.752 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.129.754 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.129.757 I llama_model_loader: - type  f32:   37 tensors
0.00.129.758 I llama_model_loader: - type q4_K:  108 tensors
0.00.129.758 I llama_model_loader: - type q6_K:   19 tensors
0.00.201.886 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.487 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.035 I llm_load_vocab: special tokens cache size = 5
0.00.265.756 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.772 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.773 I llm_load_print_meta: arch             = gemma
0.00.265.773 I llm_load_print_meta: vocab type       = SPM
0.00.265.774 I llm_load_print_meta: n_vocab          = 256000
0.00.265.774 I llm_load_print_meta: n_merges         = 0
0.00.265.775 I llm_load_print_meta: vocab_only       = 0
0.00.265.775 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.775 I llm_load_print_meta: n_embd           = 2048
0.00.265.776 I llm_load_print_meta: n_layer          = 18
0.00.265.787 I llm_load_print_meta: n_head           = 8
0.00.265.788 I llm_load_print_meta: n_head_kv        = 1
0.00.265.788 I llm_load_print_meta: n_rot            = 256
0.00.265.788 I llm_load_print_meta: n_swa            = 0
0.00.265.789 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.789 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.790 I llm_load_print_meta: n_gqa            = 8
0.00.265.791 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.792 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.793 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.794 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.795 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.795 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.795 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.796 I llm_load_print_meta: n_ff             = 16384
0.00.265.796 I llm_load_print_meta: n_expert         = 0
0.00.265.797 I llm_load_print_meta: n_expert_used    = 0
0.00.265.797 I llm_load_print_meta: causal attn      = 1
0.00.265.797 I llm_load_print_meta: pooling type     = 0
0.00.265.798 I llm_load_print_meta: rope type        = 2
0.00.265.798 I llm_load_print_meta: rope scaling     = linear
0.00.265.800 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.801 I llm_load_print_meta: freq_scale_train = 1
0.00.265.801 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.801 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.801 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.802 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.802 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.802 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.803 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.803 I llm_load_print_meta: model type       = 2B
0.00.265.804 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.265.804 I llm_load_print_meta: model params     = 2.51 B
0.00.265.805 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.265.806 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.806 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.806 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.807 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.807 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.807 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.808 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.808 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.809 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.809 I llm_load_print_meta: max token length = 93
0.00.319.706 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.324.757 I llama_new_context_with_model: n_seq_max     = 1
0.00.324.763 I llama_new_context_with_model: n_ctx         = 4096
0.00.324.764 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.324.764 I llama_new_context_with_model: n_batch       = 2048
0.00.324.764 I llama_new_context_with_model: n_ubatch      = 512
0.00.324.765 I llama_new_context_with_model: flash_attn    = 0
0.00.324.767 I llama_new_context_with_model: freq_base     = 10000.0
0.00.324.767 I llama_new_context_with_model: freq_scale    = 1
0.00.324.768 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.339.225 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.339.240 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.339.342 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.340.621 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.340.628 I llama_new_context_with_model: graph nodes  = 601
0.00.340.629 I llama_new_context_with_model: graph splits = 1
0.00.340.631 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.414.326 I main: llama threadpool init, n_threads = 4
0.00.414.341 I 
0.00.414.417 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.414.420 I 
0.00.414.465 I sampler seed: 3801760800
0.00.414.476 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.414.480 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.414.480 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.414.481 I 
 seconded with a large group of men. What happened next is not mentioned in the text, so I cannot answer this question from the provided context. [end of text]


0.01.909.090 I llama_perf_sampler_print:    sampling time =       5.05 ms /    32 runs   (    0.16 ms per token,  6332.87 tokens per second)
0.01.909.093 I llama_perf_context_print:        load time =     413.58 ms
0.01.909.094 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.909.095 I llama_perf_context_print:        eval time =    1476.10 ms /    31 runs   (   47.62 ms per token,    21.00 tokens per second)
0.01.909.096 I llama_perf_context_print:       total time =    1494.77 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m25.701s
user	10m18.534s
sys	0m6.880s
