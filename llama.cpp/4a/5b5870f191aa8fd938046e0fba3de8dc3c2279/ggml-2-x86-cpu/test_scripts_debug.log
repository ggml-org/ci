+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.675 I build: 3940 (4a5b5870) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.868 I main: llama backend init
0.00.002.839 I main: load the model and apply lora adapter, if any
0.00.024.890 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.088 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.178 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.190 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.192 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.196 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.198 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.199 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.201 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.202 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.202 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.209 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.210 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.211 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.212 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.213 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.009 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.807 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.128 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.136 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.137 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.138 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.138 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.139 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.140 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.144 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.163 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.166 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.175 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.268.177 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.186 I llama_model_loader: - type  f32:   37 tensors
0.00.268.197 I llama_model_loader: - type q8_0:  127 tensors
0.00.449.798 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.497.211 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.499.335 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.505.912 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.519.434 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.520.445 I llm_load_vocab: special tokens cache size = 5
0.00.629.941 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.630.008 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.630.008 I llm_load_print_meta: arch             = gemma
0.00.630.009 I llm_load_print_meta: vocab type       = SPM
0.00.630.010 I llm_load_print_meta: n_vocab          = 256000
0.00.630.012 I llm_load_print_meta: n_merges         = 0
0.00.630.012 I llm_load_print_meta: vocab_only       = 0
0.00.630.013 I llm_load_print_meta: n_ctx_train      = 8192
0.00.630.013 I llm_load_print_meta: n_embd           = 2048
0.00.630.013 I llm_load_print_meta: n_layer          = 18
0.00.630.078 I llm_load_print_meta: n_head           = 8
0.00.630.085 I llm_load_print_meta: n_head_kv        = 1
0.00.630.086 I llm_load_print_meta: n_rot            = 256
0.00.630.086 I llm_load_print_meta: n_swa            = 0
0.00.630.087 I llm_load_print_meta: n_embd_head_k    = 256
0.00.630.088 I llm_load_print_meta: n_embd_head_v    = 256
0.00.630.093 I llm_load_print_meta: n_gqa            = 8
0.00.630.098 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.630.103 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.630.104 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.630.105 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.630.106 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.630.106 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.630.118 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.630.124 I llm_load_print_meta: n_ff             = 16384
0.00.630.124 I llm_load_print_meta: n_expert         = 0
0.00.630.125 I llm_load_print_meta: n_expert_used    = 0
0.00.630.136 I llm_load_print_meta: causal attn      = 1
0.00.630.137 I llm_load_print_meta: pooling type     = 0
0.00.630.137 I llm_load_print_meta: rope type        = 2
0.00.630.137 I llm_load_print_meta: rope scaling     = linear
0.00.630.139 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.630.140 I llm_load_print_meta: freq_scale_train = 1
0.00.630.140 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.630.141 I llm_load_print_meta: rope_finetuned   = unknown
0.00.630.141 I llm_load_print_meta: ssm_d_conv       = 0
0.00.630.142 I llm_load_print_meta: ssm_d_inner      = 0
0.00.630.142 I llm_load_print_meta: ssm_d_state      = 0
0.00.630.143 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.630.143 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.630.144 I llm_load_print_meta: model type       = 2B
0.00.630.145 I llm_load_print_meta: model ftype      = Q8_0
0.00.630.146 I llm_load_print_meta: model params     = 2.51 B
0.00.630.147 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.630.155 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.630.156 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.630.156 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.630.157 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.630.163 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.630.163 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.630.164 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.630.169 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.630.171 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.630.171 I llm_load_print_meta: max token length = 93
0.00.630.339 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.732.954 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.732.962 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.732.963 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.732.963 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.732.964 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.732.964 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.738.744 I llama_new_context_with_model: n_ctx      = 8192
0.00.738.753 I llama_new_context_with_model: n_batch    = 2048
0.00.738.753 I llama_new_context_with_model: n_ubatch   = 512
0.00.738.754 I llama_new_context_with_model: flash_attn = 0
0.00.738.756 I llama_new_context_with_model: freq_base  = 10000.0
0.00.738.757 I llama_new_context_with_model: freq_scale = 1
0.00.768.594 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.768.638 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.768.756 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.770.194 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.770.199 I llama_new_context_with_model: graph nodes  = 601
0.00.770.200 I llama_new_context_with_model: graph splits = 1
0.00.770.216 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.380.569 I main: llama threadpool init, n_threads = 4
0.01.380.580 I 
0.01.380.684 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.380.689 I 
0.01.380.865 I sampler seed: 3114693711
0.01.380.876 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.380.884 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.380.885 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.380.894 I 
 increasities and contradictions within the philosophy of mind.

**Philosophical Mind**

The philosophy of mind explores the nature of mental states, including beliefs, knowledge

0.14.789.385 I llama_perf_sampler_print:    sampling time =      49.20 ms /    33 runs   (    1.49 ms per token,   670.70 tokens per second)
0.14.789.388 I llama_perf_context_print:        load time =    1377.64 ms
0.14.789.389 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.789.392 I llama_perf_context_print:        eval time =   13326.82 ms /    32 runs   (  416.46 ms per token,     2.40 tokens per second)
0.14.789.403 I llama_perf_context_print:       total time =   13408.83 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.649 I build: 3940 (4a5b5870) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.871 I main: llama backend init
0.00.002.841 I main: load the model and apply lora adapter, if any
0.00.025.143 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.240 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.255 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.257 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.262 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.266 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.267 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.268 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.268 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.269 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.277 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.278 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.279 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.280 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.281 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.234 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.064 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.257 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.265 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.266 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.267 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.268 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.269 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.270 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.274 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.275 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.276 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.277 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.268.278 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.286 I llama_model_loader: - type  f32:   37 tensors
0.00.268.290 I llama_model_loader: - type q8_0:  127 tensors
0.00.458.713 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.506.808 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.508.900 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.515.279 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.529.180 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.530.207 I llm_load_vocab: special tokens cache size = 5
0.00.631.201 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.631.277 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.631.278 I llm_load_print_meta: arch             = gemma
0.00.631.278 I llm_load_print_meta: vocab type       = SPM
0.00.631.280 I llm_load_print_meta: n_vocab          = 256000
0.00.631.282 I llm_load_print_meta: n_merges         = 0
0.00.631.282 I llm_load_print_meta: vocab_only       = 0
0.00.631.283 I llm_load_print_meta: n_ctx_train      = 8192
0.00.631.283 I llm_load_print_meta: n_embd           = 2048
0.00.631.283 I llm_load_print_meta: n_layer          = 18
0.00.631.349 I llm_load_print_meta: n_head           = 8
0.00.631.356 I llm_load_print_meta: n_head_kv        = 1
0.00.631.357 I llm_load_print_meta: n_rot            = 256
0.00.631.357 I llm_load_print_meta: n_swa            = 0
0.00.631.358 I llm_load_print_meta: n_embd_head_k    = 256
0.00.631.358 I llm_load_print_meta: n_embd_head_v    = 256
0.00.631.363 I llm_load_print_meta: n_gqa            = 8
0.00.631.367 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.631.372 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.631.373 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.631.375 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.631.376 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.631.376 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.631.376 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.631.381 I llm_load_print_meta: n_ff             = 16384
0.00.631.382 I llm_load_print_meta: n_expert         = 0
0.00.631.382 I llm_load_print_meta: n_expert_used    = 0
0.00.631.383 I llm_load_print_meta: causal attn      = 1
0.00.631.383 I llm_load_print_meta: pooling type     = 0
0.00.631.383 I llm_load_print_meta: rope type        = 2
0.00.631.384 I llm_load_print_meta: rope scaling     = linear
0.00.631.385 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.631.386 I llm_load_print_meta: freq_scale_train = 1
0.00.631.386 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.631.386 I llm_load_print_meta: rope_finetuned   = unknown
0.00.631.387 I llm_load_print_meta: ssm_d_conv       = 0
0.00.631.387 I llm_load_print_meta: ssm_d_inner      = 0
0.00.631.387 I llm_load_print_meta: ssm_d_state      = 0
0.00.631.387 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.631.388 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.631.388 I llm_load_print_meta: model type       = 2B
0.00.631.389 I llm_load_print_meta: model ftype      = Q8_0
0.00.631.390 I llm_load_print_meta: model params     = 2.51 B
0.00.631.391 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.631.391 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.631.392 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.631.392 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.631.393 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.631.393 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.631.393 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.631.394 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.631.399 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.631.400 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.631.400 I llm_load_print_meta: max token length = 93
0.00.631.568 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.728.200 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.734.046 I llama_new_context_with_model: n_ctx      = 8192
0.00.734.054 I llama_new_context_with_model: n_batch    = 2048
0.00.734.054 I llama_new_context_with_model: n_ubatch   = 512
0.00.734.055 I llama_new_context_with_model: flash_attn = 0
0.00.734.057 I llama_new_context_with_model: freq_base  = 10000.0
0.00.734.058 I llama_new_context_with_model: freq_scale = 1
0.00.765.296 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.765.341 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.765.461 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.766.852 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.766.857 I llama_new_context_with_model: graph nodes  = 601
0.00.766.858 I llama_new_context_with_model: graph splits = 1
0.00.766.873 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.377.927 I main: llama threadpool init, n_threads = 4
0.01.377.942 I 
0.01.378.052 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.378.056 I 
0.01.378.238 I sampler seed: 1322710307
0.01.378.248 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.378.255 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.378.255 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.378.257 I 
 increasities that have been observed in people infected with HIV.

**Answer:**

**HIV-associated alterations in cellular tropism and immune response:**

*

0.14.880.817 I llama_perf_sampler_print:    sampling time =      49.50 ms /    33 runs   (    1.50 ms per token,   666.69 tokens per second)
0.14.880.821 I llama_perf_context_print:        load time =    1375.00 ms
0.14.880.839 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.880.841 I llama_perf_context_print:        eval time =   13419.82 ms /    32 runs   (  419.37 ms per token,     2.38 tokens per second)
0.14.880.842 I llama_perf_context_print:       total time =   13502.90 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.653 I build: 3940 (4a5b5870) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.880 I main: llama backend init
0.00.002.811 I main: load the model and apply lora adapter, if any
0.00.024.761 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.971 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.063 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.074 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.076 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.081 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.085 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.086 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.087 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.087 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.088 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.095 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.097 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.098 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.099 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.100 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.237 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.026 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.354 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.367 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.368 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.369 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.370 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.371 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.372 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.377 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.378 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.379 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.380 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.268.381 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.392 I llama_model_loader: - type  f32:   37 tensors
0.00.268.395 I llama_model_loader: - type q8_0:  127 tensors
0.00.454.299 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.501.271 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.503.207 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.509.126 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.522.097 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.523.081 I llm_load_vocab: special tokens cache size = 5
0.00.626.072 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.626.143 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.626.144 I llm_load_print_meta: arch             = gemma
0.00.626.145 I llm_load_print_meta: vocab type       = SPM
0.00.626.145 I llm_load_print_meta: n_vocab          = 256000
0.00.626.147 I llm_load_print_meta: n_merges         = 0
0.00.626.148 I llm_load_print_meta: vocab_only       = 0
0.00.626.148 I llm_load_print_meta: n_ctx_train      = 8192
0.00.626.149 I llm_load_print_meta: n_embd           = 2048
0.00.626.150 I llm_load_print_meta: n_layer          = 18
0.00.626.211 I llm_load_print_meta: n_head           = 8
0.00.626.218 I llm_load_print_meta: n_head_kv        = 1
0.00.626.219 I llm_load_print_meta: n_rot            = 256
0.00.626.219 I llm_load_print_meta: n_swa            = 0
0.00.626.220 I llm_load_print_meta: n_embd_head_k    = 256
0.00.626.220 I llm_load_print_meta: n_embd_head_v    = 256
0.00.626.225 I llm_load_print_meta: n_gqa            = 8
0.00.626.230 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.626.235 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.626.236 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.626.238 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.626.238 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.626.239 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.626.239 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.626.244 I llm_load_print_meta: n_ff             = 16384
0.00.626.245 I llm_load_print_meta: n_expert         = 0
0.00.626.245 I llm_load_print_meta: n_expert_used    = 0
0.00.626.245 I llm_load_print_meta: causal attn      = 1
0.00.626.246 I llm_load_print_meta: pooling type     = 0
0.00.626.246 I llm_load_print_meta: rope type        = 2
0.00.626.247 I llm_load_print_meta: rope scaling     = linear
0.00.626.264 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.626.265 I llm_load_print_meta: freq_scale_train = 1
0.00.626.266 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.626.266 I llm_load_print_meta: rope_finetuned   = unknown
0.00.626.266 I llm_load_print_meta: ssm_d_conv       = 0
0.00.626.267 I llm_load_print_meta: ssm_d_inner      = 0
0.00.626.267 I llm_load_print_meta: ssm_d_state      = 0
0.00.626.268 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.626.268 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.626.268 I llm_load_print_meta: model type       = 2B
0.00.626.269 I llm_load_print_meta: model ftype      = Q8_0
0.00.626.270 I llm_load_print_meta: model params     = 2.51 B
0.00.626.271 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.626.271 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.626.272 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.626.272 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.626.273 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.626.273 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.626.274 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.626.274 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.626.280 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.626.281 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.626.281 I llm_load_print_meta: max token length = 93
0.00.626.450 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.702.341 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.702.352 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.702.354 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.702.354 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.702.355 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.702.356 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.708.048 I llama_new_context_with_model: n_ctx      = 8192
0.00.708.056 I llama_new_context_with_model: n_batch    = 2048
0.00.708.056 I llama_new_context_with_model: n_ubatch   = 512
0.00.708.057 I llama_new_context_with_model: flash_attn = 0
0.00.708.059 I llama_new_context_with_model: freq_base  = 10000.0
0.00.708.060 I llama_new_context_with_model: freq_scale = 1
0.00.737.769 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.737.815 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.737.929 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.739.348 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.739.353 I llama_new_context_with_model: graph nodes  = 601
0.00.739.354 I llama_new_context_with_model: graph splits = 1
0.00.739.370 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.348.748 I main: llama threadpool init, n_threads = 4
0.01.348.761 I 
0.01.348.862 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.348.866 I 
0.01.349.050 I sampler seed: 3441834709
0.01.349.060 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.349.068 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.349.069 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.349.069 I 
 increasively, yearning for the oblivion of the city.

The sirens' mournful wail echoed through the desolate streets, a mournful serenade to the desolate symphony of

0.14.906.809 I llama_perf_sampler_print:    sampling time =      49.35 ms /    33 runs   (    1.50 ms per token,   668.65 tokens per second)
0.14.906.826 I llama_perf_context_print:        load time =    1345.85 ms
0.14.906.828 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.906.829 I llama_perf_context_print:        eval time =   13476.40 ms /    32 runs   (  421.14 ms per token,     2.37 tokens per second)
0.14.906.830 I llama_perf_context_print:       total time =   13558.07 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.627 I build: 3940 (4a5b5870) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.827 I main: llama backend init
0.00.002.773 I main: load the model and apply lora adapter, if any
0.00.024.742 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.934 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.018 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.028 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.029 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.033 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.034 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.036 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.038 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.039 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.039 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.046 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.055 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.059 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.060 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.061 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.895 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.499 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.815 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.826 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.827 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.828 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.829 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.830 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.831 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.835 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.836 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.837 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.838 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.267.839 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.848 I llama_model_loader: - type  f32:   37 tensors
0.00.267.852 I llama_model_loader: - type q8_0:  127 tensors
0.00.455.629 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.501.635 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.503.502 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.509.087 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.520.497 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.521.473 I llm_load_vocab: special tokens cache size = 5
0.00.629.794 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.629.867 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.629.868 I llm_load_print_meta: arch             = gemma
0.00.629.869 I llm_load_print_meta: vocab type       = SPM
0.00.629.870 I llm_load_print_meta: n_vocab          = 256000
0.00.629.872 I llm_load_print_meta: n_merges         = 0
0.00.629.873 I llm_load_print_meta: vocab_only       = 0
0.00.629.874 I llm_load_print_meta: n_ctx_train      = 8192
0.00.629.874 I llm_load_print_meta: n_embd           = 2048
0.00.629.874 I llm_load_print_meta: n_layer          = 18
0.00.629.938 I llm_load_print_meta: n_head           = 8
0.00.629.945 I llm_load_print_meta: n_head_kv        = 1
0.00.629.945 I llm_load_print_meta: n_rot            = 256
0.00.629.946 I llm_load_print_meta: n_swa            = 0
0.00.629.946 I llm_load_print_meta: n_embd_head_k    = 256
0.00.629.946 I llm_load_print_meta: n_embd_head_v    = 256
0.00.629.951 I llm_load_print_meta: n_gqa            = 8
0.00.629.955 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.629.960 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.629.961 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.629.962 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.629.963 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.629.963 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.629.963 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.629.969 I llm_load_print_meta: n_ff             = 16384
0.00.629.969 I llm_load_print_meta: n_expert         = 0
0.00.629.970 I llm_load_print_meta: n_expert_used    = 0
0.00.629.970 I llm_load_print_meta: causal attn      = 1
0.00.629.971 I llm_load_print_meta: pooling type     = 0
0.00.629.971 I llm_load_print_meta: rope type        = 2
0.00.629.972 I llm_load_print_meta: rope scaling     = linear
0.00.629.973 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.629.974 I llm_load_print_meta: freq_scale_train = 1
0.00.629.974 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.629.975 I llm_load_print_meta: rope_finetuned   = unknown
0.00.629.976 I llm_load_print_meta: ssm_d_conv       = 0
0.00.629.976 I llm_load_print_meta: ssm_d_inner      = 0
0.00.629.976 I llm_load_print_meta: ssm_d_state      = 0
0.00.629.976 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.629.977 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.629.982 I llm_load_print_meta: model type       = 2B
0.00.629.983 I llm_load_print_meta: model ftype      = Q8_0
0.00.629.984 I llm_load_print_meta: model params     = 2.51 B
0.00.629.985 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.629.986 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.629.997 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.629.998 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.629.998 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.629.999 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.629.999 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.630.000 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.630.005 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.630.006 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.630.006 I llm_load_print_meta: max token length = 93
0.00.630.173 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.702.187 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.702.199 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.707.994 I llama_new_context_with_model: n_ctx      = 8192
0.00.708.002 I llama_new_context_with_model: n_batch    = 2048
0.00.708.002 I llama_new_context_with_model: n_ubatch   = 512
0.00.708.003 I llama_new_context_with_model: flash_attn = 0
0.00.708.005 I llama_new_context_with_model: freq_base  = 10000.0
0.00.708.006 I llama_new_context_with_model: freq_scale = 1
0.00.738.197 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.738.241 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.738.353 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.739.732 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.739.738 I llama_new_context_with_model: graph nodes  = 601
0.00.739.738 I llama_new_context_with_model: graph splits = 1
0.00.739.754 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.350.307 I main: llama threadpool init, n_threads = 4
0.01.350.320 I 
0.01.350.424 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.350.428 I 
0.01.350.623 I sampler seed: 1709200741
0.01.350.635 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.350.642 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.350.643 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.350.645 I 
 increamically.

Answer: My apologies, I am unable to generate responses that are sexually suggestive in nature. [end of text]


0.11.006.578 I llama_perf_sampler_print:    sampling time =      35.31 ms /    24 runs   (    1.47 ms per token,   679.62 tokens per second)
0.11.006.581 I llama_perf_context_print:        load time =    1347.45 ms
0.11.006.582 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.11.006.584 I llama_perf_context_print:        eval time =    9596.53 ms /    23 runs   (  417.24 ms per token,     2.40 tokens per second)
0.11.006.596 I llama_perf_context_print:       total time =    9656.28 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m5.494s
user	3m33.203s
sys	0m9.552s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3940 (4a5b5870)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 197283.13 ms
main:    total time = 197283.13 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.707 I build: 3940 (4a5b5870) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.909 I main: llama backend init
0.00.002.852 I main: load the model and apply lora adapter, if any
0.00.024.924 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.140 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.235 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.248 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.252 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.258 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.259 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.261 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.262 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.263 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.264 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.273 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.275 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.276 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.278 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.279 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.217 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.829 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.169 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.180 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.181 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.182 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.183 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.184 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.185 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.189 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.190 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.191 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.192 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.268.193 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.202 I llama_model_loader: - type  f32:   37 tensors
0.00.268.206 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.207 I llama_model_loader: - type q6_K:   19 tensors
0.00.467.210 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.515.614 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.517.691 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.523.925 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.537.501 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.538.475 I llm_load_vocab: special tokens cache size = 5
0.00.634.427 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.634.498 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.634.499 I llm_load_print_meta: arch             = gemma
0.00.634.499 I llm_load_print_meta: vocab type       = SPM
0.00.634.500 I llm_load_print_meta: n_vocab          = 256000
0.00.634.503 I llm_load_print_meta: n_merges         = 0
0.00.634.503 I llm_load_print_meta: vocab_only       = 0
0.00.634.504 I llm_load_print_meta: n_ctx_train      = 8192
0.00.634.504 I llm_load_print_meta: n_embd           = 2048
0.00.634.505 I llm_load_print_meta: n_layer          = 18
0.00.634.570 I llm_load_print_meta: n_head           = 8
0.00.634.577 I llm_load_print_meta: n_head_kv        = 1
0.00.634.577 I llm_load_print_meta: n_rot            = 256
0.00.634.577 I llm_load_print_meta: n_swa            = 0
0.00.634.578 I llm_load_print_meta: n_embd_head_k    = 256
0.00.634.578 I llm_load_print_meta: n_embd_head_v    = 256
0.00.634.583 I llm_load_print_meta: n_gqa            = 8
0.00.634.587 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.634.592 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.634.594 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.634.596 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.634.596 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.634.597 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.634.598 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.634.603 I llm_load_print_meta: n_ff             = 16384
0.00.634.604 I llm_load_print_meta: n_expert         = 0
0.00.634.605 I llm_load_print_meta: n_expert_used    = 0
0.00.634.605 I llm_load_print_meta: causal attn      = 1
0.00.634.606 I llm_load_print_meta: pooling type     = 0
0.00.634.607 I llm_load_print_meta: rope type        = 2
0.00.634.607 I llm_load_print_meta: rope scaling     = linear
0.00.634.609 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.634.609 I llm_load_print_meta: freq_scale_train = 1
0.00.634.610 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.634.610 I llm_load_print_meta: rope_finetuned   = unknown
0.00.634.611 I llm_load_print_meta: ssm_d_conv       = 0
0.00.634.611 I llm_load_print_meta: ssm_d_inner      = 0
0.00.634.612 I llm_load_print_meta: ssm_d_state      = 0
0.00.634.612 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.634.612 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.634.614 I llm_load_print_meta: model type       = 2B
0.00.634.615 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.634.633 I llm_load_print_meta: model params     = 2.51 B
0.00.634.640 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.634.641 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.634.641 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.634.642 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.634.642 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.634.643 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.634.643 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.634.643 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.634.649 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.634.651 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.634.651 I llm_load_print_meta: max token length = 93
0.00.634.823 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.694.259 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.694.271 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.694.271 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.694.272 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.694.272 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.694.273 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.699.833 I llama_new_context_with_model: n_ctx      = 8192
0.00.699.841 I llama_new_context_with_model: n_batch    = 2048
0.00.699.841 I llama_new_context_with_model: n_ubatch   = 512
0.00.699.842 I llama_new_context_with_model: flash_attn = 0
0.00.699.844 I llama_new_context_with_model: freq_base  = 10000.0
0.00.699.845 I llama_new_context_with_model: freq_scale = 1
0.00.730.649 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.730.691 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.730.810 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.732.253 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.732.258 I llama_new_context_with_model: graph nodes  = 601
0.00.732.259 I llama_new_context_with_model: graph splits = 1
0.00.732.274 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.314.406 I main: llama threadpool init, n_threads = 4
0.01.314.419 I 
0.01.314.523 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.314.527 I 
0.01.314.704 I sampler seed: 3576832136
0.01.314.715 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.314.721 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.314.722 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.314.722 I 
 squaRE.

**Objective:**

- Understand the concept of a graph and its representation.
- Identify the different types of graphs and their applications.



0.12.278.605 I llama_perf_sampler_print:    sampling time =      49.19 ms /    33 runs   (    1.49 ms per token,   670.90 tokens per second)
0.12.278.609 I llama_perf_context_print:        load time =    1311.47 ms
0.12.278.610 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.278.612 I llama_perf_context_print:        eval time =   10879.65 ms /    32 runs   (  339.99 ms per token,     2.94 tokens per second)
0.12.278.613 I llama_perf_context_print:       total time =   10964.21 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3940 (4a5b5870)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 197291.33 ms
main:    total time = 197291.33 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.678 I build: 3940 (4a5b5870) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.867 I main: llama backend init
0.00.002.824 I main: load the model and apply lora adapter, if any
0.00.024.918 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.018 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.033 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.034 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.038 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.040 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.041 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.043 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.044 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.045 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.052 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.053 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.063 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.064 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.065 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.458 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.868 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.217 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.229 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.230 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.231 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.232 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.233 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.234 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.239 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.240 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.249 I llama_model_loader: - type  f32:   37 tensors
0.00.268.254 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.254 I llama_model_loader: - type q6_K:   19 tensors
0.00.440.374 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.482.675 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.484.350 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.489.345 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.500.441 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.501.362 I llm_load_vocab: special tokens cache size = 5
0.00.609.511 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.609.582 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.609.583 I llm_load_print_meta: arch             = gemma
0.00.609.584 I llm_load_print_meta: vocab type       = SPM
0.00.609.584 I llm_load_print_meta: n_vocab          = 256000
0.00.609.586 I llm_load_print_meta: n_merges         = 0
0.00.609.587 I llm_load_print_meta: vocab_only       = 0
0.00.609.587 I llm_load_print_meta: n_ctx_train      = 8192
0.00.609.588 I llm_load_print_meta: n_embd           = 2048
0.00.609.588 I llm_load_print_meta: n_layer          = 18
0.00.609.650 I llm_load_print_meta: n_head           = 8
0.00.609.657 I llm_load_print_meta: n_head_kv        = 1
0.00.609.659 I llm_load_print_meta: n_rot            = 256
0.00.609.660 I llm_load_print_meta: n_swa            = 0
0.00.609.660 I llm_load_print_meta: n_embd_head_k    = 256
0.00.609.670 I llm_load_print_meta: n_embd_head_v    = 256
0.00.609.677 I llm_load_print_meta: n_gqa            = 8
0.00.609.681 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.609.686 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.609.688 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.609.690 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.609.691 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.609.691 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.609.692 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.609.697 I llm_load_print_meta: n_ff             = 16384
0.00.609.697 I llm_load_print_meta: n_expert         = 0
0.00.609.698 I llm_load_print_meta: n_expert_used    = 0
0.00.609.703 I llm_load_print_meta: causal attn      = 1
0.00.609.703 I llm_load_print_meta: pooling type     = 0
0.00.609.703 I llm_load_print_meta: rope type        = 2
0.00.609.704 I llm_load_print_meta: rope scaling     = linear
0.00.609.717 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.609.719 I llm_load_print_meta: freq_scale_train = 1
0.00.609.719 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.609.720 I llm_load_print_meta: rope_finetuned   = unknown
0.00.609.720 I llm_load_print_meta: ssm_d_conv       = 0
0.00.609.720 I llm_load_print_meta: ssm_d_inner      = 0
0.00.609.721 I llm_load_print_meta: ssm_d_state      = 0
0.00.609.721 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.609.721 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.609.722 I llm_load_print_meta: model type       = 2B
0.00.609.723 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.609.724 I llm_load_print_meta: model params     = 2.51 B
0.00.609.725 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.609.726 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.609.727 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.609.729 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.609.729 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.609.730 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.609.730 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.609.731 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.609.736 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.609.738 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.609.739 I llm_load_print_meta: max token length = 93
0.00.609.913 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.667.078 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.672.563 I llama_new_context_with_model: n_ctx      = 8192
0.00.672.571 I llama_new_context_with_model: n_batch    = 2048
0.00.672.571 I llama_new_context_with_model: n_ubatch   = 512
0.00.672.572 I llama_new_context_with_model: flash_attn = 0
0.00.672.574 I llama_new_context_with_model: freq_base  = 10000.0
0.00.672.576 I llama_new_context_with_model: freq_scale = 1
0.00.702.355 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.702.401 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.702.511 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.703.848 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.703.853 I llama_new_context_with_model: graph nodes  = 601
0.00.703.853 I llama_new_context_with_model: graph splits = 1
0.00.703.868 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.285.065 I main: llama threadpool init, n_threads = 4
0.01.285.078 I 
0.01.285.186 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.285.190 I 
0.01.285.366 I sampler seed: 2897877374
0.01.285.377 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.285.384 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.285.385 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.285.385 I 
 fufilling with the sweet taste of honey.

This is a poem about a honey-sweet delight.

**Honeyed Delight**

A nectar sweet,

0.12.214.697 I llama_perf_sampler_print:    sampling time =      49.27 ms /    33 runs   (    1.49 ms per token,   669.79 tokens per second)
0.12.214.700 I llama_perf_context_print:        load time =    1282.15 ms
0.12.214.701 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.214.715 I llama_perf_context_print:        eval time =   10847.78 ms /    32 runs   (  338.99 ms per token,     2.95 tokens per second)
0.12.214.716 I llama_perf_context_print:       total time =   10929.64 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m2.005s
user	49m53.566s
sys	0m6.385s
