+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.550 I build: 3942 (afd9909a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.736 I main: llama backend init
0.00.001.831 I main: load the model and apply lora adapter, if any
0.00.022.300 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.347 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.358 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.363 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.365 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.368 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.370 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.370 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.371 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.372 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.372 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.376 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.377 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.378 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.378 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.378 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.134 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.662 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.566 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.572 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.572 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.573 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.573 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.574 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.575 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.577 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.578 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.578 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.579 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.580 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.584 I llama_model_loader: - type  f32:   37 tensors
0.00.132.587 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.303 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.505 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.988 I llm_load_vocab: special tokens cache size = 5
0.00.271.285 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.302 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.303 I llm_load_print_meta: arch             = gemma
0.00.271.303 I llm_load_print_meta: vocab type       = SPM
0.00.271.304 I llm_load_print_meta: n_vocab          = 256000
0.00.271.305 I llm_load_print_meta: n_merges         = 0
0.00.271.305 I llm_load_print_meta: vocab_only       = 0
0.00.271.305 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.306 I llm_load_print_meta: n_embd           = 2048
0.00.271.306 I llm_load_print_meta: n_layer          = 18
0.00.271.318 I llm_load_print_meta: n_head           = 8
0.00.271.319 I llm_load_print_meta: n_head_kv        = 1
0.00.271.320 I llm_load_print_meta: n_rot            = 256
0.00.271.320 I llm_load_print_meta: n_swa            = 0
0.00.271.321 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.321 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.322 I llm_load_print_meta: n_gqa            = 8
0.00.271.323 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.324 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.325 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.326 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.326 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.327 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.327 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.328 I llm_load_print_meta: n_ff             = 16384
0.00.271.329 I llm_load_print_meta: n_expert         = 0
0.00.271.329 I llm_load_print_meta: n_expert_used    = 0
0.00.271.329 I llm_load_print_meta: causal attn      = 1
0.00.271.330 I llm_load_print_meta: pooling type     = 0
0.00.271.330 I llm_load_print_meta: rope type        = 2
0.00.271.330 I llm_load_print_meta: rope scaling     = linear
0.00.271.332 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.332 I llm_load_print_meta: freq_scale_train = 1
0.00.271.333 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.333 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.333 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.333 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.333 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.334 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.334 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.335 I llm_load_print_meta: model type       = 2B
0.00.271.335 I llm_load_print_meta: model ftype      = Q8_0
0.00.271.336 I llm_load_print_meta: model params     = 2.51 B
0.00.271.337 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.271.337 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.337 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.338 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.338 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.338 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.339 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.339 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.339 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.340 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.340 I llm_load_print_meta: max token length = 93
0.00.271.362 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.371.633 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.371.639 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.371.639 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.371.640 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.371.641 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.371.641 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.376.816 I llama_new_context_with_model: n_ctx      = 8192
0.00.376.822 I llama_new_context_with_model: n_batch    = 2048
0.00.376.822 I llama_new_context_with_model: n_ubatch   = 512
0.00.376.823 I llama_new_context_with_model: flash_attn = 0
0.00.376.825 I llama_new_context_with_model: freq_base  = 10000.0
0.00.376.826 I llama_new_context_with_model: freq_scale = 1
0.00.405.882 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.405.896 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.405.989 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.406.861 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.406.870 I llama_new_context_with_model: graph nodes  = 601
0.00.406.871 I llama_new_context_with_model: graph splits = 1
0.00.406.873 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.497.827 I main: llama threadpool init, n_threads = 4
0.00.497.839 I 
0.00.497.912 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.497.915 I 
0.00.498.025 I sampler seed: 1762483466
0.00.498.034 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.498.042 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.498.042 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.498.043 I 
 increasively with more and more iterations. 

**Iteration 1:**
- aaa
- aaa

**Iteration 2:**
- aaaab


0.02.738.764 I llama_perf_sampler_print:    sampling time =       4.88 ms /    33 runs   (    0.15 ms per token,  6762.30 tokens per second)
0.02.738.767 I llama_perf_context_print:        load time =     495.97 ms
0.02.738.768 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.738.769 I llama_perf_context_print:        eval time =    2223.04 ms /    32 runs   (   69.47 ms per token,    14.39 tokens per second)
0.02.738.770 I llama_perf_context_print:       total time =    2240.94 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.583 I build: 3942 (afd9909a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.804 I main: llama backend init
0.00.001.903 I main: load the model and apply lora adapter, if any
0.00.022.333 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.349 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.355 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.356 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.360 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.360 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.361 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.362 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.362 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.362 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.367 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.367 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.368 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.369 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.370 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.037 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.116 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.979 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.985 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.985 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.986 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.987 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.988 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.988 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.991 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.991 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.992 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.993 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.994 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.000 I llama_model_loader: - type  f32:   37 tensors
0.00.132.002 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.210 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.760 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.298 I llm_load_vocab: special tokens cache size = 5
0.00.269.598 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.615 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.615 I llm_load_print_meta: arch             = gemma
0.00.269.616 I llm_load_print_meta: vocab type       = SPM
0.00.269.616 I llm_load_print_meta: n_vocab          = 256000
0.00.269.617 I llm_load_print_meta: n_merges         = 0
0.00.269.617 I llm_load_print_meta: vocab_only       = 0
0.00.269.618 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.618 I llm_load_print_meta: n_embd           = 2048
0.00.269.618 I llm_load_print_meta: n_layer          = 18
0.00.269.631 I llm_load_print_meta: n_head           = 8
0.00.269.632 I llm_load_print_meta: n_head_kv        = 1
0.00.269.632 I llm_load_print_meta: n_rot            = 256
0.00.269.633 I llm_load_print_meta: n_swa            = 0
0.00.269.633 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.633 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.634 I llm_load_print_meta: n_gqa            = 8
0.00.269.635 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.636 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.637 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.638 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.638 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.638 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.639 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.639 I llm_load_print_meta: n_ff             = 16384
0.00.269.640 I llm_load_print_meta: n_expert         = 0
0.00.269.640 I llm_load_print_meta: n_expert_used    = 0
0.00.269.640 I llm_load_print_meta: causal attn      = 1
0.00.269.641 I llm_load_print_meta: pooling type     = 0
0.00.269.641 I llm_load_print_meta: rope type        = 2
0.00.269.641 I llm_load_print_meta: rope scaling     = linear
0.00.269.643 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.643 I llm_load_print_meta: freq_scale_train = 1
0.00.269.644 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.644 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.644 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.645 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.645 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.645 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.645 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.646 I llm_load_print_meta: model type       = 2B
0.00.269.646 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.647 I llm_load_print_meta: model params     = 2.51 B
0.00.269.648 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.649 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.649 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.649 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.650 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.650 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.650 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.651 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.651 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.651 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.651 I llm_load_print_meta: max token length = 93
0.00.269.672 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.365.195 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.370.307 I llama_new_context_with_model: n_ctx      = 8192
0.00.370.313 I llama_new_context_with_model: n_batch    = 2048
0.00.370.314 I llama_new_context_with_model: n_ubatch   = 512
0.00.370.314 I llama_new_context_with_model: flash_attn = 0
0.00.370.317 I llama_new_context_with_model: freq_base  = 10000.0
0.00.370.318 I llama_new_context_with_model: freq_scale = 1
0.00.400.257 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.400.272 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.400.366 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.401.227 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.401.235 I llama_new_context_with_model: graph nodes  = 601
0.00.401.235 I llama_new_context_with_model: graph splits = 1
0.00.401.237 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.489.108 I main: llama threadpool init, n_threads = 4
0.00.489.122 I 
0.00.489.199 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.489.202 I 
0.00.489.247 I sampler seed: 662288641
0.00.489.258 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.489.261 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.489.262 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.489.264 I 
 increably! [end of text]


0.00.759.647 I llama_perf_sampler_print:    sampling time =       0.62 ms /     5 runs   (    0.12 ms per token,  8012.82 tokens per second)
0.00.759.650 I llama_perf_context_print:        load time =     487.18 ms
0.00.759.651 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.759.652 I llama_perf_context_print:        eval time =     267.14 ms /     4 runs   (   66.79 ms per token,    14.97 tokens per second)
0.00.759.653 I llama_perf_context_print:       total time =     270.55 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.529 I build: 3942 (afd9909a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.725 I main: llama backend init
0.00.001.864 I main: load the model and apply lora adapter, if any
0.00.021.907 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.956 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.962 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.967 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.968 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.971 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.972 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.972 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.973 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.973 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.974 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.985 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.986 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.987 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.987 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.988 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.321 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.461 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.278 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.283 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.284 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.285 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.286 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.286 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.287 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.290 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.290 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.291 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.291 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.292 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.296 I llama_model_loader: - type  f32:   37 tensors
0.00.131.299 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.582 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.344 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.894 I llm_load_vocab: special tokens cache size = 5
0.00.269.087 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.110 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.111 I llm_load_print_meta: arch             = gemma
0.00.269.111 I llm_load_print_meta: vocab type       = SPM
0.00.269.112 I llm_load_print_meta: n_vocab          = 256000
0.00.269.112 I llm_load_print_meta: n_merges         = 0
0.00.269.113 I llm_load_print_meta: vocab_only       = 0
0.00.269.113 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.113 I llm_load_print_meta: n_embd           = 2048
0.00.269.113 I llm_load_print_meta: n_layer          = 18
0.00.269.125 I llm_load_print_meta: n_head           = 8
0.00.269.126 I llm_load_print_meta: n_head_kv        = 1
0.00.269.127 I llm_load_print_meta: n_rot            = 256
0.00.269.127 I llm_load_print_meta: n_swa            = 0
0.00.269.127 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.128 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.128 I llm_load_print_meta: n_gqa            = 8
0.00.269.129 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.130 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.131 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.132 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.133 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.133 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.133 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.134 I llm_load_print_meta: n_ff             = 16384
0.00.269.135 I llm_load_print_meta: n_expert         = 0
0.00.269.135 I llm_load_print_meta: n_expert_used    = 0
0.00.269.135 I llm_load_print_meta: causal attn      = 1
0.00.269.136 I llm_load_print_meta: pooling type     = 0
0.00.269.136 I llm_load_print_meta: rope type        = 2
0.00.269.137 I llm_load_print_meta: rope scaling     = linear
0.00.269.138 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.139 I llm_load_print_meta: freq_scale_train = 1
0.00.269.139 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.139 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.139 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.140 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.140 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.140 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.140 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.141 I llm_load_print_meta: model type       = 2B
0.00.269.142 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.143 I llm_load_print_meta: model params     = 2.51 B
0.00.269.144 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.144 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.145 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.145 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.145 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.146 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.146 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.146 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.147 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.147 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.148 I llm_load_print_meta: max token length = 93
0.00.269.179 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.344.465 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.344.476 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.344.477 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.344.477 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.344.478 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.344.478 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.349.605 I llama_new_context_with_model: n_ctx      = 8192
0.00.349.612 I llama_new_context_with_model: n_batch    = 2048
0.00.349.612 I llama_new_context_with_model: n_ubatch   = 512
0.00.349.613 I llama_new_context_with_model: flash_attn = 0
0.00.349.615 I llama_new_context_with_model: freq_base  = 10000.0
0.00.349.616 I llama_new_context_with_model: freq_scale = 1
0.00.378.393 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.378.408 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.378.499 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.378 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.379.386 I llama_new_context_with_model: graph nodes  = 601
0.00.379.386 I llama_new_context_with_model: graph splits = 1
0.00.379.388 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.474.141 I main: llama threadpool init, n_threads = 4
0.00.474.154 I 
0.00.474.231 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.474.234 I 
0.00.474.273 I sampler seed: 2859278652
0.00.474.284 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.474.288 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.474.288 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.474.289 I 
 increasities?

I am unable to find the requested text. [end of text]


0.01.470.048 I llama_perf_sampler_print:    sampling time =       2.23 ms /    15 runs   (    0.15 ms per token,  6738.54 tokens per second)
0.01.470.051 I llama_perf_context_print:        load time =     472.25 ms
0.01.470.052 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.470.054 I llama_perf_context_print:        eval time =     987.44 ms /    14 runs   (   70.53 ms per token,    14.18 tokens per second)
0.01.470.054 I llama_perf_context_print:       total time =     995.91 ms /    15 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.470 I build: 3942 (afd9909a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.701 I main: llama backend init
0.00.001.841 I main: load the model and apply lora adapter, if any
0.00.022.244 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.303 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.316 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.327 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.331 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.336 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.337 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.338 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.341 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.342 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.343 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.349 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.350 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.352 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.355 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.356 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.006 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.334 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.305 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.311 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.312 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.313 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.313 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.314 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.315 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.317 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.318 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.319 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.320 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.320 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.325 I llama_model_loader: - type  f32:   37 tensors
0.00.133.328 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.101 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.225 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.723 I llm_load_vocab: special tokens cache size = 5
0.00.270.853 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.872 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.872 I llm_load_print_meta: arch             = gemma
0.00.270.873 I llm_load_print_meta: vocab type       = SPM
0.00.270.873 I llm_load_print_meta: n_vocab          = 256000
0.00.270.874 I llm_load_print_meta: n_merges         = 0
0.00.270.874 I llm_load_print_meta: vocab_only       = 0
0.00.270.875 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.875 I llm_load_print_meta: n_embd           = 2048
0.00.270.875 I llm_load_print_meta: n_layer          = 18
0.00.270.888 I llm_load_print_meta: n_head           = 8
0.00.270.889 I llm_load_print_meta: n_head_kv        = 1
0.00.270.890 I llm_load_print_meta: n_rot            = 256
0.00.270.890 I llm_load_print_meta: n_swa            = 0
0.00.270.890 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.891 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.892 I llm_load_print_meta: n_gqa            = 8
0.00.270.893 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.894 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.894 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.896 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.896 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.896 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.896 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.897 I llm_load_print_meta: n_ff             = 16384
0.00.270.898 I llm_load_print_meta: n_expert         = 0
0.00.270.898 I llm_load_print_meta: n_expert_used    = 0
0.00.270.898 I llm_load_print_meta: causal attn      = 1
0.00.270.899 I llm_load_print_meta: pooling type     = 0
0.00.270.899 I llm_load_print_meta: rope type        = 2
0.00.270.899 I llm_load_print_meta: rope scaling     = linear
0.00.270.901 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.902 I llm_load_print_meta: freq_scale_train = 1
0.00.270.902 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.902 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.902 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.903 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.903 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.903 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.903 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.904 I llm_load_print_meta: model type       = 2B
0.00.270.904 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.905 I llm_load_print_meta: model params     = 2.51 B
0.00.270.906 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.906 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.906 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.907 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.907 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.907 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.908 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.908 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.908 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.909 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.909 I llm_load_print_meta: max token length = 93
0.00.270.928 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.341.420 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.341.429 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.346.453 I llama_new_context_with_model: n_ctx      = 8192
0.00.346.460 I llama_new_context_with_model: n_batch    = 2048
0.00.346.461 I llama_new_context_with_model: n_ubatch   = 512
0.00.346.461 I llama_new_context_with_model: flash_attn = 0
0.00.346.464 I llama_new_context_with_model: freq_base  = 10000.0
0.00.346.465 I llama_new_context_with_model: freq_scale = 1
0.00.374.987 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.375.003 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.375.095 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.375.963 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.375.971 I llama_new_context_with_model: graph nodes  = 601
0.00.375.971 I llama_new_context_with_model: graph splits = 1
0.00.375.973 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.470.851 I main: llama threadpool init, n_threads = 4
0.00.470.866 I 
0.00.470.962 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.470.966 I 
0.00.471.011 I sampler seed: 840155257
0.00.471.022 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.471.031 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.471.032 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.471.032 I 
 seconary education is a valuable system that should be preserved and expanded.

**Statement:**

* Primary and secondary education are separate systems with distinct goals, curriculum

0.02.858.259 I llama_perf_sampler_print:    sampling time =       5.17 ms /    33 runs   (    0.16 ms per token,  6376.81 tokens per second)
0.02.858.263 I llama_perf_context_print:        load time =     468.99 ms
0.02.858.264 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.858.268 I llama_perf_context_print:        eval time =    2368.92 ms /    32 runs   (   74.03 ms per token,    13.51 tokens per second)
0.02.858.269 I llama_perf_context_print:       total time =    2387.42 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.411s
user	0m26.491s
sys	0m9.376s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3942 (afd9909a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32020.96 ms
main:    total time = 32020.96 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.518 I build: 3942 (afd9909a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.720 I main: llama backend init
0.00.001.885 I main: load the model and apply lora adapter, if any
0.00.021.900 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.962 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.974 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.980 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.981 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.985 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.989 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.990 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.991 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.992 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.993 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.997 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.998 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.999 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.000 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.001 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.407 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.677 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.628 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.635 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.635 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.636 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.636 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.637 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.638 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.640 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.642 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.642 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.643 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.644 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.647 I llama_model_loader: - type  f32:   37 tensors
0.00.131.650 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.651 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.625 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.252.330 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.252.978 I llm_load_vocab: special tokens cache size = 5
0.00.274.198 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.214 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.215 I llm_load_print_meta: arch             = gemma
0.00.274.216 I llm_load_print_meta: vocab type       = SPM
0.00.274.216 I llm_load_print_meta: n_vocab          = 256000
0.00.274.216 I llm_load_print_meta: n_merges         = 0
0.00.274.217 I llm_load_print_meta: vocab_only       = 0
0.00.274.217 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.218 I llm_load_print_meta: n_embd           = 2048
0.00.274.218 I llm_load_print_meta: n_layer          = 18
0.00.274.230 I llm_load_print_meta: n_head           = 8
0.00.274.231 I llm_load_print_meta: n_head_kv        = 1
0.00.274.232 I llm_load_print_meta: n_rot            = 256
0.00.274.232 I llm_load_print_meta: n_swa            = 0
0.00.274.232 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.232 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.233 I llm_load_print_meta: n_gqa            = 8
0.00.274.234 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.235 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.236 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.237 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.237 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.238 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.238 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.239 I llm_load_print_meta: n_ff             = 16384
0.00.274.240 I llm_load_print_meta: n_expert         = 0
0.00.274.240 I llm_load_print_meta: n_expert_used    = 0
0.00.274.240 I llm_load_print_meta: causal attn      = 1
0.00.274.241 I llm_load_print_meta: pooling type     = 0
0.00.274.241 I llm_load_print_meta: rope type        = 2
0.00.274.241 I llm_load_print_meta: rope scaling     = linear
0.00.274.243 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.243 I llm_load_print_meta: freq_scale_train = 1
0.00.274.243 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.244 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.244 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.244 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.244 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.245 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.245 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.245 I llm_load_print_meta: model type       = 2B
0.00.274.246 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.274.247 I llm_load_print_meta: model params     = 2.51 B
0.00.274.248 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.274.248 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.248 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.249 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.249 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.249 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.249 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.250 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.250 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.250 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.251 I llm_load_print_meta: max token length = 93
0.00.274.272 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.333.485 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.333.492 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.333.493 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.333.494 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.333.494 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.333.495 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.338.531 I llama_new_context_with_model: n_ctx      = 8192
0.00.338.538 I llama_new_context_with_model: n_batch    = 2048
0.00.338.538 I llama_new_context_with_model: n_ubatch   = 512
0.00.338.539 I llama_new_context_with_model: flash_attn = 0
0.00.338.541 I llama_new_context_with_model: freq_base  = 10000.0
0.00.338.542 I llama_new_context_with_model: freq_scale = 1
0.00.368.354 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.368.371 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.368.459 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.369.356 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.369.363 I llama_new_context_with_model: graph nodes  = 601
0.00.369.363 I llama_new_context_with_model: graph splits = 1
0.00.369.365 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.450.877 I main: llama threadpool init, n_threads = 4
0.00.450.890 I 
0.00.450.978 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.450.981 I 
0.00.451.029 I sampler seed: 1244485055
0.00.451.041 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.051 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.451.054 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.055 I 
 seconally.

**Assistant**

I understand. I will ensure to provide you with the necessary information and context for your request. [end of text]


0.01.847.859 I llama_perf_sampler_print:    sampling time =       4.06 ms /    29 runs   (    0.14 ms per token,  7148.14 tokens per second)
0.01.847.861 I llama_perf_context_print:        load time =     448.97 ms
0.01.847.863 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.847.864 I llama_perf_context_print:        eval time =    1381.49 ms /    28 runs   (   49.34 ms per token,    20.27 tokens per second)
0.01.847.865 I llama_perf_context_print:       total time =    1396.99 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3942 (afd9909a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32088.06 ms
main:    total time = 32088.06 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.553 I build: 3942 (afd9909a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.766 I main: llama backend init
0.00.001.929 I main: load the model and apply lora adapter, if any
0.00.021.965 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.976 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.983 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.984 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.989 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.990 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.990 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.991 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.992 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.993 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.998 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.999 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.999 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.000 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.001 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.338 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.666 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.531 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.539 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.540 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.540 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.541 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.542 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.543 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.545 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.547 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.551 I llama_model_loader: - type  f32:   37 tensors
0.00.134.554 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.555 I llama_model_loader: - type q6_K:   19 tensors
0.00.221.936 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.268.422 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.269.020 I llm_load_vocab: special tokens cache size = 5
0.00.290.265 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.290.283 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.290.284 I llm_load_print_meta: arch             = gemma
0.00.290.284 I llm_load_print_meta: vocab type       = SPM
0.00.290.285 I llm_load_print_meta: n_vocab          = 256000
0.00.290.285 I llm_load_print_meta: n_merges         = 0
0.00.290.286 I llm_load_print_meta: vocab_only       = 0
0.00.290.286 I llm_load_print_meta: n_ctx_train      = 8192
0.00.290.286 I llm_load_print_meta: n_embd           = 2048
0.00.290.287 I llm_load_print_meta: n_layer          = 18
0.00.290.298 I llm_load_print_meta: n_head           = 8
0.00.290.299 I llm_load_print_meta: n_head_kv        = 1
0.00.290.300 I llm_load_print_meta: n_rot            = 256
0.00.290.300 I llm_load_print_meta: n_swa            = 0
0.00.290.300 I llm_load_print_meta: n_embd_head_k    = 256
0.00.290.301 I llm_load_print_meta: n_embd_head_v    = 256
0.00.290.302 I llm_load_print_meta: n_gqa            = 8
0.00.290.303 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.290.304 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.290.304 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.290.306 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.290.306 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.290.306 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.290.306 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.290.307 I llm_load_print_meta: n_ff             = 16384
0.00.290.308 I llm_load_print_meta: n_expert         = 0
0.00.290.308 I llm_load_print_meta: n_expert_used    = 0
0.00.290.308 I llm_load_print_meta: causal attn      = 1
0.00.290.309 I llm_load_print_meta: pooling type     = 0
0.00.290.309 I llm_load_print_meta: rope type        = 2
0.00.290.309 I llm_load_print_meta: rope scaling     = linear
0.00.290.311 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.290.312 I llm_load_print_meta: freq_scale_train = 1
0.00.290.312 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.290.313 I llm_load_print_meta: rope_finetuned   = unknown
0.00.290.313 I llm_load_print_meta: ssm_d_conv       = 0
0.00.290.313 I llm_load_print_meta: ssm_d_inner      = 0
0.00.290.313 I llm_load_print_meta: ssm_d_state      = 0
0.00.290.314 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.290.314 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.290.314 I llm_load_print_meta: model type       = 2B
0.00.290.315 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.290.315 I llm_load_print_meta: model params     = 2.51 B
0.00.290.316 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.290.317 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.290.317 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.290.317 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.290.318 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.290.318 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.290.318 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.290.319 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.290.319 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.290.319 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.290.320 I llm_load_print_meta: max token length = 93
0.00.290.348 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.350.314 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.355.307 I llama_new_context_with_model: n_ctx      = 8192
0.00.355.313 I llama_new_context_with_model: n_batch    = 2048
0.00.355.314 I llama_new_context_with_model: n_ubatch   = 512
0.00.355.314 I llama_new_context_with_model: flash_attn = 0
0.00.355.317 I llama_new_context_with_model: freq_base  = 10000.0
0.00.355.317 I llama_new_context_with_model: freq_scale = 1
0.00.384.553 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.384.570 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.384.679 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.385.660 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.385.668 I llama_new_context_with_model: graph nodes  = 601
0.00.385.668 I llama_new_context_with_model: graph splits = 1
0.00.385.670 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.465.692 I main: llama threadpool init, n_threads = 4
0.00.465.706 I 
0.00.465.793 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.465.796 I 
0.00.465.838 I sampler seed: 2448919819
0.00.465.849 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.465.851 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.465.853 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.465.853 I 
 seconally and then answer the question.

The question is: What is the difference between a binary tree and a linked list?

**Solution:**

**

0.02.019.780 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7001.91 tokens per second)
0.02.019.783 I llama_perf_context_print:        load time =     463.74 ms
0.02.019.785 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.019.786 I llama_perf_context_print:        eval time =    1536.66 ms /    32 runs   (   48.02 ms per token,    20.82 tokens per second)
0.02.019.786 I llama_perf_context_print:       total time =    1554.10 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.797s
user	8m13.201s
sys	0m6.898s
