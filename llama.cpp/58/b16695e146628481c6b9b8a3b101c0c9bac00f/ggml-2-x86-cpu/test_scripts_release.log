+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.538 I build: 3886 (58b16695) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.001.842 I main: load the model and apply lora adapter, if any
0.00.021.956 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.001 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.008 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.013 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.014 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.017 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.018 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.018 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.019 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.020 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.021 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.025 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.026 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.026 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.027 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.027 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.230 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.197 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.100 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.106 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.106 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.107 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.108 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.108 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.109 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.112 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.113 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.114 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.115 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.116 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.119 I llama_model_loader: - type  f32:   37 tensors
0.00.132.122 I llama_model_loader: - type q8_0:  127 tensors
0.00.186.215 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.040 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.199.633 I llm_load_vocab: special tokens cache size = 5
0.00.220.378 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.392 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.392 I llm_load_print_meta: arch             = gemma
0.00.220.393 I llm_load_print_meta: vocab type       = SPM
0.00.220.394 I llm_load_print_meta: n_vocab          = 256000
0.00.220.394 I llm_load_print_meta: n_merges         = 0
0.00.220.394 I llm_load_print_meta: vocab_only       = 0
0.00.220.395 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.395 I llm_load_print_meta: n_embd           = 2048
0.00.220.395 I llm_load_print_meta: n_layer          = 18
0.00.220.407 I llm_load_print_meta: n_head           = 8
0.00.220.408 I llm_load_print_meta: n_head_kv        = 1
0.00.220.408 I llm_load_print_meta: n_rot            = 256
0.00.220.408 I llm_load_print_meta: n_swa            = 0
0.00.220.408 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.409 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.410 I llm_load_print_meta: n_gqa            = 8
0.00.220.411 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.412 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.412 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.413 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.414 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.414 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.415 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.416 I llm_load_print_meta: n_ff             = 16384
0.00.220.416 I llm_load_print_meta: n_expert         = 0
0.00.220.416 I llm_load_print_meta: n_expert_used    = 0
0.00.220.416 I llm_load_print_meta: causal attn      = 1
0.00.220.417 I llm_load_print_meta: pooling type     = 0
0.00.220.417 I llm_load_print_meta: rope type        = 2
0.00.220.417 I llm_load_print_meta: rope scaling     = linear
0.00.220.419 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.419 I llm_load_print_meta: freq_scale_train = 1
0.00.220.419 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.420 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.420 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.420 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.421 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.421 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.421 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.422 I llm_load_print_meta: model type       = 2B
0.00.220.422 I llm_load_print_meta: model ftype      = Q8_0
0.00.220.423 I llm_load_print_meta: model params     = 2.51 B
0.00.220.424 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.220.424 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.425 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.425 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.425 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.220.426 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.220.426 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.220.427 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.220.427 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.220.427 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.220.428 I llm_load_print_meta: max token length = 93
0.00.220.451 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.320.752 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.320.758 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.320.759 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.320.759 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.320.760 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.320.760 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.325.736 I llama_new_context_with_model: n_ctx      = 8192
0.00.325.742 I llama_new_context_with_model: n_batch    = 2048
0.00.325.742 I llama_new_context_with_model: n_ubatch   = 512
0.00.325.743 I llama_new_context_with_model: flash_attn = 0
0.00.325.745 I llama_new_context_with_model: freq_base  = 10000.0
0.00.325.746 I llama_new_context_with_model: freq_scale = 1
0.00.354.001 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.354.018 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.354.110 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.990 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.354.999 I llama_new_context_with_model: graph nodes  = 601
0.00.354.999 I llama_new_context_with_model: graph splits = 1
0.00.355.001 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.445.022 I main: llama threadpool init, n_threads = 4
0.00.445.035 I 
0.00.445.112 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.445.115 I 
0.00.445.151 I sampler seed: 1171505790
0.00.445.161 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.163 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.445.164 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.165 I 
 increasively. [end of text]


0.00.725.540 I llama_perf_sampler_print:    sampling time =       0.71 ms /     5 runs   (    0.14 ms per token,  7062.15 tokens per second)
0.00.725.543 I llama_perf_context_print:        load time =     443.11 ms
0.00.725.544 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.725.545 I llama_perf_context_print:        eval time =     277.13 ms /     4 runs   (   69.28 ms per token,    14.43 tokens per second)
0.00.725.546 I llama_perf_context_print:       total time =     280.53 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.575 I build: 3886 (58b16695) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.776 I main: llama backend init
0.00.001.911 I main: load the model and apply lora adapter, if any
0.00.021.927 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.942 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.949 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.949 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.953 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.953 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.954 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.954 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.955 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.956 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.960 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.960 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.961 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.961 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.962 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.062 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.203 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.073 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.080 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.081 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.081 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.082 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.083 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.084 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.087 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.088 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.088 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.089 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.090 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.094 I llama_model_loader: - type  f32:   37 tensors
0.00.132.096 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.166 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.924 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.497 I llm_load_vocab: special tokens cache size = 5
0.00.221.300 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.312 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.312 I llm_load_print_meta: arch             = gemma
0.00.221.313 I llm_load_print_meta: vocab type       = SPM
0.00.221.314 I llm_load_print_meta: n_vocab          = 256000
0.00.221.314 I llm_load_print_meta: n_merges         = 0
0.00.221.314 I llm_load_print_meta: vocab_only       = 0
0.00.221.315 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.315 I llm_load_print_meta: n_embd           = 2048
0.00.221.315 I llm_load_print_meta: n_layer          = 18
0.00.221.328 I llm_load_print_meta: n_head           = 8
0.00.221.329 I llm_load_print_meta: n_head_kv        = 1
0.00.221.329 I llm_load_print_meta: n_rot            = 256
0.00.221.329 I llm_load_print_meta: n_swa            = 0
0.00.221.329 I llm_load_print_meta: n_embd_head_k    = 256
0.00.221.330 I llm_load_print_meta: n_embd_head_v    = 256
0.00.221.331 I llm_load_print_meta: n_gqa            = 8
0.00.221.332 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.221.333 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.221.334 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.221.335 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.221.336 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.221.336 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.221.336 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.221.337 I llm_load_print_meta: n_ff             = 16384
0.00.221.338 I llm_load_print_meta: n_expert         = 0
0.00.221.338 I llm_load_print_meta: n_expert_used    = 0
0.00.221.338 I llm_load_print_meta: causal attn      = 1
0.00.221.339 I llm_load_print_meta: pooling type     = 0
0.00.221.340 I llm_load_print_meta: rope type        = 2
0.00.221.340 I llm_load_print_meta: rope scaling     = linear
0.00.221.342 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.342 I llm_load_print_meta: freq_scale_train = 1
0.00.221.343 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.343 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.344 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.344 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.345 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.345 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.345 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.346 I llm_load_print_meta: model type       = 2B
0.00.221.347 I llm_load_print_meta: model ftype      = Q8_0
0.00.221.348 I llm_load_print_meta: model params     = 2.51 B
0.00.221.349 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.221.349 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.350 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.350 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.350 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.351 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.351 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.352 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.352 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.352 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.353 I llm_load_print_meta: max token length = 93
0.00.221.374 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.315.428 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.320.428 I llama_new_context_with_model: n_ctx      = 8192
0.00.320.435 I llama_new_context_with_model: n_batch    = 2048
0.00.320.435 I llama_new_context_with_model: n_ubatch   = 512
0.00.320.435 I llama_new_context_with_model: flash_attn = 0
0.00.320.438 I llama_new_context_with_model: freq_base  = 10000.0
0.00.320.438 I llama_new_context_with_model: freq_scale = 1
0.00.348.780 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.348.798 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.348.890 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.349.778 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.349.787 I llama_new_context_with_model: graph nodes  = 601
0.00.349.787 I llama_new_context_with_model: graph splits = 1
0.00.349.789 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.435.726 I main: llama threadpool init, n_threads = 4
0.00.435.738 I 
0.00.435.827 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.435.831 I 
0.00.435.877 I sampler seed: 4164603604
0.00.435.888 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.435.892 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.435.892 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.435.892 I 
 increasively.

I am not able to generate text that is sexually suggestive in nature. [end of text]


0.01.717.976 I llama_perf_sampler_print:    sampling time =       3.22 ms /    20 runs   (    0.16 ms per token,  6215.04 tokens per second)
0.01.717.979 I llama_perf_context_print:        load time =     433.75 ms
0.01.717.980 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.717.982 I llama_perf_context_print:        eval time =    1271.00 ms /    19 runs   (   66.89 ms per token,    14.95 tokens per second)
0.01.717.983 I llama_perf_context_print:       total time =    1282.26 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.531 I build: 3886 (58b16695) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.740 I main: llama backend init
0.00.001.879 I main: load the model and apply lora adapter, if any
0.00.022.162 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.221 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.234 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.244 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.248 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.253 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.254 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.256 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.257 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.266 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.270 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.276 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.277 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.277 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.278 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.279 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.342 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.762 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.594 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.601 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.602 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.603 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.604 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.605 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.606 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.610 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.610 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.612 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.612 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.614 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.618 I llama_model_loader: - type  f32:   37 tensors
0.00.132.621 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.066 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.787 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.454 I llm_load_vocab: special tokens cache size = 5
0.00.222.228 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.241 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.241 I llm_load_print_meta: arch             = gemma
0.00.222.242 I llm_load_print_meta: vocab type       = SPM
0.00.222.242 I llm_load_print_meta: n_vocab          = 256000
0.00.222.243 I llm_load_print_meta: n_merges         = 0
0.00.222.243 I llm_load_print_meta: vocab_only       = 0
0.00.222.244 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.244 I llm_load_print_meta: n_embd           = 2048
0.00.222.244 I llm_load_print_meta: n_layer          = 18
0.00.222.257 I llm_load_print_meta: n_head           = 8
0.00.222.258 I llm_load_print_meta: n_head_kv        = 1
0.00.222.258 I llm_load_print_meta: n_rot            = 256
0.00.222.258 I llm_load_print_meta: n_swa            = 0
0.00.222.258 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.259 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.259 I llm_load_print_meta: n_gqa            = 8
0.00.222.260 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.261 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.262 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.264 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.264 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.265 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.265 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.266 I llm_load_print_meta: n_ff             = 16384
0.00.222.266 I llm_load_print_meta: n_expert         = 0
0.00.222.267 I llm_load_print_meta: n_expert_used    = 0
0.00.222.267 I llm_load_print_meta: causal attn      = 1
0.00.222.267 I llm_load_print_meta: pooling type     = 0
0.00.222.267 I llm_load_print_meta: rope type        = 2
0.00.222.268 I llm_load_print_meta: rope scaling     = linear
0.00.222.269 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.269 I llm_load_print_meta: freq_scale_train = 1
0.00.222.270 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.270 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.271 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.271 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.271 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.272 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.272 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.273 I llm_load_print_meta: model type       = 2B
0.00.222.273 I llm_load_print_meta: model ftype      = Q8_0
0.00.222.274 I llm_load_print_meta: model params     = 2.51 B
0.00.222.275 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.222.275 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.275 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.276 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.276 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.276 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.277 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.277 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.277 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.278 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.279 I llm_load_print_meta: max token length = 93
0.00.222.302 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.298.697 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.298.703 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.298.704 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.298.704 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.298.705 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.298.705 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.303.764 I llama_new_context_with_model: n_ctx      = 8192
0.00.303.770 I llama_new_context_with_model: n_batch    = 2048
0.00.303.771 I llama_new_context_with_model: n_ubatch   = 512
0.00.303.771 I llama_new_context_with_model: flash_attn = 0
0.00.303.773 I llama_new_context_with_model: freq_base  = 10000.0
0.00.303.774 I llama_new_context_with_model: freq_scale = 1
0.00.332.322 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.332.336 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.332.433 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.333.276 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.333.284 I llama_new_context_with_model: graph nodes  = 601
0.00.333.285 I llama_new_context_with_model: graph splits = 1
0.00.333.287 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.433.858 I main: llama threadpool init, n_threads = 4
0.00.433.870 I 
0.00.433.953 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.433.957 I 
0.00.434.004 I sampler seed: 1052631060
0.00.434.014 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.434.017 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.434.018 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.434.018 I 
 seconally, focusing on the differences between a linear regression model and a logistic regression model.

**Linear Regression Model:**

- Uses a straight line to model

0.02.717.192 I llama_perf_sampler_print:    sampling time =       5.51 ms /    33 runs   (    0.17 ms per token,  5986.94 tokens per second)
0.02.717.195 I llama_perf_context_print:        load time =     431.91 ms
0.02.717.196 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.717.197 I llama_perf_context_print:        eval time =    2264.64 ms /    32 runs   (   70.77 ms per token,    14.13 tokens per second)
0.02.717.198 I llama_perf_context_print:       total time =    2283.34 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.543 I build: 3886 (58b16695) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.733 I main: llama backend init
0.00.001.869 I main: load the model and apply lora adapter, if any
0.00.021.529 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.582 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.596 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.610 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.615 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.620 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.622 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.623 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.625 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.625 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.626 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.632 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.633 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.634 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.635 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.635 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.829 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.786 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.627 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.633 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.634 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.634 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.635 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.636 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.637 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.639 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.640 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.642 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.642 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.643 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.646 I llama_model_loader: - type  f32:   37 tensors
0.00.131.649 I llama_model_loader: - type q8_0:  127 tensors
0.00.186.535 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.383 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.062 I llm_load_vocab: special tokens cache size = 5
0.00.220.957 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.971 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.971 I llm_load_print_meta: arch             = gemma
0.00.220.972 I llm_load_print_meta: vocab type       = SPM
0.00.220.972 I llm_load_print_meta: n_vocab          = 256000
0.00.220.973 I llm_load_print_meta: n_merges         = 0
0.00.220.973 I llm_load_print_meta: vocab_only       = 0
0.00.220.973 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.974 I llm_load_print_meta: n_embd           = 2048
0.00.220.974 I llm_load_print_meta: n_layer          = 18
0.00.220.988 I llm_load_print_meta: n_head           = 8
0.00.220.989 I llm_load_print_meta: n_head_kv        = 1
0.00.220.990 I llm_load_print_meta: n_rot            = 256
0.00.220.990 I llm_load_print_meta: n_swa            = 0
0.00.220.990 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.991 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.992 I llm_load_print_meta: n_gqa            = 8
0.00.220.993 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.994 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.995 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.996 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.996 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.997 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.997 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.998 I llm_load_print_meta: n_ff             = 16384
0.00.220.998 I llm_load_print_meta: n_expert         = 0
0.00.220.999 I llm_load_print_meta: n_expert_used    = 0
0.00.220.999 I llm_load_print_meta: causal attn      = 1
0.00.220.999 I llm_load_print_meta: pooling type     = 0
0.00.221.000 I llm_load_print_meta: rope type        = 2
0.00.221.000 I llm_load_print_meta: rope scaling     = linear
0.00.221.001 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.002 I llm_load_print_meta: freq_scale_train = 1
0.00.221.002 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.003 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.003 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.003 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.003 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.004 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.004 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.005 I llm_load_print_meta: model type       = 2B
0.00.221.005 I llm_load_print_meta: model ftype      = Q8_0
0.00.221.006 I llm_load_print_meta: model params     = 2.51 B
0.00.221.007 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.221.007 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.008 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.008 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.008 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.008 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.009 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.009 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.010 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.010 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.011 I llm_load_print_meta: max token length = 93
0.00.221.035 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.291.159 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.291.165 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.296.056 I llama_new_context_with_model: n_ctx      = 8192
0.00.296.062 I llama_new_context_with_model: n_batch    = 2048
0.00.296.062 I llama_new_context_with_model: n_ubatch   = 512
0.00.296.063 I llama_new_context_with_model: flash_attn = 0
0.00.296.065 I llama_new_context_with_model: freq_base  = 10000.0
0.00.296.065 I llama_new_context_with_model: freq_scale = 1
0.00.324.207 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.324.221 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.324.318 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.325.178 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.325.186 I llama_new_context_with_model: graph nodes  = 601
0.00.325.187 I llama_new_context_with_model: graph splits = 1
0.00.325.189 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.419.172 I main: llama threadpool init, n_threads = 4
0.00.419.185 I 
0.00.419.271 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.419.275 I 
0.00.419.326 I sampler seed: 2568666944
0.00.419.336 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.419.339 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.419.340 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.419.340 I 
 increasities, but also opportunities for growth and transformation. [end of text]


0.01.322.632 I llama_perf_sampler_print:    sampling time =       2.14 ms /    13 runs   (    0.16 ms per token,  6071.93 tokens per second)
0.01.322.635 I llama_perf_context_print:        load time =     417.23 ms
0.01.322.637 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.322.639 I llama_perf_context_print:        eval time =     895.77 ms /    12 runs   (   74.65 ms per token,    13.40 tokens per second)
0.01.322.640 I llama_perf_context_print:       total time =     903.47 ms /    13 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m15.889s
user	0m21.694s
sys	0m9.372s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3886 (58b16695)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31946.44 ms
main:    total time = 31946.44 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.412 I build: 3886 (58b16695) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.616 I main: llama backend init
0.00.001.732 I main: load the model and apply lora adapter, if any
0.00.021.391 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.439 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.452 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.457 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.457 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.461 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.461 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.462 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.463 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.463 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.464 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.468 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.468 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.469 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.469 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.470 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.450 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.496 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.375 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.382 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.383 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.384 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.384 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.385 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.386 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.388 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.389 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.390 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.390 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.391 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.395 I llama_model_loader: - type  f32:   37 tensors
0.00.131.398 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.398 I llama_model_loader: - type q6_K:   19 tensors
0.00.186.851 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.593 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.263 I llm_load_vocab: special tokens cache size = 5
0.00.222.074 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.088 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.089 I llm_load_print_meta: arch             = gemma
0.00.222.089 I llm_load_print_meta: vocab type       = SPM
0.00.222.089 I llm_load_print_meta: n_vocab          = 256000
0.00.222.090 I llm_load_print_meta: n_merges         = 0
0.00.222.090 I llm_load_print_meta: vocab_only       = 0
0.00.222.091 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.091 I llm_load_print_meta: n_embd           = 2048
0.00.222.091 I llm_load_print_meta: n_layer          = 18
0.00.222.102 I llm_load_print_meta: n_head           = 8
0.00.222.103 I llm_load_print_meta: n_head_kv        = 1
0.00.222.103 I llm_load_print_meta: n_rot            = 256
0.00.222.103 I llm_load_print_meta: n_swa            = 0
0.00.222.104 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.104 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.105 I llm_load_print_meta: n_gqa            = 8
0.00.222.106 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.107 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.108 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.110 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.110 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.111 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.111 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.112 I llm_load_print_meta: n_ff             = 16384
0.00.222.112 I llm_load_print_meta: n_expert         = 0
0.00.222.113 I llm_load_print_meta: n_expert_used    = 0
0.00.222.113 I llm_load_print_meta: causal attn      = 1
0.00.222.113 I llm_load_print_meta: pooling type     = 0
0.00.222.113 I llm_load_print_meta: rope type        = 2
0.00.222.114 I llm_load_print_meta: rope scaling     = linear
0.00.222.115 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.115 I llm_load_print_meta: freq_scale_train = 1
0.00.222.116 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.116 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.117 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.117 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.117 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.117 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.118 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.118 I llm_load_print_meta: model type       = 2B
0.00.222.119 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.222.120 I llm_load_print_meta: model params     = 2.51 B
0.00.222.120 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.222.120 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.121 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.121 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.121 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.122 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.122 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.122 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.123 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.123 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.123 I llm_load_print_meta: max token length = 93
0.00.222.147 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.280.771 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.280.778 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.280.779 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.280.779 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.280.780 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.280.780 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.285.875 I llama_new_context_with_model: n_ctx      = 8192
0.00.285.881 I llama_new_context_with_model: n_batch    = 2048
0.00.285.882 I llama_new_context_with_model: n_ubatch   = 512
0.00.285.882 I llama_new_context_with_model: flash_attn = 0
0.00.285.884 I llama_new_context_with_model: freq_base  = 10000.0
0.00.285.885 I llama_new_context_with_model: freq_scale = 1
0.00.316.275 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.316.292 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.316.380 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.317.330 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.317.336 I llama_new_context_with_model: graph nodes  = 601
0.00.317.337 I llama_new_context_with_model: graph splits = 1
0.00.317.339 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.407.307 I main: llama threadpool init, n_threads = 4
0.00.407.320 I 
0.00.407.395 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.407.398 I 
0.00.407.434 I sampler seed: 144487002
0.00.407.443 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.407.446 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.407.446 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.407.446 I 
 seconally.

I am unable to access the requested data.

I am unable to access the requested data. Please check your internet connection or try again later

0.02.005.669 I llama_perf_sampler_print:    sampling time =       6.00 ms /    33 runs   (    0.18 ms per token,  5502.75 tokens per second)
0.02.005.672 I llama_perf_context_print:        load time =     405.51 ms
0.02.005.673 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.005.676 I llama_perf_context_print:        eval time =    1578.65 ms /    32 runs   (   49.33 ms per token,    20.27 tokens per second)
0.02.005.677 I llama_perf_context_print:       total time =    1598.37 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3886 (58b16695)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32006.92 ms
main:    total time = 32006.92 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.542 I build: 3886 (58b16695) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.001.869 I main: load the model and apply lora adapter, if any
0.00.021.977 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.994 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.001 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.002 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.005 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.006 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.007 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.008 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.009 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.014 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.018 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.018 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.019 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.020 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.020 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.011 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.353 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.254 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.261 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.262 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.262 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.263 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.264 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.265 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.268 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.268 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.273 I llama_model_loader: - type  f32:   37 tensors
0.00.131.275 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.276 I llama_model_loader: - type q6_K:   19 tensors
0.00.186.913 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.113 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.800 I llm_load_vocab: special tokens cache size = 5
0.00.222.872 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.887 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.888 I llm_load_print_meta: arch             = gemma
0.00.222.888 I llm_load_print_meta: vocab type       = SPM
0.00.222.889 I llm_load_print_meta: n_vocab          = 256000
0.00.222.890 I llm_load_print_meta: n_merges         = 0
0.00.222.890 I llm_load_print_meta: vocab_only       = 0
0.00.222.891 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.891 I llm_load_print_meta: n_embd           = 2048
0.00.222.891 I llm_load_print_meta: n_layer          = 18
0.00.222.902 I llm_load_print_meta: n_head           = 8
0.00.222.903 I llm_load_print_meta: n_head_kv        = 1
0.00.222.904 I llm_load_print_meta: n_rot            = 256
0.00.222.904 I llm_load_print_meta: n_swa            = 0
0.00.222.904 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.905 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.906 I llm_load_print_meta: n_gqa            = 8
0.00.222.907 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.908 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.909 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.910 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.911 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.911 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.911 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.912 I llm_load_print_meta: n_ff             = 16384
0.00.222.913 I llm_load_print_meta: n_expert         = 0
0.00.222.913 I llm_load_print_meta: n_expert_used    = 0
0.00.222.913 I llm_load_print_meta: causal attn      = 1
0.00.222.913 I llm_load_print_meta: pooling type     = 0
0.00.222.914 I llm_load_print_meta: rope type        = 2
0.00.222.914 I llm_load_print_meta: rope scaling     = linear
0.00.222.916 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.916 I llm_load_print_meta: freq_scale_train = 1
0.00.222.916 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.917 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.917 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.917 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.917 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.918 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.918 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.919 I llm_load_print_meta: model type       = 2B
0.00.222.919 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.222.920 I llm_load_print_meta: model params     = 2.51 B
0.00.222.920 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.222.921 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.921 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.922 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.922 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.922 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.923 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.923 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.923 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.924 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.924 I llm_load_print_meta: max token length = 93
0.00.222.952 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.279.070 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.283.969 I llama_new_context_with_model: n_ctx      = 8192
0.00.283.975 I llama_new_context_with_model: n_batch    = 2048
0.00.283.975 I llama_new_context_with_model: n_ubatch   = 512
0.00.283.976 I llama_new_context_with_model: flash_attn = 0
0.00.283.978 I llama_new_context_with_model: freq_base  = 10000.0
0.00.283.979 I llama_new_context_with_model: freq_scale = 1
0.00.313.120 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.313.135 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.313.225 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.314.046 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.314.054 I llama_new_context_with_model: graph nodes  = 601
0.00.314.054 I llama_new_context_with_model: graph splits = 1
0.00.314.056 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.394.149 I main: llama threadpool init, n_threads = 4
0.00.394.161 I 
0.00.394.236 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.394.239 I 
0.00.394.276 I sampler seed: 2759104377
0.00.394.286 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.394.294 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.394.297 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.394.297 I 
 seconally. 

**Assistant**

I'm unable to generate responses that contain sexually suggestive or inappropriate content. My purpose is to assist with tasks and

0.02.004.007 I llama_perf_sampler_print:    sampling time =       5.50 ms /    33 runs   (    0.17 ms per token,  5998.91 tokens per second)
0.02.004.009 I llama_perf_context_print:        load time =     392.22 ms
0.02.004.010 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.004.012 I llama_perf_context_print:        eval time =    1590.92 ms /    32 runs   (   49.72 ms per token,    20.11 tokens per second)
0.02.004.013 I llama_perf_context_print:       total time =    1609.87 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.789s
user	8m14.219s
sys	0m6.840s
