+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.592 I build: 3839 (589b48d4) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.782 I main: llama backend init
0.00.001.881 I main: load the model and apply lora adapter, if any
0.00.022.334 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.383 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.394 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.400 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.400 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.404 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.405 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.407 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.407 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.408 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.409 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.413 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.413 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.414 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.414 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.415 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.810 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.019 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.872 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.878 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.879 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.880 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.880 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.881 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.882 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.885 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.885 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.887 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.887 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.888 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.892 I llama_model_loader: - type  f32:   37 tensors
0.00.132.895 I llama_model_loader: - type q8_0:  127 tensors
0.00.189.820 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.204.568 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.205.276 I llm_load_vocab: special tokens cache size = 5
0.00.226.386 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.226.400 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.226.401 I llm_load_print_meta: arch             = gemma
0.00.226.402 I llm_load_print_meta: vocab type       = SPM
0.00.226.402 I llm_load_print_meta: n_vocab          = 256000
0.00.226.403 I llm_load_print_meta: n_merges         = 0
0.00.226.403 I llm_load_print_meta: vocab_only       = 0
0.00.226.403 I llm_load_print_meta: n_ctx_train      = 8192
0.00.226.404 I llm_load_print_meta: n_embd           = 2048
0.00.226.404 I llm_load_print_meta: n_layer          = 18
0.00.226.415 I llm_load_print_meta: n_head           = 8
0.00.226.416 I llm_load_print_meta: n_head_kv        = 1
0.00.226.416 I llm_load_print_meta: n_rot            = 256
0.00.226.417 I llm_load_print_meta: n_swa            = 0
0.00.226.417 I llm_load_print_meta: n_embd_head_k    = 256
0.00.226.417 I llm_load_print_meta: n_embd_head_v    = 256
0.00.226.418 I llm_load_print_meta: n_gqa            = 8
0.00.226.419 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.226.420 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.226.421 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.226.422 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.226.423 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.226.423 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.226.423 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.226.424 I llm_load_print_meta: n_ff             = 16384
0.00.226.424 I llm_load_print_meta: n_expert         = 0
0.00.226.425 I llm_load_print_meta: n_expert_used    = 0
0.00.226.425 I llm_load_print_meta: causal attn      = 1
0.00.226.425 I llm_load_print_meta: pooling type     = 0
0.00.226.425 I llm_load_print_meta: rope type        = 2
0.00.226.425 I llm_load_print_meta: rope scaling     = linear
0.00.226.427 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.226.428 I llm_load_print_meta: freq_scale_train = 1
0.00.226.428 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.226.428 I llm_load_print_meta: rope_finetuned   = unknown
0.00.226.429 I llm_load_print_meta: ssm_d_conv       = 0
0.00.226.429 I llm_load_print_meta: ssm_d_inner      = 0
0.00.226.429 I llm_load_print_meta: ssm_d_state      = 0
0.00.226.430 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.226.430 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.226.430 I llm_load_print_meta: model type       = 2B
0.00.226.431 I llm_load_print_meta: model ftype      = Q8_0
0.00.226.432 I llm_load_print_meta: model params     = 2.51 B
0.00.226.432 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.226.433 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.226.433 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.226.434 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.226.434 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.226.434 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.226.435 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.226.435 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.226.435 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.226.436 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.226.436 I llm_load_print_meta: max token length = 93
0.00.226.453 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.324.655 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.324.662 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.324.663 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.324.664 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.324.664 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.324.665 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.330.907 I llama_new_context_with_model: n_ctx      = 8192
0.00.330.913 I llama_new_context_with_model: n_batch    = 2048
0.00.330.914 I llama_new_context_with_model: n_ubatch   = 512
0.00.330.914 I llama_new_context_with_model: flash_attn = 0
0.00.330.916 I llama_new_context_with_model: freq_base  = 10000.0
0.00.330.917 I llama_new_context_with_model: freq_scale = 1
0.00.360.615 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.360.630 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.360.719 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.361.567 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.361.576 I llama_new_context_with_model: graph nodes  = 601
0.00.361.576 I llama_new_context_with_model: graph splits = 1
0.00.361.578 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.239 I main: llama threadpool init, n_threads = 4
0.00.452.250 I 
0.00.452.333 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.452.336 I 
0.00.452.371 I sampler seed: 3658100559
0.00.452.380 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.383 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.452.384 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.384 I 
 increasities and tragedies, and explore the nature of human suffering.

**Answer:**

**The human experience encompasses a wide spectrum of emotions, challenges, and

0.02.679.209 I llama_perf_sampler_print:    sampling time =       4.91 ms /    33 runs   (    0.15 ms per token,  6727.83 tokens per second)
0.02.679.212 I llama_perf_context_print:        load time =     450.34 ms
0.02.679.213 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.679.214 I llama_perf_context_print:        eval time =    2209.26 ms /    32 runs   (   69.04 ms per token,    14.48 tokens per second)
0.02.679.215 I llama_perf_context_print:       total time =    2226.98 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.536 I build: 3839 (589b48d4) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.737 I main: llama backend init
0.00.001.830 I main: load the model and apply lora adapter, if any
0.00.021.856 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.870 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.877 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.878 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.882 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.883 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.884 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.884 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.885 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.885 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.890 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.890 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.891 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.892 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.892 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.489 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.083 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.945 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.951 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.952 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.953 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.954 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.954 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.955 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.958 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.959 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.960 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.960 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.961 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.965 I llama_model_loader: - type  f32:   37 tensors
0.00.132.967 I llama_model_loader: - type q8_0:  127 tensors
0.00.190.667 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.204.491 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.205.220 I llm_load_vocab: special tokens cache size = 5
0.00.226.197 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.226.211 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.226.211 I llm_load_print_meta: arch             = gemma
0.00.226.212 I llm_load_print_meta: vocab type       = SPM
0.00.226.213 I llm_load_print_meta: n_vocab          = 256000
0.00.226.213 I llm_load_print_meta: n_merges         = 0
0.00.226.213 I llm_load_print_meta: vocab_only       = 0
0.00.226.214 I llm_load_print_meta: n_ctx_train      = 8192
0.00.226.214 I llm_load_print_meta: n_embd           = 2048
0.00.226.215 I llm_load_print_meta: n_layer          = 18
0.00.226.227 I llm_load_print_meta: n_head           = 8
0.00.226.228 I llm_load_print_meta: n_head_kv        = 1
0.00.226.228 I llm_load_print_meta: n_rot            = 256
0.00.226.229 I llm_load_print_meta: n_swa            = 0
0.00.226.229 I llm_load_print_meta: n_embd_head_k    = 256
0.00.226.229 I llm_load_print_meta: n_embd_head_v    = 256
0.00.226.230 I llm_load_print_meta: n_gqa            = 8
0.00.226.231 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.226.232 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.226.233 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.226.234 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.226.235 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.226.235 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.226.236 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.226.237 I llm_load_print_meta: n_ff             = 16384
0.00.226.237 I llm_load_print_meta: n_expert         = 0
0.00.226.237 I llm_load_print_meta: n_expert_used    = 0
0.00.226.237 I llm_load_print_meta: causal attn      = 1
0.00.226.238 I llm_load_print_meta: pooling type     = 0
0.00.226.238 I llm_load_print_meta: rope type        = 2
0.00.226.238 I llm_load_print_meta: rope scaling     = linear
0.00.226.240 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.226.240 I llm_load_print_meta: freq_scale_train = 1
0.00.226.241 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.226.241 I llm_load_print_meta: rope_finetuned   = unknown
0.00.226.242 I llm_load_print_meta: ssm_d_conv       = 0
0.00.226.242 I llm_load_print_meta: ssm_d_inner      = 0
0.00.226.242 I llm_load_print_meta: ssm_d_state      = 0
0.00.226.242 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.226.243 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.226.243 I llm_load_print_meta: model type       = 2B
0.00.226.244 I llm_load_print_meta: model ftype      = Q8_0
0.00.226.245 I llm_load_print_meta: model params     = 2.51 B
0.00.226.246 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.226.246 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.226.246 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.226.248 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.226.249 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.226.249 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.226.250 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.226.253 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.226.254 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.226.255 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.226.255 I llm_load_print_meta: max token length = 93
0.00.226.273 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.320.697 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.325.829 I llama_new_context_with_model: n_ctx      = 8192
0.00.325.836 I llama_new_context_with_model: n_batch    = 2048
0.00.325.836 I llama_new_context_with_model: n_ubatch   = 512
0.00.325.837 I llama_new_context_with_model: flash_attn = 0
0.00.325.839 I llama_new_context_with_model: freq_base  = 10000.0
0.00.325.840 I llama_new_context_with_model: freq_scale = 1
0.00.354.787 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.354.801 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.354.893 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.768 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.355.775 I llama_new_context_with_model: graph nodes  = 601
0.00.355.776 I llama_new_context_with_model: graph splits = 1
0.00.355.777 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.442.766 I main: llama threadpool init, n_threads = 4
0.00.442.777 I 
0.00.442.851 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.442.854 I 
0.00.442.890 I sampler seed: 2973683570
0.00.442.900 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.442.902 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.442.903 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.442.903 I 
 increasities
I am unable to generate responses that are sexually suggestive or sexually explicit in nature. My purpose is to assist with tasks and questions that are within the

0.02.599.764 I llama_perf_sampler_print:    sampling time =       4.73 ms /    33 runs   (    0.14 ms per token,  6970.85 tokens per second)
0.02.599.766 I llama_perf_context_print:        load time =     440.92 ms
0.02.599.768 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.599.770 I llama_perf_context_print:        eval time =    2138.70 ms /    32 runs   (   66.83 ms per token,    14.96 tokens per second)
0.02.599.771 I llama_perf_context_print:       total time =    2157.01 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.546 I build: 3839 (589b48d4) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.769 I main: llama backend init
0.00.001.928 I main: load the model and apply lora adapter, if any
0.00.027.891 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.027.953 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.027.964 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.970 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.974 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.979 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.980 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.981 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.985 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.986 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.987 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.993 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.993 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.994 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.995 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.997 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.775 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.138.546 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.145.466 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.145.473 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.145.473 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.145.474 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.145.475 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.145.476 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.145.476 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.145.479 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.145.480 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.145.480 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.145.481 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.145.481 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.145.485 I llama_model_loader: - type  f32:   37 tensors
0.00.145.488 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.707 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.217.871 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.218.544 I llm_load_vocab: special tokens cache size = 5
0.00.239.419 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.239.433 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.239.433 I llm_load_print_meta: arch             = gemma
0.00.239.434 I llm_load_print_meta: vocab type       = SPM
0.00.239.435 I llm_load_print_meta: n_vocab          = 256000
0.00.239.435 I llm_load_print_meta: n_merges         = 0
0.00.239.435 I llm_load_print_meta: vocab_only       = 0
0.00.239.436 I llm_load_print_meta: n_ctx_train      = 8192
0.00.239.436 I llm_load_print_meta: n_embd           = 2048
0.00.239.436 I llm_load_print_meta: n_layer          = 18
0.00.239.449 I llm_load_print_meta: n_head           = 8
0.00.239.450 I llm_load_print_meta: n_head_kv        = 1
0.00.239.450 I llm_load_print_meta: n_rot            = 256
0.00.239.450 I llm_load_print_meta: n_swa            = 0
0.00.239.450 I llm_load_print_meta: n_embd_head_k    = 256
0.00.239.451 I llm_load_print_meta: n_embd_head_v    = 256
0.00.239.452 I llm_load_print_meta: n_gqa            = 8
0.00.239.453 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.239.454 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.239.454 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.239.455 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.239.456 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.239.456 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.239.456 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.239.457 I llm_load_print_meta: n_ff             = 16384
0.00.239.457 I llm_load_print_meta: n_expert         = 0
0.00.239.458 I llm_load_print_meta: n_expert_used    = 0
0.00.239.458 I llm_load_print_meta: causal attn      = 1
0.00.239.458 I llm_load_print_meta: pooling type     = 0
0.00.239.458 I llm_load_print_meta: rope type        = 2
0.00.239.459 I llm_load_print_meta: rope scaling     = linear
0.00.239.460 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.239.460 I llm_load_print_meta: freq_scale_train = 1
0.00.239.461 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.239.461 I llm_load_print_meta: rope_finetuned   = unknown
0.00.239.462 I llm_load_print_meta: ssm_d_conv       = 0
0.00.239.462 I llm_load_print_meta: ssm_d_inner      = 0
0.00.239.462 I llm_load_print_meta: ssm_d_state      = 0
0.00.239.462 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.239.463 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.239.463 I llm_load_print_meta: model type       = 2B
0.00.239.464 I llm_load_print_meta: model ftype      = Q8_0
0.00.239.464 I llm_load_print_meta: model params     = 2.51 B
0.00.239.465 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.239.465 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.239.466 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.239.466 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.239.466 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.239.467 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.239.467 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.239.468 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.239.468 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.239.469 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.239.469 I llm_load_print_meta: max token length = 93
0.00.239.486 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.316.200 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.316.208 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.316.209 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.316.210 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.316.211 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.316.212 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.325.231 I llama_new_context_with_model: n_ctx      = 8192
0.00.325.237 I llama_new_context_with_model: n_batch    = 2048
0.00.325.237 I llama_new_context_with_model: n_ubatch   = 512
0.00.325.238 I llama_new_context_with_model: flash_attn = 0
0.00.325.242 I llama_new_context_with_model: freq_base  = 10000.0
0.00.325.243 I llama_new_context_with_model: freq_scale = 1
0.00.353.836 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.353.852 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.353.946 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.803 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.354.810 I llama_new_context_with_model: graph nodes  = 601
0.00.354.811 I llama_new_context_with_model: graph splits = 1
0.00.354.812 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.448.085 I main: llama threadpool init, n_threads = 4
0.00.448.098 I 
0.00.448.174 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.448.177 I 
0.00.448.216 I sampler seed: 4240310286
0.00.448.226 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.448.229 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.448.229 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.448.229 I 
 increamically.

A scientist observes a cell with a circular membrane and distinct nucleolus. What type of cell is it?

a) Mitochondria
b

0.02.703.174 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7007.86 tokens per second)
0.02.703.176 I llama_perf_context_print:        load time =     446.14 ms
0.02.703.177 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.703.179 I llama_perf_context_print:        eval time =    2236.63 ms /    32 runs   (   69.89 ms per token,    14.31 tokens per second)
0.02.703.179 I llama_perf_context_print:       total time =    2255.10 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.653 I build: 3839 (589b48d4) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.885 I main: llama backend init
0.00.002.180 I main: load the model and apply lora adapter, if any
0.00.022.273 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.319 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.330 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.340 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.341 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.345 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.345 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.346 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.347 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.347 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.348 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.353 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.354 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.354 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.355 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.355 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.439 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.726 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.644 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.651 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.652 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.652 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.653 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.654 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.655 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.658 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.659 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.660 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.661 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.661 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.665 I llama_model_loader: - type  f32:   37 tensors
0.00.133.668 I llama_model_loader: - type q8_0:  127 tensors
0.00.190.531 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.203.796 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.204.474 I llm_load_vocab: special tokens cache size = 5
0.00.225.279 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.225.290 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.225.291 I llm_load_print_meta: arch             = gemma
0.00.225.291 I llm_load_print_meta: vocab type       = SPM
0.00.225.292 I llm_load_print_meta: n_vocab          = 256000
0.00.225.292 I llm_load_print_meta: n_merges         = 0
0.00.225.292 I llm_load_print_meta: vocab_only       = 0
0.00.225.293 I llm_load_print_meta: n_ctx_train      = 8192
0.00.225.293 I llm_load_print_meta: n_embd           = 2048
0.00.225.293 I llm_load_print_meta: n_layer          = 18
0.00.225.306 I llm_load_print_meta: n_head           = 8
0.00.225.307 I llm_load_print_meta: n_head_kv        = 1
0.00.225.308 I llm_load_print_meta: n_rot            = 256
0.00.225.308 I llm_load_print_meta: n_swa            = 0
0.00.225.308 I llm_load_print_meta: n_embd_head_k    = 256
0.00.225.309 I llm_load_print_meta: n_embd_head_v    = 256
0.00.225.309 I llm_load_print_meta: n_gqa            = 8
0.00.225.310 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.225.311 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.225.313 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.225.314 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.225.314 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.225.315 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.225.315 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.225.316 I llm_load_print_meta: n_ff             = 16384
0.00.225.317 I llm_load_print_meta: n_expert         = 0
0.00.225.317 I llm_load_print_meta: n_expert_used    = 0
0.00.225.317 I llm_load_print_meta: causal attn      = 1
0.00.225.317 I llm_load_print_meta: pooling type     = 0
0.00.225.318 I llm_load_print_meta: rope type        = 2
0.00.225.318 I llm_load_print_meta: rope scaling     = linear
0.00.225.319 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.225.320 I llm_load_print_meta: freq_scale_train = 1
0.00.225.320 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.225.321 I llm_load_print_meta: rope_finetuned   = unknown
0.00.225.321 I llm_load_print_meta: ssm_d_conv       = 0
0.00.225.321 I llm_load_print_meta: ssm_d_inner      = 0
0.00.225.321 I llm_load_print_meta: ssm_d_state      = 0
0.00.225.322 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.225.322 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.225.322 I llm_load_print_meta: model type       = 2B
0.00.225.323 I llm_load_print_meta: model ftype      = Q8_0
0.00.225.324 I llm_load_print_meta: model params     = 2.51 B
0.00.225.324 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.225.325 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.225.325 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.225.325 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.225.326 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.225.326 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.225.326 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.225.327 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.225.327 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.225.328 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.225.328 I llm_load_print_meta: max token length = 93
0.00.225.352 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.296.144 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.296.152 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.301.079 I llama_new_context_with_model: n_ctx      = 8192
0.00.301.085 I llama_new_context_with_model: n_batch    = 2048
0.00.301.085 I llama_new_context_with_model: n_ubatch   = 512
0.00.301.086 I llama_new_context_with_model: flash_attn = 0
0.00.301.088 I llama_new_context_with_model: freq_base  = 10000.0
0.00.301.088 I llama_new_context_with_model: freq_scale = 1
0.00.330.636 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.330.652 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.330.740 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.331.592 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.331.599 I llama_new_context_with_model: graph nodes  = 601
0.00.331.599 I llama_new_context_with_model: graph splits = 1
0.00.331.601 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.427.535 I main: llama threadpool init, n_threads = 4
0.00.427.547 I 
0.00.427.631 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.427.634 I 
0.00.427.671 I sampler seed: 3795062365
0.00.427.679 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.427.687 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.427.688 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.427.689 I 
 increably.

I'm not sure if you're trying to be sarcastic or if you're just trying to be funny. Either way, your

0.02.845.603 I llama_perf_sampler_print:    sampling time =       4.80 ms /    33 runs   (    0.15 ms per token,  6867.85 tokens per second)
0.02.845.606 I llama_perf_context_print:        load time =     425.34 ms
0.02.845.608 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.845.609 I llama_perf_context_print:        eval time =    2399.29 ms /    32 runs   (   74.98 ms per token,    13.34 tokens per second)
0.02.845.610 I llama_perf_context_print:       total time =    2418.08 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.276s
user	0m38.902s
sys	0m9.393s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3839 (589b48d4)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31954.05 ms
main:    total time = 31954.05 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.570 I build: 3839 (589b48d4) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.806 I main: llama backend init
0.00.001.981 I main: load the model and apply lora adapter, if any
0.00.021.681 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.744 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.752 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.757 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.758 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.762 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.763 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.765 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.766 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.767 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.768 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.772 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.773 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.774 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.774 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.775 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.984 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.335 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.264 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.271 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.272 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.273 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.273 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.274 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.275 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.278 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.278 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.279 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.279 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.280 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.284 I llama_model_loader: - type  f32:   37 tensors
0.00.132.287 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.288 I llama_model_loader: - type q6_K:   19 tensors
0.00.192.346 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.208.236 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.208.998 I llm_load_vocab: special tokens cache size = 5
0.00.230.109 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.123 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.124 I llm_load_print_meta: arch             = gemma
0.00.230.124 I llm_load_print_meta: vocab type       = SPM
0.00.230.125 I llm_load_print_meta: n_vocab          = 256000
0.00.230.126 I llm_load_print_meta: n_merges         = 0
0.00.230.126 I llm_load_print_meta: vocab_only       = 0
0.00.230.126 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.127 I llm_load_print_meta: n_embd           = 2048
0.00.230.127 I llm_load_print_meta: n_layer          = 18
0.00.230.140 I llm_load_print_meta: n_head           = 8
0.00.230.142 I llm_load_print_meta: n_head_kv        = 1
0.00.230.142 I llm_load_print_meta: n_rot            = 256
0.00.230.143 I llm_load_print_meta: n_swa            = 0
0.00.230.143 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.144 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.146 I llm_load_print_meta: n_gqa            = 8
0.00.230.150 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.152 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.153 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.154 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.155 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.156 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.157 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.159 I llm_load_print_meta: n_ff             = 16384
0.00.230.159 I llm_load_print_meta: n_expert         = 0
0.00.230.160 I llm_load_print_meta: n_expert_used    = 0
0.00.230.160 I llm_load_print_meta: causal attn      = 1
0.00.230.161 I llm_load_print_meta: pooling type     = 0
0.00.230.161 I llm_load_print_meta: rope type        = 2
0.00.230.162 I llm_load_print_meta: rope scaling     = linear
0.00.230.164 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.165 I llm_load_print_meta: freq_scale_train = 1
0.00.230.166 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.167 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.168 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.168 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.169 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.169 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.170 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.170 I llm_load_print_meta: model type       = 2B
0.00.230.171 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.230.172 I llm_load_print_meta: model params     = 2.51 B
0.00.230.174 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.230.174 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.175 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.176 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.176 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.177 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.178 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.179 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.179 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.180 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.181 I llm_load_print_meta: max token length = 93
0.00.230.212 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.288.458 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.288.466 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.288.467 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.288.467 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.288.468 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.288.469 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.294.328 I llama_new_context_with_model: n_ctx      = 8192
0.00.294.334 I llama_new_context_with_model: n_batch    = 2048
0.00.294.334 I llama_new_context_with_model: n_ubatch   = 512
0.00.294.335 I llama_new_context_with_model: flash_attn = 0
0.00.294.337 I llama_new_context_with_model: freq_base  = 10000.0
0.00.294.338 I llama_new_context_with_model: freq_scale = 1
0.00.322.701 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.322.717 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.322.819 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.323.681 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.323.688 I llama_new_context_with_model: graph nodes  = 601
0.00.323.689 I llama_new_context_with_model: graph splits = 1
0.00.323.690 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.404.408 I main: llama threadpool init, n_threads = 4
0.00.404.421 I 
0.00.404.510 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.404.513 I 
0.00.404.556 I sampler seed: 1299925451
0.00.404.566 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.404.569 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.404.569 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.404.570 I 
 increasively. 😅 [end of text]


0.00.653.886 I llama_perf_sampler_print:    sampling time =       0.75 ms /     6 runs   (    0.12 ms per token,  8021.39 tokens per second)
0.00.653.888 I llama_perf_context_print:        load time =     402.41 ms
0.00.653.889 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.653.890 I llama_perf_context_print:        eval time =     245.62 ms /     5 runs   (   49.12 ms per token,    20.36 tokens per second)
0.00.653.891 I llama_perf_context_print:       total time =     249.49 ms /     6 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3839 (589b48d4)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32063.64 ms
main:    total time = 32063.64 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.513 I build: 3839 (589b48d4) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.735 I main: llama backend init
0.00.001.824 I main: load the model and apply lora adapter, if any
0.00.021.440 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.454 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.460 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.461 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.465 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.465 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.466 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.467 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.467 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.468 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.471 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.472 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.472 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.473 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.473 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.012 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.975 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.796 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.802 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.803 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.804 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.804 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.805 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.806 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.808 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.808 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.811 I llama_model_loader: - type  f32:   37 tensors
0.00.131.813 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.813 I llama_model_loader: - type q6_K:   19 tensors
0.00.186.814 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.228 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.854 I llm_load_vocab: special tokens cache size = 5
0.00.221.861 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.873 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.874 I llm_load_print_meta: arch             = gemma
0.00.221.874 I llm_load_print_meta: vocab type       = SPM
0.00.221.875 I llm_load_print_meta: n_vocab          = 256000
0.00.221.876 I llm_load_print_meta: n_merges         = 0
0.00.221.876 I llm_load_print_meta: vocab_only       = 0
0.00.221.877 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.877 I llm_load_print_meta: n_embd           = 2048
0.00.221.877 I llm_load_print_meta: n_layer          = 18
0.00.221.889 I llm_load_print_meta: n_head           = 8
0.00.221.891 I llm_load_print_meta: n_head_kv        = 1
0.00.221.891 I llm_load_print_meta: n_rot            = 256
0.00.221.892 I llm_load_print_meta: n_swa            = 0
0.00.221.892 I llm_load_print_meta: n_embd_head_k    = 256
0.00.221.893 I llm_load_print_meta: n_embd_head_v    = 256
0.00.221.894 I llm_load_print_meta: n_gqa            = 8
0.00.221.895 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.221.896 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.221.897 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.221.898 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.221.899 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.221.900 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.221.900 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.221.901 I llm_load_print_meta: n_ff             = 16384
0.00.221.901 I llm_load_print_meta: n_expert         = 0
0.00.221.902 I llm_load_print_meta: n_expert_used    = 0
0.00.221.902 I llm_load_print_meta: causal attn      = 1
0.00.221.903 I llm_load_print_meta: pooling type     = 0
0.00.221.903 I llm_load_print_meta: rope type        = 2
0.00.221.904 I llm_load_print_meta: rope scaling     = linear
0.00.221.906 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.906 I llm_load_print_meta: freq_scale_train = 1
0.00.221.907 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.908 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.908 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.909 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.909 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.909 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.910 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.910 I llm_load_print_meta: model type       = 2B
0.00.221.911 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.221.912 I llm_load_print_meta: model params     = 2.51 B
0.00.221.912 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.221.913 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.914 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.914 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.914 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.915 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.916 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.917 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.917 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.918 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.919 I llm_load_print_meta: max token length = 93
0.00.221.942 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.279.366 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.284.203 I llama_new_context_with_model: n_ctx      = 8192
0.00.284.209 I llama_new_context_with_model: n_batch    = 2048
0.00.284.210 I llama_new_context_with_model: n_ubatch   = 512
0.00.284.210 I llama_new_context_with_model: flash_attn = 0
0.00.284.212 I llama_new_context_with_model: freq_base  = 10000.0
0.00.284.213 I llama_new_context_with_model: freq_scale = 1
0.00.312.909 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.312.924 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.313.018 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.313.848 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.313.856 I llama_new_context_with_model: graph nodes  = 601
0.00.313.856 I llama_new_context_with_model: graph splits = 1
0.00.313.858 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.393.790 I main: llama threadpool init, n_threads = 4
0.00.393.802 I 
0.00.393.877 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.393.880 I 
0.00.393.920 I sampler seed: 1141451508
0.00.393.929 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.393.932 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.393.932 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.393.932 I 
 guaranteing, "I'm so scared, I can't even think straight."

This statement indicates the individual is experiencing a heightened degree of emotional stress

0.01.963.965 I llama_perf_sampler_print:    sampling time =       4.65 ms /    33 runs   (    0.14 ms per token,  7096.77 tokens per second)
0.01.963.967 I llama_perf_context_print:        load time =     391.95 ms
0.01.963.968 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.963.969 I llama_perf_context_print:        eval time =    1552.96 ms /    32 runs   (   48.53 ms per token,    20.61 tokens per second)
0.01.963.970 I llama_perf_context_print:       total time =    1570.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m9.506s
user	8m8.664s
sys	0m6.835s
