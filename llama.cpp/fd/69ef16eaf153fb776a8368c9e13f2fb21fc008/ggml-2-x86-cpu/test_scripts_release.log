+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.468 I build: 3911 (fd69ef16) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.691 I main: llama backend init
0.00.001.835 I main: load the model and apply lora adapter, if any
0.00.022.288 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.354 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.361 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.367 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.368 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.374 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.378 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.379 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.380 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.381 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.381 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.387 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.388 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.390 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.391 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.392 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.769 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.341 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.215 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.223 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.223 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.224 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.225 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.226 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.226 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.229 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.229 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.230 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.230 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.231 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.235 I llama_model_loader: - type  f32:   37 tensors
0.00.133.238 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.816 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.340 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.019 I llm_load_vocab: special tokens cache size = 5
0.00.265.861 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.877 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.877 I llm_load_print_meta: arch             = gemma
0.00.265.878 I llm_load_print_meta: vocab type       = SPM
0.00.265.879 I llm_load_print_meta: n_vocab          = 256000
0.00.265.879 I llm_load_print_meta: n_merges         = 0
0.00.265.879 I llm_load_print_meta: vocab_only       = 0
0.00.265.880 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.880 I llm_load_print_meta: n_embd           = 2048
0.00.265.880 I llm_load_print_meta: n_layer          = 18
0.00.265.892 I llm_load_print_meta: n_head           = 8
0.00.265.892 I llm_load_print_meta: n_head_kv        = 1
0.00.265.893 I llm_load_print_meta: n_rot            = 256
0.00.265.893 I llm_load_print_meta: n_swa            = 0
0.00.265.893 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.894 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.895 I llm_load_print_meta: n_gqa            = 8
0.00.265.896 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.897 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.898 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.900 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.900 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.902 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.902 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.904 I llm_load_print_meta: n_ff             = 16384
0.00.265.905 I llm_load_print_meta: n_expert         = 0
0.00.265.905 I llm_load_print_meta: n_expert_used    = 0
0.00.265.906 I llm_load_print_meta: causal attn      = 1
0.00.265.907 I llm_load_print_meta: pooling type     = 0
0.00.265.907 I llm_load_print_meta: rope type        = 2
0.00.265.909 I llm_load_print_meta: rope scaling     = linear
0.00.265.915 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.915 I llm_load_print_meta: freq_scale_train = 1
0.00.265.916 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.916 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.917 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.917 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.918 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.918 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.919 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.920 I llm_load_print_meta: model type       = 2B
0.00.265.921 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.922 I llm_load_print_meta: model params     = 2.51 B
0.00.265.923 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.924 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.925 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.926 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.926 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.927 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.928 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.928 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.929 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.930 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.931 I llm_load_print_meta: max token length = 93
0.00.265.953 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.366.089 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.366.095 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.366.096 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.366.096 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.366.097 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.366.097 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.371.202 I llama_new_context_with_model: n_ctx      = 8192
0.00.371.209 I llama_new_context_with_model: n_batch    = 2048
0.00.371.209 I llama_new_context_with_model: n_ubatch   = 512
0.00.371.210 I llama_new_context_with_model: flash_attn = 0
0.00.371.212 I llama_new_context_with_model: freq_base  = 10000.0
0.00.371.212 I llama_new_context_with_model: freq_scale = 1
0.00.401.032 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.401.049 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.401.151 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.402.050 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.402.058 I llama_new_context_with_model: graph nodes  = 601
0.00.402.059 I llama_new_context_with_model: graph splits = 1
0.00.402.060 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.492.529 I main: llama threadpool init, n_threads = 4
0.00.492.540 I 
0.00.492.632 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.492.636 I 
0.00.492.676 I sampler seed: 321189029
0.00.492.686 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.492.689 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.492.690 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.492.690 I 
 increasels, but the trolls are relentless.

**What is the solution?**

The provided text does not contain any information regarding a solution, so I

0.02.731.249 I llama_perf_sampler_print:    sampling time =       4.89 ms /    33 runs   (    0.15 ms per token,  6747.09 tokens per second)
0.02.731.252 I llama_perf_context_print:        load time =     490.67 ms
0.02.731.253 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.731.255 I llama_perf_context_print:        eval time =    2220.88 ms /    32 runs   (   69.40 ms per token,    14.41 tokens per second)
0.02.731.256 I llama_perf_context_print:       total time =    2238.73 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.574 I build: 3911 (fd69ef16) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.001.887 I main: load the model and apply lora adapter, if any
0.00.021.949 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.964 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.971 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.972 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.977 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.977 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.978 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.979 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.979 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.980 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.986 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.986 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.987 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.987 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.988 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.948 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.702 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.600 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.607 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.608 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.608 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.609 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.610 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.611 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.614 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.615 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.616 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.617 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.617 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.620 I llama_model_loader: - type  f32:   37 tensors
0.00.132.623 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.659 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.248.840 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.632 I llm_load_vocab: special tokens cache size = 5
0.00.270.757 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.775 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.775 I llm_load_print_meta: arch             = gemma
0.00.270.776 I llm_load_print_meta: vocab type       = SPM
0.00.270.776 I llm_load_print_meta: n_vocab          = 256000
0.00.270.777 I llm_load_print_meta: n_merges         = 0
0.00.270.777 I llm_load_print_meta: vocab_only       = 0
0.00.270.778 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.778 I llm_load_print_meta: n_embd           = 2048
0.00.270.778 I llm_load_print_meta: n_layer          = 18
0.00.270.791 I llm_load_print_meta: n_head           = 8
0.00.270.792 I llm_load_print_meta: n_head_kv        = 1
0.00.270.792 I llm_load_print_meta: n_rot            = 256
0.00.270.792 I llm_load_print_meta: n_swa            = 0
0.00.270.793 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.793 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.795 I llm_load_print_meta: n_gqa            = 8
0.00.270.796 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.797 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.798 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.799 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.799 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.800 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.800 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.801 I llm_load_print_meta: n_ff             = 16384
0.00.270.801 I llm_load_print_meta: n_expert         = 0
0.00.270.801 I llm_load_print_meta: n_expert_used    = 0
0.00.270.802 I llm_load_print_meta: causal attn      = 1
0.00.270.802 I llm_load_print_meta: pooling type     = 0
0.00.270.802 I llm_load_print_meta: rope type        = 2
0.00.270.803 I llm_load_print_meta: rope scaling     = linear
0.00.270.804 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.805 I llm_load_print_meta: freq_scale_train = 1
0.00.270.805 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.805 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.806 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.806 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.806 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.806 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.807 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.807 I llm_load_print_meta: model type       = 2B
0.00.270.808 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.808 I llm_load_print_meta: model params     = 2.51 B
0.00.270.809 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.809 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.810 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.810 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.811 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.811 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.811 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.812 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.812 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.813 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.813 I llm_load_print_meta: max token length = 93
0.00.270.835 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.365.623 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.370.719 I llama_new_context_with_model: n_ctx      = 8192
0.00.370.726 I llama_new_context_with_model: n_batch    = 2048
0.00.370.727 I llama_new_context_with_model: n_ubatch   = 512
0.00.370.727 I llama_new_context_with_model: flash_attn = 0
0.00.370.729 I llama_new_context_with_model: freq_base  = 10000.0
0.00.370.730 I llama_new_context_with_model: freq_scale = 1
0.00.400.665 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.400.682 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.400.779 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.401.641 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.401.649 I llama_new_context_with_model: graph nodes  = 601
0.00.401.649 I llama_new_context_with_model: graph splits = 1
0.00.401.651 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.489.809 I main: llama threadpool init, n_threads = 4
0.00.489.822 I 
0.00.489.899 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.489.902 I 
0.00.489.945 I sampler seed: 4246746942
0.00.489.954 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.489.957 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.489.959 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.489.959 I 
 increasities. 

I am unable to find any information on this. Perhaps you can provide me with some context or redirect me to a reliable source. [end of text]


0.02.692.131 I llama_perf_sampler_print:    sampling time =       4.77 ms /    33 runs   (    0.14 ms per token,  6919.69 tokens per second)
0.02.692.133 I llama_perf_context_print:        load time =     487.90 ms
0.02.692.134 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.692.136 I llama_perf_context_print:        eval time =    2183.40 ms /    32 runs   (   68.23 ms per token,    14.66 tokens per second)
0.02.692.136 I llama_perf_context_print:       total time =    2202.33 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.540 I build: 3911 (fd69ef16) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.001.900 I main: load the model and apply lora adapter, if any
0.00.022.184 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.231 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.238 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.243 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.244 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.247 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.248 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.249 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.249 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.250 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.250 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.254 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.255 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.255 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.256 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.256 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.882 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.566 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.452 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.458 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.459 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.460 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.461 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.462 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.462 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.465 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.465 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.466 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.467 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.468 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.471 I llama_model_loader: - type  f32:   37 tensors
0.00.132.475 I llama_model_loader: - type q8_0:  127 tensors
0.00.217.356 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.258.238 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.259.038 I llm_load_vocab: special tokens cache size = 5
0.00.280.064 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.280.080 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.280.081 I llm_load_print_meta: arch             = gemma
0.00.280.082 I llm_load_print_meta: vocab type       = SPM
0.00.280.083 I llm_load_print_meta: n_vocab          = 256000
0.00.280.083 I llm_load_print_meta: n_merges         = 0
0.00.280.084 I llm_load_print_meta: vocab_only       = 0
0.00.280.084 I llm_load_print_meta: n_ctx_train      = 8192
0.00.280.084 I llm_load_print_meta: n_embd           = 2048
0.00.280.085 I llm_load_print_meta: n_layer          = 18
0.00.280.096 I llm_load_print_meta: n_head           = 8
0.00.280.097 I llm_load_print_meta: n_head_kv        = 1
0.00.280.097 I llm_load_print_meta: n_rot            = 256
0.00.280.097 I llm_load_print_meta: n_swa            = 0
0.00.280.097 I llm_load_print_meta: n_embd_head_k    = 256
0.00.280.098 I llm_load_print_meta: n_embd_head_v    = 256
0.00.280.099 I llm_load_print_meta: n_gqa            = 8
0.00.280.100 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.280.101 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.280.102 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.280.103 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.280.103 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.280.104 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.280.104 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.280.105 I llm_load_print_meta: n_ff             = 16384
0.00.280.105 I llm_load_print_meta: n_expert         = 0
0.00.280.105 I llm_load_print_meta: n_expert_used    = 0
0.00.280.106 I llm_load_print_meta: causal attn      = 1
0.00.280.106 I llm_load_print_meta: pooling type     = 0
0.00.280.106 I llm_load_print_meta: rope type        = 2
0.00.280.107 I llm_load_print_meta: rope scaling     = linear
0.00.280.109 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.280.109 I llm_load_print_meta: freq_scale_train = 1
0.00.280.109 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.280.110 I llm_load_print_meta: rope_finetuned   = unknown
0.00.280.110 I llm_load_print_meta: ssm_d_conv       = 0
0.00.280.110 I llm_load_print_meta: ssm_d_inner      = 0
0.00.280.111 I llm_load_print_meta: ssm_d_state      = 0
0.00.280.111 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.280.111 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.280.112 I llm_load_print_meta: model type       = 2B
0.00.280.112 I llm_load_print_meta: model ftype      = Q8_0
0.00.280.113 I llm_load_print_meta: model params     = 2.51 B
0.00.280.114 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.280.114 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.280.115 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.280.115 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.280.116 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.280.116 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.280.116 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.280.117 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.280.117 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.280.117 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.280.118 I llm_load_print_meta: max token length = 93
0.00.280.140 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.357.375 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.357.381 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.357.382 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.357.382 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.357.383 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.357.384 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.362.440 I llama_new_context_with_model: n_ctx      = 8192
0.00.362.446 I llama_new_context_with_model: n_batch    = 2048
0.00.362.446 I llama_new_context_with_model: n_ubatch   = 512
0.00.362.447 I llama_new_context_with_model: flash_attn = 0
0.00.362.449 I llama_new_context_with_model: freq_base  = 10000.0
0.00.362.450 I llama_new_context_with_model: freq_scale = 1
0.00.390.659 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.390.676 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.390.772 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.391.617 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.391.625 I llama_new_context_with_model: graph nodes  = 601
0.00.391.626 I llama_new_context_with_model: graph splits = 1
0.00.391.627 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.483.401 I main: llama threadpool init, n_threads = 4
0.00.483.414 I 
0.00.483.489 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.483.489 I 
0.00.483.527 I sampler seed: 2298868477
0.00.483.533 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.483.536 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.483.537 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.483.537 I 
 increamental,
**Answer:** "I am sorry, but I am unable to provide personal or sensitive information." [end of text]


0.02.170.775 I llama_perf_sampler_print:    sampling time =       3.59 ms /    25 runs   (    0.14 ms per token,  6971.56 tokens per second)
0.02.170.778 I llama_perf_context_print:        load time =     481.48 ms
0.02.170.780 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.170.782 I llama_perf_context_print:        eval time =    1672.89 ms /    24 runs   (   69.70 ms per token,    14.35 tokens per second)
0.02.170.783 I llama_perf_context_print:       total time =    1687.38 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.547 I build: 3911 (fd69ef16) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.001.902 I main: load the model and apply lora adapter, if any
0.00.022.095 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.150 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.165 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.174 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.176 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.182 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.186 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.187 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.188 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.188 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.189 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.203 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.205 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.206 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.207 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.208 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.081 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.919 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.827 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.836 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.837 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.838 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.839 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.840 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.840 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.843 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.843 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.844 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.844 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.845 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.848 I llama_model_loader: - type  f32:   37 tensors
0.00.132.851 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.626 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.586 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.276 I llm_load_vocab: special tokens cache size = 5
0.00.265.190 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.207 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.208 I llm_load_print_meta: arch             = gemma
0.00.265.209 I llm_load_print_meta: vocab type       = SPM
0.00.265.210 I llm_load_print_meta: n_vocab          = 256000
0.00.265.211 I llm_load_print_meta: n_merges         = 0
0.00.265.212 I llm_load_print_meta: vocab_only       = 0
0.00.265.212 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.212 I llm_load_print_meta: n_embd           = 2048
0.00.265.212 I llm_load_print_meta: n_layer          = 18
0.00.265.224 I llm_load_print_meta: n_head           = 8
0.00.265.226 I llm_load_print_meta: n_head_kv        = 1
0.00.265.226 I llm_load_print_meta: n_rot            = 256
0.00.265.234 I llm_load_print_meta: n_swa            = 0
0.00.265.237 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.237 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.239 I llm_load_print_meta: n_gqa            = 8
0.00.265.240 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.241 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.242 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.245 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.246 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.246 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.246 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.247 I llm_load_print_meta: n_ff             = 16384
0.00.265.248 I llm_load_print_meta: n_expert         = 0
0.00.265.248 I llm_load_print_meta: n_expert_used    = 0
0.00.265.248 I llm_load_print_meta: causal attn      = 1
0.00.265.248 I llm_load_print_meta: pooling type     = 0
0.00.265.249 I llm_load_print_meta: rope type        = 2
0.00.265.249 I llm_load_print_meta: rope scaling     = linear
0.00.265.250 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.251 I llm_load_print_meta: freq_scale_train = 1
0.00.265.251 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.252 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.252 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.253 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.253 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.253 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.254 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.255 I llm_load_print_meta: model type       = 2B
0.00.265.255 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.256 I llm_load_print_meta: model params     = 2.51 B
0.00.265.257 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.258 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.258 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.258 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.259 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.260 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.260 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.260 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.261 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.261 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.261 I llm_load_print_meta: max token length = 93
0.00.265.287 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.335.413 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.335.420 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.340.464 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.470 I llama_new_context_with_model: n_batch    = 2048
0.00.340.470 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.471 I llama_new_context_with_model: flash_attn = 0
0.00.340.473 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.474 I llama_new_context_with_model: freq_scale = 1
0.00.369.106 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.369.121 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.369.212 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.103 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.370.111 I llama_new_context_with_model: graph nodes  = 601
0.00.370.112 I llama_new_context_with_model: graph splits = 1
0.00.370.113 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.410 I main: llama threadpool init, n_threads = 4
0.00.464.422 I 
0.00.464.507 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.511 I 
0.00.464.561 I sampler seed: 2304059875
0.00.464.571 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.574 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.464.574 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.574 I 
 seconally.

I am unable to answer this question as I do not have access to personal or sensitive information. [end of text]


0.02.282.411 I llama_perf_sampler_print:    sampling time =       3.55 ms /    25 runs   (    0.14 ms per token,  7046.22 tokens per second)
0.02.282.415 I llama_perf_context_print:        load time =     462.48 ms
0.02.282.416 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.282.418 I llama_perf_context_print:        eval time =    1804.47 ms /    24 runs   (   75.19 ms per token,    13.30 tokens per second)
0.02.282.419 I llama_perf_context_print:       total time =    1818.01 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.489s
user	0m34.618s
sys	0m9.454s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3911 (fd69ef16)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32157.73 ms
main:    total time = 32157.73 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.564 I build: 3911 (fd69ef16) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.754 I main: llama backend init
0.00.001.861 I main: load the model and apply lora adapter, if any
0.00.022.087 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.135 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.147 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.152 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.153 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.156 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.157 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.158 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.158 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.159 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.159 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.162 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.163 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.163 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.164 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.164 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.439 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.296 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.613 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.620 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.620 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.621 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.622 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.623 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.623 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.626 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.626 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.627 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.629 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.630 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.634 I llama_model_loader: - type  f32:   37 tensors
0.00.133.636 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.637 I llama_model_loader: - type q6_K:   19 tensors
0.00.214.753 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.718 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.488 I llm_load_vocab: special tokens cache size = 5
0.00.271.401 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.417 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.417 I llm_load_print_meta: arch             = gemma
0.00.271.418 I llm_load_print_meta: vocab type       = SPM
0.00.271.419 I llm_load_print_meta: n_vocab          = 256000
0.00.271.419 I llm_load_print_meta: n_merges         = 0
0.00.271.419 I llm_load_print_meta: vocab_only       = 0
0.00.271.420 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.420 I llm_load_print_meta: n_embd           = 2048
0.00.271.420 I llm_load_print_meta: n_layer          = 18
0.00.271.431 I llm_load_print_meta: n_head           = 8
0.00.271.432 I llm_load_print_meta: n_head_kv        = 1
0.00.271.433 I llm_load_print_meta: n_rot            = 256
0.00.271.433 I llm_load_print_meta: n_swa            = 0
0.00.271.433 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.434 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.434 I llm_load_print_meta: n_gqa            = 8
0.00.271.435 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.436 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.437 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.438 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.439 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.439 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.439 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.440 I llm_load_print_meta: n_ff             = 16384
0.00.271.440 I llm_load_print_meta: n_expert         = 0
0.00.271.441 I llm_load_print_meta: n_expert_used    = 0
0.00.271.441 I llm_load_print_meta: causal attn      = 1
0.00.271.441 I llm_load_print_meta: pooling type     = 0
0.00.271.442 I llm_load_print_meta: rope type        = 2
0.00.271.442 I llm_load_print_meta: rope scaling     = linear
0.00.271.444 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.444 I llm_load_print_meta: freq_scale_train = 1
0.00.271.445 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.445 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.445 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.446 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.446 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.446 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.446 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.447 I llm_load_print_meta: model type       = 2B
0.00.271.447 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.271.448 I llm_load_print_meta: model params     = 2.51 B
0.00.271.449 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.271.449 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.450 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.450 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.450 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.451 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.451 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.451 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.452 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.452 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.452 I llm_load_print_meta: max token length = 93
0.00.271.471 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.329.945 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.329.952 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.329.953 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.329.953 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.329.954 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.329.955 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.335.007 I llama_new_context_with_model: n_ctx      = 8192
0.00.335.013 I llama_new_context_with_model: n_batch    = 2048
0.00.335.014 I llama_new_context_with_model: n_ubatch   = 512
0.00.335.014 I llama_new_context_with_model: flash_attn = 0
0.00.335.016 I llama_new_context_with_model: freq_base  = 10000.0
0.00.335.017 I llama_new_context_with_model: freq_scale = 1
0.00.363.880 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.363.895 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.363.987 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.872 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.364.880 I llama_new_context_with_model: graph nodes  = 601
0.00.364.880 I llama_new_context_with_model: graph splits = 1
0.00.364.883 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.445.424 I main: llama threadpool init, n_threads = 4
0.00.445.437 I 
0.00.445.513 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.445.516 I 
0.00.445.556 I sampler seed: 1922715921
0.00.445.565 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.568 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.445.569 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.569 I 
 fufilling, a melodious voice, singing the haunting melody of a siren.

**Chorus:**
Lulled me to sleep, with your hypnotic gaze,

0.02.031.598 I llama_perf_sampler_print:    sampling time =       4.93 ms /    33 runs   (    0.15 ms per token,  6699.15 tokens per second)
0.02.031.600 I llama_perf_context_print:        load time =     443.54 ms
0.02.031.601 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.031.603 I llama_perf_context_print:        eval time =    1568.36 ms /    32 runs   (   49.01 ms per token,    20.40 tokens per second)
0.02.031.604 I llama_perf_context_print:       total time =    1586.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3911 (fd69ef16)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32029.70 ms
main:    total time = 32029.70 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.552 I build: 3911 (fd69ef16) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.749 I main: llama backend init
0.00.001.836 I main: load the model and apply lora adapter, if any
0.00.022.008 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.020 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.026 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.027 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.031 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.033 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.033 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.034 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.035 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.035 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.038 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.039 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.039 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.039 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.040 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.731 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.509 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.367 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.373 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.374 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.375 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.375 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.376 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.377 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.379 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.379 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.383 I llama_model_loader: - type  f32:   37 tensors
0.00.132.385 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.386 I llama_model_loader: - type q6_K:   19 tensors
0.00.213.730 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.254.792 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.720 I llm_load_vocab: special tokens cache size = 5
0.00.276.799 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.276.815 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.276.816 I llm_load_print_meta: arch             = gemma
0.00.276.816 I llm_load_print_meta: vocab type       = SPM
0.00.276.817 I llm_load_print_meta: n_vocab          = 256000
0.00.276.817 I llm_load_print_meta: n_merges         = 0
0.00.276.818 I llm_load_print_meta: vocab_only       = 0
0.00.276.818 I llm_load_print_meta: n_ctx_train      = 8192
0.00.276.818 I llm_load_print_meta: n_embd           = 2048
0.00.276.819 I llm_load_print_meta: n_layer          = 18
0.00.276.830 I llm_load_print_meta: n_head           = 8
0.00.276.831 I llm_load_print_meta: n_head_kv        = 1
0.00.276.832 I llm_load_print_meta: n_rot            = 256
0.00.276.832 I llm_load_print_meta: n_swa            = 0
0.00.276.832 I llm_load_print_meta: n_embd_head_k    = 256
0.00.276.832 I llm_load_print_meta: n_embd_head_v    = 256
0.00.276.833 I llm_load_print_meta: n_gqa            = 8
0.00.276.834 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.276.835 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.276.836 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.276.837 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.276.838 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.276.838 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.276.838 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.276.839 I llm_load_print_meta: n_ff             = 16384
0.00.276.839 I llm_load_print_meta: n_expert         = 0
0.00.276.840 I llm_load_print_meta: n_expert_used    = 0
0.00.276.840 I llm_load_print_meta: causal attn      = 1
0.00.276.840 I llm_load_print_meta: pooling type     = 0
0.00.276.840 I llm_load_print_meta: rope type        = 2
0.00.276.841 I llm_load_print_meta: rope scaling     = linear
0.00.276.842 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.276.843 I llm_load_print_meta: freq_scale_train = 1
0.00.276.843 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.276.843 I llm_load_print_meta: rope_finetuned   = unknown
0.00.276.844 I llm_load_print_meta: ssm_d_conv       = 0
0.00.276.844 I llm_load_print_meta: ssm_d_inner      = 0
0.00.276.844 I llm_load_print_meta: ssm_d_state      = 0
0.00.276.845 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.276.845 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.276.846 I llm_load_print_meta: model type       = 2B
0.00.276.846 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.276.847 I llm_load_print_meta: model params     = 2.51 B
0.00.276.847 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.276.848 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.276.848 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.276.848 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.276.849 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.276.849 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.276.849 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.276.850 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.276.850 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.276.851 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.276.851 I llm_load_print_meta: max token length = 93
0.00.276.871 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.335.246 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.340.331 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.336 I llama_new_context_with_model: n_batch    = 2048
0.00.340.337 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.337 I llama_new_context_with_model: flash_attn = 0
0.00.340.339 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.340 I llama_new_context_with_model: freq_scale = 1
0.00.370.815 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.833 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.933 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.852 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.860 I llama_new_context_with_model: graph nodes  = 601
0.00.371.860 I llama_new_context_with_model: graph splits = 1
0.00.371.862 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.453.167 I main: llama threadpool init, n_threads = 4
0.00.453.180 I 
0.00.453.255 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.453.258 I 
0.00.453.296 I sampler seed: 2053617816
0.00.453.306 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.453.308 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.453.309 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.453.309 I 
 maneupherously and said, "I am the master of this house."

Who is the master of the house?

The answer is the person who owns

0.02.039.721 I llama_perf_sampler_print:    sampling time =       5.21 ms /    33 runs   (    0.16 ms per token,  6330.33 tokens per second)
0.02.039.724 I llama_perf_context_print:        load time =     451.31 ms
0.02.039.725 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.039.726 I llama_perf_context_print:        eval time =    1568.50 ms /    32 runs   (   49.02 ms per token,    20.40 tokens per second)
0.02.039.727 I llama_perf_context_print:       total time =    1586.56 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.598s
user	8m14.838s
sys	0m6.794s
