+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.601 I build: 4017 (fd1fa155) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.799 I main: llama backend init
0.00.000.935 I main: load the model and apply lora adapter, if any
0.00.021.332 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.342 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.350 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.355 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.356 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.360 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.361 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.361 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.362 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.362 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.363 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.368 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.369 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.369 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.370 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.370 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.193 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.399 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.266 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.273 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.273 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.274 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.275 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.275 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.276 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.278 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.279 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.279 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.280 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.281 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.285 I llama_model_loader: - type  f32:   37 tensors
0.00.132.286 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.898 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.450 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.986 I llm_load_vocab: special tokens cache size = 5
0.00.265.806 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.821 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.821 I llm_load_print_meta: arch             = gemma
0.00.265.822 I llm_load_print_meta: vocab type       = SPM
0.00.265.823 I llm_load_print_meta: n_vocab          = 256000
0.00.265.823 I llm_load_print_meta: n_merges         = 0
0.00.265.824 I llm_load_print_meta: vocab_only       = 0
0.00.265.824 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.824 I llm_load_print_meta: n_embd           = 2048
0.00.265.825 I llm_load_print_meta: n_layer          = 18
0.00.265.835 I llm_load_print_meta: n_head           = 8
0.00.265.836 I llm_load_print_meta: n_head_kv        = 1
0.00.265.837 I llm_load_print_meta: n_rot            = 256
0.00.265.837 I llm_load_print_meta: n_swa            = 0
0.00.265.837 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.838 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.838 I llm_load_print_meta: n_gqa            = 8
0.00.265.839 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.840 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.841 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.843 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.844 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.844 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.844 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.845 I llm_load_print_meta: n_ff             = 16384
0.00.265.845 I llm_load_print_meta: n_expert         = 0
0.00.265.846 I llm_load_print_meta: n_expert_used    = 0
0.00.265.846 I llm_load_print_meta: causal attn      = 1
0.00.265.846 I llm_load_print_meta: pooling type     = 0
0.00.265.846 I llm_load_print_meta: rope type        = 2
0.00.265.847 I llm_load_print_meta: rope scaling     = linear
0.00.265.848 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.849 I llm_load_print_meta: freq_scale_train = 1
0.00.265.849 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.850 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.850 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.850 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.850 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.851 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.851 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.852 I llm_load_print_meta: model type       = 2B
0.00.265.852 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.853 I llm_load_print_meta: model params     = 2.51 B
0.00.265.854 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.855 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.855 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.856 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.856 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.856 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.857 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.857 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.857 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.858 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.858 I llm_load_print_meta: max token length = 93
0.00.370.116 I llm_load_tensors: CPU_Mapped model buffer size =   865.98 MiB
0.00.370.126 I llm_load_tensors: CPU_Mapped model buffer size =   334.74 MiB
0.00.370.127 I llm_load_tensors: CPU_Mapped model buffer size =   402.73 MiB
0.00.370.127 I llm_load_tensors: CPU_Mapped model buffer size =   335.27 MiB
0.00.370.128 I llm_load_tensors: CPU_Mapped model buffer size =   338.98 MiB
0.00.370.129 I llm_load_tensors: CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.375.267 I llama_new_context_with_model: n_seq_max     = 1
0.00.375.274 I llama_new_context_with_model: n_ctx         = 4096
0.00.375.274 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.375.274 I llama_new_context_with_model: n_batch       = 2048
0.00.375.275 I llama_new_context_with_model: n_ubatch      = 512
0.00.375.275 I llama_new_context_with_model: flash_attn    = 0
0.00.375.278 I llama_new_context_with_model: freq_base     = 10000.0
0.00.375.279 I llama_new_context_with_model: freq_scale    = 1
0.00.375.280 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.390.957 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.390.971 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.391.070 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.392.307 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.392.314 I llama_new_context_with_model: graph nodes  = 601
0.00.392.314 I llama_new_context_with_model: graph splits = 1
0.00.392.317 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.477.287 I main: llama threadpool init, n_threads = 4
0.00.477.299 I 
0.00.477.379 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.477.382 I 
0.00.477.423 I sampler seed: 1532866725
0.00.477.434 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.477.439 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.477.440 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.477.440 I 
 increasities.

I am unable to generate the requested response as it contains sexually suggestive and inappropriate content. [end of text]


0.02.034.269 I llama_perf_sampler_print:    sampling time =       3.30 ms /    23 runs   (    0.14 ms per token,  6978.16 tokens per second)
0.02.034.271 I llama_perf_context_print:        load time =     476.33 ms
0.02.034.272 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.034.274 I llama_perf_context_print:        eval time =    1543.66 ms /    22 runs   (   70.17 ms per token,    14.25 tokens per second)
0.02.034.275 I llama_perf_context_print:       total time =    1556.99 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.588 I build: 4017 (fd1fa155) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.792 I main: llama backend init
0.00.000.928 I main: load the model and apply lora adapter, if any
0.00.021.722 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.735 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.745 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.746 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.750 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.751 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.752 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.753 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.753 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.754 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.758 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.758 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.759 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.760 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.761 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.163 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.930 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.756 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.763 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.764 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.764 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.765 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.766 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.766 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.769 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.770 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.771 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.771 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.772 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.775 I llama_model_loader: - type  f32:   37 tensors
0.00.131.776 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.573 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.133 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.777 I llm_load_vocab: special tokens cache size = 5
0.00.264.155 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.171 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.172 I llm_load_print_meta: arch             = gemma
0.00.264.172 I llm_load_print_meta: vocab type       = SPM
0.00.264.173 I llm_load_print_meta: n_vocab          = 256000
0.00.264.174 I llm_load_print_meta: n_merges         = 0
0.00.264.174 I llm_load_print_meta: vocab_only       = 0
0.00.264.174 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.175 I llm_load_print_meta: n_embd           = 2048
0.00.264.175 I llm_load_print_meta: n_layer          = 18
0.00.264.186 I llm_load_print_meta: n_head           = 8
0.00.264.187 I llm_load_print_meta: n_head_kv        = 1
0.00.264.188 I llm_load_print_meta: n_rot            = 256
0.00.264.188 I llm_load_print_meta: n_swa            = 0
0.00.264.188 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.189 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.189 I llm_load_print_meta: n_gqa            = 8
0.00.264.190 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.191 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.192 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.194 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.194 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.194 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.195 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.195 I llm_load_print_meta: n_ff             = 16384
0.00.264.196 I llm_load_print_meta: n_expert         = 0
0.00.264.196 I llm_load_print_meta: n_expert_used    = 0
0.00.264.196 I llm_load_print_meta: causal attn      = 1
0.00.264.197 I llm_load_print_meta: pooling type     = 0
0.00.264.198 I llm_load_print_meta: rope type        = 2
0.00.264.198 I llm_load_print_meta: rope scaling     = linear
0.00.264.200 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.201 I llm_load_print_meta: freq_scale_train = 1
0.00.264.201 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.202 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.202 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.202 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.203 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.203 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.203 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.204 I llm_load_print_meta: model type       = 2B
0.00.264.204 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.205 I llm_load_print_meta: model params     = 2.51 B
0.00.264.206 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.206 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.207 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.207 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.208 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.208 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.209 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.209 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.209 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.210 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.210 I llm_load_print_meta: max token length = 93
0.00.364.217 I llm_load_tensors: CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.369.648 I llama_new_context_with_model: n_seq_max     = 1
0.00.369.655 I llama_new_context_with_model: n_ctx         = 4096
0.00.369.655 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.369.656 I llama_new_context_with_model: n_batch       = 2048
0.00.369.657 I llama_new_context_with_model: n_ubatch      = 512
0.00.369.657 I llama_new_context_with_model: flash_attn    = 0
0.00.369.660 I llama_new_context_with_model: freq_base     = 10000.0
0.00.369.661 I llama_new_context_with_model: freq_scale    = 1
0.00.369.662 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.386.589 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.386.604 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.386.702 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.387.971 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.387.978 I llama_new_context_with_model: graph nodes  = 601
0.00.387.979 I llama_new_context_with_model: graph splits = 1
0.00.387.981 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.470.764 I main: llama threadpool init, n_threads = 4
0.00.470.777 I 
0.00.470.853 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.470.856 I 
0.00.470.897 I sampler seed: 1114581483
0.00.470.908 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.470.910 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.470.911 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.470.911 I 
 increasements that would be appropriate for a resume.

**Example:**

> **Highly motivated and results-oriented professional with a demonstrated track record of exceeding expectations

0.02.707.163 I llama_perf_sampler_print:    sampling time =       4.82 ms /    33 runs   (    0.15 ms per token,  6847.89 tokens per second)
0.02.707.165 I llama_perf_context_print:        load time =     469.81 ms
0.02.707.166 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.707.168 I llama_perf_context_print:        eval time =    2216.73 ms /    32 runs   (   69.27 ms per token,    14.44 tokens per second)
0.02.707.168 I llama_perf_context_print:       total time =    2236.41 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.563 I build: 4017 (fd1fa155) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.759 I main: llama backend init
0.00.000.891 I main: load the model and apply lora adapter, if any
0.00.021.468 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.479 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.488 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.497 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.498 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.502 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.503 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.504 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.505 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.505 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.506 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.511 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.511 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.512 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.512 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.513 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.143 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.114 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.009 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.016 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.017 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.017 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.018 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.019 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.019 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.022 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.022 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.023 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.023 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.024 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.028 I llama_model_loader: - type  f32:   37 tensors
0.00.132.029 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.275 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.455 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.014 I llm_load_vocab: special tokens cache size = 5
0.00.265.318 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.335 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.336 I llm_load_print_meta: arch             = gemma
0.00.265.336 I llm_load_print_meta: vocab type       = SPM
0.00.265.337 I llm_load_print_meta: n_vocab          = 256000
0.00.265.337 I llm_load_print_meta: n_merges         = 0
0.00.265.338 I llm_load_print_meta: vocab_only       = 0
0.00.265.338 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.338 I llm_load_print_meta: n_embd           = 2048
0.00.265.339 I llm_load_print_meta: n_layer          = 18
0.00.265.350 I llm_load_print_meta: n_head           = 8
0.00.265.351 I llm_load_print_meta: n_head_kv        = 1
0.00.265.351 I llm_load_print_meta: n_rot            = 256
0.00.265.351 I llm_load_print_meta: n_swa            = 0
0.00.265.352 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.352 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.353 I llm_load_print_meta: n_gqa            = 8
0.00.265.354 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.355 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.356 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.357 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.357 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.358 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.358 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.359 I llm_load_print_meta: n_ff             = 16384
0.00.265.359 I llm_load_print_meta: n_expert         = 0
0.00.265.359 I llm_load_print_meta: n_expert_used    = 0
0.00.265.360 I llm_load_print_meta: causal attn      = 1
0.00.265.360 I llm_load_print_meta: pooling type     = 0
0.00.265.360 I llm_load_print_meta: rope type        = 2
0.00.265.361 I llm_load_print_meta: rope scaling     = linear
0.00.265.362 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.363 I llm_load_print_meta: freq_scale_train = 1
0.00.265.363 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.363 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.363 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.364 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.364 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.364 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.364 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.365 I llm_load_print_meta: model type       = 2B
0.00.265.365 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.366 I llm_load_print_meta: model params     = 2.51 B
0.00.265.367 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.367 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.367 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.368 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.368 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.369 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.369 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.369 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.369 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.370 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.370 I llm_load_print_meta: max token length = 93
0.00.361.347 I llm_load_tensors: CPU_Mapped model buffer size =   967.99 MiB
0.00.361.354 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.361.355 I llm_load_tensors: CPU_Mapped model buffer size =   411.77 MiB
0.00.361.355 I llm_load_tensors: CPU_Mapped model buffer size =   437.27 MiB
0.00.361.356 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.361.357 I llm_load_tensors: CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.366.610 I llama_new_context_with_model: n_seq_max     = 1
0.00.366.617 I llama_new_context_with_model: n_ctx         = 4096
0.00.366.617 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.366.618 I llama_new_context_with_model: n_batch       = 2048
0.00.366.619 I llama_new_context_with_model: n_ubatch      = 512
0.00.366.619 I llama_new_context_with_model: flash_attn    = 0
0.00.366.621 I llama_new_context_with_model: freq_base     = 10000.0
0.00.366.622 I llama_new_context_with_model: freq_scale    = 1
0.00.366.623 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.382.739 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.382.754 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.382.846 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.384.165 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.384.170 I llama_new_context_with_model: graph nodes  = 601
0.00.384.171 I llama_new_context_with_model: graph splits = 1
0.00.384.172 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.471.632 I main: llama threadpool init, n_threads = 4
0.00.471.643 I 
0.00.471.710 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.471.713 I 
0.00.471.751 I sampler seed: 2983754197
0.00.471.761 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.471.764 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.471.765 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.471.765 I 
 increasities.

I am unable to generate the requested response as it contains sexually suggestive and inappropriate content. [end of text]


0.01.957.443 I llama_perf_sampler_print:    sampling time =       3.39 ms /    23 runs   (    0.15 ms per token,  6794.68 tokens per second)
0.01.957.446 I llama_perf_context_print:        load time =     470.72 ms
0.01.957.447 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.957.448 I llama_perf_context_print:        eval time =    1472.12 ms /    22 runs   (   66.91 ms per token,    14.94 tokens per second)
0.01.957.449 I llama_perf_context_print:       total time =    1485.82 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.503 I build: 4017 (fd1fa155) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.696 I main: llama backend init
0.00.000.836 I main: load the model and apply lora adapter, if any
0.00.021.645 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.656 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.664 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.673 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.676 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.679 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.680 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.681 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.681 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.682 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.682 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.687 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.687 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.688 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.688 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.689 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.797 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.414 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.188 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.194 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.195 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.195 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.196 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.197 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.197 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.200 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.200 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.201 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.201 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.202 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.206 I llama_model_loader: - type  f32:   37 tensors
0.00.131.207 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.283 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.239.864 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.240.448 I llm_load_vocab: special tokens cache size = 5
0.00.261.131 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.261.146 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.261.146 I llm_load_print_meta: arch             = gemma
0.00.261.147 I llm_load_print_meta: vocab type       = SPM
0.00.261.148 I llm_load_print_meta: n_vocab          = 256000
0.00.261.148 I llm_load_print_meta: n_merges         = 0
0.00.261.148 I llm_load_print_meta: vocab_only       = 0
0.00.261.149 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.149 I llm_load_print_meta: n_embd           = 2048
0.00.261.149 I llm_load_print_meta: n_layer          = 18
0.00.261.161 I llm_load_print_meta: n_head           = 8
0.00.261.162 I llm_load_print_meta: n_head_kv        = 1
0.00.261.162 I llm_load_print_meta: n_rot            = 256
0.00.261.163 I llm_load_print_meta: n_swa            = 0
0.00.261.163 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.163 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.164 I llm_load_print_meta: n_gqa            = 8
0.00.261.165 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.167 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.167 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.169 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.169 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.169 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.169 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.170 I llm_load_print_meta: n_ff             = 16384
0.00.261.171 I llm_load_print_meta: n_expert         = 0
0.00.261.172 I llm_load_print_meta: n_expert_used    = 0
0.00.261.172 I llm_load_print_meta: causal attn      = 1
0.00.261.173 I llm_load_print_meta: pooling type     = 0
0.00.261.173 I llm_load_print_meta: rope type        = 2
0.00.261.174 I llm_load_print_meta: rope scaling     = linear
0.00.261.176 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.177 I llm_load_print_meta: freq_scale_train = 1
0.00.261.177 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.178 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.178 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.178 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.178 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.179 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.179 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.180 I llm_load_print_meta: model type       = 2B
0.00.261.180 I llm_load_print_meta: model ftype      = Q8_0
0.00.261.181 I llm_load_print_meta: model params     = 2.51 B
0.00.261.182 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.261.183 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.184 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.184 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.185 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.186 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.186 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.187 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.187 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.188 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.188 I llm_load_print_meta: max token length = 93
0.00.333.524 I llm_load_tensors: CPU_Mapped model buffer size =  1904.18 MiB
0.00.333.532 I llm_load_tensors: CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.338.599 I llama_new_context_with_model: n_seq_max     = 1
0.00.338.605 I llama_new_context_with_model: n_ctx         = 4096
0.00.338.606 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.338.606 I llama_new_context_with_model: n_batch       = 2048
0.00.338.607 I llama_new_context_with_model: n_ubatch      = 512
0.00.338.607 I llama_new_context_with_model: flash_attn    = 0
0.00.338.609 I llama_new_context_with_model: freq_base     = 10000.0
0.00.338.610 I llama_new_context_with_model: freq_scale    = 1
0.00.338.611 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.354.160 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.354.174 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.354.265 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.485 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.355.492 I llama_new_context_with_model: graph nodes  = 601
0.00.355.492 I llama_new_context_with_model: graph splits = 1
0.00.355.494 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.450.042 I main: llama threadpool init, n_threads = 4
0.00.450.060 I 
0.00.450.152 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.450.156 I 
0.00.450.203 I sampler seed: 3466484585
0.00.450.219 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.450.225 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.450.226 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.450.226 I 
 increamically.

I'm so bored. I need something to do. What should I do?

1. Check social media
2. Play a

0.02.785.799 I llama_perf_sampler_print:    sampling time =       5.19 ms /    33 runs   (    0.16 ms per token,  6353.48 tokens per second)
0.02.785.801 I llama_perf_context_print:        load time =     449.18 ms
0.02.785.802 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.785.803 I llama_perf_context_print:        eval time =    2316.22 ms /    32 runs   (   72.38 ms per token,    13.82 tokens per second)
0.02.785.804 I llama_perf_context_print:       total time =    2335.77 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.161s
user	0m33.331s
sys	0m9.476s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4017 (fd1fa155)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32058.75 ms
main:    total time = 32058.75 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.544 I build: 4017 (fd1fa155) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.000.889 I main: load the model and apply lora adapter, if any
0.00.021.629 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.642 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.650 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.656 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.657 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.661 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.662 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.662 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.663 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.663 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.664 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.669 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.670 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.671 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.672 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.672 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.324 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.608 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.498 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.505 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.505 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.506 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.507 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.508 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.509 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.513 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.514 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.514 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.515 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.516 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.520 I llama_model_loader: - type  f32:   37 tensors
0.00.132.521 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.522 I llama_model_loader: - type q6_K:   19 tensors
0.00.210.053 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.391 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.962 I llm_load_vocab: special tokens cache size = 5
0.00.277.768 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.784 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.785 I llm_load_print_meta: arch             = gemma
0.00.277.786 I llm_load_print_meta: vocab type       = SPM
0.00.277.787 I llm_load_print_meta: n_vocab          = 256000
0.00.277.787 I llm_load_print_meta: n_merges         = 0
0.00.277.788 I llm_load_print_meta: vocab_only       = 0
0.00.277.788 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.788 I llm_load_print_meta: n_embd           = 2048
0.00.277.789 I llm_load_print_meta: n_layer          = 18
0.00.277.801 I llm_load_print_meta: n_head           = 8
0.00.277.802 I llm_load_print_meta: n_head_kv        = 1
0.00.277.803 I llm_load_print_meta: n_rot            = 256
0.00.277.803 I llm_load_print_meta: n_swa            = 0
0.00.277.804 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.805 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.806 I llm_load_print_meta: n_gqa            = 8
0.00.277.807 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.808 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.808 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.809 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.810 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.810 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.811 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.812 I llm_load_print_meta: n_ff             = 16384
0.00.277.812 I llm_load_print_meta: n_expert         = 0
0.00.277.813 I llm_load_print_meta: n_expert_used    = 0
0.00.277.816 I llm_load_print_meta: causal attn      = 1
0.00.277.816 I llm_load_print_meta: pooling type     = 0
0.00.277.817 I llm_load_print_meta: rope type        = 2
0.00.277.817 I llm_load_print_meta: rope scaling     = linear
0.00.277.819 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.819 I llm_load_print_meta: freq_scale_train = 1
0.00.277.819 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.820 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.820 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.820 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.820 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.821 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.821 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.821 I llm_load_print_meta: model type       = 2B
0.00.277.823 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.277.824 I llm_load_print_meta: model params     = 2.51 B
0.00.277.824 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.277.825 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.827 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.827 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.828 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.828 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.828 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.828 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.829 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.830 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.830 I llm_load_print_meta: max token length = 93
0.00.339.406 I llm_load_tensors: CPU_Mapped model buffer size =   604.15 MiB
0.00.339.410 I llm_load_tensors: CPU_Mapped model buffer size =   185.62 MiB
0.00.339.410 I llm_load_tensors: CPU_Mapped model buffer size =   221.61 MiB
0.00.339.411 I llm_load_tensors: CPU_Mapped model buffer size =   185.89 MiB
0.00.339.412 I llm_load_tensors: CPU_Mapped model buffer size =   187.86 MiB
0.00.339.412 I llm_load_tensors: CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.344.733 I llama_new_context_with_model: n_seq_max     = 1
0.00.344.740 I llama_new_context_with_model: n_ctx         = 4096
0.00.344.740 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.344.741 I llama_new_context_with_model: n_batch       = 2048
0.00.344.741 I llama_new_context_with_model: n_ubatch      = 512
0.00.344.741 I llama_new_context_with_model: flash_attn    = 0
0.00.344.744 I llama_new_context_with_model: freq_base     = 10000.0
0.00.344.744 I llama_new_context_with_model: freq_scale    = 1
0.00.344.745 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.361.019 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.361.034 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.361.129 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.386 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.362.394 I llama_new_context_with_model: graph nodes  = 601
0.00.362.394 I llama_new_context_with_model: graph splits = 1
0.00.362.395 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.438.721 I main: llama threadpool init, n_threads = 4
0.00.438.737 I 
0.00.438.813 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.438.817 I 
0.00.438.857 I sampler seed: 422010924
0.00.438.869 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.438.872 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.438.873 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.438.873 I 
 seconally.

I am unable to generate the requested text due to limitations in my programming capabilities. [end of text]


0.01.538.021 I llama_perf_sampler_print:    sampling time =       3.31 ms /    22 runs   (    0.15 ms per token,  6656.58 tokens per second)
0.01.538.024 I llama_perf_context_print:        load time =     437.81 ms
0.01.538.026 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.538.028 I llama_perf_context_print:        eval time =    1086.39 ms /    21 runs   (   51.73 ms per token,    19.33 tokens per second)
0.01.538.030 I llama_perf_context_print:       total time =    1099.31 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4017 (fd1fa155)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32150.37 ms
main:    total time = 32150.37 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.548 I build: 4017 (fd1fa155) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.000.891 I main: load the model and apply lora adapter, if any
0.00.021.507 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.524 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.534 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.538 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.543 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.544 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.545 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.546 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.547 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.547 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.551 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.552 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.552 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.553 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.553 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.122 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.176 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.019 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.025 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.026 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.027 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.028 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.029 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.030 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.034 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.035 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.038 I llama_model_loader: - type  f32:   37 tensors
0.00.132.040 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.041 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.416 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.585 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.167 I llm_load_vocab: special tokens cache size = 5
0.00.267.260 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.278 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.279 I llm_load_print_meta: arch             = gemma
0.00.267.279 I llm_load_print_meta: vocab type       = SPM
0.00.267.280 I llm_load_print_meta: n_vocab          = 256000
0.00.267.280 I llm_load_print_meta: n_merges         = 0
0.00.267.281 I llm_load_print_meta: vocab_only       = 0
0.00.267.281 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.282 I llm_load_print_meta: n_embd           = 2048
0.00.267.282 I llm_load_print_meta: n_layer          = 18
0.00.267.294 I llm_load_print_meta: n_head           = 8
0.00.267.295 I llm_load_print_meta: n_head_kv        = 1
0.00.267.296 I llm_load_print_meta: n_rot            = 256
0.00.267.296 I llm_load_print_meta: n_swa            = 0
0.00.267.296 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.297 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.298 I llm_load_print_meta: n_gqa            = 8
0.00.267.299 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.300 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.300 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.302 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.303 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.303 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.303 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.304 I llm_load_print_meta: n_ff             = 16384
0.00.267.304 I llm_load_print_meta: n_expert         = 0
0.00.267.305 I llm_load_print_meta: n_expert_used    = 0
0.00.267.305 I llm_load_print_meta: causal attn      = 1
0.00.267.305 I llm_load_print_meta: pooling type     = 0
0.00.267.306 I llm_load_print_meta: rope type        = 2
0.00.267.306 I llm_load_print_meta: rope scaling     = linear
0.00.267.308 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.308 I llm_load_print_meta: freq_scale_train = 1
0.00.267.309 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.309 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.309 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.310 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.310 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.310 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.310 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.311 I llm_load_print_meta: model type       = 2B
0.00.267.311 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.267.312 I llm_load_print_meta: model params     = 2.51 B
0.00.267.313 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.267.313 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.313 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.314 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.314 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.314 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.315 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.315 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.316 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.316 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.316 I llm_load_print_meta: max token length = 93
0.00.326.989 I llm_load_tensors: CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.332.176 I llama_new_context_with_model: n_seq_max     = 1
0.00.332.183 I llama_new_context_with_model: n_ctx         = 4096
0.00.332.183 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.332.184 I llama_new_context_with_model: n_batch       = 2048
0.00.332.184 I llama_new_context_with_model: n_ubatch      = 512
0.00.332.185 I llama_new_context_with_model: flash_attn    = 0
0.00.332.188 I llama_new_context_with_model: freq_base     = 10000.0
0.00.332.189 I llama_new_context_with_model: freq_scale    = 1
0.00.332.190 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.347.958 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.347.973 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.348.071 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.349.324 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.349.331 I llama_new_context_with_model: graph nodes  = 601
0.00.349.331 I llama_new_context_with_model: graph splits = 1
0.00.349.333 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.423.776 I main: llama threadpool init, n_threads = 4
0.00.423.789 I 
0.00.423.866 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.423.869 I 
0.00.423.910 I sampler seed: 392734191
0.00.423.920 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.423.923 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.423.924 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.423.925 I 
 seconded from the list, what is the correct answer?

a) List
b) Listened
c) Listened to
d) Listening



0.02.038.843 I llama_perf_sampler_print:    sampling time =       5.01 ms /    33 runs   (    0.15 ms per token,  6588.14 tokens per second)
0.02.038.855 I llama_perf_context_print:        load time =     422.87 ms
0.02.038.857 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.038.858 I llama_perf_context_print:        eval time =    1595.96 ms /    32 runs   (   49.87 ms per token,    20.05 tokens per second)
0.02.038.859 I llama_perf_context_print:       total time =    1615.07 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.001s
user	8m12.804s
sys	0m6.972s
