+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.526 I build: 3917 (33d9acf9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.732 I main: llama backend init
0.00.001.821 I main: load the model and apply lora adapter, if any
0.00.021.907 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.954 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.965 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.970 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.973 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.977 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.978 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.979 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.979 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.980 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.980 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.984 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.985 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.986 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.986 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.987 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.174 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.486 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.261 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.267 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.268 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.268 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.269 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.269 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.270 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.273 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.273 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.274 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.274 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.275 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.276 I llama_model_loader: - type  f32:   37 tensors
0.00.132.278 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.143 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.235.683 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.236.838 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.240.327 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.247.253 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.771 I llm_load_vocab: special tokens cache size = 5
0.00.268.890 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.905 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.905 I llm_load_print_meta: arch             = gemma
0.00.268.906 I llm_load_print_meta: vocab type       = SPM
0.00.268.906 I llm_load_print_meta: n_vocab          = 256000
0.00.268.907 I llm_load_print_meta: n_merges         = 0
0.00.268.907 I llm_load_print_meta: vocab_only       = 0
0.00.268.908 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.908 I llm_load_print_meta: n_embd           = 2048
0.00.268.908 I llm_load_print_meta: n_layer          = 18
0.00.268.920 I llm_load_print_meta: n_head           = 8
0.00.268.921 I llm_load_print_meta: n_head_kv        = 1
0.00.268.921 I llm_load_print_meta: n_rot            = 256
0.00.268.921 I llm_load_print_meta: n_swa            = 0
0.00.268.922 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.922 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.923 I llm_load_print_meta: n_gqa            = 8
0.00.268.924 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.925 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.926 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.927 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.928 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.928 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.928 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.929 I llm_load_print_meta: n_ff             = 16384
0.00.268.929 I llm_load_print_meta: n_expert         = 0
0.00.268.930 I llm_load_print_meta: n_expert_used    = 0
0.00.268.930 I llm_load_print_meta: causal attn      = 1
0.00.268.930 I llm_load_print_meta: pooling type     = 0
0.00.268.931 I llm_load_print_meta: rope type        = 2
0.00.268.931 I llm_load_print_meta: rope scaling     = linear
0.00.268.933 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.934 I llm_load_print_meta: freq_scale_train = 1
0.00.268.934 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.934 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.935 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.935 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.935 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.935 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.936 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.936 I llm_load_print_meta: model type       = 2B
0.00.268.937 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.938 I llm_load_print_meta: model params     = 2.51 B
0.00.268.939 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.939 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.940 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.940 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.940 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.941 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.941 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.941 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.942 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.942 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.942 I llm_load_print_meta: max token length = 93
0.00.268.963 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.367.985 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.367.991 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.367.992 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.367.992 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.367.993 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.367.993 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.372.976 I llama_new_context_with_model: n_ctx      = 8192
0.00.372.981 I llama_new_context_with_model: n_batch    = 2048
0.00.372.981 I llama_new_context_with_model: n_ubatch   = 512
0.00.372.982 I llama_new_context_with_model: flash_attn = 0
0.00.372.983 I llama_new_context_with_model: freq_base  = 10000.0
0.00.372.984 I llama_new_context_with_model: freq_scale = 1
0.00.401.381 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.401.396 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.401.484 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.402.323 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.402.330 I llama_new_context_with_model: graph nodes  = 601
0.00.402.331 I llama_new_context_with_model: graph splits = 1
0.00.402.333 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.493.158 I main: llama threadpool init, n_threads = 4
0.00.493.169 I 
0.00.493.247 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.493.250 I 
0.00.493.286 I sampler seed: 2958471437
0.00.493.295 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.493.302 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.493.303 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.493.304 I 
 increasities.

I am unable to generate the requested response as it contains sexually suggestive content. I am programmed to adhere to ethical guidelines and cannot provide responses that

0.02.726.337 I llama_perf_sampler_print:    sampling time =       4.63 ms /    33 runs   (    0.14 ms per token,  7132.05 tokens per second)
0.02.726.340 I llama_perf_context_print:        load time =     491.31 ms
0.02.726.341 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.726.342 I llama_perf_context_print:        eval time =    2215.89 ms /    32 runs   (   69.25 ms per token,    14.44 tokens per second)
0.02.726.343 I llama_perf_context_print:       total time =    2233.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.582 I build: 3917 (33d9acf9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.778 I main: llama backend init
0.00.001.866 I main: load the model and apply lora adapter, if any
0.00.022.310 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.321 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.328 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.329 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.332 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.333 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.334 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.334 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.335 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.335 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.340 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.341 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.342 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.342 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.343 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.992 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.970 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.803 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.811 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.811 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.812 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.813 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.813 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.814 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.817 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.817 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.818 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.819 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.819 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.823 I llama_model_loader: - type  f32:   37 tensors
0.00.133.826 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.119 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.239.680 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.240.875 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.244.465 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.251.601 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.252.181 I llm_load_vocab: special tokens cache size = 5
0.00.273.114 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.273.130 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.273.131 I llm_load_print_meta: arch             = gemma
0.00.273.131 I llm_load_print_meta: vocab type       = SPM
0.00.273.132 I llm_load_print_meta: n_vocab          = 256000
0.00.273.132 I llm_load_print_meta: n_merges         = 0
0.00.273.133 I llm_load_print_meta: vocab_only       = 0
0.00.273.133 I llm_load_print_meta: n_ctx_train      = 8192
0.00.273.133 I llm_load_print_meta: n_embd           = 2048
0.00.273.134 I llm_load_print_meta: n_layer          = 18
0.00.273.146 I llm_load_print_meta: n_head           = 8
0.00.273.147 I llm_load_print_meta: n_head_kv        = 1
0.00.273.148 I llm_load_print_meta: n_rot            = 256
0.00.273.148 I llm_load_print_meta: n_swa            = 0
0.00.273.148 I llm_load_print_meta: n_embd_head_k    = 256
0.00.273.149 I llm_load_print_meta: n_embd_head_v    = 256
0.00.273.150 I llm_load_print_meta: n_gqa            = 8
0.00.273.151 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.273.151 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.273.152 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.273.153 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.273.154 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.273.154 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.273.154 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.273.155 I llm_load_print_meta: n_ff             = 16384
0.00.273.155 I llm_load_print_meta: n_expert         = 0
0.00.273.156 I llm_load_print_meta: n_expert_used    = 0
0.00.273.156 I llm_load_print_meta: causal attn      = 1
0.00.273.156 I llm_load_print_meta: pooling type     = 0
0.00.273.157 I llm_load_print_meta: rope type        = 2
0.00.273.157 I llm_load_print_meta: rope scaling     = linear
0.00.273.158 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.159 I llm_load_print_meta: freq_scale_train = 1
0.00.273.159 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.160 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.160 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.160 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.161 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.161 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.161 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.162 I llm_load_print_meta: model type       = 2B
0.00.273.162 I llm_load_print_meta: model ftype      = Q8_0
0.00.273.163 I llm_load_print_meta: model params     = 2.51 B
0.00.273.164 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.273.164 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.165 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.165 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.166 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.166 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.166 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.167 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.167 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.167 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.168 I llm_load_print_meta: max token length = 93
0.00.273.194 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.368.628 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.373.888 I llama_new_context_with_model: n_ctx      = 8192
0.00.373.895 I llama_new_context_with_model: n_batch    = 2048
0.00.373.896 I llama_new_context_with_model: n_ubatch   = 512
0.00.373.896 I llama_new_context_with_model: flash_attn = 0
0.00.373.900 I llama_new_context_with_model: freq_base  = 10000.0
0.00.373.901 I llama_new_context_with_model: freq_scale = 1
0.00.404.042 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.404.058 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.404.157 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.405.012 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.405.019 I llama_new_context_with_model: graph nodes  = 601
0.00.405.020 I llama_new_context_with_model: graph splits = 1
0.00.405.022 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.492.531 I main: llama threadpool init, n_threads = 4
0.00.492.543 I 
0.00.492.621 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.492.625 I 
0.00.492.661 I sampler seed: 899902248
0.00.492.670 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.492.673 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.492.673 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.492.676 I 
 increasities, it is important to remember that the core of any healthy relationship is respect.

**True or False?**

True [end of text]


0.02.386.395 I llama_perf_sampler_print:    sampling time =       4.20 ms /    29 runs   (    0.14 ms per token,  6906.41 tokens per second)
0.02.386.397 I llama_perf_context_print:        load time =     490.64 ms
0.02.386.399 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.386.400 I llama_perf_context_print:        eval time =    1878.37 ms /    28 runs   (   67.08 ms per token,    14.91 tokens per second)
0.02.386.400 I llama_perf_context_print:       total time =    1893.87 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.522 I build: 3917 (33d9acf9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.001.876 I main: load the model and apply lora adapter, if any
0.00.027.505 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.027.568 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.027.577 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.582 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.583 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.588 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.592 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.593 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.594 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.594 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.595 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.600 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.601 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.602 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.603 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.604 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.054.609 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.138.252 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.145.136 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.145.142 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.145.143 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.145.144 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.145.144 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.145.145 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.145.146 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.145.149 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.145.149 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.145.150 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.145.150 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.145.151 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.145.154 I llama_model_loader: - type  f32:   37 tensors
0.00.145.157 I llama_model_loader: - type q8_0:  127 tensors
0.00.227.314 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.357 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.258.563 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.262.377 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.269.766 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.270.324 I llm_load_vocab: special tokens cache size = 5
0.00.291.037 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.291.052 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.291.053 I llm_load_print_meta: arch             = gemma
0.00.291.053 I llm_load_print_meta: vocab type       = SPM
0.00.291.054 I llm_load_print_meta: n_vocab          = 256000
0.00.291.054 I llm_load_print_meta: n_merges         = 0
0.00.291.055 I llm_load_print_meta: vocab_only       = 0
0.00.291.055 I llm_load_print_meta: n_ctx_train      = 8192
0.00.291.056 I llm_load_print_meta: n_embd           = 2048
0.00.291.056 I llm_load_print_meta: n_layer          = 18
0.00.291.068 I llm_load_print_meta: n_head           = 8
0.00.291.069 I llm_load_print_meta: n_head_kv        = 1
0.00.291.070 I llm_load_print_meta: n_rot            = 256
0.00.291.070 I llm_load_print_meta: n_swa            = 0
0.00.291.070 I llm_load_print_meta: n_embd_head_k    = 256
0.00.291.070 I llm_load_print_meta: n_embd_head_v    = 256
0.00.291.071 I llm_load_print_meta: n_gqa            = 8
0.00.291.072 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.291.073 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.291.074 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.291.076 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.291.076 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.291.076 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.291.077 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.291.077 I llm_load_print_meta: n_ff             = 16384
0.00.291.078 I llm_load_print_meta: n_expert         = 0
0.00.291.078 I llm_load_print_meta: n_expert_used    = 0
0.00.291.079 I llm_load_print_meta: causal attn      = 1
0.00.291.079 I llm_load_print_meta: pooling type     = 0
0.00.291.079 I llm_load_print_meta: rope type        = 2
0.00.291.080 I llm_load_print_meta: rope scaling     = linear
0.00.291.081 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.291.082 I llm_load_print_meta: freq_scale_train = 1
0.00.291.082 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.291.083 I llm_load_print_meta: rope_finetuned   = unknown
0.00.291.083 I llm_load_print_meta: ssm_d_conv       = 0
0.00.291.083 I llm_load_print_meta: ssm_d_inner      = 0
0.00.291.084 I llm_load_print_meta: ssm_d_state      = 0
0.00.291.084 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.291.084 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.291.085 I llm_load_print_meta: model type       = 2B
0.00.291.085 I llm_load_print_meta: model ftype      = Q8_0
0.00.291.086 I llm_load_print_meta: model params     = 2.51 B
0.00.291.087 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.291.087 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.291.088 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.291.088 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.291.089 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.291.089 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.291.089 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.291.090 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.291.090 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.291.090 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.291.091 I llm_load_print_meta: max token length = 93
0.00.291.118 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.372.087 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.372.095 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.372.096 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.372.096 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.372.097 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.372.097 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.377.138 I llama_new_context_with_model: n_ctx      = 8192
0.00.377.145 I llama_new_context_with_model: n_batch    = 2048
0.00.377.146 I llama_new_context_with_model: n_ubatch   = 512
0.00.377.146 I llama_new_context_with_model: flash_attn = 0
0.00.377.148 I llama_new_context_with_model: freq_base  = 10000.0
0.00.377.149 I llama_new_context_with_model: freq_scale = 1
0.00.405.567 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.405.586 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.405.680 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.406.697 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.406.705 I llama_new_context_with_model: graph nodes  = 601
0.00.406.706 I llama_new_context_with_model: graph splits = 1
0.00.406.708 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.497.635 I main: llama threadpool init, n_threads = 4
0.00.497.647 I 
0.00.497.724 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.497.728 I 
0.00.497.766 I sampler seed: 360184262
0.00.497.776 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.497.778 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.497.779 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.497.779 I 
 increasities,
And the cunning of her lovers.

Who is she?

**Shakespeare's Juliet** [end of text]


0.02.196.192 I llama_perf_sampler_print:    sampling time =       3.52 ms /    25 runs   (    0.14 ms per token,  7092.20 tokens per second)
0.02.196.195 I llama_perf_context_print:        load time =     495.73 ms
0.02.196.196 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.196.197 I llama_perf_context_print:        eval time =    1684.99 ms /    24 runs   (   70.21 ms per token,    14.24 tokens per second)
0.02.196.198 I llama_perf_context_print:       total time =    1698.57 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.541 I build: 3917 (33d9acf9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.001.888 I main: load the model and apply lora adapter, if any
0.00.022.144 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.194 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.208 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.214 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.218 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.225 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.226 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.228 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.230 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.231 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.232 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.240 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.244 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.245 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.246 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.247 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.618 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.607 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.428 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.434 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.434 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.435 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.436 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.437 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.438 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.440 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.441 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.442 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.443 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.444 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.447 I llama_model_loader: - type  f32:   37 tensors
0.00.133.450 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.902 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.985 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.240.222 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.243.935 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.251.872 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.252.461 I llm_load_vocab: special tokens cache size = 5
0.00.273.587 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.273.605 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.273.605 I llm_load_print_meta: arch             = gemma
0.00.273.606 I llm_load_print_meta: vocab type       = SPM
0.00.273.607 I llm_load_print_meta: n_vocab          = 256000
0.00.273.607 I llm_load_print_meta: n_merges         = 0
0.00.273.607 I llm_load_print_meta: vocab_only       = 0
0.00.273.608 I llm_load_print_meta: n_ctx_train      = 8192
0.00.273.608 I llm_load_print_meta: n_embd           = 2048
0.00.273.608 I llm_load_print_meta: n_layer          = 18
0.00.273.620 I llm_load_print_meta: n_head           = 8
0.00.273.621 I llm_load_print_meta: n_head_kv        = 1
0.00.273.622 I llm_load_print_meta: n_rot            = 256
0.00.273.622 I llm_load_print_meta: n_swa            = 0
0.00.273.622 I llm_load_print_meta: n_embd_head_k    = 256
0.00.273.622 I llm_load_print_meta: n_embd_head_v    = 256
0.00.273.623 I llm_load_print_meta: n_gqa            = 8
0.00.273.624 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.273.625 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.273.626 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.273.627 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.273.627 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.273.628 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.273.628 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.273.629 I llm_load_print_meta: n_ff             = 16384
0.00.273.629 I llm_load_print_meta: n_expert         = 0
0.00.273.629 I llm_load_print_meta: n_expert_used    = 0
0.00.273.630 I llm_load_print_meta: causal attn      = 1
0.00.273.630 I llm_load_print_meta: pooling type     = 0
0.00.273.630 I llm_load_print_meta: rope type        = 2
0.00.273.631 I llm_load_print_meta: rope scaling     = linear
0.00.273.632 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.633 I llm_load_print_meta: freq_scale_train = 1
0.00.273.633 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.633 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.634 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.634 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.634 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.634 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.635 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.635 I llm_load_print_meta: model type       = 2B
0.00.273.636 I llm_load_print_meta: model ftype      = Q8_0
0.00.273.636 I llm_load_print_meta: model params     = 2.51 B
0.00.273.638 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.273.638 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.638 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.639 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.639 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.640 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.640 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.640 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.641 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.641 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.641 I llm_load_print_meta: max token length = 93
0.00.273.662 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.344.252 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.344.261 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.349.281 I llama_new_context_with_model: n_ctx      = 8192
0.00.349.287 I llama_new_context_with_model: n_batch    = 2048
0.00.349.287 I llama_new_context_with_model: n_ubatch   = 512
0.00.349.287 I llama_new_context_with_model: flash_attn = 0
0.00.349.290 I llama_new_context_with_model: freq_base  = 10000.0
0.00.349.291 I llama_new_context_with_model: freq_scale = 1
0.00.379.459 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.379.474 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.379.567 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.380.431 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.380.440 I llama_new_context_with_model: graph nodes  = 601
0.00.380.440 I llama_new_context_with_model: graph splits = 1
0.00.380.442 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.473.521 I main: llama threadpool init, n_threads = 4
0.00.473.533 I 
0.00.473.616 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.473.620 I 
0.00.473.667 I sampler seed: 2032258766
0.00.473.676 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.683 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.473.686 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.686 I 
 increasities and anxieties.

I understand that the term "discomfort" can carry different meanings depending on the context. In this instance, I am referring to

0.02.893.475 I llama_perf_sampler_print:    sampling time =       5.28 ms /    33 runs   (    0.16 ms per token,  6253.55 tokens per second)
0.02.893.477 I llama_perf_context_print:        load time =     471.61 ms
0.02.893.478 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.893.479 I llama_perf_context_print:        eval time =    2400.38 ms /    32 runs   (   75.01 ms per token,    13.33 tokens per second)
0.02.893.480 I llama_perf_context_print:       total time =    2419.96 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.822s
user	0m35.788s
sys	0m9.441s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3917 (33d9acf9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31999.35 ms
main:    total time = 31999.35 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.548 I build: 3917 (33d9acf9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.740 I main: llama backend init
0.00.001.886 I main: load the model and apply lora adapter, if any
0.00.022.033 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.082 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.094 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.100 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.100 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.104 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.105 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.106 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.107 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.108 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.108 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.112 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.113 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.113 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.114 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.115 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.747 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.501 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.301 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.307 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.308 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.309 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.309 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.310 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.311 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.314 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.314 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.315 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.316 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.317 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.320 I llama_model_loader: - type  f32:   37 tensors
0.00.133.323 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.324 I llama_model_loader: - type q6_K:   19 tensors
0.00.210.209 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.594 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.241.835 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.245.578 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.252.958 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.525 I llm_load_vocab: special tokens cache size = 5
0.00.274.581 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.597 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.597 I llm_load_print_meta: arch             = gemma
0.00.274.598 I llm_load_print_meta: vocab type       = SPM
0.00.274.599 I llm_load_print_meta: n_vocab          = 256000
0.00.274.599 I llm_load_print_meta: n_merges         = 0
0.00.274.599 I llm_load_print_meta: vocab_only       = 0
0.00.274.601 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.602 I llm_load_print_meta: n_embd           = 2048
0.00.274.602 I llm_load_print_meta: n_layer          = 18
0.00.274.614 I llm_load_print_meta: n_head           = 8
0.00.274.616 I llm_load_print_meta: n_head_kv        = 1
0.00.274.616 I llm_load_print_meta: n_rot            = 256
0.00.274.617 I llm_load_print_meta: n_swa            = 0
0.00.274.620 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.620 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.621 I llm_load_print_meta: n_gqa            = 8
0.00.274.622 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.625 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.626 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.627 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.627 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.628 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.628 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.629 I llm_load_print_meta: n_ff             = 16384
0.00.274.629 I llm_load_print_meta: n_expert         = 0
0.00.274.630 I llm_load_print_meta: n_expert_used    = 0
0.00.274.631 I llm_load_print_meta: causal attn      = 1
0.00.274.631 I llm_load_print_meta: pooling type     = 0
0.00.274.632 I llm_load_print_meta: rope type        = 2
0.00.274.633 I llm_load_print_meta: rope scaling     = linear
0.00.274.636 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.636 I llm_load_print_meta: freq_scale_train = 1
0.00.274.637 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.637 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.637 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.638 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.638 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.638 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.638 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.639 I llm_load_print_meta: model type       = 2B
0.00.274.639 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.274.641 I llm_load_print_meta: model params     = 2.51 B
0.00.274.642 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.274.643 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.643 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.644 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.644 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.645 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.646 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.646 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.646 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.647 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.647 I llm_load_print_meta: max token length = 93
0.00.274.667 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.334.474 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.334.481 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.334.482 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.334.483 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.334.483 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.334.484 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.339.542 I llama_new_context_with_model: n_ctx      = 8192
0.00.339.549 I llama_new_context_with_model: n_batch    = 2048
0.00.339.549 I llama_new_context_with_model: n_ubatch   = 512
0.00.339.550 I llama_new_context_with_model: flash_attn = 0
0.00.339.552 I llama_new_context_with_model: freq_base  = 10000.0
0.00.339.553 I llama_new_context_with_model: freq_scale = 1
0.00.368.596 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.368.612 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.368.705 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.369.573 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.369.580 I llama_new_context_with_model: graph nodes  = 601
0.00.369.581 I llama_new_context_with_model: graph splits = 1
0.00.369.583 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.450.699 I main: llama threadpool init, n_threads = 4
0.00.450.711 I 
0.00.450.786 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.450.790 I 
0.00.450.827 I sampler seed: 1732304222
0.00.450.836 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.450.838 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.450.839 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.450.839 I 
 seconded my claim regarding the constitutionality of the Environmental Protection Agency's (EPA) authority to regulate greenhouse gas emissions.

**Issue:**

Whether the

0.02.072.548 I llama_perf_sampler_print:    sampling time =       4.94 ms /    33 runs   (    0.15 ms per token,  6680.16 tokens per second)
0.02.072.550 I llama_perf_context_print:        load time =     448.79 ms
0.02.072.552 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.072.553 I llama_perf_context_print:        eval time =    1603.44 ms /    32 runs   (   50.11 ms per token,    19.96 tokens per second)
0.02.072.554 I llama_perf_context_print:       total time =    1621.86 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3917 (33d9acf9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32068.32 ms
main:    total time = 32068.32 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.523 I build: 3917 (33d9acf9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.723 I main: llama backend init
0.00.001.815 I main: load the model and apply lora adapter, if any
0.00.021.859 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.870 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.877 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.878 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.881 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.881 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.882 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.882 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.883 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.883 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.886 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.887 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.887 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.888 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.888 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.012 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.105 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.967 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.973 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.974 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.975 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.976 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.977 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.978 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.981 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.982 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.986 I llama_model_loader: - type  f32:   37 tensors
0.00.131.989 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.989 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.672 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.516 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.239.782 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.243.643 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.251.538 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.252.144 I llm_load_vocab: special tokens cache size = 5
0.00.273.358 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.273.374 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.273.375 I llm_load_print_meta: arch             = gemma
0.00.273.376 I llm_load_print_meta: vocab type       = SPM
0.00.273.376 I llm_load_print_meta: n_vocab          = 256000
0.00.273.377 I llm_load_print_meta: n_merges         = 0
0.00.273.377 I llm_load_print_meta: vocab_only       = 0
0.00.273.377 I llm_load_print_meta: n_ctx_train      = 8192
0.00.273.378 I llm_load_print_meta: n_embd           = 2048
0.00.273.378 I llm_load_print_meta: n_layer          = 18
0.00.273.389 I llm_load_print_meta: n_head           = 8
0.00.273.390 I llm_load_print_meta: n_head_kv        = 1
0.00.273.390 I llm_load_print_meta: n_rot            = 256
0.00.273.391 I llm_load_print_meta: n_swa            = 0
0.00.273.391 I llm_load_print_meta: n_embd_head_k    = 256
0.00.273.391 I llm_load_print_meta: n_embd_head_v    = 256
0.00.273.392 I llm_load_print_meta: n_gqa            = 8
0.00.273.393 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.273.394 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.273.395 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.273.397 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.273.397 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.273.397 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.273.398 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.273.399 I llm_load_print_meta: n_ff             = 16384
0.00.273.399 I llm_load_print_meta: n_expert         = 0
0.00.273.399 I llm_load_print_meta: n_expert_used    = 0
0.00.273.399 I llm_load_print_meta: causal attn      = 1
0.00.273.400 I llm_load_print_meta: pooling type     = 0
0.00.273.400 I llm_load_print_meta: rope type        = 2
0.00.273.400 I llm_load_print_meta: rope scaling     = linear
0.00.273.402 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.403 I llm_load_print_meta: freq_scale_train = 1
0.00.273.403 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.404 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.404 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.404 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.404 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.405 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.405 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.405 I llm_load_print_meta: model type       = 2B
0.00.273.406 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.273.407 I llm_load_print_meta: model params     = 2.51 B
0.00.273.408 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.273.408 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.409 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.409 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.410 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.410 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.410 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.411 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.411 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.411 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.412 I llm_load_print_meta: max token length = 93
0.00.273.437 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.331.343 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.336.353 I llama_new_context_with_model: n_ctx      = 8192
0.00.336.359 I llama_new_context_with_model: n_batch    = 2048
0.00.336.359 I llama_new_context_with_model: n_ubatch   = 512
0.00.336.360 I llama_new_context_with_model: flash_attn = 0
0.00.336.362 I llama_new_context_with_model: freq_base  = 10000.0
0.00.336.363 I llama_new_context_with_model: freq_scale = 1
0.00.365.187 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.365.204 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.365.296 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.366.116 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.366.124 I llama_new_context_with_model: graph nodes  = 601
0.00.366.125 I llama_new_context_with_model: graph splits = 1
0.00.366.126 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.445.689 I main: llama threadpool init, n_threads = 4
0.00.445.700 I 
0.00.445.776 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.445.779 I 
0.00.445.815 I sampler seed: 1452206112
0.00.445.824 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.827 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.445.827 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.827 I 
 squaRED WHITE.

I am not able to access the content of the file.

I am unable to provide a response that includes personally identifiable information, personally

0.02.035.683 I llama_perf_sampler_print:    sampling time =       4.89 ms /    33 runs   (    0.15 ms per token,  6753.99 tokens per second)
0.02.035.686 I llama_perf_context_print:        load time =     443.85 ms
0.02.035.687 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.035.689 I llama_perf_context_print:        eval time =    1571.88 ms /    32 runs   (   49.12 ms per token,    20.36 tokens per second)
0.02.035.690 I llama_perf_context_print:       total time =    1590.00 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.993s
user	8m14.585s
sys	0m7.002s
