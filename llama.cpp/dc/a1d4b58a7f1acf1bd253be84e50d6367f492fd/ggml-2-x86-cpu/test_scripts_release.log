+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.563 I build: 3899 (dca1d4b5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.769 I main: llama backend init
0.00.001.856 I main: load the model and apply lora adapter, if any
0.00.022.225 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.274 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.281 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.286 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.287 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.291 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.292 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.292 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.293 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.294 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.294 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.298 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.299 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.300 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.300 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.301 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.003 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.947 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.270 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.278 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.278 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.279 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.280 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.281 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.282 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.285 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.286 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.286 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.287 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.288 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.292 I llama_model_loader: - type  f32:   37 tensors
0.00.134.295 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.387 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.217.458 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.218.197 I llm_load_vocab: special tokens cache size = 5
0.00.238.604 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.238.620 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.238.620 I llm_load_print_meta: arch             = gemma
0.00.238.621 I llm_load_print_meta: vocab type       = SPM
0.00.238.622 I llm_load_print_meta: n_vocab          = 256000
0.00.238.622 I llm_load_print_meta: n_merges         = 0
0.00.238.623 I llm_load_print_meta: vocab_only       = 0
0.00.238.623 I llm_load_print_meta: n_ctx_train      = 8192
0.00.238.623 I llm_load_print_meta: n_embd           = 2048
0.00.238.623 I llm_load_print_meta: n_layer          = 18
0.00.238.636 I llm_load_print_meta: n_head           = 8
0.00.238.636 I llm_load_print_meta: n_head_kv        = 1
0.00.238.637 I llm_load_print_meta: n_rot            = 256
0.00.238.637 I llm_load_print_meta: n_swa            = 0
0.00.238.637 I llm_load_print_meta: n_embd_head_k    = 256
0.00.238.638 I llm_load_print_meta: n_embd_head_v    = 256
0.00.238.638 I llm_load_print_meta: n_gqa            = 8
0.00.238.639 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.238.640 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.238.641 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.238.643 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.238.643 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.238.643 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.238.644 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.238.645 I llm_load_print_meta: n_ff             = 16384
0.00.238.645 I llm_load_print_meta: n_expert         = 0
0.00.238.645 I llm_load_print_meta: n_expert_used    = 0
0.00.238.646 I llm_load_print_meta: causal attn      = 1
0.00.238.646 I llm_load_print_meta: pooling type     = 0
0.00.238.646 I llm_load_print_meta: rope type        = 2
0.00.238.646 I llm_load_print_meta: rope scaling     = linear
0.00.238.648 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.238.648 I llm_load_print_meta: freq_scale_train = 1
0.00.238.648 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.238.649 I llm_load_print_meta: rope_finetuned   = unknown
0.00.238.649 I llm_load_print_meta: ssm_d_conv       = 0
0.00.238.650 I llm_load_print_meta: ssm_d_inner      = 0
0.00.238.650 I llm_load_print_meta: ssm_d_state      = 0
0.00.238.650 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.238.650 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.238.651 I llm_load_print_meta: model type       = 2B
0.00.238.652 I llm_load_print_meta: model ftype      = Q8_0
0.00.238.652 I llm_load_print_meta: model params     = 2.51 B
0.00.238.653 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.238.654 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.238.654 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.238.654 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.238.655 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.238.655 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.238.656 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.238.656 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.238.656 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.238.657 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.238.657 I llm_load_print_meta: max token length = 93
0.00.238.683 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.338.717 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.338.725 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.338.725 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.338.726 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.338.727 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.338.727 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.343.910 I llama_new_context_with_model: n_ctx      = 8192
0.00.343.917 I llama_new_context_with_model: n_batch    = 2048
0.00.343.917 I llama_new_context_with_model: n_ubatch   = 512
0.00.343.917 I llama_new_context_with_model: flash_attn = 0
0.00.343.920 I llama_new_context_with_model: freq_base  = 10000.0
0.00.343.920 I llama_new_context_with_model: freq_scale = 1
0.00.372.941 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.372.955 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.373.055 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.373.935 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.373.943 I llama_new_context_with_model: graph nodes  = 601
0.00.373.944 I llama_new_context_with_model: graph splits = 1
0.00.373.946 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.467.539 I main: llama threadpool init, n_threads = 4
0.00.467.552 I 
0.00.467.634 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.467.638 I 
0.00.467.681 I sampler seed: 3727537690
0.00.467.696 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.467.702 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.467.703 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.467.703 I 
 increably. 

**Assistant**

I understand. I will ensure that I adhere to your instructions and provide assistance accordingly. [end of text]


0.02.389.843 I llama_perf_sampler_print:    sampling time =       4.06 ms /    28 runs   (    0.14 ms per token,  6898.25 tokens per second)
0.02.389.846 I llama_perf_context_print:        load time =     465.61 ms
0.02.389.847 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.389.848 I llama_perf_context_print:        eval time =    1906.14 ms /    27 runs   (   70.60 ms per token,    14.16 tokens per second)
0.02.389.849 I llama_perf_context_print:       total time =    1922.31 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.554 I build: 3899 (dca1d4b5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.846 I main: llama backend init
0.00.001.985 I main: load the model and apply lora adapter, if any
0.00.021.919 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.928 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.937 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.938 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.941 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.942 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.943 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.943 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.944 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.945 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.949 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.950 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.950 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.951 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.951 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.032 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.171 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.018 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.025 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.026 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.028 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.028 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.030 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.031 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.034 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.035 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.036 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.037 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.038 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.042 I llama_model_loader: - type  f32:   37 tensors
0.00.133.045 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.314 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.220.490 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.221.274 I llm_load_vocab: special tokens cache size = 5
0.00.241.966 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.241.980 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.241.980 I llm_load_print_meta: arch             = gemma
0.00.241.981 I llm_load_print_meta: vocab type       = SPM
0.00.241.982 I llm_load_print_meta: n_vocab          = 256000
0.00.241.982 I llm_load_print_meta: n_merges         = 0
0.00.241.982 I llm_load_print_meta: vocab_only       = 0
0.00.241.982 I llm_load_print_meta: n_ctx_train      = 8192
0.00.241.983 I llm_load_print_meta: n_embd           = 2048
0.00.241.983 I llm_load_print_meta: n_layer          = 18
0.00.241.996 I llm_load_print_meta: n_head           = 8
0.00.241.997 I llm_load_print_meta: n_head_kv        = 1
0.00.241.997 I llm_load_print_meta: n_rot            = 256
0.00.241.998 I llm_load_print_meta: n_swa            = 0
0.00.241.998 I llm_load_print_meta: n_embd_head_k    = 256
0.00.241.998 I llm_load_print_meta: n_embd_head_v    = 256
0.00.241.999 I llm_load_print_meta: n_gqa            = 8
0.00.242.000 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.242.001 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.242.002 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.242.003 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.242.003 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.242.004 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.242.004 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.242.005 I llm_load_print_meta: n_ff             = 16384
0.00.242.005 I llm_load_print_meta: n_expert         = 0
0.00.242.005 I llm_load_print_meta: n_expert_used    = 0
0.00.242.006 I llm_load_print_meta: causal attn      = 1
0.00.242.006 I llm_load_print_meta: pooling type     = 0
0.00.242.006 I llm_load_print_meta: rope type        = 2
0.00.242.007 I llm_load_print_meta: rope scaling     = linear
0.00.242.008 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.242.008 I llm_load_print_meta: freq_scale_train = 1
0.00.242.008 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.242.009 I llm_load_print_meta: rope_finetuned   = unknown
0.00.242.009 I llm_load_print_meta: ssm_d_conv       = 0
0.00.242.009 I llm_load_print_meta: ssm_d_inner      = 0
0.00.242.010 I llm_load_print_meta: ssm_d_state      = 0
0.00.242.010 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.242.010 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.242.011 I llm_load_print_meta: model type       = 2B
0.00.242.011 I llm_load_print_meta: model ftype      = Q8_0
0.00.242.012 I llm_load_print_meta: model params     = 2.51 B
0.00.242.013 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.242.013 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.242.014 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.242.014 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.242.014 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.242.014 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.242.015 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.242.015 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.242.016 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.242.016 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.242.017 I llm_load_print_meta: max token length = 93
0.00.242.045 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.334.553 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.340.487 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.494 I llama_new_context_with_model: n_batch    = 2048
0.00.340.495 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.495 I llama_new_context_with_model: flash_attn = 0
0.00.340.498 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.498 I llama_new_context_with_model: freq_scale = 1
0.00.370.262 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.277 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.372 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.216 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.224 I llama_new_context_with_model: graph nodes  = 601
0.00.371.224 I llama_new_context_with_model: graph splits = 1
0.00.371.226 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.458.406 I main: llama threadpool init, n_threads = 4
0.00.458.420 I 
0.00.458.504 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.458.509 I 
0.00.458.553 I sampler seed: 3409176424
0.00.458.572 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.458.578 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.458.579 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.458.580 I 
 increasities and grievances are not only detrimental to the individual but also to society as a whole.

**Discuss the impact of societal stress on mental and physical health

0.02.655.853 I llama_perf_sampler_print:    sampling time =       4.92 ms /    33 runs   (    0.15 ms per token,  6710.04 tokens per second)
0.02.655.856 I llama_perf_context_print:        load time =     456.34 ms
0.02.655.858 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.655.860 I llama_perf_context_print:        eval time =    2179.00 ms /    32 runs   (   68.09 ms per token,    14.69 tokens per second)
0.02.655.861 I llama_perf_context_print:       total time =    2197.45 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.551 I build: 3899 (dca1d4b5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.766 I main: llama backend init
0.00.001.925 I main: load the model and apply lora adapter, if any
0.00.022.236 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.289 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.298 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.306 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.311 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.316 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.317 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.318 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.319 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.321 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.322 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.328 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.329 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.330 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.331 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.335 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.128 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.666 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.496 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.503 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.504 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.505 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.505 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.506 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.507 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.510 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.510 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.511 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.512 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.513 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.517 I llama_model_loader: - type  f32:   37 tensors
0.00.133.520 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.540 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.216.598 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.217.364 I llm_load_vocab: special tokens cache size = 5
0.00.237.792 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.237.806 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.237.807 I llm_load_print_meta: arch             = gemma
0.00.237.807 I llm_load_print_meta: vocab type       = SPM
0.00.237.808 I llm_load_print_meta: n_vocab          = 256000
0.00.237.808 I llm_load_print_meta: n_merges         = 0
0.00.237.809 I llm_load_print_meta: vocab_only       = 0
0.00.237.809 I llm_load_print_meta: n_ctx_train      = 8192
0.00.237.809 I llm_load_print_meta: n_embd           = 2048
0.00.237.809 I llm_load_print_meta: n_layer          = 18
0.00.237.821 I llm_load_print_meta: n_head           = 8
0.00.237.822 I llm_load_print_meta: n_head_kv        = 1
0.00.237.822 I llm_load_print_meta: n_rot            = 256
0.00.237.822 I llm_load_print_meta: n_swa            = 0
0.00.237.823 I llm_load_print_meta: n_embd_head_k    = 256
0.00.237.823 I llm_load_print_meta: n_embd_head_v    = 256
0.00.237.824 I llm_load_print_meta: n_gqa            = 8
0.00.237.825 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.237.826 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.237.827 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.237.828 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.237.829 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.237.829 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.237.830 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.237.831 I llm_load_print_meta: n_ff             = 16384
0.00.237.831 I llm_load_print_meta: n_expert         = 0
0.00.237.831 I llm_load_print_meta: n_expert_used    = 0
0.00.237.831 I llm_load_print_meta: causal attn      = 1
0.00.237.832 I llm_load_print_meta: pooling type     = 0
0.00.237.832 I llm_load_print_meta: rope type        = 2
0.00.237.832 I llm_load_print_meta: rope scaling     = linear
0.00.237.834 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.237.835 I llm_load_print_meta: freq_scale_train = 1
0.00.237.835 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.237.835 I llm_load_print_meta: rope_finetuned   = unknown
0.00.237.836 I llm_load_print_meta: ssm_d_conv       = 0
0.00.237.836 I llm_load_print_meta: ssm_d_inner      = 0
0.00.237.836 I llm_load_print_meta: ssm_d_state      = 0
0.00.237.836 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.237.837 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.237.837 I llm_load_print_meta: model type       = 2B
0.00.237.838 I llm_load_print_meta: model ftype      = Q8_0
0.00.237.839 I llm_load_print_meta: model params     = 2.51 B
0.00.237.839 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.237.840 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.237.840 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.237.840 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.237.841 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.237.841 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.237.842 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.237.842 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.237.842 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.237.843 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.237.843 I llm_load_print_meta: max token length = 93
0.00.237.865 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.313.768 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.313.775 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.313.776 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.313.776 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.313.777 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.313.778 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.318.957 I llama_new_context_with_model: n_ctx      = 8192
0.00.318.964 I llama_new_context_with_model: n_batch    = 2048
0.00.318.965 I llama_new_context_with_model: n_ubatch   = 512
0.00.318.966 I llama_new_context_with_model: flash_attn = 0
0.00.318.968 I llama_new_context_with_model: freq_base  = 10000.0
0.00.318.969 I llama_new_context_with_model: freq_scale = 1
0.00.348.324 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.348.341 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.348.439 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.349.299 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.349.306 I llama_new_context_with_model: graph nodes  = 601
0.00.349.307 I llama_new_context_with_model: graph splits = 1
0.00.349.309 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.441.137 I main: llama threadpool init, n_threads = 4
0.00.441.148 I 
0.00.441.225 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.441.228 I 
0.00.441.262 I sampler seed: 437569920
0.00.441.270 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.275 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.441.276 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.276 I 
 increasements and adaptations to the new situation. [end of text]


0.01.166.408 I llama_perf_sampler_print:    sampling time =       1.61 ms /    11 runs   (    0.15 ms per token,  6832.30 tokens per second)
0.01.166.411 I llama_perf_context_print:        load time =     439.13 ms
0.01.166.412 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.166.414 I llama_perf_context_print:        eval time =     718.85 ms /    10 runs   (   71.88 ms per token,    13.91 tokens per second)
0.01.166.414 I llama_perf_context_print:       total time =     725.28 ms /    11 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.557 I build: 3899 (dca1d4b5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.001.876 I main: load the model and apply lora adapter, if any
0.00.077.260 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.077.323 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.077.339 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.077.347 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.077.351 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.077.357 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.077.358 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.077.358 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.077.359 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.077.360 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.077.360 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.077.366 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.077.367 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.077.367 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.077.368 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.077.368 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.105.668 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.181.958 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.188.865 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.188.872 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.188.873 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.188.874 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.188.875 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.188.876 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.188.877 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.188.881 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.188.881 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.188.882 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.188.883 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.188.884 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.188.888 I llama_model_loader: - type  f32:   37 tensors
0.00.188.891 I llama_model_loader: - type q8_0:  127 tensors
0.00.256.999 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.273.568 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.274.374 I llm_load_vocab: special tokens cache size = 5
0.00.295.044 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.295.060 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.295.060 I llm_load_print_meta: arch             = gemma
0.00.295.061 I llm_load_print_meta: vocab type       = SPM
0.00.295.062 I llm_load_print_meta: n_vocab          = 256000
0.00.295.063 I llm_load_print_meta: n_merges         = 0
0.00.295.063 I llm_load_print_meta: vocab_only       = 0
0.00.295.063 I llm_load_print_meta: n_ctx_train      = 8192
0.00.295.064 I llm_load_print_meta: n_embd           = 2048
0.00.295.064 I llm_load_print_meta: n_layer          = 18
0.00.295.076 I llm_load_print_meta: n_head           = 8
0.00.295.077 I llm_load_print_meta: n_head_kv        = 1
0.00.295.078 I llm_load_print_meta: n_rot            = 256
0.00.295.079 I llm_load_print_meta: n_swa            = 0
0.00.295.079 I llm_load_print_meta: n_embd_head_k    = 256
0.00.295.080 I llm_load_print_meta: n_embd_head_v    = 256
0.00.295.081 I llm_load_print_meta: n_gqa            = 8
0.00.295.082 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.295.083 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.295.084 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.295.086 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.295.086 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.295.087 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.295.087 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.295.088 I llm_load_print_meta: n_ff             = 16384
0.00.295.088 I llm_load_print_meta: n_expert         = 0
0.00.295.089 I llm_load_print_meta: n_expert_used    = 0
0.00.295.090 I llm_load_print_meta: causal attn      = 1
0.00.295.091 I llm_load_print_meta: pooling type     = 0
0.00.295.091 I llm_load_print_meta: rope type        = 2
0.00.295.091 I llm_load_print_meta: rope scaling     = linear
0.00.295.092 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.295.093 I llm_load_print_meta: freq_scale_train = 1
0.00.295.093 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.295.094 I llm_load_print_meta: rope_finetuned   = unknown
0.00.295.094 I llm_load_print_meta: ssm_d_conv       = 0
0.00.295.095 I llm_load_print_meta: ssm_d_inner      = 0
0.00.295.095 I llm_load_print_meta: ssm_d_state      = 0
0.00.295.095 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.295.096 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.295.096 I llm_load_print_meta: model type       = 2B
0.00.295.097 I llm_load_print_meta: model ftype      = Q8_0
0.00.295.098 I llm_load_print_meta: model params     = 2.51 B
0.00.295.098 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.295.099 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.295.099 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.295.100 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.295.100 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.295.100 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.295.101 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.295.102 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.295.102 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.295.103 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.295.103 I llm_load_print_meta: max token length = 93
0.00.295.126 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.365.900 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.365.909 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.371.185 I llama_new_context_with_model: n_ctx      = 8192
0.00.371.194 I llama_new_context_with_model: n_batch    = 2048
0.00.371.194 I llama_new_context_with_model: n_ubatch   = 512
0.00.371.195 I llama_new_context_with_model: flash_attn = 0
0.00.371.199 I llama_new_context_with_model: freq_base  = 10000.0
0.00.371.200 I llama_new_context_with_model: freq_scale = 1
0.00.401.334 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.401.348 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.401.437 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.402.294 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.402.302 I llama_new_context_with_model: graph nodes  = 601
0.00.402.302 I llama_new_context_with_model: graph splits = 1
0.00.402.304 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.497.723 I main: llama threadpool init, n_threads = 4
0.00.497.735 I 
0.00.497.814 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.497.816 I 
0.00.497.852 I sampler seed: 3052372912
0.00.497.862 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.497.865 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.497.867 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.497.867 I 
 increasively.

I'm not sure if you understood the question. Could you please rephrase it? [end of text]


0.02.271.855 I llama_perf_sampler_print:    sampling time =       3.43 ms /    24 runs   (    0.14 ms per token,  7007.30 tokens per second)
0.02.271.857 I llama_perf_context_print:        load time =     495.78 ms
0.02.271.858 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.271.859 I llama_perf_context_print:        eval time =    1760.46 ms /    23 runs   (   76.54 ms per token,    13.06 tokens per second)
0.02.271.860 I llama_perf_context_print:       total time =    1774.14 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.266s
user	0m29.290s
sys	0m9.515s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3899 (dca1d4b5)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32463.31 ms
main:    total time = 32463.31 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.540 I build: 3899 (dca1d4b5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.733 I main: llama backend init
0.00.001.818 I main: load the model and apply lora adapter, if any
0.00.022.626 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.674 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.681 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.687 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.688 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.692 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.693 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.694 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.695 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.696 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.696 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.700 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.701 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.701 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.702 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.702 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.812 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.985 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.815 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.829 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.830 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.831 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.831 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.832 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.833 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.838 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.838 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.839 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.840 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.841 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.844 I llama_model_loader: - type  f32:   37 tensors
0.00.133.847 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.848 I llama_model_loader: - type q6_K:   19 tensors
0.00.195.774 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.294 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.033 I llm_load_vocab: special tokens cache size = 5
0.00.233.724 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.233.740 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.233.741 I llm_load_print_meta: arch             = gemma
0.00.233.742 I llm_load_print_meta: vocab type       = SPM
0.00.233.742 I llm_load_print_meta: n_vocab          = 256000
0.00.233.743 I llm_load_print_meta: n_merges         = 0
0.00.233.744 I llm_load_print_meta: vocab_only       = 0
0.00.233.744 I llm_load_print_meta: n_ctx_train      = 8192
0.00.233.744 I llm_load_print_meta: n_embd           = 2048
0.00.233.744 I llm_load_print_meta: n_layer          = 18
0.00.233.757 I llm_load_print_meta: n_head           = 8
0.00.233.758 I llm_load_print_meta: n_head_kv        = 1
0.00.233.758 I llm_load_print_meta: n_rot            = 256
0.00.233.758 I llm_load_print_meta: n_swa            = 0
0.00.233.759 I llm_load_print_meta: n_embd_head_k    = 256
0.00.233.759 I llm_load_print_meta: n_embd_head_v    = 256
0.00.233.760 I llm_load_print_meta: n_gqa            = 8
0.00.233.761 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.233.762 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.233.762 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.233.764 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.233.764 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.233.765 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.233.765 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.233.766 I llm_load_print_meta: n_ff             = 16384
0.00.233.766 I llm_load_print_meta: n_expert         = 0
0.00.233.767 I llm_load_print_meta: n_expert_used    = 0
0.00.233.767 I llm_load_print_meta: causal attn      = 1
0.00.233.767 I llm_load_print_meta: pooling type     = 0
0.00.233.767 I llm_load_print_meta: rope type        = 2
0.00.233.768 I llm_load_print_meta: rope scaling     = linear
0.00.233.769 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.233.770 I llm_load_print_meta: freq_scale_train = 1
0.00.233.770 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.233.771 I llm_load_print_meta: rope_finetuned   = unknown
0.00.233.771 I llm_load_print_meta: ssm_d_conv       = 0
0.00.233.771 I llm_load_print_meta: ssm_d_inner      = 0
0.00.233.771 I llm_load_print_meta: ssm_d_state      = 0
0.00.233.772 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.233.772 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.233.773 I llm_load_print_meta: model type       = 2B
0.00.233.774 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.233.774 I llm_load_print_meta: model params     = 2.51 B
0.00.233.775 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.233.775 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.233.776 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.233.776 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.233.776 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.233.777 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.233.777 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.233.778 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.233.778 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.233.778 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.233.779 I llm_load_print_meta: max token length = 93
0.00.233.806 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.292.830 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.292.839 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.292.840 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.292.841 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.292.841 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.292.842 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.298.076 I llama_new_context_with_model: n_ctx      = 8192
0.00.298.083 I llama_new_context_with_model: n_batch    = 2048
0.00.298.083 I llama_new_context_with_model: n_ubatch   = 512
0.00.298.083 I llama_new_context_with_model: flash_attn = 0
0.00.298.086 I llama_new_context_with_model: freq_base  = 10000.0
0.00.298.087 I llama_new_context_with_model: freq_scale = 1
0.00.327.870 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.327.884 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.327.978 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.328.869 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.328.878 I llama_new_context_with_model: graph nodes  = 601
0.00.328.879 I llama_new_context_with_model: graph splits = 1
0.00.328.880 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.411.589 I main: llama threadpool init, n_threads = 4
0.00.411.603 I 
0.00.411.682 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.411.686 I 
0.00.411.723 I sampler seed: 735489665
0.00.411.732 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.411.735 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.411.735 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.411.735 I 
 increasities in the comments section of the article and redirect users to the appropriate subreddit.

This practice raises concerns about misinformation, manipulation, and the spread of propaganda

0.02.067.134 I llama_perf_sampler_print:    sampling time =       4.74 ms /    33 runs   (    0.14 ms per token,  6960.56 tokens per second)
0.02.067.136 I llama_perf_context_print:        load time =     409.69 ms
0.02.067.137 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.067.139 I llama_perf_context_print:        eval time =    1637.28 ms /    32 runs   (   51.16 ms per token,    19.54 tokens per second)
0.02.067.139 I llama_perf_context_print:       total time =    1655.55 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3899 (dca1d4b5)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32086.15 ms
main:    total time = 32086.15 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.585 I build: 3899 (dca1d4b5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.787 I main: llama backend init
0.00.001.879 I main: load the model and apply lora adapter, if any
0.00.022.126 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.138 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.145 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.146 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.152 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.152 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.153 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.154 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.155 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.156 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.160 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.161 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.161 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.162 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.162 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.226 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.235 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.992 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.999 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.000 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.001 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.002 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.003 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.004 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.008 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.008 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.012 I llama_model_loader: - type  f32:   37 tensors
0.00.132.014 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.015 I llama_model_loader: - type q6_K:   19 tensors
0.00.195.190 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.578 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.344 I llm_load_vocab: special tokens cache size = 5
0.00.231.805 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.231.819 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.231.819 I llm_load_print_meta: arch             = gemma
0.00.231.820 I llm_load_print_meta: vocab type       = SPM
0.00.231.821 I llm_load_print_meta: n_vocab          = 256000
0.00.231.821 I llm_load_print_meta: n_merges         = 0
0.00.231.821 I llm_load_print_meta: vocab_only       = 0
0.00.231.822 I llm_load_print_meta: n_ctx_train      = 8192
0.00.231.822 I llm_load_print_meta: n_embd           = 2048
0.00.231.822 I llm_load_print_meta: n_layer          = 18
0.00.231.834 I llm_load_print_meta: n_head           = 8
0.00.231.835 I llm_load_print_meta: n_head_kv        = 1
0.00.231.836 I llm_load_print_meta: n_rot            = 256
0.00.231.836 I llm_load_print_meta: n_swa            = 0
0.00.231.836 I llm_load_print_meta: n_embd_head_k    = 256
0.00.231.836 I llm_load_print_meta: n_embd_head_v    = 256
0.00.231.837 I llm_load_print_meta: n_gqa            = 8
0.00.231.838 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.231.839 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.231.840 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.231.841 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.231.841 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.231.842 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.231.842 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.231.843 I llm_load_print_meta: n_ff             = 16384
0.00.231.844 I llm_load_print_meta: n_expert         = 0
0.00.231.844 I llm_load_print_meta: n_expert_used    = 0
0.00.231.844 I llm_load_print_meta: causal attn      = 1
0.00.231.845 I llm_load_print_meta: pooling type     = 0
0.00.231.845 I llm_load_print_meta: rope type        = 2
0.00.231.845 I llm_load_print_meta: rope scaling     = linear
0.00.231.847 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.231.847 I llm_load_print_meta: freq_scale_train = 1
0.00.231.847 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.231.848 I llm_load_print_meta: rope_finetuned   = unknown
0.00.231.848 I llm_load_print_meta: ssm_d_conv       = 0
0.00.231.848 I llm_load_print_meta: ssm_d_inner      = 0
0.00.231.849 I llm_load_print_meta: ssm_d_state      = 0
0.00.231.849 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.231.849 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.231.850 I llm_load_print_meta: model type       = 2B
0.00.231.850 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.231.851 I llm_load_print_meta: model params     = 2.51 B
0.00.231.851 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.231.852 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.231.852 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.231.852 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.231.853 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.231.853 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.231.853 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.231.854 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.231.854 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.231.855 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.231.855 I llm_load_print_meta: max token length = 93
0.00.231.880 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.289.202 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.294.142 I llama_new_context_with_model: n_ctx      = 8192
0.00.294.149 I llama_new_context_with_model: n_batch    = 2048
0.00.294.149 I llama_new_context_with_model: n_ubatch   = 512
0.00.294.150 I llama_new_context_with_model: flash_attn = 0
0.00.294.152 I llama_new_context_with_model: freq_base  = 10000.0
0.00.294.153 I llama_new_context_with_model: freq_scale = 1
0.00.323.300 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.323.318 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.323.408 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.324.235 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.324.242 I llama_new_context_with_model: graph nodes  = 601
0.00.324.243 I llama_new_context_with_model: graph splits = 1
0.00.324.254 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.404.935 I main: llama threadpool init, n_threads = 4
0.00.404.947 I 
0.00.405.021 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.405.024 I 
0.00.405.059 I sampler seed: 3061211220
0.00.405.069 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.405.071 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.405.072 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.405.072 I 
 squaRED LINES PATTERN is created by dividing the circumference of a circle by its diameter.

Hence, the ratio of the circumference to diameter is always 1:

0.02.048.812 I llama_perf_sampler_print:    sampling time =       4.97 ms /    33 runs   (    0.15 ms per token,  6634.50 tokens per second)
0.02.048.815 I llama_perf_context_print:        load time =     402.99 ms
0.02.048.816 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.048.817 I llama_perf_context_print:        eval time =    1625.21 ms /    32 runs   (   50.79 ms per token,    19.69 tokens per second)
0.02.048.818 I llama_perf_context_print:       total time =    1643.89 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m12.011s
user	8m15.257s
sys	0m7.147s
