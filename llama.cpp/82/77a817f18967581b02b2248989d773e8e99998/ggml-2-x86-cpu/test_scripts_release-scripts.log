+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.537 I build: 3849 (8277a817) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.738 I main: llama backend init
0.00.001.832 I main: load the model and apply lora adapter, if any
0.00.021.974 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.023 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.034 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.040 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.043 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.047 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.047 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.048 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.049 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.049 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.050 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.055 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.056 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.056 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.057 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.057 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.212 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.611 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.506 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.513 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.513 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.514 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.515 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.515 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.516 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.518 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.519 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.520 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.521 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.522 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.525 I llama_model_loader: - type  f32:   37 tensors
0.00.133.528 I llama_model_loader: - type q8_0:  127 tensors
0.00.189.663 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.203.243 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.920 I llm_load_vocab: special tokens cache size = 5
0.00.224.840 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.854 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.854 I llm_load_print_meta: arch             = gemma
0.00.224.855 I llm_load_print_meta: vocab type       = SPM
0.00.224.855 I llm_load_print_meta: n_vocab          = 256000
0.00.224.856 I llm_load_print_meta: n_merges         = 0
0.00.224.857 I llm_load_print_meta: vocab_only       = 0
0.00.224.857 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.857 I llm_load_print_meta: n_embd           = 2048
0.00.224.857 I llm_load_print_meta: n_layer          = 18
0.00.224.869 I llm_load_print_meta: n_head           = 8
0.00.224.870 I llm_load_print_meta: n_head_kv        = 1
0.00.224.871 I llm_load_print_meta: n_rot            = 256
0.00.224.871 I llm_load_print_meta: n_swa            = 0
0.00.224.871 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.871 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.872 I llm_load_print_meta: n_gqa            = 8
0.00.224.873 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.874 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.875 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.877 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.877 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.877 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.878 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.878 I llm_load_print_meta: n_ff             = 16384
0.00.224.879 I llm_load_print_meta: n_expert         = 0
0.00.224.879 I llm_load_print_meta: n_expert_used    = 0
0.00.224.879 I llm_load_print_meta: causal attn      = 1
0.00.224.880 I llm_load_print_meta: pooling type     = 0
0.00.224.880 I llm_load_print_meta: rope type        = 2
0.00.224.880 I llm_load_print_meta: rope scaling     = linear
0.00.224.882 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.882 I llm_load_print_meta: freq_scale_train = 1
0.00.224.883 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.883 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.883 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.884 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.884 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.884 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.885 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.885 I llm_load_print_meta: model type       = 2B
0.00.224.886 I llm_load_print_meta: model ftype      = Q8_0
0.00.224.887 I llm_load_print_meta: model params     = 2.51 B
0.00.224.887 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.224.888 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.888 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.888 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.889 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.889 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.889 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.890 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.890 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.891 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.891 I llm_load_print_meta: max token length = 93
0.00.224.916 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.323.834 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.323.842 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.323.843 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.323.844 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.323.844 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.323.845 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.328.958 I llama_new_context_with_model: n_ctx      = 8192
0.00.328.964 I llama_new_context_with_model: n_batch    = 2048
0.00.328.964 I llama_new_context_with_model: n_ubatch   = 512
0.00.328.965 I llama_new_context_with_model: flash_attn = 0
0.00.328.967 I llama_new_context_with_model: freq_base  = 10000.0
0.00.328.968 I llama_new_context_with_model: freq_scale = 1
0.00.357.771 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.357.785 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.357.874 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.358.734 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.358.742 I llama_new_context_with_model: graph nodes  = 601
0.00.358.743 I llama_new_context_with_model: graph splits = 1
0.00.358.744 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.449.493 I main: llama threadpool init, n_threads = 4
0.00.449.504 I 
0.00.449.578 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.449.581 I 
0.00.449.622 I sampler seed: 800308277
0.00.449.632 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.449.634 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.449.635 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.449.635 I 
 increamically. [end of text]


0.00.731.665 I llama_perf_sampler_print:    sampling time =       0.60 ms /     5 runs   (    0.12 ms per token,  8347.25 tokens per second)
0.00.731.668 I llama_perf_context_print:        load time =     447.64 ms
0.00.731.670 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.731.673 I llama_perf_context_print:        eval time =     278.87 ms /     4 runs   (   69.72 ms per token,    14.34 tokens per second)
0.00.731.674 I llama_perf_context_print:       total time =     282.18 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.587 I build: 3849 (8277a817) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.814 I main: llama backend init
0.00.001.942 I main: load the model and apply lora adapter, if any
0.00.022.208 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.223 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.230 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.231 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.235 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.236 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.237 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.238 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.238 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.239 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.246 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.246 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.247 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.248 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.249 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.899 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.016 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.889 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.895 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.895 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.896 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.897 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.898 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.898 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.901 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.903 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.904 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.904 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.905 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.908 I llama_model_loader: - type  f32:   37 tensors
0.00.132.912 I llama_model_loader: - type q8_0:  127 tensors
0.00.191.327 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.822 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.656 I llm_load_vocab: special tokens cache size = 5
0.00.232.854 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.867 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.868 I llm_load_print_meta: arch             = gemma
0.00.232.868 I llm_load_print_meta: vocab type       = SPM
0.00.232.869 I llm_load_print_meta: n_vocab          = 256000
0.00.232.869 I llm_load_print_meta: n_merges         = 0
0.00.232.870 I llm_load_print_meta: vocab_only       = 0
0.00.232.870 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.870 I llm_load_print_meta: n_embd           = 2048
0.00.232.871 I llm_load_print_meta: n_layer          = 18
0.00.232.883 I llm_load_print_meta: n_head           = 8
0.00.232.884 I llm_load_print_meta: n_head_kv        = 1
0.00.232.884 I llm_load_print_meta: n_rot            = 256
0.00.232.885 I llm_load_print_meta: n_swa            = 0
0.00.232.885 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.885 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.886 I llm_load_print_meta: n_gqa            = 8
0.00.232.887 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.888 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.889 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.890 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.891 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.891 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.891 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.892 I llm_load_print_meta: n_ff             = 16384
0.00.232.893 I llm_load_print_meta: n_expert         = 0
0.00.232.893 I llm_load_print_meta: n_expert_used    = 0
0.00.232.893 I llm_load_print_meta: causal attn      = 1
0.00.232.893 I llm_load_print_meta: pooling type     = 0
0.00.232.893 I llm_load_print_meta: rope type        = 2
0.00.232.894 I llm_load_print_meta: rope scaling     = linear
0.00.232.895 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.896 I llm_load_print_meta: freq_scale_train = 1
0.00.232.896 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.896 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.897 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.897 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.897 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.898 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.898 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.898 I llm_load_print_meta: model type       = 2B
0.00.232.899 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.900 I llm_load_print_meta: model params     = 2.51 B
0.00.232.900 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.901 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.901 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.901 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.902 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.902 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.902 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.903 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.903 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.904 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.904 I llm_load_print_meta: max token length = 93
0.00.232.923 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.328.820 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.334.247 I llama_new_context_with_model: n_ctx      = 8192
0.00.334.253 I llama_new_context_with_model: n_batch    = 2048
0.00.334.253 I llama_new_context_with_model: n_ubatch   = 512
0.00.334.254 I llama_new_context_with_model: flash_attn = 0
0.00.334.256 I llama_new_context_with_model: freq_base  = 10000.0
0.00.334.257 I llama_new_context_with_model: freq_scale = 1
0.00.364.428 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.364.443 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.364.546 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.450 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.365.458 I llama_new_context_with_model: graph nodes  = 601
0.00.365.458 I llama_new_context_with_model: graph splits = 1
0.00.365.460 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.289 I main: llama threadpool init, n_threads = 4
0.00.452.300 I 
0.00.452.383 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.452.395 I 
0.00.452.443 I sampler seed: 2686688862
0.00.452.452 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.455 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.452.456 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.456 I 
 increasities, but did not engage in any physical contact.

The sentence is from a legal document. What is the most likely meaning of this sentence?



0.02.625.132 I llama_perf_sampler_print:    sampling time =       5.06 ms /    33 runs   (    0.15 ms per token,  6525.61 tokens per second)
0.02.625.134 I llama_perf_context_print:        load time =     450.33 ms
0.02.625.135 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.625.137 I llama_perf_context_print:        eval time =    2153.71 ms /    32 runs   (   67.30 ms per token,    14.86 tokens per second)
0.02.625.138 I llama_perf_context_print:       total time =    2172.85 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.551 I build: 3849 (8277a817) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.772 I main: llama backend init
0.00.001.908 I main: load the model and apply lora adapter, if any
0.00.022.087 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.138 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.147 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.154 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.156 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.161 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.162 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.163 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.165 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.168 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.169 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.175 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.176 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.177 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.178 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.178 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.005 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.889 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.936 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.943 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.944 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.945 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.946 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.948 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.949 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.952 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.953 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.954 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.955 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.956 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.959 I llama_model_loader: - type  f32:   37 tensors
0.00.132.962 I llama_model_loader: - type q8_0:  127 tensors
0.00.189.491 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.631 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.335 I llm_load_vocab: special tokens cache size = 5
0.00.224.262 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.275 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.275 I llm_load_print_meta: arch             = gemma
0.00.224.276 I llm_load_print_meta: vocab type       = SPM
0.00.224.277 I llm_load_print_meta: n_vocab          = 256000
0.00.224.277 I llm_load_print_meta: n_merges         = 0
0.00.224.277 I llm_load_print_meta: vocab_only       = 0
0.00.224.278 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.278 I llm_load_print_meta: n_embd           = 2048
0.00.224.278 I llm_load_print_meta: n_layer          = 18
0.00.224.292 I llm_load_print_meta: n_head           = 8
0.00.224.293 I llm_load_print_meta: n_head_kv        = 1
0.00.224.293 I llm_load_print_meta: n_rot            = 256
0.00.224.294 I llm_load_print_meta: n_swa            = 0
0.00.224.294 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.294 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.295 I llm_load_print_meta: n_gqa            = 8
0.00.224.296 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.297 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.298 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.299 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.299 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.300 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.300 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.301 I llm_load_print_meta: n_ff             = 16384
0.00.224.302 I llm_load_print_meta: n_expert         = 0
0.00.224.302 I llm_load_print_meta: n_expert_used    = 0
0.00.224.302 I llm_load_print_meta: causal attn      = 1
0.00.224.302 I llm_load_print_meta: pooling type     = 0
0.00.224.303 I llm_load_print_meta: rope type        = 2
0.00.224.303 I llm_load_print_meta: rope scaling     = linear
0.00.224.304 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.305 I llm_load_print_meta: freq_scale_train = 1
0.00.224.305 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.306 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.306 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.306 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.307 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.307 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.307 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.308 I llm_load_print_meta: model type       = 2B
0.00.224.308 I llm_load_print_meta: model ftype      = Q8_0
0.00.224.309 I llm_load_print_meta: model params     = 2.51 B
0.00.224.310 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.224.310 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.311 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.311 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.313 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.314 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.314 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.314 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.315 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.316 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.317 I llm_load_print_meta: max token length = 93
0.00.224.338 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.300.338 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.300.346 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.300.347 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.300.348 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.300.348 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.300.349 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.305.580 I llama_new_context_with_model: n_ctx      = 8192
0.00.305.588 I llama_new_context_with_model: n_batch    = 2048
0.00.305.589 I llama_new_context_with_model: n_ubatch   = 512
0.00.305.589 I llama_new_context_with_model: flash_attn = 0
0.00.305.593 I llama_new_context_with_model: freq_base  = 10000.0
0.00.305.594 I llama_new_context_with_model: freq_scale = 1
0.00.336.127 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.336.142 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.336.239 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.337.097 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.337.105 I llama_new_context_with_model: graph nodes  = 601
0.00.337.105 I llama_new_context_with_model: graph splits = 1
0.00.337.107 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.427.889 I main: llama threadpool init, n_threads = 4
0.00.427.900 I 
0.00.427.982 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.427.986 I 
0.00.428.034 I sampler seed: 2929681677
0.00.428.046 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.428.049 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.428.049 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.428.049 I 
 increasities.

I cannot find information about this word on any reputable dictionary website.

**Definition:**
A word that describes something that is highly sexual in

0.02.669.399 I llama_perf_sampler_print:    sampling time =       5.11 ms /    33 runs   (    0.15 ms per token,  6456.66 tokens per second)
0.02.669.401 I llama_perf_context_print:        load time =     425.96 ms
0.02.669.403 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.669.404 I llama_perf_context_print:        eval time =    2223.02 ms /    32 runs   (   69.47 ms per token,    14.39 tokens per second)
0.02.669.405 I llama_perf_context_print:       total time =    2241.52 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.619 I build: 3849 (8277a817) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.850 I main: llama backend init
0.00.002.001 I main: load the model and apply lora adapter, if any
0.00.022.275 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.331 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.344 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.350 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.354 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.359 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.361 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.362 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.363 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.364 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.365 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.370 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.371 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.372 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.374 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.374 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.299 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.048 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.924 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.931 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.932 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.932 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.933 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.934 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.935 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.937 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.938 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.939 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.940 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.940 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.944 I llama_model_loader: - type  f32:   37 tensors
0.00.133.947 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.626 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.057 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.722 I llm_load_vocab: special tokens cache size = 5
0.00.223.735 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.749 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.749 I llm_load_print_meta: arch             = gemma
0.00.223.750 I llm_load_print_meta: vocab type       = SPM
0.00.223.750 I llm_load_print_meta: n_vocab          = 256000
0.00.223.751 I llm_load_print_meta: n_merges         = 0
0.00.223.751 I llm_load_print_meta: vocab_only       = 0
0.00.223.752 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.752 I llm_load_print_meta: n_embd           = 2048
0.00.223.752 I llm_load_print_meta: n_layer          = 18
0.00.223.765 I llm_load_print_meta: n_head           = 8
0.00.223.766 I llm_load_print_meta: n_head_kv        = 1
0.00.223.766 I llm_load_print_meta: n_rot            = 256
0.00.223.767 I llm_load_print_meta: n_swa            = 0
0.00.223.767 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.767 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.768 I llm_load_print_meta: n_gqa            = 8
0.00.223.769 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.770 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.771 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.772 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.773 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.773 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.773 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.774 I llm_load_print_meta: n_ff             = 16384
0.00.223.774 I llm_load_print_meta: n_expert         = 0
0.00.223.775 I llm_load_print_meta: n_expert_used    = 0
0.00.223.775 I llm_load_print_meta: causal attn      = 1
0.00.223.775 I llm_load_print_meta: pooling type     = 0
0.00.223.776 I llm_load_print_meta: rope type        = 2
0.00.223.776 I llm_load_print_meta: rope scaling     = linear
0.00.223.777 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.778 I llm_load_print_meta: freq_scale_train = 1
0.00.223.778 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.778 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.779 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.779 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.779 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.780 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.780 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.780 I llm_load_print_meta: model type       = 2B
0.00.223.781 I llm_load_print_meta: model ftype      = Q8_0
0.00.223.781 I llm_load_print_meta: model params     = 2.51 B
0.00.223.782 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.223.783 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.783 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.783 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.784 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.784 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.785 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.785 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.785 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.786 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.786 I llm_load_print_meta: max token length = 93
0.00.223.811 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.294.203 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.294.211 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.299.262 I llama_new_context_with_model: n_ctx      = 8192
0.00.299.269 I llama_new_context_with_model: n_batch    = 2048
0.00.299.269 I llama_new_context_with_model: n_ubatch   = 512
0.00.299.270 I llama_new_context_with_model: flash_attn = 0
0.00.299.273 I llama_new_context_with_model: freq_base  = 10000.0
0.00.299.273 I llama_new_context_with_model: freq_scale = 1
0.00.327.794 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.327.808 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.327.908 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.328.784 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.328.792 I llama_new_context_with_model: graph nodes  = 601
0.00.328.792 I llama_new_context_with_model: graph splits = 1
0.00.328.794 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.423.793 I main: llama threadpool init, n_threads = 4
0.00.423.806 I 
0.00.423.889 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.423.893 I 
0.00.423.944 I sampler seed: 2981816576
0.00.423.954 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.423.956 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.423.957 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.423.957 I 
 increasities in your answer.

I am unable to generate sexually suggestive or inappropriate content. My purpose is to provide safe and ethical responses. [end of text]


0.02.630.045 I llama_perf_sampler_print:    sampling time =       4.74 ms /    30 runs   (    0.16 ms per token,  6325.11 tokens per second)
0.02.630.047 I llama_perf_context_print:        load time =     421.77 ms
0.02.630.048 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.630.050 I llama_perf_context_print:        eval time =    2188.20 ms /    29 runs   (   75.46 ms per token,    13.25 tokens per second)
0.02.630.051 I llama_perf_context_print:       total time =    2206.26 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.467s
user	0m30.311s
sys	0m9.395s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3849 (8277a817)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31990.49 ms
main:    total time = 31990.49 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.557 I build: 3849 (8277a817) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.769 I main: llama backend init
0.00.001.867 I main: load the model and apply lora adapter, if any
0.00.022.065 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.114 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.122 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.128 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.131 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.136 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.137 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.138 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.139 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.140 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.140 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.145 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.145 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.146 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.146 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.147 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.046 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.761 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.625 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.631 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.632 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.632 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.633 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.634 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.634 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.637 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.637 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.638 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.639 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.640 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.642 I llama_model_loader: - type  f32:   37 tensors
0.00.132.645 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.645 I llama_model_loader: - type q6_K:   19 tensors
0.00.187.254 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.992 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.563 I llm_load_vocab: special tokens cache size = 5
0.00.221.436 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.450 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.451 I llm_load_print_meta: arch             = gemma
0.00.221.451 I llm_load_print_meta: vocab type       = SPM
0.00.221.452 I llm_load_print_meta: n_vocab          = 256000
0.00.221.452 I llm_load_print_meta: n_merges         = 0
0.00.221.453 I llm_load_print_meta: vocab_only       = 0
0.00.221.453 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.453 I llm_load_print_meta: n_embd           = 2048
0.00.221.454 I llm_load_print_meta: n_layer          = 18
0.00.221.466 I llm_load_print_meta: n_head           = 8
0.00.221.466 I llm_load_print_meta: n_head_kv        = 1
0.00.221.467 I llm_load_print_meta: n_rot            = 256
0.00.221.467 I llm_load_print_meta: n_swa            = 0
0.00.221.467 I llm_load_print_meta: n_embd_head_k    = 256
0.00.221.468 I llm_load_print_meta: n_embd_head_v    = 256
0.00.221.469 I llm_load_print_meta: n_gqa            = 8
0.00.221.470 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.221.470 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.221.471 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.221.473 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.221.473 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.221.473 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.221.474 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.221.474 I llm_load_print_meta: n_ff             = 16384
0.00.221.475 I llm_load_print_meta: n_expert         = 0
0.00.221.475 I llm_load_print_meta: n_expert_used    = 0
0.00.221.475 I llm_load_print_meta: causal attn      = 1
0.00.221.475 I llm_load_print_meta: pooling type     = 0
0.00.221.476 I llm_load_print_meta: rope type        = 2
0.00.221.476 I llm_load_print_meta: rope scaling     = linear
0.00.221.477 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.478 I llm_load_print_meta: freq_scale_train = 1
0.00.221.479 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.479 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.479 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.480 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.480 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.480 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.480 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.481 I llm_load_print_meta: model type       = 2B
0.00.221.481 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.221.482 I llm_load_print_meta: model params     = 2.51 B
0.00.221.483 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.221.484 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.484 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.485 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.485 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.485 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.486 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.486 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.486 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.487 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.487 I llm_load_print_meta: max token length = 93
0.00.221.506 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.280.137 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.280.144 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.280.145 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.280.146 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.280.146 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.280.147 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.285.125 I llama_new_context_with_model: n_ctx      = 8192
0.00.285.130 I llama_new_context_with_model: n_batch    = 2048
0.00.285.131 I llama_new_context_with_model: n_ubatch   = 512
0.00.285.132 I llama_new_context_with_model: flash_attn = 0
0.00.285.134 I llama_new_context_with_model: freq_base  = 10000.0
0.00.285.135 I llama_new_context_with_model: freq_scale = 1
0.00.315.412 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.315.427 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.315.520 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.316.387 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.316.395 I llama_new_context_with_model: graph nodes  = 601
0.00.316.396 I llama_new_context_with_model: graph splits = 1
0.00.316.397 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.397.010 I main: llama threadpool init, n_threads = 4
0.00.397.023 I 
0.00.397.097 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.397.100 I 
0.00.397.137 I sampler seed: 167685306
0.00.397.146 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.397.149 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.397.149 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.397.150 I 
 seconal
**Answer:**

I am unable to access personal or sensitive information, including social security numbers, credit card numbers, personal contact information, medical records

0.01.992.354 I llama_perf_sampler_print:    sampling time =       4.76 ms /    33 runs   (    0.14 ms per token,  6934.23 tokens per second)
0.01.992.357 I llama_perf_context_print:        load time =     395.13 ms
0.01.992.378 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.992.380 I llama_perf_context_print:        eval time =    1577.76 ms /    32 runs   (   49.30 ms per token,    20.28 tokens per second)
0.01.992.381 I llama_perf_context_print:       total time =    1595.35 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3849 (8277a817)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32023.53 ms
main:    total time = 32023.53 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.532 I build: 3849 (8277a817) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.849 I main: load the model and apply lora adapter, if any
0.00.022.207 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.218 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.225 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.226 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.230 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.231 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.232 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.234 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.235 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.236 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.240 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.241 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.242 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.243 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.244 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.862 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.957 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.933 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.939 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.939 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.940 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.941 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.942 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.942 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.945 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.946 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.951 I llama_model_loader: - type  f32:   37 tensors
0.00.132.953 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.954 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.421 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.219.642 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.220.398 I llm_load_vocab: special tokens cache size = 5
0.00.241.414 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.241.428 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.241.429 I llm_load_print_meta: arch             = gemma
0.00.241.429 I llm_load_print_meta: vocab type       = SPM
0.00.241.430 I llm_load_print_meta: n_vocab          = 256000
0.00.241.430 I llm_load_print_meta: n_merges         = 0
0.00.241.431 I llm_load_print_meta: vocab_only       = 0
0.00.241.431 I llm_load_print_meta: n_ctx_train      = 8192
0.00.241.431 I llm_load_print_meta: n_embd           = 2048
0.00.241.432 I llm_load_print_meta: n_layer          = 18
0.00.241.446 I llm_load_print_meta: n_head           = 8
0.00.241.447 I llm_load_print_meta: n_head_kv        = 1
0.00.241.449 I llm_load_print_meta: n_rot            = 256
0.00.241.449 I llm_load_print_meta: n_swa            = 0
0.00.241.450 I llm_load_print_meta: n_embd_head_k    = 256
0.00.241.451 I llm_load_print_meta: n_embd_head_v    = 256
0.00.241.452 I llm_load_print_meta: n_gqa            = 8
0.00.241.454 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.241.455 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.241.456 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.241.458 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.241.459 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.241.459 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.241.460 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.241.462 I llm_load_print_meta: n_ff             = 16384
0.00.241.462 I llm_load_print_meta: n_expert         = 0
0.00.241.463 I llm_load_print_meta: n_expert_used    = 0
0.00.241.463 I llm_load_print_meta: causal attn      = 1
0.00.241.464 I llm_load_print_meta: pooling type     = 0
0.00.241.464 I llm_load_print_meta: rope type        = 2
0.00.241.465 I llm_load_print_meta: rope scaling     = linear
0.00.241.467 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.241.468 I llm_load_print_meta: freq_scale_train = 1
0.00.241.469 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.241.470 I llm_load_print_meta: rope_finetuned   = unknown
0.00.241.470 I llm_load_print_meta: ssm_d_conv       = 0
0.00.241.471 I llm_load_print_meta: ssm_d_inner      = 0
0.00.241.471 I llm_load_print_meta: ssm_d_state      = 0
0.00.241.472 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.241.472 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.241.473 I llm_load_print_meta: model type       = 2B
0.00.241.474 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.241.476 I llm_load_print_meta: model params     = 2.51 B
0.00.241.477 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.241.477 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.241.478 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.241.479 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.241.479 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.241.479 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.241.480 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.241.481 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.241.481 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.241.482 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.241.482 I llm_load_print_meta: max token length = 93
0.00.241.505 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.299.440 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.304.519 I llama_new_context_with_model: n_ctx      = 8192
0.00.304.525 I llama_new_context_with_model: n_batch    = 2048
0.00.304.526 I llama_new_context_with_model: n_ubatch   = 512
0.00.304.527 I llama_new_context_with_model: flash_attn = 0
0.00.304.529 I llama_new_context_with_model: freq_base  = 10000.0
0.00.304.530 I llama_new_context_with_model: freq_scale = 1
0.00.333.589 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.333.606 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.333.696 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.334.595 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.334.604 I llama_new_context_with_model: graph nodes  = 601
0.00.334.604 I llama_new_context_with_model: graph splits = 1
0.00.334.606 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.414.882 I main: llama threadpool init, n_threads = 4
0.00.414.894 I 
0.00.414.990 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.414.993 I 
0.00.415.041 I sampler seed: 3874971659
0.00.415.052 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.415.056 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.415.056 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.415.058 I 
 seconal, 2023.

**The future of work is here, and it's changing the way we think about jobs.**

**

0.02.015.608 I llama_perf_sampler_print:    sampling time =       4.67 ms /    33 runs   (    0.14 ms per token,  7066.38 tokens per second)
0.02.015.610 I llama_perf_context_print:        load time =     413.01 ms
0.02.015.612 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.015.614 I llama_perf_context_print:        eval time =    1582.58 ms /    32 runs   (   49.46 ms per token,    20.22 tokens per second)
0.02.015.614 I llama_perf_context_print:       total time =    1600.73 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.834s
user	8m14.144s
sys	0m6.921s
