+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.559 I build: 3895 (f1af42fa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.001.876 I main: load the model and apply lora adapter, if any
0.00.022.450 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.495 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.507 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.513 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.517 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.520 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.521 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.522 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.523 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.524 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.524 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.529 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.530 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.531 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.532 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.532 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.364 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.354 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.405 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.414 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.415 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.416 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.417 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.418 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.419 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.423 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.424 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.425 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.426 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.427 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.431 I llama_model_loader: - type  f32:   37 tensors
0.00.133.434 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.535 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.233.266 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.234.086 I llm_load_vocab: special tokens cache size = 5
0.00.255.758 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.255.775 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.255.776 I llm_load_print_meta: arch             = gemma
0.00.255.776 I llm_load_print_meta: vocab type       = SPM
0.00.255.777 I llm_load_print_meta: n_vocab          = 256000
0.00.255.778 I llm_load_print_meta: n_merges         = 0
0.00.255.779 I llm_load_print_meta: vocab_only       = 0
0.00.255.779 I llm_load_print_meta: n_ctx_train      = 8192
0.00.255.779 I llm_load_print_meta: n_embd           = 2048
0.00.255.780 I llm_load_print_meta: n_layer          = 18
0.00.255.795 I llm_load_print_meta: n_head           = 8
0.00.255.796 I llm_load_print_meta: n_head_kv        = 1
0.00.255.796 I llm_load_print_meta: n_rot            = 256
0.00.255.796 I llm_load_print_meta: n_swa            = 0
0.00.255.797 I llm_load_print_meta: n_embd_head_k    = 256
0.00.255.797 I llm_load_print_meta: n_embd_head_v    = 256
0.00.255.798 I llm_load_print_meta: n_gqa            = 8
0.00.255.799 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.255.800 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.255.801 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.255.802 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.255.802 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.255.803 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.255.803 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.255.804 I llm_load_print_meta: n_ff             = 16384
0.00.255.804 I llm_load_print_meta: n_expert         = 0
0.00.255.805 I llm_load_print_meta: n_expert_used    = 0
0.00.255.805 I llm_load_print_meta: causal attn      = 1
0.00.255.805 I llm_load_print_meta: pooling type     = 0
0.00.255.805 I llm_load_print_meta: rope type        = 2
0.00.255.806 I llm_load_print_meta: rope scaling     = linear
0.00.255.807 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.255.807 I llm_load_print_meta: freq_scale_train = 1
0.00.255.808 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.255.808 I llm_load_print_meta: rope_finetuned   = unknown
0.00.255.808 I llm_load_print_meta: ssm_d_conv       = 0
0.00.255.809 I llm_load_print_meta: ssm_d_inner      = 0
0.00.255.809 I llm_load_print_meta: ssm_d_state      = 0
0.00.255.809 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.255.810 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.255.810 I llm_load_print_meta: model type       = 2B
0.00.255.811 I llm_load_print_meta: model ftype      = Q8_0
0.00.255.811 I llm_load_print_meta: model params     = 2.51 B
0.00.255.812 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.255.812 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.255.813 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.255.813 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.255.813 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.255.814 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.255.814 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.255.815 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.255.815 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.255.816 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.255.816 I llm_load_print_meta: max token length = 93
0.00.255.836 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.353.882 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.353.892 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.353.892 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.353.893 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.353.894 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.353.894 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.359.098 I llama_new_context_with_model: n_ctx      = 8192
0.00.359.106 I llama_new_context_with_model: n_batch    = 2048
0.00.359.107 I llama_new_context_with_model: n_ubatch   = 512
0.00.359.107 I llama_new_context_with_model: flash_attn = 0
0.00.359.110 I llama_new_context_with_model: freq_base  = 10000.0
0.00.359.111 I llama_new_context_with_model: freq_scale = 1
0.00.389.792 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.389.809 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.389.902 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.390.806 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.390.814 I llama_new_context_with_model: graph nodes  = 601
0.00.390.814 I llama_new_context_with_model: graph splits = 1
0.00.390.816 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.485.822 I main: llama threadpool init, n_threads = 4
0.00.485.834 I 
0.00.485.912 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.485.915 I 
0.00.485.951 I sampler seed: 3910053955
0.00.485.961 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.485.964 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.485.964 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.485.965 I 
 increasities, and other forms of sexual harassment.

## Addressing Sexual Harassment

**1. Educate and raise awareness:**

- Implement training programs for employees,

0.02.765.733 I llama_perf_sampler_print:    sampling time =       5.21 ms /    33 runs   (    0.16 ms per token,  6336.41 tokens per second)
0.02.765.735 I llama_perf_context_print:        load time =     483.88 ms
0.02.765.736 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.765.738 I llama_perf_context_print:        eval time =    2261.34 ms /    32 runs   (   70.67 ms per token,    14.15 tokens per second)
0.02.765.739 I llama_perf_context_print:       total time =    2279.92 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.544 I build: 3895 (f1af42fa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.772 I main: llama backend init
0.00.001.864 I main: load the model and apply lora adapter, if any
0.00.021.949 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.962 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.969 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.969 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.973 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.973 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.975 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.975 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.976 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.976 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.981 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.982 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.983 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.983 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.983 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.676 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.387 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.326 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.333 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.334 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.335 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.335 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.336 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.337 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.339 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.340 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.341 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.341 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.342 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.347 I llama_model_loader: - type  f32:   37 tensors
0.00.132.352 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.194 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.223.880 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.224.752 I llm_load_vocab: special tokens cache size = 5
0.00.246.352 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.246.370 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.246.371 I llm_load_print_meta: arch             = gemma
0.00.246.371 I llm_load_print_meta: vocab type       = SPM
0.00.246.372 I llm_load_print_meta: n_vocab          = 256000
0.00.246.373 I llm_load_print_meta: n_merges         = 0
0.00.246.373 I llm_load_print_meta: vocab_only       = 0
0.00.246.373 I llm_load_print_meta: n_ctx_train      = 8192
0.00.246.374 I llm_load_print_meta: n_embd           = 2048
0.00.246.374 I llm_load_print_meta: n_layer          = 18
0.00.246.388 I llm_load_print_meta: n_head           = 8
0.00.246.389 I llm_load_print_meta: n_head_kv        = 1
0.00.246.390 I llm_load_print_meta: n_rot            = 256
0.00.246.390 I llm_load_print_meta: n_swa            = 0
0.00.246.390 I llm_load_print_meta: n_embd_head_k    = 256
0.00.246.391 I llm_load_print_meta: n_embd_head_v    = 256
0.00.246.391 I llm_load_print_meta: n_gqa            = 8
0.00.246.392 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.246.393 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.246.394 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.246.395 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.246.396 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.246.396 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.246.397 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.246.397 I llm_load_print_meta: n_ff             = 16384
0.00.246.398 I llm_load_print_meta: n_expert         = 0
0.00.246.398 I llm_load_print_meta: n_expert_used    = 0
0.00.246.398 I llm_load_print_meta: causal attn      = 1
0.00.246.399 I llm_load_print_meta: pooling type     = 0
0.00.246.399 I llm_load_print_meta: rope type        = 2
0.00.246.399 I llm_load_print_meta: rope scaling     = linear
0.00.246.400 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.246.401 I llm_load_print_meta: freq_scale_train = 1
0.00.246.401 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.246.402 I llm_load_print_meta: rope_finetuned   = unknown
0.00.246.402 I llm_load_print_meta: ssm_d_conv       = 0
0.00.246.402 I llm_load_print_meta: ssm_d_inner      = 0
0.00.246.402 I llm_load_print_meta: ssm_d_state      = 0
0.00.246.403 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.246.403 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.246.404 I llm_load_print_meta: model type       = 2B
0.00.246.404 I llm_load_print_meta: model ftype      = Q8_0
0.00.246.405 I llm_load_print_meta: model params     = 2.51 B
0.00.246.406 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.246.406 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.246.407 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.246.407 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.246.407 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.246.407 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.246.408 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.246.408 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.246.409 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.246.409 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.246.410 I llm_load_print_meta: max token length = 93
0.00.246.432 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.340.065 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.345.172 I llama_new_context_with_model: n_ctx      = 8192
0.00.345.177 I llama_new_context_with_model: n_batch    = 2048
0.00.345.178 I llama_new_context_with_model: n_ubatch   = 512
0.00.345.178 I llama_new_context_with_model: flash_attn = 0
0.00.345.181 I llama_new_context_with_model: freq_base  = 10000.0
0.00.345.181 I llama_new_context_with_model: freq_scale = 1
0.00.374.268 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.374.282 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.374.373 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.375.228 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.375.236 I llama_new_context_with_model: graph nodes  = 601
0.00.375.236 I llama_new_context_with_model: graph splits = 1
0.00.375.238 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.462.718 I main: llama threadpool init, n_threads = 4
0.00.462.730 I 
0.00.462.808 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.462.812 I 
0.00.462.848 I sampler seed: 796569865
0.00.462.859 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.462.867 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.462.867 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.462.867 I 
 increasities. 

I am unable to access the requested text. Therefore, I am unable to provide you with any information regarding the requested text. [end of text]


0.02.588.651 I llama_perf_sampler_print:    sampling time =       4.82 ms /    32 runs   (    0.15 ms per token,  6643.14 tokens per second)
0.02.588.653 I llama_perf_context_print:        load time =     460.79 ms
0.02.588.654 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.588.655 I llama_perf_context_print:        eval time =    2108.11 ms /    31 runs   (   68.00 ms per token,    14.71 tokens per second)
0.02.588.656 I llama_perf_context_print:       total time =    2125.94 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.546 I build: 3895 (f1af42fa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.757 I main: llama backend init
0.00.001.903 I main: load the model and apply lora adapter, if any
0.00.021.993 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.051 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.065 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.072 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.076 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.080 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.082 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.083 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.084 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.085 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.086 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.095 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.096 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.098 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.099 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.100 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.676 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.474 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.390 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.396 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.397 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.397 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.398 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.399 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.400 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.402 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.403 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.403 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.405 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.406 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.410 I llama_model_loader: - type  f32:   37 tensors
0.00.132.412 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.890 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.220.115 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.220.954 I llm_load_vocab: special tokens cache size = 5
0.00.242.422 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.242.438 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.242.439 I llm_load_print_meta: arch             = gemma
0.00.242.440 I llm_load_print_meta: vocab type       = SPM
0.00.242.440 I llm_load_print_meta: n_vocab          = 256000
0.00.242.441 I llm_load_print_meta: n_merges         = 0
0.00.242.441 I llm_load_print_meta: vocab_only       = 0
0.00.242.442 I llm_load_print_meta: n_ctx_train      = 8192
0.00.242.442 I llm_load_print_meta: n_embd           = 2048
0.00.242.442 I llm_load_print_meta: n_layer          = 18
0.00.242.454 I llm_load_print_meta: n_head           = 8
0.00.242.455 I llm_load_print_meta: n_head_kv        = 1
0.00.242.456 I llm_load_print_meta: n_rot            = 256
0.00.242.456 I llm_load_print_meta: n_swa            = 0
0.00.242.456 I llm_load_print_meta: n_embd_head_k    = 256
0.00.242.457 I llm_load_print_meta: n_embd_head_v    = 256
0.00.242.458 I llm_load_print_meta: n_gqa            = 8
0.00.242.459 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.242.459 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.242.460 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.242.461 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.242.462 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.242.462 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.242.462 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.242.463 I llm_load_print_meta: n_ff             = 16384
0.00.242.464 I llm_load_print_meta: n_expert         = 0
0.00.242.464 I llm_load_print_meta: n_expert_used    = 0
0.00.242.464 I llm_load_print_meta: causal attn      = 1
0.00.242.464 I llm_load_print_meta: pooling type     = 0
0.00.242.465 I llm_load_print_meta: rope type        = 2
0.00.242.465 I llm_load_print_meta: rope scaling     = linear
0.00.242.467 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.242.467 I llm_load_print_meta: freq_scale_train = 1
0.00.242.467 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.242.468 I llm_load_print_meta: rope_finetuned   = unknown
0.00.242.468 I llm_load_print_meta: ssm_d_conv       = 0
0.00.242.468 I llm_load_print_meta: ssm_d_inner      = 0
0.00.242.469 I llm_load_print_meta: ssm_d_state      = 0
0.00.242.469 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.242.469 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.242.470 I llm_load_print_meta: model type       = 2B
0.00.242.470 I llm_load_print_meta: model ftype      = Q8_0
0.00.242.471 I llm_load_print_meta: model params     = 2.51 B
0.00.242.472 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.242.472 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.242.473 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.242.473 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.242.473 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.242.473 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.242.474 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.242.475 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.242.475 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.242.475 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.242.476 I llm_load_print_meta: max token length = 93
0.00.242.496 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.317.716 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.317.726 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.317.726 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.317.727 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.317.727 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.317.728 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.322.842 I llama_new_context_with_model: n_ctx      = 8192
0.00.322.849 I llama_new_context_with_model: n_batch    = 2048
0.00.322.849 I llama_new_context_with_model: n_ubatch   = 512
0.00.322.850 I llama_new_context_with_model: flash_attn = 0
0.00.322.853 I llama_new_context_with_model: freq_base  = 10000.0
0.00.322.854 I llama_new_context_with_model: freq_scale = 1
0.00.352.278 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.352.294 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.352.386 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.353.256 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.353.264 I llama_new_context_with_model: graph nodes  = 601
0.00.353.265 I llama_new_context_with_model: graph splits = 1
0.00.353.267 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.444.754 I main: llama threadpool init, n_threads = 4
0.00.444.766 I 
0.00.444.848 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.444.852 I 
0.00.444.907 I sampler seed: 3210635309
0.00.444.922 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.444.925 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.444.926 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.444.926 I 
 seconded,
I am unable to access the requested data, as it is currently not available.

I apologize for any inconvenience this may cause.

**

0.02.768.950 I llama_perf_sampler_print:    sampling time =       5.28 ms /    33 runs   (    0.16 ms per token,  6255.92 tokens per second)
0.02.768.952 I llama_perf_context_print:        load time =     442.78 ms
0.02.768.953 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.768.955 I llama_perf_context_print:        eval time =    2304.59 ms /    32 runs   (   72.02 ms per token,    13.89 tokens per second)
0.02.768.956 I llama_perf_context_print:       total time =    2324.20 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.560 I build: 3895 (f1af42fa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.769 I main: llama backend init
0.00.001.901 I main: load the model and apply lora adapter, if any
0.00.022.168 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.224 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.237 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.244 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.250 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.255 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.256 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.257 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.258 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.260 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.261 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.268 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.269 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.270 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.271 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.272 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.761 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.130.142 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.137.079 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.137.088 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.137.089 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.137.089 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.137.090 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.137.091 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.137.092 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.137.095 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.137.096 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.137.097 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.137.098 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.137.098 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.137.101 I llama_model_loader: - type  f32:   37 tensors
0.00.137.104 I llama_model_loader: - type q8_0:  127 tensors
0.00.222.317 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.518 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.351 I llm_load_vocab: special tokens cache size = 5
0.00.269.866 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.884 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.885 I llm_load_print_meta: arch             = gemma
0.00.269.885 I llm_load_print_meta: vocab type       = SPM
0.00.269.886 I llm_load_print_meta: n_vocab          = 256000
0.00.269.887 I llm_load_print_meta: n_merges         = 0
0.00.269.887 I llm_load_print_meta: vocab_only       = 0
0.00.269.887 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.888 I llm_load_print_meta: n_embd           = 2048
0.00.269.888 I llm_load_print_meta: n_layer          = 18
0.00.269.901 I llm_load_print_meta: n_head           = 8
0.00.269.902 I llm_load_print_meta: n_head_kv        = 1
0.00.269.902 I llm_load_print_meta: n_rot            = 256
0.00.269.902 I llm_load_print_meta: n_swa            = 0
0.00.269.903 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.903 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.904 I llm_load_print_meta: n_gqa            = 8
0.00.269.905 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.906 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.906 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.908 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.908 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.909 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.909 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.910 I llm_load_print_meta: n_ff             = 16384
0.00.269.910 I llm_load_print_meta: n_expert         = 0
0.00.269.911 I llm_load_print_meta: n_expert_used    = 0
0.00.269.911 I llm_load_print_meta: causal attn      = 1
0.00.269.911 I llm_load_print_meta: pooling type     = 0
0.00.269.911 I llm_load_print_meta: rope type        = 2
0.00.269.912 I llm_load_print_meta: rope scaling     = linear
0.00.269.913 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.913 I llm_load_print_meta: freq_scale_train = 1
0.00.269.914 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.914 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.915 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.915 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.915 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.915 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.916 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.916 I llm_load_print_meta: model type       = 2B
0.00.269.917 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.918 I llm_load_print_meta: model params     = 2.51 B
0.00.269.918 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.919 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.919 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.919 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.920 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.920 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.920 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.921 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.921 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.922 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.922 I llm_load_print_meta: max token length = 93
0.00.269.948 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.340.842 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.340.849 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.345.982 I llama_new_context_with_model: n_ctx      = 8192
0.00.345.988 I llama_new_context_with_model: n_batch    = 2048
0.00.345.988 I llama_new_context_with_model: n_ubatch   = 512
0.00.345.989 I llama_new_context_with_model: flash_attn = 0
0.00.345.992 I llama_new_context_with_model: freq_base  = 10000.0
0.00.345.992 I llama_new_context_with_model: freq_scale = 1
0.00.376.852 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.376.869 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.376.971 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.377.852 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.377.859 I llama_new_context_with_model: graph nodes  = 601
0.00.377.860 I llama_new_context_with_model: graph splits = 1
0.00.377.861 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.479.194 I main: llama threadpool init, n_threads = 4
0.00.479.207 I 
0.00.479.286 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.479.291 I 
0.00.479.334 I sampler seed: 2126645373
0.00.479.347 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.479.358 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.479.360 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.479.360 I 
 increably. [end of text]


0.00.787.186 I llama_perf_sampler_print:    sampling time =       0.66 ms /     5 runs   (    0.13 ms per token,  7633.59 tokens per second)
0.00.787.189 I llama_perf_context_print:        load time =     477.22 ms
0.00.787.190 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.787.202 I llama_perf_context_print:        eval time =     304.46 ms /     4 runs   (   76.12 ms per token,    13.14 tokens per second)
0.00.787.204 I llama_perf_context_print:       total time =     308.00 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.347s
user	0m31.025s
sys	0m9.523s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3895 (f1af42fa)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32206.05 ms
main:    total time = 32206.05 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.670 I build: 3895 (f1af42fa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.883 I main: llama backend init
0.00.001.997 I main: load the model and apply lora adapter, if any
0.00.022.488 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.537 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.548 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.553 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.557 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.561 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.561 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.562 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.562 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.563 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.564 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.568 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.569 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.569 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.570 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.570 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.906 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.600 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.480 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.485 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.487 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.487 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.488 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.489 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.489 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.492 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.492 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.493 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.494 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.494 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.498 I llama_model_loader: - type  f32:   37 tensors
0.00.132.500 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.501 I llama_model_loader: - type q6_K:   19 tensors
0.00.194.655 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.891 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.679 I llm_load_vocab: special tokens cache size = 5
0.00.236.270 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.236.288 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.236.289 I llm_load_print_meta: arch             = gemma
0.00.236.289 I llm_load_print_meta: vocab type       = SPM
0.00.236.290 I llm_load_print_meta: n_vocab          = 256000
0.00.236.291 I llm_load_print_meta: n_merges         = 0
0.00.236.292 I llm_load_print_meta: vocab_only       = 0
0.00.236.292 I llm_load_print_meta: n_ctx_train      = 8192
0.00.236.292 I llm_load_print_meta: n_embd           = 2048
0.00.236.293 I llm_load_print_meta: n_layer          = 18
0.00.236.306 I llm_load_print_meta: n_head           = 8
0.00.236.307 I llm_load_print_meta: n_head_kv        = 1
0.00.236.307 I llm_load_print_meta: n_rot            = 256
0.00.236.308 I llm_load_print_meta: n_swa            = 0
0.00.236.308 I llm_load_print_meta: n_embd_head_k    = 256
0.00.236.308 I llm_load_print_meta: n_embd_head_v    = 256
0.00.236.309 I llm_load_print_meta: n_gqa            = 8
0.00.236.310 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.236.311 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.236.312 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.236.313 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.236.313 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.236.314 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.236.314 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.236.315 I llm_load_print_meta: n_ff             = 16384
0.00.236.315 I llm_load_print_meta: n_expert         = 0
0.00.236.316 I llm_load_print_meta: n_expert_used    = 0
0.00.236.316 I llm_load_print_meta: causal attn      = 1
0.00.236.317 I llm_load_print_meta: pooling type     = 0
0.00.236.317 I llm_load_print_meta: rope type        = 2
0.00.236.317 I llm_load_print_meta: rope scaling     = linear
0.00.236.318 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.236.319 I llm_load_print_meta: freq_scale_train = 1
0.00.236.319 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.236.320 I llm_load_print_meta: rope_finetuned   = unknown
0.00.236.320 I llm_load_print_meta: ssm_d_conv       = 0
0.00.236.320 I llm_load_print_meta: ssm_d_inner      = 0
0.00.236.321 I llm_load_print_meta: ssm_d_state      = 0
0.00.236.321 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.236.321 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.236.322 I llm_load_print_meta: model type       = 2B
0.00.236.323 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.236.323 I llm_load_print_meta: model params     = 2.51 B
0.00.236.324 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.236.324 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.236.325 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.236.325 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.236.325 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.236.326 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.236.326 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.236.327 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.236.327 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.236.328 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.236.328 I llm_load_print_meta: max token length = 93
0.00.236.350 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.295.822 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.295.831 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.295.832 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.295.832 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.295.833 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.295.833 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.301.254 I llama_new_context_with_model: n_ctx      = 8192
0.00.301.261 I llama_new_context_with_model: n_batch    = 2048
0.00.301.262 I llama_new_context_with_model: n_ubatch   = 512
0.00.301.262 I llama_new_context_with_model: flash_attn = 0
0.00.301.266 I llama_new_context_with_model: freq_base  = 10000.0
0.00.301.267 I llama_new_context_with_model: freq_scale = 1
0.00.334.093 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.334.107 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.334.199 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.335.100 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.335.108 I llama_new_context_with_model: graph nodes  = 601
0.00.335.109 I llama_new_context_with_model: graph splits = 1
0.00.335.110 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.418.067 I main: llama threadpool init, n_threads = 4
0.00.418.080 I 
0.00.418.158 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.418.161 I 
0.00.418.197 I sampler seed: 1724849432
0.00.418.206 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.418.210 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.418.210 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.418.210 I 
 increamically and downvote furiously. He pounded the earth with a fury that shook the very ground.

This passage describes:

A) A gentle breeze
B

0.02.082.825 I llama_perf_sampler_print:    sampling time =       5.21 ms /    33 runs   (    0.16 ms per token,  6337.62 tokens per second)
0.02.082.827 I llama_perf_context_print:        load time =     416.01 ms
0.02.082.828 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.082.830 I llama_perf_context_print:        eval time =    1645.26 ms /    32 runs   (   51.41 ms per token,    19.45 tokens per second)
0.02.082.830 I llama_perf_context_print:       total time =    1664.76 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3895 (f1af42fa)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32075.39 ms
main:    total time = 32075.39 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.647 I build: 3895 (f1af42fa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.873 I main: llama backend init
0.00.002.011 I main: load the model and apply lora adapter, if any
0.00.022.345 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.363 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.370 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.371 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.376 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.377 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.378 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.379 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.380 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.380 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.386 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.387 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.387 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.388 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.388 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.877 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.070 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.018 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.027 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.028 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.028 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.029 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.030 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.031 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.034 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.035 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.039 I llama_model_loader: - type  f32:   37 tensors
0.00.133.042 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.042 I llama_model_loader: - type q6_K:   19 tensors
0.00.195.533 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.211.929 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.212.706 I llm_load_vocab: special tokens cache size = 5
0.00.233.881 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.233.897 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.233.898 I llm_load_print_meta: arch             = gemma
0.00.233.898 I llm_load_print_meta: vocab type       = SPM
0.00.233.899 I llm_load_print_meta: n_vocab          = 256000
0.00.233.899 I llm_load_print_meta: n_merges         = 0
0.00.233.900 I llm_load_print_meta: vocab_only       = 0
0.00.233.900 I llm_load_print_meta: n_ctx_train      = 8192
0.00.233.900 I llm_load_print_meta: n_embd           = 2048
0.00.233.900 I llm_load_print_meta: n_layer          = 18
0.00.233.913 I llm_load_print_meta: n_head           = 8
0.00.233.914 I llm_load_print_meta: n_head_kv        = 1
0.00.233.915 I llm_load_print_meta: n_rot            = 256
0.00.233.915 I llm_load_print_meta: n_swa            = 0
0.00.233.915 I llm_load_print_meta: n_embd_head_k    = 256
0.00.233.915 I llm_load_print_meta: n_embd_head_v    = 256
0.00.233.916 I llm_load_print_meta: n_gqa            = 8
0.00.233.917 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.233.918 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.233.919 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.233.920 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.233.920 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.233.921 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.233.921 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.233.922 I llm_load_print_meta: n_ff             = 16384
0.00.233.922 I llm_load_print_meta: n_expert         = 0
0.00.233.923 I llm_load_print_meta: n_expert_used    = 0
0.00.233.923 I llm_load_print_meta: causal attn      = 1
0.00.233.923 I llm_load_print_meta: pooling type     = 0
0.00.233.923 I llm_load_print_meta: rope type        = 2
0.00.233.924 I llm_load_print_meta: rope scaling     = linear
0.00.233.925 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.233.926 I llm_load_print_meta: freq_scale_train = 1
0.00.233.926 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.233.926 I llm_load_print_meta: rope_finetuned   = unknown
0.00.233.926 I llm_load_print_meta: ssm_d_conv       = 0
0.00.233.927 I llm_load_print_meta: ssm_d_inner      = 0
0.00.233.927 I llm_load_print_meta: ssm_d_state      = 0
0.00.233.927 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.233.927 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.233.928 I llm_load_print_meta: model type       = 2B
0.00.233.928 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.233.929 I llm_load_print_meta: model params     = 2.51 B
0.00.233.930 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.233.930 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.233.931 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.233.931 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.233.931 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.233.931 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.233.932 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.233.932 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.233.932 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.233.933 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.233.934 I llm_load_print_meta: max token length = 93
0.00.233.954 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.290.574 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.295.719 I llama_new_context_with_model: n_ctx      = 8192
0.00.295.727 I llama_new_context_with_model: n_batch    = 2048
0.00.295.727 I llama_new_context_with_model: n_ubatch   = 512
0.00.295.728 I llama_new_context_with_model: flash_attn = 0
0.00.295.731 I llama_new_context_with_model: freq_base  = 10000.0
0.00.295.732 I llama_new_context_with_model: freq_scale = 1
0.00.326.203 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.326.220 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.326.317 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.327.181 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.327.190 I llama_new_context_with_model: graph nodes  = 601
0.00.327.190 I llama_new_context_with_model: graph splits = 1
0.00.327.193 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.410.295 I main: llama threadpool init, n_threads = 4
0.00.410.310 I 
0.00.410.392 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.410.395 I 
0.00.410.435 I sampler seed: 3402248049
0.00.410.445 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.410.453 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.410.454 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.410.454 I 
 increasities can occur in different settings and contexts.

**a) What are the settings where increasities can occur?**
b) What factors contribute to

0.02.091.917 I llama_perf_sampler_print:    sampling time =       4.81 ms /    33 runs   (    0.15 ms per token,  6856.43 tokens per second)
0.02.091.920 I llama_perf_context_print:        load time =     408.22 ms
0.02.091.922 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.091.924 I llama_perf_context_print:        eval time =    1662.61 ms /    32 runs   (   51.96 ms per token,    19.25 tokens per second)
0.02.091.925 I llama_perf_context_print:       total time =    1681.63 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.557s
user	8m15.272s
sys	0m7.309s
