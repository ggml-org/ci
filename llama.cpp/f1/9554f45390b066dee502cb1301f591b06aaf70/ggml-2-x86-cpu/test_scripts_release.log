+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.621 I build: 3843 (f19554f4) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.825 I main: llama backend init
0.00.001.926 I main: load the model and apply lora adapter, if any
0.00.022.248 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.297 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.306 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.311 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.312 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.316 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.317 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.317 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.318 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.318 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.329 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.334 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.335 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.335 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.337 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.337 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.442 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.780 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.731 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.738 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.739 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.739 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.740 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.741 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.742 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.744 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.745 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.746 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.746 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.748 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.751 I llama_model_loader: - type  f32:   37 tensors
0.00.133.754 I llama_model_loader: - type q8_0:  127 tensors
0.00.196.332 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.412 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.203 I llm_load_vocab: special tokens cache size = 5
0.00.231.962 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.231.978 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.231.979 I llm_load_print_meta: arch             = gemma
0.00.231.979 I llm_load_print_meta: vocab type       = SPM
0.00.231.980 I llm_load_print_meta: n_vocab          = 256000
0.00.231.981 I llm_load_print_meta: n_merges         = 0
0.00.231.981 I llm_load_print_meta: vocab_only       = 0
0.00.231.981 I llm_load_print_meta: n_ctx_train      = 8192
0.00.231.982 I llm_load_print_meta: n_embd           = 2048
0.00.231.982 I llm_load_print_meta: n_layer          = 18
0.00.231.995 I llm_load_print_meta: n_head           = 8
0.00.231.996 I llm_load_print_meta: n_head_kv        = 1
0.00.231.996 I llm_load_print_meta: n_rot            = 256
0.00.231.996 I llm_load_print_meta: n_swa            = 0
0.00.231.996 I llm_load_print_meta: n_embd_head_k    = 256
0.00.231.997 I llm_load_print_meta: n_embd_head_v    = 256
0.00.231.998 I llm_load_print_meta: n_gqa            = 8
0.00.231.999 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.000 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.000 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.002 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.002 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.003 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.003 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.004 I llm_load_print_meta: n_ff             = 16384
0.00.232.005 I llm_load_print_meta: n_expert         = 0
0.00.232.005 I llm_load_print_meta: n_expert_used    = 0
0.00.232.005 I llm_load_print_meta: causal attn      = 1
0.00.232.006 I llm_load_print_meta: pooling type     = 0
0.00.232.006 I llm_load_print_meta: rope type        = 2
0.00.232.006 I llm_load_print_meta: rope scaling     = linear
0.00.232.008 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.008 I llm_load_print_meta: freq_scale_train = 1
0.00.232.009 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.009 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.009 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.009 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.010 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.010 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.010 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.011 I llm_load_print_meta: model type       = 2B
0.00.232.011 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.012 I llm_load_print_meta: model params     = 2.51 B
0.00.232.013 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.013 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.014 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.014 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.015 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.015 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.016 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.016 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.016 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.017 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.017 I llm_load_print_meta: max token length = 93
0.00.232.045 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.330.280 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.330.289 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.330.290 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.330.291 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.330.291 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.330.292 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.335.430 I llama_new_context_with_model: n_ctx      = 8192
0.00.335.437 I llama_new_context_with_model: n_batch    = 2048
0.00.335.438 I llama_new_context_with_model: n_ubatch   = 512
0.00.335.439 I llama_new_context_with_model: flash_attn = 0
0.00.335.441 I llama_new_context_with_model: freq_base  = 10000.0
0.00.335.442 I llama_new_context_with_model: freq_scale = 1
0.00.366.533 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.366.549 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.366.639 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.367.487 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.367.496 I llama_new_context_with_model: graph nodes  = 601
0.00.367.497 I llama_new_context_with_model: graph splits = 1
0.00.367.499 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.650 I main: llama threadpool init, n_threads = 4
0.00.460.663 I 
0.00.460.736 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.460.739 I 
0.00.460.775 I sampler seed: 4012916119
0.00.460.784 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.787 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.460.788 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.788 I 
 increably.

I am unable to generate the requested response due to the inappropriate and potentially harmful nature of the prompt. [end of text]


0.02.248.032 I llama_perf_sampler_print:    sampling time =       3.75 ms /    26 runs   (    0.14 ms per token,  6927.79 tokens per second)
0.02.248.036 I llama_perf_context_print:        load time =     458.71 ms
0.02.248.037 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.248.039 I llama_perf_context_print:        eval time =    1773.00 ms /    25 runs   (   70.92 ms per token,    14.10 tokens per second)
0.02.248.040 I llama_perf_context_print:       total time =    1787.39 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.562 I build: 3843 (f19554f4) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.001.864 I main: load the model and apply lora adapter, if any
0.00.022.019 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.029 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.036 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.037 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.040 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.042 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.043 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.044 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.044 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.045 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.050 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.051 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.052 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.052 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.053 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.887 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.288 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.196 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.202 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.203 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.204 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.205 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.205 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.206 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.208 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.209 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.210 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.211 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.212 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.216 I llama_model_loader: - type  f32:   37 tensors
0.00.132.219 I llama_model_loader: - type q8_0:  127 tensors
0.00.196.113 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.996 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.844 I llm_load_vocab: special tokens cache size = 5
0.00.232.611 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.625 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.626 I llm_load_print_meta: arch             = gemma
0.00.232.627 I llm_load_print_meta: vocab type       = SPM
0.00.232.627 I llm_load_print_meta: n_vocab          = 256000
0.00.232.628 I llm_load_print_meta: n_merges         = 0
0.00.232.628 I llm_load_print_meta: vocab_only       = 0
0.00.232.628 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.629 I llm_load_print_meta: n_embd           = 2048
0.00.232.629 I llm_load_print_meta: n_layer          = 18
0.00.232.642 I llm_load_print_meta: n_head           = 8
0.00.232.643 I llm_load_print_meta: n_head_kv        = 1
0.00.232.643 I llm_load_print_meta: n_rot            = 256
0.00.232.643 I llm_load_print_meta: n_swa            = 0
0.00.232.644 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.644 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.645 I llm_load_print_meta: n_gqa            = 8
0.00.232.646 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.647 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.648 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.649 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.650 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.650 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.650 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.651 I llm_load_print_meta: n_ff             = 16384
0.00.232.651 I llm_load_print_meta: n_expert         = 0
0.00.232.652 I llm_load_print_meta: n_expert_used    = 0
0.00.232.652 I llm_load_print_meta: causal attn      = 1
0.00.232.652 I llm_load_print_meta: pooling type     = 0
0.00.232.653 I llm_load_print_meta: rope type        = 2
0.00.232.653 I llm_load_print_meta: rope scaling     = linear
0.00.232.654 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.655 I llm_load_print_meta: freq_scale_train = 1
0.00.232.655 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.655 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.656 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.656 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.656 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.656 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.657 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.657 I llm_load_print_meta: model type       = 2B
0.00.232.658 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.658 I llm_load_print_meta: model params     = 2.51 B
0.00.232.659 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.659 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.660 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.660 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.660 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.661 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.661 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.662 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.662 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.663 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.663 I llm_load_print_meta: max token length = 93
0.00.232.689 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.325.368 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.331.112 I llama_new_context_with_model: n_ctx      = 8192
0.00.331.118 I llama_new_context_with_model: n_batch    = 2048
0.00.331.118 I llama_new_context_with_model: n_ubatch   = 512
0.00.331.119 I llama_new_context_with_model: flash_attn = 0
0.00.331.121 I llama_new_context_with_model: freq_base  = 10000.0
0.00.331.122 I llama_new_context_with_model: freq_scale = 1
0.00.361.593 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.361.608 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.361.700 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.648 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.362.656 I llama_new_context_with_model: graph nodes  = 601
0.00.362.656 I llama_new_context_with_model: graph splits = 1
0.00.362.658 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.052 I main: llama threadpool init, n_threads = 4
0.00.452.066 I 
0.00.452.138 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.452.141 I 
0.00.452.177 I sampler seed: 2759902296
0.00.452.187 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.190 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.452.191 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.191 I 
 increasities, and the importance of understanding their role in the development of resilience in individuals. [end of text]


0.01.781.062 I llama_perf_sampler_print:    sampling time =       2.89 ms /    20 runs   (    0.14 ms per token,  6910.85 tokens per second)
0.01.781.065 I llama_perf_context_print:        load time =     450.17 ms
0.01.781.066 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.781.067 I llama_perf_context_print:        eval time =    1317.25 ms /    19 runs   (   69.33 ms per token,    14.42 tokens per second)
0.01.781.068 I llama_perf_context_print:       total time =    1329.02 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.587 I build: 3843 (f19554f4) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.844 I main: llama backend init
0.00.002.015 I main: load the model and apply lora adapter, if any
0.00.022.144 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.192 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.205 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.219 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.220 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.224 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.225 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.225 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.226 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.226 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.227 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.232 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.232 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.233 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.234 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.234 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.108 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.138.155 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.145.181 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.145.188 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.145.188 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.145.189 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.145.190 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.145.191 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.145.191 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.145.194 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.145.194 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.145.196 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.145.196 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.145.197 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.145.201 I llama_model_loader: - type  f32:   37 tensors
0.00.145.205 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.709 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.230.839 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.231.686 I llm_load_vocab: special tokens cache size = 5
0.00.250.426 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.250.442 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.250.443 I llm_load_print_meta: arch             = gemma
0.00.250.443 I llm_load_print_meta: vocab type       = SPM
0.00.250.444 I llm_load_print_meta: n_vocab          = 256000
0.00.250.444 I llm_load_print_meta: n_merges         = 0
0.00.250.445 I llm_load_print_meta: vocab_only       = 0
0.00.250.445 I llm_load_print_meta: n_ctx_train      = 8192
0.00.250.445 I llm_load_print_meta: n_embd           = 2048
0.00.250.446 I llm_load_print_meta: n_layer          = 18
0.00.250.459 I llm_load_print_meta: n_head           = 8
0.00.250.460 I llm_load_print_meta: n_head_kv        = 1
0.00.250.460 I llm_load_print_meta: n_rot            = 256
0.00.250.461 I llm_load_print_meta: n_swa            = 0
0.00.250.461 I llm_load_print_meta: n_embd_head_k    = 256
0.00.250.461 I llm_load_print_meta: n_embd_head_v    = 256
0.00.250.462 I llm_load_print_meta: n_gqa            = 8
0.00.250.463 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.250.464 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.250.465 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.250.466 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.250.467 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.250.467 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.250.468 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.250.468 I llm_load_print_meta: n_ff             = 16384
0.00.250.469 I llm_load_print_meta: n_expert         = 0
0.00.250.469 I llm_load_print_meta: n_expert_used    = 0
0.00.250.470 I llm_load_print_meta: causal attn      = 1
0.00.250.470 I llm_load_print_meta: pooling type     = 0
0.00.250.470 I llm_load_print_meta: rope type        = 2
0.00.250.471 I llm_load_print_meta: rope scaling     = linear
0.00.250.472 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.250.473 I llm_load_print_meta: freq_scale_train = 1
0.00.250.474 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.250.474 I llm_load_print_meta: rope_finetuned   = unknown
0.00.250.474 I llm_load_print_meta: ssm_d_conv       = 0
0.00.250.475 I llm_load_print_meta: ssm_d_inner      = 0
0.00.250.475 I llm_load_print_meta: ssm_d_state      = 0
0.00.250.475 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.250.476 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.250.477 I llm_load_print_meta: model type       = 2B
0.00.250.477 I llm_load_print_meta: model ftype      = Q8_0
0.00.250.478 I llm_load_print_meta: model params     = 2.51 B
0.00.250.479 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.250.479 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.250.480 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.250.480 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.250.481 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.250.481 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.250.481 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.250.482 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.250.482 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.250.483 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.250.483 I llm_load_print_meta: max token length = 93
0.00.250.505 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.328.435 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.328.445 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.328.446 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.328.446 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.328.447 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.328.448 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.335.366 I llama_new_context_with_model: n_ctx      = 8192
0.00.335.374 I llama_new_context_with_model: n_batch    = 2048
0.00.335.374 I llama_new_context_with_model: n_ubatch   = 512
0.00.335.375 I llama_new_context_with_model: flash_attn = 0
0.00.335.378 I llama_new_context_with_model: freq_base  = 10000.0
0.00.335.379 I llama_new_context_with_model: freq_scale = 1
0.00.365.165 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.365.181 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.365.269 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.366.141 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.366.148 I llama_new_context_with_model: graph nodes  = 601
0.00.366.149 I llama_new_context_with_model: graph splits = 1
0.00.366.151 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.459.412 I main: llama threadpool init, n_threads = 4
0.00.459.425 I 
0.00.459.499 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.459.503 I 
0.00.459.546 I sampler seed: 1137188759
0.00.459.558 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.459.563 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.459.563 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.459.564 I 
 increasities are a form of social comparison that are used to evaluate and validate one's self-worth.

**a**. True
**b**. False

0.02.772.299 I llama_perf_sampler_print:    sampling time =       5.44 ms /    33 runs   (    0.16 ms per token,  6065.06 tokens per second)
0.02.772.301 I llama_perf_context_print:        load time =     457.38 ms
0.02.772.302 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.772.304 I llama_perf_context_print:        eval time =    2293.83 ms /    32 runs   (   71.68 ms per token,    13.95 tokens per second)
0.02.772.304 I llama_perf_context_print:       total time =    2312.89 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.539 I build: 3843 (f19554f4) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.001.890 I main: load the model and apply lora adapter, if any
0.00.022.307 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.356 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.367 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.374 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.378 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.383 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.384 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.385 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.386 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.387 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.387 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.394 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.395 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.399 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.400 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.401 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.219 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.291 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.237 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.244 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.245 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.246 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.247 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.248 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.249 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.252 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.253 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.254 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.255 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.256 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.259 I llama_model_loader: - type  f32:   37 tensors
0.00.133.262 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.873 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.220.464 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.221.288 I llm_load_vocab: special tokens cache size = 5
0.00.240.150 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.240.166 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.240.166 I llm_load_print_meta: arch             = gemma
0.00.240.167 I llm_load_print_meta: vocab type       = SPM
0.00.240.168 I llm_load_print_meta: n_vocab          = 256000
0.00.240.168 I llm_load_print_meta: n_merges         = 0
0.00.240.168 I llm_load_print_meta: vocab_only       = 0
0.00.240.169 I llm_load_print_meta: n_ctx_train      = 8192
0.00.240.169 I llm_load_print_meta: n_embd           = 2048
0.00.240.169 I llm_load_print_meta: n_layer          = 18
0.00.240.184 I llm_load_print_meta: n_head           = 8
0.00.240.185 I llm_load_print_meta: n_head_kv        = 1
0.00.240.185 I llm_load_print_meta: n_rot            = 256
0.00.240.185 I llm_load_print_meta: n_swa            = 0
0.00.240.186 I llm_load_print_meta: n_embd_head_k    = 256
0.00.240.186 I llm_load_print_meta: n_embd_head_v    = 256
0.00.240.200 I llm_load_print_meta: n_gqa            = 8
0.00.240.202 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.240.203 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.240.204 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.240.205 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.240.205 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.240.206 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.240.206 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.240.207 I llm_load_print_meta: n_ff             = 16384
0.00.240.207 I llm_load_print_meta: n_expert         = 0
0.00.240.208 I llm_load_print_meta: n_expert_used    = 0
0.00.240.208 I llm_load_print_meta: causal attn      = 1
0.00.240.208 I llm_load_print_meta: pooling type     = 0
0.00.240.209 I llm_load_print_meta: rope type        = 2
0.00.240.209 I llm_load_print_meta: rope scaling     = linear
0.00.240.210 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.240.211 I llm_load_print_meta: freq_scale_train = 1
0.00.240.211 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.240.211 I llm_load_print_meta: rope_finetuned   = unknown
0.00.240.212 I llm_load_print_meta: ssm_d_conv       = 0
0.00.240.212 I llm_load_print_meta: ssm_d_inner      = 0
0.00.240.212 I llm_load_print_meta: ssm_d_state      = 0
0.00.240.213 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.240.213 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.240.214 I llm_load_print_meta: model type       = 2B
0.00.240.215 I llm_load_print_meta: model ftype      = Q8_0
0.00.240.216 I llm_load_print_meta: model params     = 2.51 B
0.00.240.217 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.240.218 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.240.219 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.240.219 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.240.219 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.240.220 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.240.220 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.240.220 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.240.221 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.240.221 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.240.222 I llm_load_print_meta: max token length = 93
0.00.240.260 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.310.849 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.310.860 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.316.032 I llama_new_context_with_model: n_ctx      = 8192
0.00.316.039 I llama_new_context_with_model: n_batch    = 2048
0.00.316.040 I llama_new_context_with_model: n_ubatch   = 512
0.00.316.040 I llama_new_context_with_model: flash_attn = 0
0.00.316.043 I llama_new_context_with_model: freq_base  = 10000.0
0.00.316.044 I llama_new_context_with_model: freq_scale = 1
0.00.346.582 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.346.599 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.346.689 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.347.579 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.347.588 I llama_new_context_with_model: graph nodes  = 601
0.00.347.588 I llama_new_context_with_model: graph splits = 1
0.00.347.590 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.443.792 I main: llama threadpool init, n_threads = 4
0.00.443.805 I 
0.00.443.883 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.443.888 I 
0.00.443.932 I sampler seed: 921218832
0.00.443.951 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.443.958 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.443.958 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.443.959 I 
 increadibly complex to parse and analyze. [end of text]


0.01.149.577 I llama_perf_sampler_print:    sampling time =       1.44 ms /    10 runs   (    0.14 ms per token,  6949.27 tokens per second)
0.01.149.580 I llama_perf_context_print:        load time =     441.88 ms
0.01.149.581 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.149.582 I llama_perf_context_print:        eval time =     699.49 ms /     9 runs   (   77.72 ms per token,    12.87 tokens per second)
0.01.149.583 I llama_perf_context_print:       total time =     705.79 ms /    10 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.760s
user	0m27.449s
sys	0m9.555s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3843 (f19554f4)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32154.81 ms
main:    total time = 32154.81 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.567 I build: 3843 (f19554f4) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.771 I main: llama backend init
0.00.001.897 I main: load the model and apply lora adapter, if any
0.00.021.900 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.950 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.958 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.964 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.965 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.970 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.970 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.971 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.971 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.972 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.972 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.977 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.977 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.978 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.979 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.979 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.141 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.536 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.451 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.459 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.460 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.461 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.461 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.462 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.463 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.465 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.466 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.467 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.467 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.468 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.472 I llama_model_loader: - type  f32:   37 tensors
0.00.133.476 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.476 I llama_model_loader: - type q6_K:   19 tensors
0.00.199.265 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.217.869 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.218.654 I llm_load_vocab: special tokens cache size = 5
0.00.237.372 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.237.389 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.237.389 I llm_load_print_meta: arch             = gemma
0.00.237.390 I llm_load_print_meta: vocab type       = SPM
0.00.237.391 I llm_load_print_meta: n_vocab          = 256000
0.00.237.391 I llm_load_print_meta: n_merges         = 0
0.00.237.391 I llm_load_print_meta: vocab_only       = 0
0.00.237.392 I llm_load_print_meta: n_ctx_train      = 8192
0.00.237.392 I llm_load_print_meta: n_embd           = 2048
0.00.237.392 I llm_load_print_meta: n_layer          = 18
0.00.237.405 I llm_load_print_meta: n_head           = 8
0.00.237.405 I llm_load_print_meta: n_head_kv        = 1
0.00.237.406 I llm_load_print_meta: n_rot            = 256
0.00.237.406 I llm_load_print_meta: n_swa            = 0
0.00.237.406 I llm_load_print_meta: n_embd_head_k    = 256
0.00.237.407 I llm_load_print_meta: n_embd_head_v    = 256
0.00.237.408 I llm_load_print_meta: n_gqa            = 8
0.00.237.408 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.237.409 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.237.410 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.237.411 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.237.412 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.237.412 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.237.413 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.237.413 I llm_load_print_meta: n_ff             = 16384
0.00.237.414 I llm_load_print_meta: n_expert         = 0
0.00.237.414 I llm_load_print_meta: n_expert_used    = 0
0.00.237.414 I llm_load_print_meta: causal attn      = 1
0.00.237.415 I llm_load_print_meta: pooling type     = 0
0.00.237.415 I llm_load_print_meta: rope type        = 2
0.00.237.415 I llm_load_print_meta: rope scaling     = linear
0.00.237.416 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.237.417 I llm_load_print_meta: freq_scale_train = 1
0.00.237.417 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.237.417 I llm_load_print_meta: rope_finetuned   = unknown
0.00.237.418 I llm_load_print_meta: ssm_d_conv       = 0
0.00.237.418 I llm_load_print_meta: ssm_d_inner      = 0
0.00.237.418 I llm_load_print_meta: ssm_d_state      = 0
0.00.237.418 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.237.419 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.237.419 I llm_load_print_meta: model type       = 2B
0.00.237.420 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.237.420 I llm_load_print_meta: model params     = 2.51 B
0.00.237.421 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.237.421 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.237.422 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.237.422 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.237.423 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.237.423 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.237.423 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.237.424 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.237.424 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.237.424 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.237.425 I llm_load_print_meta: max token length = 93
0.00.237.446 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.294.537 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.294.547 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.294.547 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.294.548 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.294.549 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.294.549 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.299.513 I llama_new_context_with_model: n_ctx      = 8192
0.00.299.520 I llama_new_context_with_model: n_batch    = 2048
0.00.299.520 I llama_new_context_with_model: n_ubatch   = 512
0.00.299.521 I llama_new_context_with_model: flash_attn = 0
0.00.299.523 I llama_new_context_with_model: freq_base  = 10000.0
0.00.299.524 I llama_new_context_with_model: freq_scale = 1
0.00.329.036 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.329.053 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.329.153 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.330.005 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.330.013 I llama_new_context_with_model: graph nodes  = 601
0.00.330.013 I llama_new_context_with_model: graph splits = 1
0.00.330.015 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.412.413 I main: llama threadpool init, n_threads = 4
0.00.412.427 I 
0.00.412.500 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.412.503 I 
0.00.412.540 I sampler seed: 3726895894
0.00.412.550 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.412.558 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.412.561 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.412.561 I 
 seconally to the main question.

**Main Question:** Discuss the impact of the COVID-19 pandemic on the mental health of individuals.

**Discussion

0.02.088.297 I llama_perf_sampler_print:    sampling time =       4.77 ms /    33 runs   (    0.14 ms per token,  6916.79 tokens per second)
0.02.088.299 I llama_perf_context_print:        load time =     410.50 ms
0.02.088.300 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.088.301 I llama_perf_context_print:        eval time =    1657.69 ms /    32 runs   (   51.80 ms per token,    19.30 tokens per second)
0.02.088.302 I llama_perf_context_print:       total time =    1675.89 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3843 (f19554f4)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32090.19 ms
main:    total time = 32090.19 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.544 I build: 3843 (f19554f4) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.764 I main: llama backend init
0.00.001.903 I main: load the model and apply lora adapter, if any
0.00.021.949 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.963 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.970 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.972 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.977 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.978 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.979 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.980 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.981 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.982 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.987 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.988 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.989 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.994 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.994 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.222 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.283 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.226 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.234 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.235 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.236 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.237 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.238 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.238 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.241 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.242 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.248 I llama_model_loader: - type  f32:   37 tensors
0.00.133.251 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.252 I llama_model_loader: - type q6_K:   19 tensors
0.00.192.532 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.209.235 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.210.043 I llm_load_vocab: special tokens cache size = 5
0.00.228.716 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.228.731 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.228.732 I llm_load_print_meta: arch             = gemma
0.00.228.732 I llm_load_print_meta: vocab type       = SPM
0.00.228.733 I llm_load_print_meta: n_vocab          = 256000
0.00.228.734 I llm_load_print_meta: n_merges         = 0
0.00.228.734 I llm_load_print_meta: vocab_only       = 0
0.00.228.735 I llm_load_print_meta: n_ctx_train      = 8192
0.00.228.735 I llm_load_print_meta: n_embd           = 2048
0.00.228.735 I llm_load_print_meta: n_layer          = 18
0.00.228.747 I llm_load_print_meta: n_head           = 8
0.00.228.748 I llm_load_print_meta: n_head_kv        = 1
0.00.228.748 I llm_load_print_meta: n_rot            = 256
0.00.228.749 I llm_load_print_meta: n_swa            = 0
0.00.228.749 I llm_load_print_meta: n_embd_head_k    = 256
0.00.228.749 I llm_load_print_meta: n_embd_head_v    = 256
0.00.228.750 I llm_load_print_meta: n_gqa            = 8
0.00.228.751 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.228.752 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.228.753 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.228.754 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.228.755 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.228.755 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.228.755 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.228.756 I llm_load_print_meta: n_ff             = 16384
0.00.228.757 I llm_load_print_meta: n_expert         = 0
0.00.228.757 I llm_load_print_meta: n_expert_used    = 0
0.00.228.757 I llm_load_print_meta: causal attn      = 1
0.00.228.758 I llm_load_print_meta: pooling type     = 0
0.00.228.758 I llm_load_print_meta: rope type        = 2
0.00.228.759 I llm_load_print_meta: rope scaling     = linear
0.00.228.761 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.228.762 I llm_load_print_meta: freq_scale_train = 1
0.00.228.762 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.228.762 I llm_load_print_meta: rope_finetuned   = unknown
0.00.228.762 I llm_load_print_meta: ssm_d_conv       = 0
0.00.228.763 I llm_load_print_meta: ssm_d_inner      = 0
0.00.228.763 I llm_load_print_meta: ssm_d_state      = 0
0.00.228.763 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.228.763 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.228.764 I llm_load_print_meta: model type       = 2B
0.00.228.764 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.228.765 I llm_load_print_meta: model params     = 2.51 B
0.00.228.766 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.228.766 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.228.767 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.228.767 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.228.768 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.228.768 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.228.769 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.228.769 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.228.769 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.228.770 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.228.770 I llm_load_print_meta: max token length = 93
0.00.228.790 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.286.369 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.291.326 I llama_new_context_with_model: n_ctx      = 8192
0.00.291.333 I llama_new_context_with_model: n_batch    = 2048
0.00.291.334 I llama_new_context_with_model: n_ubatch   = 512
0.00.291.334 I llama_new_context_with_model: flash_attn = 0
0.00.291.338 I llama_new_context_with_model: freq_base  = 10000.0
0.00.291.338 I llama_new_context_with_model: freq_scale = 1
0.00.321.730 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.321.747 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.321.836 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.322.710 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.322.719 I llama_new_context_with_model: graph nodes  = 601
0.00.322.720 I llama_new_context_with_model: graph splits = 1
0.00.322.722 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.405.026 I main: llama threadpool init, n_threads = 4
0.00.405.038 I 
0.00.405.128 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.405.134 I 
0.00.405.186 I sampler seed: 409517650
0.00.405.195 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.405.197 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.405.198 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.405.198 I 
 encompsively means:
A) To be successful
B) To be recognized
C) To be admired
D) To be complete

The answer is

0.02.082.510 I llama_perf_sampler_print:    sampling time =       5.09 ms /    33 runs   (    0.15 ms per token,  6485.85 tokens per second)
0.02.082.513 I llama_perf_context_print:        load time =     403.11 ms
0.02.082.515 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.082.516 I llama_perf_context_print:        eval time =    1658.13 ms /    32 runs   (   51.82 ms per token,    19.30 tokens per second)
0.02.082.517 I llama_perf_context_print:       total time =    1677.49 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.464s
user	8m15.909s
sys	0m7.170s
