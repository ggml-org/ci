+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.638 I build: 3984 (dac2953d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.830 I main: llama backend init
0.00.002.775 I main: load the model and apply lora adapter, if any
0.00.024.699 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.905 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.991 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.002 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.004 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.008 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.010 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.011 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.012 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.013 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.014 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.023 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.027 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.028 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.029 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.030 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.137 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.855 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.883 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.891 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.892 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.893 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.894 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.895 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.896 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.900 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.901 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.902 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.903 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.904 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.913 I llama_model_loader: - type  f32:   37 tensors
0.00.267.917 I llama_model_loader: - type q8_0:  127 tensors
0.00.443.697 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.502.951 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.503.896 I llm_load_vocab: special tokens cache size = 5
0.00.606.558 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.606.625 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.606.625 I llm_load_print_meta: arch             = gemma
0.00.606.626 I llm_load_print_meta: vocab type       = SPM
0.00.606.627 I llm_load_print_meta: n_vocab          = 256000
0.00.606.629 I llm_load_print_meta: n_merges         = 0
0.00.606.630 I llm_load_print_meta: vocab_only       = 0
0.00.606.630 I llm_load_print_meta: n_ctx_train      = 8192
0.00.606.631 I llm_load_print_meta: n_embd           = 2048
0.00.606.631 I llm_load_print_meta: n_layer          = 18
0.00.606.696 I llm_load_print_meta: n_head           = 8
0.00.606.703 I llm_load_print_meta: n_head_kv        = 1
0.00.606.703 I llm_load_print_meta: n_rot            = 256
0.00.606.704 I llm_load_print_meta: n_swa            = 0
0.00.606.704 I llm_load_print_meta: n_embd_head_k    = 256
0.00.606.704 I llm_load_print_meta: n_embd_head_v    = 256
0.00.606.719 I llm_load_print_meta: n_gqa            = 8
0.00.606.726 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.606.731 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.606.732 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.606.734 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.606.735 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.606.735 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.606.747 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.606.752 I llm_load_print_meta: n_ff             = 16384
0.00.606.753 I llm_load_print_meta: n_expert         = 0
0.00.606.753 I llm_load_print_meta: n_expert_used    = 0
0.00.606.761 I llm_load_print_meta: causal attn      = 1
0.00.606.768 I llm_load_print_meta: pooling type     = 0
0.00.606.769 I llm_load_print_meta: rope type        = 2
0.00.606.770 I llm_load_print_meta: rope scaling     = linear
0.00.606.772 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.606.773 I llm_load_print_meta: freq_scale_train = 1
0.00.606.774 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.606.774 I llm_load_print_meta: rope_finetuned   = unknown
0.00.606.774 I llm_load_print_meta: ssm_d_conv       = 0
0.00.606.782 I llm_load_print_meta: ssm_d_inner      = 0
0.00.606.782 I llm_load_print_meta: ssm_d_state      = 0
0.00.606.783 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.606.783 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.606.784 I llm_load_print_meta: model type       = 2B
0.00.606.785 I llm_load_print_meta: model ftype      = Q8_0
0.00.606.786 I llm_load_print_meta: model params     = 2.51 B
0.00.606.787 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.606.787 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.606.788 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.606.795 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.606.796 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.606.796 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.606.801 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.606.801 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.606.807 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.606.808 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.606.809 I llm_load_print_meta: max token length = 93
0.00.690.083 I llm_load_tensors:        CPU model buffer size =   865.98 MiB
0.00.690.093 I llm_load_tensors:        CPU model buffer size =   334.74 MiB
0.00.690.094 I llm_load_tensors:        CPU model buffer size =   402.73 MiB
0.00.690.095 I llm_load_tensors:        CPU model buffer size =   335.27 MiB
0.00.690.095 I llm_load_tensors:        CPU model buffer size =   338.98 MiB
0.00.690.096 I llm_load_tensors:        CPU model buffer size =   261.96 MiB
..............................................................
0.00.695.832 I llama_new_context_with_model: n_ctx      = 8192
0.00.695.839 I llama_new_context_with_model: n_batch    = 2048
0.00.695.840 I llama_new_context_with_model: n_ubatch   = 512
0.00.695.840 I llama_new_context_with_model: flash_attn = 0
0.00.695.843 I llama_new_context_with_model: freq_base  = 10000.0
0.00.695.844 I llama_new_context_with_model: freq_scale = 1
0.00.724.262 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.724.301 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.724.420 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.727.520 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.727.524 I llama_new_context_with_model: graph nodes  = 601
0.00.727.525 I llama_new_context_with_model: graph splits = 1
0.00.727.542 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.337.540 I main: llama threadpool init, n_threads = 4
0.01.337.554 I 
0.01.337.658 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.337.662 I 
0.01.337.899 I sampler seed: 4173033515
0.01.337.911 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.337.918 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.337.919 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.337.919 I 
 increasities and the impact of their resolution on the economy.

**Answer:**

**1. The Impact of Declaring and Resolving International Trade Disputes:**

0.14.781.053 I llama_perf_sampler_print:    sampling time =      49.14 ms /    33 runs   (    1.49 ms per token,   671.51 tokens per second)
0.14.781.057 I llama_perf_context_print:        load time =    1334.67 ms
0.14.781.059 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.781.061 I llama_perf_context_print:        eval time =   13349.13 ms /    32 runs   (  417.16 ms per token,     2.40 tokens per second)
0.14.781.061 I llama_perf_context_print:       total time =   13443.52 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.719 I build: 3984 (dac2953d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.920 I main: llama backend init
0.00.002.848 I main: load the model and apply lora adapter, if any
0.00.025.103 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.200 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.216 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.220 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.225 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.227 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.228 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.229 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.230 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.231 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.243 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.246 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.247 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.248 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.250 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.436 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.895 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.796 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.805 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.806 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.807 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.808 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.809 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.810 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.814 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.815 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.816 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.817 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.268.818 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.826 I llama_model_loader: - type  f32:   37 tensors
0.00.268.830 I llama_model_loader: - type q8_0:  127 tensors
0.00.437.321 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.500.415 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.501.343 I llm_load_vocab: special tokens cache size = 5
0.00.595.087 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.595.151 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.595.152 I llm_load_print_meta: arch             = gemma
0.00.595.153 I llm_load_print_meta: vocab type       = SPM
0.00.595.153 I llm_load_print_meta: n_vocab          = 256000
0.00.595.156 I llm_load_print_meta: n_merges         = 0
0.00.595.156 I llm_load_print_meta: vocab_only       = 0
0.00.595.157 I llm_load_print_meta: n_ctx_train      = 8192
0.00.595.157 I llm_load_print_meta: n_embd           = 2048
0.00.595.158 I llm_load_print_meta: n_layer          = 18
0.00.595.248 I llm_load_print_meta: n_head           = 8
0.00.595.258 I llm_load_print_meta: n_head_kv        = 1
0.00.595.259 I llm_load_print_meta: n_rot            = 256
0.00.595.260 I llm_load_print_meta: n_swa            = 0
0.00.595.267 I llm_load_print_meta: n_embd_head_k    = 256
0.00.595.275 I llm_load_print_meta: n_embd_head_v    = 256
0.00.595.281 I llm_load_print_meta: n_gqa            = 8
0.00.595.285 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.595.293 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.595.297 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.595.298 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.595.298 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.595.299 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.595.299 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.595.304 I llm_load_print_meta: n_ff             = 16384
0.00.595.305 I llm_load_print_meta: n_expert         = 0
0.00.595.306 I llm_load_print_meta: n_expert_used    = 0
0.00.595.306 I llm_load_print_meta: causal attn      = 1
0.00.595.306 I llm_load_print_meta: pooling type     = 0
0.00.595.307 I llm_load_print_meta: rope type        = 2
0.00.595.315 I llm_load_print_meta: rope scaling     = linear
0.00.595.317 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.595.318 I llm_load_print_meta: freq_scale_train = 1
0.00.595.318 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.595.319 I llm_load_print_meta: rope_finetuned   = unknown
0.00.595.319 I llm_load_print_meta: ssm_d_conv       = 0
0.00.595.326 I llm_load_print_meta: ssm_d_inner      = 0
0.00.595.327 I llm_load_print_meta: ssm_d_state      = 0
0.00.595.327 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.595.328 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.595.329 I llm_load_print_meta: model type       = 2B
0.00.595.331 I llm_load_print_meta: model ftype      = Q8_0
0.00.595.331 I llm_load_print_meta: model params     = 2.51 B
0.00.595.339 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.595.340 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.595.341 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.595.341 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.595.349 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.595.356 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.595.357 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.595.358 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.595.364 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.595.366 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.595.366 I llm_load_print_meta: max token length = 93
0.00.667.001 I llm_load_tensors:        CPU model buffer size =  2539.66 MiB
..............................................................
0.00.672.670 I llama_new_context_with_model: n_ctx      = 8192
0.00.672.676 I llama_new_context_with_model: n_batch    = 2048
0.00.672.677 I llama_new_context_with_model: n_ubatch   = 512
0.00.672.677 I llama_new_context_with_model: flash_attn = 0
0.00.672.679 I llama_new_context_with_model: freq_base  = 10000.0
0.00.672.680 I llama_new_context_with_model: freq_scale = 1
0.00.701.691 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.701.731 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.701.844 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.704.978 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.704.982 I llama_new_context_with_model: graph nodes  = 601
0.00.704.983 I llama_new_context_with_model: graph splits = 1
0.00.704.998 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.338.978 I main: llama threadpool init, n_threads = 4
0.01.338.991 I 
0.01.339.103 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.339.110 I 
0.01.339.360 I sampler seed: 1765008252
0.01.339.376 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.339.385 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.339.388 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.339.388 I 
 increably.

I am unable to generate an appropriate response because I am unable to access external websites or specific data sources. [end of text]


0.12.380.372 I llama_perf_sampler_print:    sampling time =      40.15 ms /    27 runs   (    1.49 ms per token,   672.41 tokens per second)
0.12.380.375 I llama_perf_context_print:        load time =    1336.02 ms
0.12.380.400 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.380.402 I llama_perf_context_print:        eval time =   10963.08 ms /    26 runs   (  421.66 ms per token,     2.37 tokens per second)
0.12.380.403 I llama_perf_context_print:       total time =   11041.40 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.654 I build: 3984 (dac2953d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.877 I main: llama backend init
0.00.002.817 I main: load the model and apply lora adapter, if any
0.00.024.260 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.472 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.562 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.573 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.575 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.579 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.580 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.581 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.583 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.585 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.586 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.597 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.598 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.599 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.608 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.610 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.572 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.788 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.460 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.468 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.469 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.470 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.471 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.472 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.474 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.477 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.479 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.480 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.481 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.268.482 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.490 I llama_model_loader: - type  f32:   37 tensors
0.00.268.493 I llama_model_loader: - type q8_0:  127 tensors
0.00.438.336 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.492.967 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.493.852 I llm_load_vocab: special tokens cache size = 5
0.00.590.326 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.590.395 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.590.396 I llm_load_print_meta: arch             = gemma
0.00.590.397 I llm_load_print_meta: vocab type       = SPM
0.00.590.397 I llm_load_print_meta: n_vocab          = 256000
0.00.590.400 I llm_load_print_meta: n_merges         = 0
0.00.590.400 I llm_load_print_meta: vocab_only       = 0
0.00.590.401 I llm_load_print_meta: n_ctx_train      = 8192
0.00.590.401 I llm_load_print_meta: n_embd           = 2048
0.00.590.401 I llm_load_print_meta: n_layer          = 18
0.00.590.466 I llm_load_print_meta: n_head           = 8
0.00.590.473 I llm_load_print_meta: n_head_kv        = 1
0.00.590.473 I llm_load_print_meta: n_rot            = 256
0.00.590.475 I llm_load_print_meta: n_swa            = 0
0.00.590.476 I llm_load_print_meta: n_embd_head_k    = 256
0.00.590.476 I llm_load_print_meta: n_embd_head_v    = 256
0.00.590.482 I llm_load_print_meta: n_gqa            = 8
0.00.590.486 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.590.496 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.590.499 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.590.500 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.590.501 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.590.501 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.590.502 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.590.507 I llm_load_print_meta: n_ff             = 16384
0.00.590.508 I llm_load_print_meta: n_expert         = 0
0.00.590.508 I llm_load_print_meta: n_expert_used    = 0
0.00.590.509 I llm_load_print_meta: causal attn      = 1
0.00.590.510 I llm_load_print_meta: pooling type     = 0
0.00.590.510 I llm_load_print_meta: rope type        = 2
0.00.590.511 I llm_load_print_meta: rope scaling     = linear
0.00.590.512 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.590.513 I llm_load_print_meta: freq_scale_train = 1
0.00.590.514 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.590.514 I llm_load_print_meta: rope_finetuned   = unknown
0.00.590.514 I llm_load_print_meta: ssm_d_conv       = 0
0.00.590.515 I llm_load_print_meta: ssm_d_inner      = 0
0.00.590.516 I llm_load_print_meta: ssm_d_state      = 0
0.00.590.516 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.590.516 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.590.517 I llm_load_print_meta: model type       = 2B
0.00.590.519 I llm_load_print_meta: model ftype      = Q8_0
0.00.590.520 I llm_load_print_meta: model params     = 2.51 B
0.00.590.521 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.590.522 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.590.522 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.590.523 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.590.524 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.590.524 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.590.524 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.590.537 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.590.543 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.590.545 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.590.545 I llm_load_print_meta: max token length = 93
0.00.709.824 I llm_load_tensors:        CPU model buffer size =   967.99 MiB
0.00.709.832 I llm_load_tensors:        CPU model buffer size =   344.30 MiB
0.00.709.833 I llm_load_tensors:        CPU model buffer size =   411.77 MiB
0.00.709.834 I llm_load_tensors:        CPU model buffer size =   437.27 MiB
0.00.709.835 I llm_load_tensors:        CPU model buffer size =   344.30 MiB
0.00.709.835 I llm_load_tensors:        CPU model buffer size =    34.02 MiB
..............................................................
0.00.715.339 I llama_new_context_with_model: n_ctx      = 8192
0.00.715.346 I llama_new_context_with_model: n_batch    = 2048
0.00.715.346 I llama_new_context_with_model: n_ubatch   = 512
0.00.715.347 I llama_new_context_with_model: flash_attn = 0
0.00.715.349 I llama_new_context_with_model: freq_base  = 10000.0
0.00.715.350 I llama_new_context_with_model: freq_scale = 1
0.00.744.148 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.744.184 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.744.301 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.747.360 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.747.363 I llama_new_context_with_model: graph nodes  = 601
0.00.747.364 I llama_new_context_with_model: graph splits = 1
0.00.747.382 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.356.583 I main: llama threadpool init, n_threads = 4
0.01.356.595 I 
0.01.356.715 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.356.718 I 
0.01.356.950 I sampler seed: 3701106732
0.01.356.961 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.356.969 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.356.970 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.356.970 I 
 increasities and have had a profound effect on the evolution of life on Earth. [end of text]


0.08.468.338 I llama_perf_sampler_print:    sampling time =      26.41 ms /    18 runs   (    1.47 ms per token,   681.53 tokens per second)
0.08.468.341 I llama_perf_context_print:        load time =    1353.67 ms
0.08.468.342 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.468.343 I llama_perf_context_print:        eval time =    7060.28 ms /    17 runs   (  415.31 ms per token,     2.41 tokens per second)
0.08.468.344 I llama_perf_context_print:       total time =    7111.76 ms /    18 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.627 I build: 3984 (dac2953d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.855 I main: llama backend init
0.00.002.804 I main: load the model and apply lora adapter, if any
0.00.024.615 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.833 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.995 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.005 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.007 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.012 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.013 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.014 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.016 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.016 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.018 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.028 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.033 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.034 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.036 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.038 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.543 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.026 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.904 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.912 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.914 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.915 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.916 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.917 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.918 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.922 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.923 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.924 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.925 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.268.926 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.934 I llama_model_loader: - type  f32:   37 tensors
0.00.268.938 I llama_model_loader: - type q8_0:  127 tensors
0.00.440.583 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.499.761 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.500.726 I llm_load_vocab: special tokens cache size = 5
0.00.596.750 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.596.814 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.596.815 I llm_load_print_meta: arch             = gemma
0.00.596.816 I llm_load_print_meta: vocab type       = SPM
0.00.596.816 I llm_load_print_meta: n_vocab          = 256000
0.00.596.819 I llm_load_print_meta: n_merges         = 0
0.00.596.819 I llm_load_print_meta: vocab_only       = 0
0.00.596.820 I llm_load_print_meta: n_ctx_train      = 8192
0.00.596.820 I llm_load_print_meta: n_embd           = 2048
0.00.596.820 I llm_load_print_meta: n_layer          = 18
0.00.596.885 I llm_load_print_meta: n_head           = 8
0.00.596.892 I llm_load_print_meta: n_head_kv        = 1
0.00.596.893 I llm_load_print_meta: n_rot            = 256
0.00.596.894 I llm_load_print_meta: n_swa            = 0
0.00.596.894 I llm_load_print_meta: n_embd_head_k    = 256
0.00.596.904 I llm_load_print_meta: n_embd_head_v    = 256
0.00.596.910 I llm_load_print_meta: n_gqa            = 8
0.00.596.915 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.596.920 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.596.921 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.596.923 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.596.931 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.596.935 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.596.935 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.596.942 I llm_load_print_meta: n_ff             = 16384
0.00.596.942 I llm_load_print_meta: n_expert         = 0
0.00.596.943 I llm_load_print_meta: n_expert_used    = 0
0.00.596.943 I llm_load_print_meta: causal attn      = 1
0.00.596.946 I llm_load_print_meta: pooling type     = 0
0.00.596.946 I llm_load_print_meta: rope type        = 2
0.00.596.946 I llm_load_print_meta: rope scaling     = linear
0.00.596.948 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.596.949 I llm_load_print_meta: freq_scale_train = 1
0.00.596.949 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.596.949 I llm_load_print_meta: rope_finetuned   = unknown
0.00.596.950 I llm_load_print_meta: ssm_d_conv       = 0
0.00.596.950 I llm_load_print_meta: ssm_d_inner      = 0
0.00.596.950 I llm_load_print_meta: ssm_d_state      = 0
0.00.596.950 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.596.951 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.596.954 I llm_load_print_meta: model type       = 2B
0.00.596.956 I llm_load_print_meta: model ftype      = Q8_0
0.00.596.957 I llm_load_print_meta: model params     = 2.51 B
0.00.596.958 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.596.958 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.596.959 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.596.961 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.596.962 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.596.962 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.596.962 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.596.963 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.596.969 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.596.970 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.596.970 I llm_load_print_meta: max token length = 93
0.00.711.569 I llm_load_tensors:        CPU model buffer size =  1904.18 MiB
0.00.711.578 I llm_load_tensors:        CPU model buffer size =   635.48 MiB
..............................................................
0.00.717.387 I llama_new_context_with_model: n_ctx      = 8192
0.00.717.394 I llama_new_context_with_model: n_batch    = 2048
0.00.717.394 I llama_new_context_with_model: n_ubatch   = 512
0.00.717.395 I llama_new_context_with_model: flash_attn = 0
0.00.717.397 I llama_new_context_with_model: freq_base  = 10000.0
0.00.717.398 I llama_new_context_with_model: freq_scale = 1
0.00.746.155 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.746.196 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.746.312 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.749.420 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.749.425 I llama_new_context_with_model: graph nodes  = 601
0.00.749.426 I llama_new_context_with_model: graph splits = 1
0.00.749.444 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.359.262 I main: llama threadpool init, n_threads = 4
0.01.359.275 I 
0.01.359.401 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.359.406 I 
0.01.359.653 I sampler seed: 2269091556
0.01.359.667 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.359.674 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.359.677 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.359.678 I 
 increasities, and other forms of sexually transmitted infections are a significant public health concern, affecting millions of people in the United States and around the world.

**

0.14.775.913 I llama_perf_sampler_print:    sampling time =      49.11 ms /    33 runs   (    1.49 ms per token,   672.03 tokens per second)
0.14.775.935 I llama_perf_context_print:        load time =    1356.36 ms
0.14.775.938 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.775.940 I llama_perf_context_print:        eval time =   13321.69 ms /    32 runs   (  416.30 ms per token,     2.40 tokens per second)
0.14.775.941 I llama_perf_context_print:       total time =   13416.66 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m0.241s
user	3m12.748s
sys	0m9.675s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3984 (dac2953d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198759.50 ms
main:    total time = 198759.50 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.657 I build: 3984 (dac2953d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.849 I main: llama backend init
0.00.002.779 I main: load the model and apply lora adapter, if any
0.00.024.778 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.987 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.077 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.087 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.089 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.093 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.095 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.096 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.097 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.099 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.100 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.109 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.113 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.114 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.115 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.115 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.899 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.822 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.558 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.564 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.565 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.566 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.567 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.569 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.570 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.573 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.574 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.575 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.576 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.271.577 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.585 I llama_model_loader: - type  f32:   37 tensors
0.00.271.589 I llama_model_loader: - type q4_K:  108 tensors
0.00.271.589 I llama_model_loader: - type q6_K:   19 tensors
0.00.430.102 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.486.553 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.487.416 I llm_load_vocab: special tokens cache size = 5
0.00.581.492 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.581.559 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.581.560 I llm_load_print_meta: arch             = gemma
0.00.581.561 I llm_load_print_meta: vocab type       = SPM
0.00.581.562 I llm_load_print_meta: n_vocab          = 256000
0.00.581.564 I llm_load_print_meta: n_merges         = 0
0.00.581.565 I llm_load_print_meta: vocab_only       = 0
0.00.581.565 I llm_load_print_meta: n_ctx_train      = 8192
0.00.581.566 I llm_load_print_meta: n_embd           = 2048
0.00.581.566 I llm_load_print_meta: n_layer          = 18
0.00.581.632 I llm_load_print_meta: n_head           = 8
0.00.581.639 I llm_load_print_meta: n_head_kv        = 1
0.00.581.639 I llm_load_print_meta: n_rot            = 256
0.00.581.641 I llm_load_print_meta: n_swa            = 0
0.00.581.641 I llm_load_print_meta: n_embd_head_k    = 256
0.00.581.652 I llm_load_print_meta: n_embd_head_v    = 256
0.00.581.662 I llm_load_print_meta: n_gqa            = 8
0.00.581.668 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.581.673 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.581.677 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.581.678 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.581.679 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.581.679 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.581.680 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.581.698 I llm_load_print_meta: n_ff             = 16384
0.00.581.700 I llm_load_print_meta: n_expert         = 0
0.00.581.700 I llm_load_print_meta: n_expert_used    = 0
0.00.581.700 I llm_load_print_meta: causal attn      = 1
0.00.581.701 I llm_load_print_meta: pooling type     = 0
0.00.581.701 I llm_load_print_meta: rope type        = 2
0.00.581.702 I llm_load_print_meta: rope scaling     = linear
0.00.581.704 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.581.704 I llm_load_print_meta: freq_scale_train = 1
0.00.581.708 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.581.708 I llm_load_print_meta: rope_finetuned   = unknown
0.00.581.708 I llm_load_print_meta: ssm_d_conv       = 0
0.00.581.709 I llm_load_print_meta: ssm_d_inner      = 0
0.00.581.709 I llm_load_print_meta: ssm_d_state      = 0
0.00.581.709 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.581.710 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.581.710 I llm_load_print_meta: model type       = 2B
0.00.581.712 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.581.712 I llm_load_print_meta: model params     = 2.51 B
0.00.581.713 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.581.714 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.581.723 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.581.726 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.581.726 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.581.727 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.581.727 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.581.727 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.581.734 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.581.735 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.581.736 I llm_load_print_meta: max token length = 93
0.00.651.408 I llm_load_tensors:        CPU model buffer size =   604.15 MiB
0.00.651.416 I llm_load_tensors:        CPU model buffer size =   185.62 MiB
0.00.651.417 I llm_load_tensors:        CPU model buffer size =   221.61 MiB
0.00.651.417 I llm_load_tensors:        CPU model buffer size =   185.89 MiB
0.00.651.418 I llm_load_tensors:        CPU model buffer size =   187.86 MiB
0.00.651.418 I llm_load_tensors:        CPU model buffer size =   163.85 MiB
.............................................................
0.00.657.054 I llama_new_context_with_model: n_ctx      = 8192
0.00.657.061 I llama_new_context_with_model: n_batch    = 2048
0.00.657.062 I llama_new_context_with_model: n_ubatch   = 512
0.00.657.062 I llama_new_context_with_model: flash_attn = 0
0.00.657.065 I llama_new_context_with_model: freq_base  = 10000.0
0.00.657.066 I llama_new_context_with_model: freq_scale = 1
0.00.685.723 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.685.762 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.685.878 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.688.930 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.688.934 I llama_new_context_with_model: graph nodes  = 601
0.00.688.934 I llama_new_context_with_model: graph splits = 1
0.00.688.952 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.268.346 I main: llama threadpool init, n_threads = 4
0.01.268.360 I 
0.01.268.474 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.268.477 I 
0.01.268.715 I sampler seed: 3500252854
0.01.268.731 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.268.741 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.268.752 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.268.753 I 
 increasities, a group of men who prey on young women.

These men prey on women who are vulnerable, alone, or in distress. They use their

0.12.165.344 I llama_perf_sampler_print:    sampling time =      49.20 ms /    33 runs   (    1.49 ms per token,   670.72 tokens per second)
0.12.165.360 I llama_perf_context_print:        load time =    1265.47 ms
0.12.165.362 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.165.363 I llama_perf_context_print:        eval time =   10802.45 ms /    32 runs   (  337.58 ms per token,     2.96 tokens per second)
0.12.165.364 I llama_perf_context_print:       total time =   10897.01 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3984 (dac2953d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198619.94 ms
main:    total time = 198619.94 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.744 I build: 3984 (dac2953d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.946 I main: llama backend init
0.00.002.884 I main: load the model and apply lora adapter, if any
0.00.025.201 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.293 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.306 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.308 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.312 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.314 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.315 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.317 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.318 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.318 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.328 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.332 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.333 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.334 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.335 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.895 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.252.081 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.953 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.965 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.966 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.967 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.968 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.969 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.971 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.974 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.975 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.984 I llama_model_loader: - type  f32:   37 tensors
0.00.271.989 I llama_model_loader: - type q4_K:  108 tensors
0.00.271.990 I llama_model_loader: - type q6_K:   19 tensors
0.00.435.318 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.496.794 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.497.697 I llm_load_vocab: special tokens cache size = 5
0.00.591.416 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.591.489 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.591.493 I llm_load_print_meta: arch             = gemma
0.00.591.494 I llm_load_print_meta: vocab type       = SPM
0.00.591.494 I llm_load_print_meta: n_vocab          = 256000
0.00.591.497 I llm_load_print_meta: n_merges         = 0
0.00.591.497 I llm_load_print_meta: vocab_only       = 0
0.00.591.498 I llm_load_print_meta: n_ctx_train      = 8192
0.00.591.499 I llm_load_print_meta: n_embd           = 2048
0.00.591.499 I llm_load_print_meta: n_layer          = 18
0.00.591.563 I llm_load_print_meta: n_head           = 8
0.00.591.573 I llm_load_print_meta: n_head_kv        = 1
0.00.591.574 I llm_load_print_meta: n_rot            = 256
0.00.591.574 I llm_load_print_meta: n_swa            = 0
0.00.591.575 I llm_load_print_meta: n_embd_head_k    = 256
0.00.591.576 I llm_load_print_meta: n_embd_head_v    = 256
0.00.591.581 I llm_load_print_meta: n_gqa            = 8
0.00.591.585 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.591.590 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.591.594 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.591.595 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.591.596 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.591.596 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.591.596 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.591.601 I llm_load_print_meta: n_ff             = 16384
0.00.591.610 I llm_load_print_meta: n_expert         = 0
0.00.591.613 I llm_load_print_meta: n_expert_used    = 0
0.00.591.614 I llm_load_print_meta: causal attn      = 1
0.00.591.614 I llm_load_print_meta: pooling type     = 0
0.00.591.614 I llm_load_print_meta: rope type        = 2
0.00.591.615 I llm_load_print_meta: rope scaling     = linear
0.00.591.617 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.591.618 I llm_load_print_meta: freq_scale_train = 1
0.00.591.618 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.591.618 I llm_load_print_meta: rope_finetuned   = unknown
0.00.591.632 I llm_load_print_meta: ssm_d_conv       = 0
0.00.591.633 I llm_load_print_meta: ssm_d_inner      = 0
0.00.591.633 I llm_load_print_meta: ssm_d_state      = 0
0.00.591.634 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.591.634 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.591.635 I llm_load_print_meta: model type       = 2B
0.00.591.637 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.591.638 I llm_load_print_meta: model params     = 2.51 B
0.00.591.639 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.591.639 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.591.640 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.591.641 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.591.641 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.591.642 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.591.642 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.591.643 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.591.649 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.591.651 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.591.651 I llm_load_print_meta: max token length = 93
0.00.653.756 I llm_load_tensors:        CPU model buffer size =  1548.98 MiB
.............................................................
0.00.659.310 I llama_new_context_with_model: n_ctx      = 8192
0.00.659.318 I llama_new_context_with_model: n_batch    = 2048
0.00.659.318 I llama_new_context_with_model: n_ubatch   = 512
0.00.659.319 I llama_new_context_with_model: flash_attn = 0
0.00.659.321 I llama_new_context_with_model: freq_base  = 10000.0
0.00.659.322 I llama_new_context_with_model: freq_scale = 1
0.00.688.890 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.688.930 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.689.047 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.692.167 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.692.171 I llama_new_context_with_model: graph nodes  = 601
0.00.692.171 I llama_new_context_with_model: graph splits = 1
0.00.692.188 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.266.159 I main: llama threadpool init, n_threads = 4
0.01.266.173 I 
0.01.266.287 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.266.291 I 
0.01.266.527 I sampler seed: 450513194
0.01.266.539 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.266.548 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.266.549 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.266.549 I 
 increamically.

I am unable to answer this question because it is sexually suggestive in nature. [end of text]


0.08.095.903 I llama_perf_sampler_print:    sampling time =      30.79 ms /    21 runs   (    1.47 ms per token,   681.95 tokens per second)
0.08.095.906 I llama_perf_context_print:        load time =    1263.18 ms
0.08.095.907 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.095.908 I llama_perf_context_print:        eval time =    6769.35 ms /    20 runs   (  338.47 ms per token,     2.95 tokens per second)
0.08.095.909 I llama_perf_context_print:       total time =    6829.75 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m1.281s
user	49m50.293s
sys	0m7.140s
