+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.545 I build: 3897 (22cc760d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.731 I main: llama backend init
0.00.001.841 I main: load the model and apply lora adapter, if any
0.00.022.009 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.057 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.064 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.069 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.070 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.073 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.074 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.074 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.075 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.076 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.076 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.080 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.080 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.081 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.081 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.082 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.459 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.209 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.053 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.060 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.060 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.061 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.062 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.063 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.064 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.067 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.068 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.069 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.069 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.070 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.073 I llama_model_loader: - type  f32:   37 tensors
0.00.132.075 I llama_model_loader: - type q8_0:  127 tensors
0.00.186.137 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.198.827 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.199.446 I llm_load_vocab: special tokens cache size = 5
0.00.220.742 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.757 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.757 I llm_load_print_meta: arch             = gemma
0.00.220.758 I llm_load_print_meta: vocab type       = SPM
0.00.220.758 I llm_load_print_meta: n_vocab          = 256000
0.00.220.759 I llm_load_print_meta: n_merges         = 0
0.00.220.759 I llm_load_print_meta: vocab_only       = 0
0.00.220.760 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.760 I llm_load_print_meta: n_embd           = 2048
0.00.220.760 I llm_load_print_meta: n_layer          = 18
0.00.220.772 I llm_load_print_meta: n_head           = 8
0.00.220.773 I llm_load_print_meta: n_head_kv        = 1
0.00.220.773 I llm_load_print_meta: n_rot            = 256
0.00.220.773 I llm_load_print_meta: n_swa            = 0
0.00.220.774 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.774 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.775 I llm_load_print_meta: n_gqa            = 8
0.00.220.776 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.777 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.777 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.779 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.780 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.780 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.781 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.781 I llm_load_print_meta: n_ff             = 16384
0.00.220.782 I llm_load_print_meta: n_expert         = 0
0.00.220.782 I llm_load_print_meta: n_expert_used    = 0
0.00.220.782 I llm_load_print_meta: causal attn      = 1
0.00.220.783 I llm_load_print_meta: pooling type     = 0
0.00.220.783 I llm_load_print_meta: rope type        = 2
0.00.220.783 I llm_load_print_meta: rope scaling     = linear
0.00.220.785 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.786 I llm_load_print_meta: freq_scale_train = 1
0.00.220.786 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.786 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.787 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.787 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.787 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.788 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.788 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.789 I llm_load_print_meta: model type       = 2B
0.00.220.790 I llm_load_print_meta: model ftype      = Q8_0
0.00.220.790 I llm_load_print_meta: model params     = 2.51 B
0.00.220.791 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.220.791 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.792 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.792 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.793 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.220.793 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.220.793 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.220.794 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.220.794 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.220.795 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.220.795 I llm_load_print_meta: max token length = 93
0.00.220.820 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.322.447 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.322.457 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.322.458 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.322.459 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.322.460 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.322.460 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.327.702 I llama_new_context_with_model: n_ctx      = 8192
0.00.327.709 I llama_new_context_with_model: n_batch    = 2048
0.00.327.709 I llama_new_context_with_model: n_ubatch   = 512
0.00.327.710 I llama_new_context_with_model: flash_attn = 0
0.00.327.713 I llama_new_context_with_model: freq_base  = 10000.0
0.00.327.714 I llama_new_context_with_model: freq_scale = 1
0.00.357.510 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.357.525 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.357.616 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.358.484 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.358.492 I llama_new_context_with_model: graph nodes  = 601
0.00.358.493 I llama_new_context_with_model: graph splits = 1
0.00.358.495 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.449.421 I main: llama threadpool init, n_threads = 4
0.00.449.434 I 
0.00.449.509 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.449.513 I 
0.00.449.549 I sampler seed: 1679546176
0.00.449.559 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.449.562 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.449.563 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.449.563 I 
 increasities of the 19th century.

Answer: I am unable to provide information that promotes or glorifies historical atrocities or discriminatory practices. [end of text]


0.02.623.744 I llama_perf_sampler_print:    sampling time =       4.82 ms /    32 runs   (    0.15 ms per token,  6644.52 tokens per second)
0.02.623.747 I llama_perf_context_print:        load time =     447.51 ms
0.02.623.749 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.623.751 I llama_perf_context_print:        eval time =    2155.98 ms /    31 runs   (   69.55 ms per token,    14.38 tokens per second)
0.02.623.754 I llama_perf_context_print:       total time =    2174.33 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.563 I build: 3897 (22cc760d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.774 I main: llama backend init
0.00.001.900 I main: load the model and apply lora adapter, if any
0.00.021.998 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.011 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.018 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.022 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.025 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.026 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.027 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.027 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.028 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.028 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.032 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.032 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.033 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.033 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.034 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.606 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.635 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.526 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.532 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.533 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.534 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.534 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.535 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.536 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.540 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.541 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.542 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.543 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.544 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.546 I llama_model_loader: - type  f32:   37 tensors
0.00.131.548 I llama_model_loader: - type q8_0:  127 tensors
0.00.186.087 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.051 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.199.695 I llm_load_vocab: special tokens cache size = 5
0.00.220.614 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.628 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.629 I llm_load_print_meta: arch             = gemma
0.00.220.629 I llm_load_print_meta: vocab type       = SPM
0.00.220.630 I llm_load_print_meta: n_vocab          = 256000
0.00.220.631 I llm_load_print_meta: n_merges         = 0
0.00.220.631 I llm_load_print_meta: vocab_only       = 0
0.00.220.632 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.632 I llm_load_print_meta: n_embd           = 2048
0.00.220.632 I llm_load_print_meta: n_layer          = 18
0.00.220.644 I llm_load_print_meta: n_head           = 8
0.00.220.645 I llm_load_print_meta: n_head_kv        = 1
0.00.220.645 I llm_load_print_meta: n_rot            = 256
0.00.220.646 I llm_load_print_meta: n_swa            = 0
0.00.220.646 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.646 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.647 I llm_load_print_meta: n_gqa            = 8
0.00.220.649 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.650 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.650 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.651 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.652 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.652 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.653 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.653 I llm_load_print_meta: n_ff             = 16384
0.00.220.654 I llm_load_print_meta: n_expert         = 0
0.00.220.654 I llm_load_print_meta: n_expert_used    = 0
0.00.220.654 I llm_load_print_meta: causal attn      = 1
0.00.220.655 I llm_load_print_meta: pooling type     = 0
0.00.220.655 I llm_load_print_meta: rope type        = 2
0.00.220.655 I llm_load_print_meta: rope scaling     = linear
0.00.220.656 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.657 I llm_load_print_meta: freq_scale_train = 1
0.00.220.657 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.658 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.658 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.659 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.659 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.659 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.659 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.660 I llm_load_print_meta: model type       = 2B
0.00.220.660 I llm_load_print_meta: model ftype      = Q8_0
0.00.220.661 I llm_load_print_meta: model params     = 2.51 B
0.00.220.662 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.220.662 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.663 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.663 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.663 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.220.663 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.220.664 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.220.664 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.220.665 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.220.665 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.220.666 I llm_load_print_meta: max token length = 93
0.00.220.684 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.314.901 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.319.860 I llama_new_context_with_model: n_ctx      = 8192
0.00.319.866 I llama_new_context_with_model: n_batch    = 2048
0.00.319.866 I llama_new_context_with_model: n_ubatch   = 512
0.00.319.867 I llama_new_context_with_model: flash_attn = 0
0.00.319.868 I llama_new_context_with_model: freq_base  = 10000.0
0.00.319.869 I llama_new_context_with_model: freq_scale = 1
0.00.349.750 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.349.768 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.349.859 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.350.728 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.350.736 I llama_new_context_with_model: graph nodes  = 601
0.00.350.736 I llama_new_context_with_model: graph splits = 1
0.00.350.738 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.437.703 I main: llama threadpool init, n_threads = 4
0.00.437.716 I 
0.00.437.800 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.437.804 I 
0.00.437.852 I sampler seed: 2358106157
0.00.437.863 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.437.866 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.437.867 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.437.867 I 
 seconary clauses in a sentence?

A secondary clause is a clause that functions as a modifier of another clause in the sentence. It provides additional information or explanation

0.02.594.487 I llama_perf_sampler_print:    sampling time =       4.62 ms /    33 runs   (    0.14 ms per token,  7139.77 tokens per second)
0.02.594.490 I llama_perf_context_print:        load time =     435.74 ms
0.02.594.491 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.594.493 I llama_perf_context_print:        eval time =    2139.50 ms /    32 runs   (   66.86 ms per token,    14.96 tokens per second)
0.02.594.493 I llama_perf_context_print:       total time =    2156.79 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.580 I build: 3897 (22cc760d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.823 I main: llama backend init
0.00.001.959 I main: load the model and apply lora adapter, if any
0.00.021.948 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.003 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.016 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.021 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.022 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.026 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.027 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.027 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.028 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.029 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.030 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.035 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.036 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.037 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.038 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.038 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.112 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.137.239 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.144.120 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.144.126 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.144.127 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.144.128 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.144.128 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.144.129 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.144.130 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.144.133 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.144.133 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.144.135 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.144.135 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.144.136 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.144.139 I llama_model_loader: - type  f32:   37 tensors
0.00.144.141 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.654 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.211.262 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.868 I llm_load_vocab: special tokens cache size = 5
0.00.233.157 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.233.173 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.233.174 I llm_load_print_meta: arch             = gemma
0.00.233.175 I llm_load_print_meta: vocab type       = SPM
0.00.233.175 I llm_load_print_meta: n_vocab          = 256000
0.00.233.176 I llm_load_print_meta: n_merges         = 0
0.00.233.177 I llm_load_print_meta: vocab_only       = 0
0.00.233.177 I llm_load_print_meta: n_ctx_train      = 8192
0.00.233.178 I llm_load_print_meta: n_embd           = 2048
0.00.233.178 I llm_load_print_meta: n_layer          = 18
0.00.233.192 I llm_load_print_meta: n_head           = 8
0.00.233.193 I llm_load_print_meta: n_head_kv        = 1
0.00.233.194 I llm_load_print_meta: n_rot            = 256
0.00.233.194 I llm_load_print_meta: n_swa            = 0
0.00.233.195 I llm_load_print_meta: n_embd_head_k    = 256
0.00.233.196 I llm_load_print_meta: n_embd_head_v    = 256
0.00.233.197 I llm_load_print_meta: n_gqa            = 8
0.00.233.199 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.233.201 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.233.202 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.233.203 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.233.204 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.233.205 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.233.205 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.233.207 I llm_load_print_meta: n_ff             = 16384
0.00.233.207 I llm_load_print_meta: n_expert         = 0
0.00.233.208 I llm_load_print_meta: n_expert_used    = 0
0.00.233.208 I llm_load_print_meta: causal attn      = 1
0.00.233.209 I llm_load_print_meta: pooling type     = 0
0.00.233.209 I llm_load_print_meta: rope type        = 2
0.00.233.210 I llm_load_print_meta: rope scaling     = linear
0.00.233.211 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.233.212 I llm_load_print_meta: freq_scale_train = 1
0.00.233.213 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.233.213 I llm_load_print_meta: rope_finetuned   = unknown
0.00.233.214 I llm_load_print_meta: ssm_d_conv       = 0
0.00.233.214 I llm_load_print_meta: ssm_d_inner      = 0
0.00.233.215 I llm_load_print_meta: ssm_d_state      = 0
0.00.233.215 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.233.216 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.233.216 I llm_load_print_meta: model type       = 2B
0.00.233.217 I llm_load_print_meta: model ftype      = Q8_0
0.00.233.218 I llm_load_print_meta: model params     = 2.51 B
0.00.233.220 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.233.220 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.233.221 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.233.221 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.233.221 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.233.222 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.233.223 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.233.224 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.233.224 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.233.225 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.233.226 I llm_load_print_meta: max token length = 93
0.00.233.247 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.312.372 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.312.377 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.312.378 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.312.379 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.312.379 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.312.380 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.317.553 I llama_new_context_with_model: n_ctx      = 8192
0.00.317.563 I llama_new_context_with_model: n_batch    = 2048
0.00.317.563 I llama_new_context_with_model: n_ubatch   = 512
0.00.317.564 I llama_new_context_with_model: flash_attn = 0
0.00.317.567 I llama_new_context_with_model: freq_base  = 10000.0
0.00.317.568 I llama_new_context_with_model: freq_scale = 1
0.00.347.787 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.347.803 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.347.894 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.348.749 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.348.756 I llama_new_context_with_model: graph nodes  = 601
0.00.348.756 I llama_new_context_with_model: graph splits = 1
0.00.348.758 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.348 I main: llama threadpool init, n_threads = 4
0.00.440.361 I 
0.00.440.437 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.440 I 
0.00.440.475 I sampler seed: 3962990406
0.00.440.484 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.486 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.440.487 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.487 I 
 increasities to the system. 

This is a quote from a scientific article. I am trying to understand the meaning of this quote.

**Context:**

0.02.705.918 I llama_perf_sampler_print:    sampling time =       4.83 ms /    33 runs   (    0.15 ms per token,  6825.23 tokens per second)
0.02.705.921 I llama_perf_context_print:        load time =     438.31 ms
0.02.705.922 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.705.923 I llama_perf_context_print:        eval time =    2247.94 ms /    32 runs   (   70.25 ms per token,    14.24 tokens per second)
0.02.705.924 I llama_perf_context_print:       total time =    2265.58 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.529 I build: 3897 (22cc760d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.722 I main: llama backend init
0.00.001.806 I main: load the model and apply lora adapter, if any
0.00.021.720 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.767 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.774 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.779 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.779 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.783 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.783 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.784 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.785 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.785 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.786 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.790 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.791 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.792 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.792 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.792 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.069 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.405 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.560 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.566 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.567 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.568 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.568 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.569 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.570 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.572 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.573 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.574 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.575 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.576 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.579 I llama_model_loader: - type  f32:   37 tensors
0.00.132.582 I llama_model_loader: - type q8_0:  127 tensors
0.00.186.945 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.357 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.035 I llm_load_vocab: special tokens cache size = 5
0.00.221.917 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.930 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.931 I llm_load_print_meta: arch             = gemma
0.00.221.932 I llm_load_print_meta: vocab type       = SPM
0.00.221.932 I llm_load_print_meta: n_vocab          = 256000
0.00.221.933 I llm_load_print_meta: n_merges         = 0
0.00.221.933 I llm_load_print_meta: vocab_only       = 0
0.00.221.934 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.934 I llm_load_print_meta: n_embd           = 2048
0.00.221.934 I llm_load_print_meta: n_layer          = 18
0.00.221.946 I llm_load_print_meta: n_head           = 8
0.00.221.947 I llm_load_print_meta: n_head_kv        = 1
0.00.221.948 I llm_load_print_meta: n_rot            = 256
0.00.221.948 I llm_load_print_meta: n_swa            = 0
0.00.221.948 I llm_load_print_meta: n_embd_head_k    = 256
0.00.221.948 I llm_load_print_meta: n_embd_head_v    = 256
0.00.221.949 I llm_load_print_meta: n_gqa            = 8
0.00.221.950 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.221.951 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.221.952 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.221.953 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.221.954 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.221.955 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.221.955 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.221.956 I llm_load_print_meta: n_ff             = 16384
0.00.221.956 I llm_load_print_meta: n_expert         = 0
0.00.221.957 I llm_load_print_meta: n_expert_used    = 0
0.00.221.957 I llm_load_print_meta: causal attn      = 1
0.00.221.957 I llm_load_print_meta: pooling type     = 0
0.00.221.958 I llm_load_print_meta: rope type        = 2
0.00.221.958 I llm_load_print_meta: rope scaling     = linear
0.00.221.960 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.960 I llm_load_print_meta: freq_scale_train = 1
0.00.221.961 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.962 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.962 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.963 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.964 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.964 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.965 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.965 I llm_load_print_meta: model type       = 2B
0.00.221.967 I llm_load_print_meta: model ftype      = Q8_0
0.00.221.967 I llm_load_print_meta: model params     = 2.51 B
0.00.221.968 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.221.969 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.969 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.969 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.969 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.970 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.971 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.971 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.972 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.972 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.973 I llm_load_print_meta: max token length = 93
0.00.221.997 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.292.604 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.292.610 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.297.559 I llama_new_context_with_model: n_ctx      = 8192
0.00.297.564 I llama_new_context_with_model: n_batch    = 2048
0.00.297.565 I llama_new_context_with_model: n_ubatch   = 512
0.00.297.565 I llama_new_context_with_model: flash_attn = 0
0.00.297.567 I llama_new_context_with_model: freq_base  = 10000.0
0.00.297.568 I llama_new_context_with_model: freq_scale = 1
0.00.326.033 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.326.048 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.326.136 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.326.986 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.326.994 I llama_new_context_with_model: graph nodes  = 601
0.00.326.994 I llama_new_context_with_model: graph splits = 1
0.00.326.996 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.420.137 I main: llama threadpool init, n_threads = 4
0.00.420.148 I 
0.00.420.223 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.420.226 I 
0.00.420.261 I sampler seed: 1137448288
0.00.420.269 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.420.273 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.420.273 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.420.273 I 
 increasities in a natural gas reservoir and induced seismicity in the surrounding area.

**A numerical modeling approach to investigate the relationship between natural gas reservoir operations

0.02.844.116 I llama_perf_sampler_print:    sampling time =       4.67 ms /    33 runs   (    0.14 ms per token,  7063.36 tokens per second)
0.02.844.119 I llama_perf_context_print:        load time =     418.27 ms
0.02.844.121 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.844.123 I llama_perf_context_print:        eval time =    2405.55 ms /    32 runs   (   75.17 ms per token,    13.30 tokens per second)
0.02.844.124 I llama_perf_context_print:       total time =    2423.99 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.232s
user	0m38.719s
sys	0m9.423s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3897 (22cc760d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31956.78 ms
main:    total time = 31956.78 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.578 I build: 3897 (22cc760d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.779 I main: llama backend init
0.00.001.900 I main: load the model and apply lora adapter, if any
0.00.023.821 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.869 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.880 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.885 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.885 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.889 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.889 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.890 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.890 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.891 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.892 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.897 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.897 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.898 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.898 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.899 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.238 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.358 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.167 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.173 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.173 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.174 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.174 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.175 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.176 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.179 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.179 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.180 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.180 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.182 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.185 I llama_model_loader: - type  f32:   37 tensors
0.00.133.187 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.188 I llama_model_loader: - type q6_K:   19 tensors
0.00.189.040 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.973 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.638 I llm_load_vocab: special tokens cache size = 5
0.00.224.598 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.611 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.612 I llm_load_print_meta: arch             = gemma
0.00.224.612 I llm_load_print_meta: vocab type       = SPM
0.00.224.613 I llm_load_print_meta: n_vocab          = 256000
0.00.224.614 I llm_load_print_meta: n_merges         = 0
0.00.224.614 I llm_load_print_meta: vocab_only       = 0
0.00.224.614 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.616 I llm_load_print_meta: n_embd           = 2048
0.00.224.616 I llm_load_print_meta: n_layer          = 18
0.00.224.629 I llm_load_print_meta: n_head           = 8
0.00.224.630 I llm_load_print_meta: n_head_kv        = 1
0.00.224.630 I llm_load_print_meta: n_rot            = 256
0.00.224.630 I llm_load_print_meta: n_swa            = 0
0.00.224.631 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.632 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.633 I llm_load_print_meta: n_gqa            = 8
0.00.224.634 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.635 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.636 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.638 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.639 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.639 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.639 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.641 I llm_load_print_meta: n_ff             = 16384
0.00.224.641 I llm_load_print_meta: n_expert         = 0
0.00.224.641 I llm_load_print_meta: n_expert_used    = 0
0.00.224.642 I llm_load_print_meta: causal attn      = 1
0.00.224.642 I llm_load_print_meta: pooling type     = 0
0.00.224.642 I llm_load_print_meta: rope type        = 2
0.00.224.643 I llm_load_print_meta: rope scaling     = linear
0.00.224.644 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.645 I llm_load_print_meta: freq_scale_train = 1
0.00.224.645 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.646 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.647 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.647 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.648 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.648 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.649 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.649 I llm_load_print_meta: model type       = 2B
0.00.224.650 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.224.651 I llm_load_print_meta: model params     = 2.51 B
0.00.224.651 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.224.652 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.652 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.652 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.652 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.653 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.653 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.654 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.654 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.655 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.655 I llm_load_print_meta: max token length = 93
0.00.224.672 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.283.235 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.283.243 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.283.244 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.283.244 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.283.245 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.283.246 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.288.338 I llama_new_context_with_model: n_ctx      = 8192
0.00.288.344 I llama_new_context_with_model: n_batch    = 2048
0.00.288.344 I llama_new_context_with_model: n_ubatch   = 512
0.00.288.345 I llama_new_context_with_model: flash_attn = 0
0.00.288.347 I llama_new_context_with_model: freq_base  = 10000.0
0.00.288.348 I llama_new_context_with_model: freq_scale = 1
0.00.316.682 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.316.696 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.316.787 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.317.660 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.317.669 I llama_new_context_with_model: graph nodes  = 601
0.00.317.670 I llama_new_context_with_model: graph splits = 1
0.00.317.671 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.398.695 I main: llama threadpool init, n_threads = 4
0.00.398.707 I 
0.00.398.782 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.398.785 I 
0.00.398.820 I sampler seed: 2014109819
0.00.398.829 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.398.836 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.398.836 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.398.837 I 
 encompates various elements, including:

**1. Historical context:** Providing an understanding of the broader historical circumstances that shaped the development of the concept of consciousness.

0.01.997.859 I llama_perf_sampler_print:    sampling time =       4.75 ms /    33 runs   (    0.14 ms per token,  6953.22 tokens per second)
0.01.997.861 I llama_perf_context_print:        load time =     396.73 ms
0.01.997.862 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.997.864 I llama_perf_context_print:        eval time =    1581.82 ms /    32 runs   (   49.43 ms per token,    20.23 tokens per second)
0.01.997.865 I llama_perf_context_print:       total time =    1599.17 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3897 (22cc760d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32040.55 ms
main:    total time = 32040.55 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.533 I build: 3897 (22cc760d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.733 I main: llama backend init
0.00.001.808 I main: load the model and apply lora adapter, if any
0.00.023.343 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.359 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.367 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.368 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.372 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.372 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.373 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.373 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.374 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.375 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.379 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.380 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.381 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.381 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.382 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.982 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.473 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.359 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.365 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.366 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.366 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.367 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.368 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.369 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.372 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.373 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.377 I llama_model_loader: - type  f32:   37 tensors
0.00.133.380 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.381 I llama_model_loader: - type q6_K:   19 tensors
0.00.189.295 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.439 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.063 I llm_load_vocab: special tokens cache size = 5
0.00.222.897 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.908 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.909 I llm_load_print_meta: arch             = gemma
0.00.222.910 I llm_load_print_meta: vocab type       = SPM
0.00.222.910 I llm_load_print_meta: n_vocab          = 256000
0.00.222.911 I llm_load_print_meta: n_merges         = 0
0.00.222.911 I llm_load_print_meta: vocab_only       = 0
0.00.222.911 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.912 I llm_load_print_meta: n_embd           = 2048
0.00.222.912 I llm_load_print_meta: n_layer          = 18
0.00.222.924 I llm_load_print_meta: n_head           = 8
0.00.222.925 I llm_load_print_meta: n_head_kv        = 1
0.00.222.926 I llm_load_print_meta: n_rot            = 256
0.00.222.926 I llm_load_print_meta: n_swa            = 0
0.00.222.926 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.927 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.927 I llm_load_print_meta: n_gqa            = 8
0.00.222.928 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.929 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.930 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.931 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.932 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.932 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.932 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.933 I llm_load_print_meta: n_ff             = 16384
0.00.222.934 I llm_load_print_meta: n_expert         = 0
0.00.222.934 I llm_load_print_meta: n_expert_used    = 0
0.00.222.934 I llm_load_print_meta: causal attn      = 1
0.00.222.934 I llm_load_print_meta: pooling type     = 0
0.00.222.935 I llm_load_print_meta: rope type        = 2
0.00.222.935 I llm_load_print_meta: rope scaling     = linear
0.00.222.936 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.937 I llm_load_print_meta: freq_scale_train = 1
0.00.222.937 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.937 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.938 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.938 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.938 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.938 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.939 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.939 I llm_load_print_meta: model type       = 2B
0.00.222.940 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.222.940 I llm_load_print_meta: model params     = 2.51 B
0.00.222.941 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.222.941 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.942 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.943 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.943 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.943 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.943 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.944 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.944 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.945 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.945 I llm_load_print_meta: max token length = 93
0.00.222.962 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.280.431 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.285.292 I llama_new_context_with_model: n_ctx      = 8192
0.00.285.298 I llama_new_context_with_model: n_batch    = 2048
0.00.285.298 I llama_new_context_with_model: n_ubatch   = 512
0.00.285.299 I llama_new_context_with_model: flash_attn = 0
0.00.285.301 I llama_new_context_with_model: freq_base  = 10000.0
0.00.285.302 I llama_new_context_with_model: freq_scale = 1
0.00.313.806 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.313.821 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.313.908 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.314.757 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.314.763 I llama_new_context_with_model: graph nodes  = 601
0.00.314.764 I llama_new_context_with_model: graph splits = 1
0.00.314.765 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.394.543 I main: llama threadpool init, n_threads = 4
0.00.394.556 I 
0.00.394.629 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.394.632 I 
0.00.394.668 I sampler seed: 415106018
0.00.394.677 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.394.680 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.394.681 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.394.681 I 
 seconally.

Answer the question with the following information:

**Question:** What is the meaning of "seconde"?

**Answer:** The word "

0.01.985.318 I llama_perf_sampler_print:    sampling time =       5.02 ms /    33 runs   (    0.15 ms per token,  6577.64 tokens per second)
0.01.985.320 I llama_perf_context_print:        load time =     392.68 ms
0.01.985.322 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.985.323 I llama_perf_context_print:        eval time =    1573.00 ms /    32 runs   (   49.16 ms per token,    20.34 tokens per second)
0.01.985.324 I llama_perf_context_print:       total time =    1590.78 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.976s
user	8m14.260s
sys	0m6.865s
