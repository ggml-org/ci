+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.637 I build: 3941 (4dfd0080) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.832 I main: llama backend init
0.00.002.800 I main: load the model and apply lora adapter, if any
0.00.024.943 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.142 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.229 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.240 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.241 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.245 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.246 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.248 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.250 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.251 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.251 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.258 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.266 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.270 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.271 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.272 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.116 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.252.058 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.500 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.508 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.509 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.510 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.511 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.512 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.513 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.517 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.528 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.530 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.270.531 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.270.545 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.270.555 I llama_model_loader: - type  f32:   37 tensors
0.00.270.558 I llama_model_loader: - type q8_0:  127 tensors
0.00.452.639 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.497.250 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.499.118 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.504.763 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.517.186 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.518.165 I llm_load_vocab: special tokens cache size = 5
0.00.613.674 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.613.748 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.613.749 I llm_load_print_meta: arch             = gemma
0.00.613.750 I llm_load_print_meta: vocab type       = SPM
0.00.613.751 I llm_load_print_meta: n_vocab          = 256000
0.00.613.754 I llm_load_print_meta: n_merges         = 0
0.00.613.754 I llm_load_print_meta: vocab_only       = 0
0.00.613.755 I llm_load_print_meta: n_ctx_train      = 8192
0.00.613.755 I llm_load_print_meta: n_embd           = 2048
0.00.613.755 I llm_load_print_meta: n_layer          = 18
0.00.613.819 I llm_load_print_meta: n_head           = 8
0.00.613.826 I llm_load_print_meta: n_head_kv        = 1
0.00.613.827 I llm_load_print_meta: n_rot            = 256
0.00.613.832 I llm_load_print_meta: n_swa            = 0
0.00.613.832 I llm_load_print_meta: n_embd_head_k    = 256
0.00.613.833 I llm_load_print_meta: n_embd_head_v    = 256
0.00.613.838 I llm_load_print_meta: n_gqa            = 8
0.00.613.845 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.613.850 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.613.851 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.613.853 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.613.853 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.613.854 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.613.856 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.613.861 I llm_load_print_meta: n_ff             = 16384
0.00.613.862 I llm_load_print_meta: n_expert         = 0
0.00.613.862 I llm_load_print_meta: n_expert_used    = 0
0.00.613.862 I llm_load_print_meta: causal attn      = 1
0.00.613.864 I llm_load_print_meta: pooling type     = 0
0.00.613.864 I llm_load_print_meta: rope type        = 2
0.00.613.865 I llm_load_print_meta: rope scaling     = linear
0.00.613.866 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.613.868 I llm_load_print_meta: freq_scale_train = 1
0.00.613.868 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.613.869 I llm_load_print_meta: rope_finetuned   = unknown
0.00.613.869 I llm_load_print_meta: ssm_d_conv       = 0
0.00.613.870 I llm_load_print_meta: ssm_d_inner      = 0
0.00.613.870 I llm_load_print_meta: ssm_d_state      = 0
0.00.613.871 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.613.873 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.613.874 I llm_load_print_meta: model type       = 2B
0.00.613.874 I llm_load_print_meta: model ftype      = Q8_0
0.00.613.875 I llm_load_print_meta: model params     = 2.51 B
0.00.613.876 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.613.877 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.613.877 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.613.878 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.613.879 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.613.879 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.613.879 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.613.880 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.613.885 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.613.887 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.613.887 I llm_load_print_meta: max token length = 93
0.00.614.051 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.716.473 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.716.485 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.716.485 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.716.486 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.716.487 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.716.488 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.722.218 I llama_new_context_with_model: n_ctx      = 8192
0.00.722.225 I llama_new_context_with_model: n_batch    = 2048
0.00.722.225 I llama_new_context_with_model: n_ubatch   = 512
0.00.722.226 I llama_new_context_with_model: flash_attn = 0
0.00.722.228 I llama_new_context_with_model: freq_base  = 10000.0
0.00.722.229 I llama_new_context_with_model: freq_scale = 1
0.00.750.281 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.750.326 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.750.446 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.751.798 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.751.803 I llama_new_context_with_model: graph nodes  = 601
0.00.751.803 I llama_new_context_with_model: graph splits = 1
0.00.751.819 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.365.705 I main: llama threadpool init, n_threads = 4
0.01.365.715 I 
0.01.365.821 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.365.822 I 
0.01.365.992 I sampler seed: 3099959400
0.01.366.004 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.366.009 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.366.010 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.366.011 I 
 increasities of the modern world:

**1. Artificial intelligence (AI)**

- Automation replacing human labor
- Ethical dilemmas of decision-making by AI

0.14.890.502 I llama_perf_sampler_print:    sampling time =      49.08 ms /    33 runs   (    1.49 ms per token,   672.40 tokens per second)
0.14.890.517 I llama_perf_context_print:        load time =    1362.82 ms
0.14.890.519 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.890.522 I llama_perf_context_print:        eval time =   13443.03 ms /    32 runs   (  420.09 ms per token,     2.38 tokens per second)
0.14.890.523 I llama_perf_context_print:       total time =   13524.81 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.631 I build: 3941 (4dfd0080) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.863 I main: llama backend init
0.00.002.800 I main: load the model and apply lora adapter, if any
0.00.025.198 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.285 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.299 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.300 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.304 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.305 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.306 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.307 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.308 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.309 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.315 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.317 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.318 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.319 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.320 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.501 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.604 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.758 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.767 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.768 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.769 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.770 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.771 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.772 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.776 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.777 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.778 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.779 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.268.780 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.788 I llama_model_loader: - type  f32:   37 tensors
0.00.268.792 I llama_model_loader: - type q8_0:  127 tensors
0.00.451.748 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.493.787 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.495.444 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.500.409 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.510.808 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.511.671 I llm_load_vocab: special tokens cache size = 5
0.00.606.665 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.606.732 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.606.733 I llm_load_print_meta: arch             = gemma
0.00.606.734 I llm_load_print_meta: vocab type       = SPM
0.00.606.735 I llm_load_print_meta: n_vocab          = 256000
0.00.606.737 I llm_load_print_meta: n_merges         = 0
0.00.606.738 I llm_load_print_meta: vocab_only       = 0
0.00.606.738 I llm_load_print_meta: n_ctx_train      = 8192
0.00.606.739 I llm_load_print_meta: n_embd           = 2048
0.00.606.739 I llm_load_print_meta: n_layer          = 18
0.00.606.805 I llm_load_print_meta: n_head           = 8
0.00.606.813 I llm_load_print_meta: n_head_kv        = 1
0.00.606.814 I llm_load_print_meta: n_rot            = 256
0.00.606.816 I llm_load_print_meta: n_swa            = 0
0.00.606.817 I llm_load_print_meta: n_embd_head_k    = 256
0.00.606.817 I llm_load_print_meta: n_embd_head_v    = 256
0.00.606.827 I llm_load_print_meta: n_gqa            = 8
0.00.606.849 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.606.856 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.606.858 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.606.859 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.606.860 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.606.860 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.606.860 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.606.865 I llm_load_print_meta: n_ff             = 16384
0.00.606.866 I llm_load_print_meta: n_expert         = 0
0.00.606.866 I llm_load_print_meta: n_expert_used    = 0
0.00.606.867 I llm_load_print_meta: causal attn      = 1
0.00.606.867 I llm_load_print_meta: pooling type     = 0
0.00.606.868 I llm_load_print_meta: rope type        = 2
0.00.606.869 I llm_load_print_meta: rope scaling     = linear
0.00.606.870 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.606.871 I llm_load_print_meta: freq_scale_train = 1
0.00.606.872 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.606.872 I llm_load_print_meta: rope_finetuned   = unknown
0.00.606.880 I llm_load_print_meta: ssm_d_conv       = 0
0.00.606.883 I llm_load_print_meta: ssm_d_inner      = 0
0.00.606.883 I llm_load_print_meta: ssm_d_state      = 0
0.00.606.884 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.606.884 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.606.885 I llm_load_print_meta: model type       = 2B
0.00.606.886 I llm_load_print_meta: model ftype      = Q8_0
0.00.606.886 I llm_load_print_meta: model params     = 2.51 B
0.00.606.887 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.606.888 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.606.889 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.606.889 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.606.890 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.606.890 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.606.891 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.606.891 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.606.897 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.606.898 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.606.899 I llm_load_print_meta: max token length = 93
0.00.607.064 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.700.837 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.706.532 I llama_new_context_with_model: n_ctx      = 8192
0.00.706.539 I llama_new_context_with_model: n_batch    = 2048
0.00.706.540 I llama_new_context_with_model: n_ubatch   = 512
0.00.706.540 I llama_new_context_with_model: flash_attn = 0
0.00.706.543 I llama_new_context_with_model: freq_base  = 10000.0
0.00.706.544 I llama_new_context_with_model: freq_scale = 1
0.00.735.488 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.735.533 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.735.663 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.737.008 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.737.013 I llama_new_context_with_model: graph nodes  = 601
0.00.737.013 I llama_new_context_with_model: graph splits = 1
0.00.737.029 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.351.306 I main: llama threadpool init, n_threads = 4
0.01.351.317 I 
0.01.351.422 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.351.427 I 
0.01.351.617 I sampler seed: 574495988
0.01.351.628 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.351.636 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.351.637 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.351.638 I 
 seconally.

**Assistant**

I understand. I will ensure to provide you with the requested information promptly. [end of text]


0.11.542.880 I llama_perf_sampler_print:    sampling time =      37.06 ms /    25 runs   (    1.48 ms per token,   674.62 tokens per second)
0.11.542.884 I llama_perf_context_print:        load time =    1348.42 ms
0.11.542.886 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.11.542.889 I llama_perf_context_print:        eval time =   10129.75 ms /    24 runs   (  422.07 ms per token,     2.37 tokens per second)
0.11.542.890 I llama_perf_context_print:       total time =   10191.58 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.647 I build: 3941 (4dfd0080) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.852 I main: llama backend init
0.00.002.799 I main: load the model and apply lora adapter, if any
0.00.024.719 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.920 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.010 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.021 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.022 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.027 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.028 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.029 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.030 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.031 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.032 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.039 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.040 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.041 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.042 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.043 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.444 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.259.005 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.277.210 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.277.217 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.277.218 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.277.219 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.277.220 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.277.222 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.277.223 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.277.226 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.277.227 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.277.229 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.277.230 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.277.231 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.277.240 I llama_model_loader: - type  f32:   37 tensors
0.00.277.243 I llama_model_loader: - type q8_0:  127 tensors
0.00.462.779 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.508.965 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.510.782 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.516.118 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.527.650 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.528.580 I llm_load_vocab: special tokens cache size = 5
0.00.627.438 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.627.512 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.627.513 I llm_load_print_meta: arch             = gemma
0.00.627.513 I llm_load_print_meta: vocab type       = SPM
0.00.627.515 I llm_load_print_meta: n_vocab          = 256000
0.00.627.517 I llm_load_print_meta: n_merges         = 0
0.00.627.517 I llm_load_print_meta: vocab_only       = 0
0.00.627.518 I llm_load_print_meta: n_ctx_train      = 8192
0.00.627.518 I llm_load_print_meta: n_embd           = 2048
0.00.627.519 I llm_load_print_meta: n_layer          = 18
0.00.627.602 I llm_load_print_meta: n_head           = 8
0.00.627.612 I llm_load_print_meta: n_head_kv        = 1
0.00.627.612 I llm_load_print_meta: n_rot            = 256
0.00.627.613 I llm_load_print_meta: n_swa            = 0
0.00.627.614 I llm_load_print_meta: n_embd_head_k    = 256
0.00.627.615 I llm_load_print_meta: n_embd_head_v    = 256
0.00.627.619 I llm_load_print_meta: n_gqa            = 8
0.00.627.624 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.627.630 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.627.631 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.627.633 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.627.634 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.627.634 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.627.635 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.627.647 I llm_load_print_meta: n_ff             = 16384
0.00.627.648 I llm_load_print_meta: n_expert         = 0
0.00.627.657 I llm_load_print_meta: n_expert_used    = 0
0.00.627.658 I llm_load_print_meta: causal attn      = 1
0.00.627.658 I llm_load_print_meta: pooling type     = 0
0.00.627.666 I llm_load_print_meta: rope type        = 2
0.00.627.667 I llm_load_print_meta: rope scaling     = linear
0.00.627.668 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.627.674 I llm_load_print_meta: freq_scale_train = 1
0.00.627.682 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.627.687 I llm_load_print_meta: rope_finetuned   = unknown
0.00.627.688 I llm_load_print_meta: ssm_d_conv       = 0
0.00.627.689 I llm_load_print_meta: ssm_d_inner      = 0
0.00.627.696 I llm_load_print_meta: ssm_d_state      = 0
0.00.627.697 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.627.697 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.627.698 I llm_load_print_meta: model type       = 2B
0.00.627.699 I llm_load_print_meta: model ftype      = Q8_0
0.00.627.700 I llm_load_print_meta: model params     = 2.51 B
0.00.627.701 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.627.702 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.627.702 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.627.703 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.627.703 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.627.704 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.627.711 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.627.712 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.627.718 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.627.720 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.627.720 I llm_load_print_meta: max token length = 93
0.00.627.889 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.706.341 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.706.352 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.706.353 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.706.353 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.706.354 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.706.355 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.711.983 I llama_new_context_with_model: n_ctx      = 8192
0.00.711.991 I llama_new_context_with_model: n_batch    = 2048
0.00.711.991 I llama_new_context_with_model: n_ubatch   = 512
0.00.711.992 I llama_new_context_with_model: flash_attn = 0
0.00.711.995 I llama_new_context_with_model: freq_base  = 10000.0
0.00.711.996 I llama_new_context_with_model: freq_scale = 1
0.00.741.216 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.741.264 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.741.381 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.742.722 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.742.727 I llama_new_context_with_model: graph nodes  = 601
0.00.742.728 I llama_new_context_with_model: graph splits = 1
0.00.742.744 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.406.663 I main: llama threadpool init, n_threads = 4
0.01.406.675 I 
0.01.406.796 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.406.800 I 
0.01.406.974 I sampler seed: 3218406219
0.01.406.985 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.406.992 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.406.993 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.406.995 I 
 increasels, and a troll, all find themselves stranded on a mysterious island.

What is the first thing they do?

**A)** Seek shelter from

0.14.987.089 I llama_perf_sampler_print:    sampling time =      49.12 ms /    33 runs   (    1.49 ms per token,   671.84 tokens per second)
0.14.987.092 I llama_perf_context_print:        load time =    1403.77 ms
0.14.987.094 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.987.108 I llama_perf_context_print:        eval time =   13498.66 ms /    32 runs   (  421.83 ms per token,     2.37 tokens per second)
0.14.987.110 I llama_perf_context_print:       total time =   13580.44 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.661 I build: 3941 (4dfd0080) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.874 I main: llama backend init
0.00.002.821 I main: load the model and apply lora adapter, if any
0.00.024.623 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.827 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.917 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.928 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.930 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.933 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.935 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.937 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.938 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.939 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.941 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.949 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.954 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.956 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.957 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.959 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.401 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.616 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.011 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.020 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.021 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.022 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.023 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.025 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.026 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.029 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.030 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.052 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.054 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.269.056 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.065 I llama_model_loader: - type  f32:   37 tensors
0.00.269.069 I llama_model_loader: - type q8_0:  127 tensors
0.00.457.114 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.504.590 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.506.570 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.512.515 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.524.365 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.525.352 I llm_load_vocab: special tokens cache size = 5
0.00.620.523 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.620.598 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.620.599 I llm_load_print_meta: arch             = gemma
0.00.620.599 I llm_load_print_meta: vocab type       = SPM
0.00.620.600 I llm_load_print_meta: n_vocab          = 256000
0.00.620.602 I llm_load_print_meta: n_merges         = 0
0.00.620.603 I llm_load_print_meta: vocab_only       = 0
0.00.620.603 I llm_load_print_meta: n_ctx_train      = 8192
0.00.620.604 I llm_load_print_meta: n_embd           = 2048
0.00.620.605 I llm_load_print_meta: n_layer          = 18
0.00.620.667 I llm_load_print_meta: n_head           = 8
0.00.620.674 I llm_load_print_meta: n_head_kv        = 1
0.00.620.675 I llm_load_print_meta: n_rot            = 256
0.00.620.675 I llm_load_print_meta: n_swa            = 0
0.00.620.675 I llm_load_print_meta: n_embd_head_k    = 256
0.00.620.676 I llm_load_print_meta: n_embd_head_v    = 256
0.00.620.702 I llm_load_print_meta: n_gqa            = 8
0.00.620.707 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.620.712 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.620.714 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.620.715 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.620.716 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.620.716 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.620.717 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.620.722 I llm_load_print_meta: n_ff             = 16384
0.00.620.723 I llm_load_print_meta: n_expert         = 0
0.00.620.723 I llm_load_print_meta: n_expert_used    = 0
0.00.620.724 I llm_load_print_meta: causal attn      = 1
0.00.620.725 I llm_load_print_meta: pooling type     = 0
0.00.620.725 I llm_load_print_meta: rope type        = 2
0.00.620.725 I llm_load_print_meta: rope scaling     = linear
0.00.620.727 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.620.732 I llm_load_print_meta: freq_scale_train = 1
0.00.620.733 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.620.734 I llm_load_print_meta: rope_finetuned   = unknown
0.00.620.743 I llm_load_print_meta: ssm_d_conv       = 0
0.00.620.743 I llm_load_print_meta: ssm_d_inner      = 0
0.00.620.744 I llm_load_print_meta: ssm_d_state      = 0
0.00.620.744 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.620.745 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.620.745 I llm_load_print_meta: model type       = 2B
0.00.620.746 I llm_load_print_meta: model ftype      = Q8_0
0.00.620.747 I llm_load_print_meta: model params     = 2.51 B
0.00.620.748 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.620.748 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.620.749 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.620.750 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.620.750 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.620.751 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.620.752 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.620.752 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.620.758 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.620.759 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.620.760 I llm_load_print_meta: max token length = 93
0.00.620.938 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.692.470 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.692.478 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.698.256 I llama_new_context_with_model: n_ctx      = 8192
0.00.698.264 I llama_new_context_with_model: n_batch    = 2048
0.00.698.265 I llama_new_context_with_model: n_ubatch   = 512
0.00.698.265 I llama_new_context_with_model: flash_attn = 0
0.00.698.267 I llama_new_context_with_model: freq_base  = 10000.0
0.00.698.268 I llama_new_context_with_model: freq_scale = 1
0.00.727.709 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.727.749 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.727.874 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.729.266 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.729.271 I llama_new_context_with_model: graph nodes  = 601
0.00.729.271 I llama_new_context_with_model: graph splits = 1
0.00.729.289 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.342.467 I main: llama threadpool init, n_threads = 4
0.01.342.478 I 
0.01.342.592 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.342.598 I 
0.01.342.772 I sampler seed: 3001644930
0.01.342.783 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.342.790 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.342.790 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.342.798 I 
 increadibly. [end of text]


0.03.032.914 I llama_perf_sampler_print:    sampling time =       6.23 ms /     5 runs   (    1.25 ms per token,   802.18 tokens per second)
0.03.032.918 I llama_perf_context_print:        load time =    1339.55 ms
0.03.032.920 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.032.921 I llama_perf_context_print:        eval time =    1678.43 ms /     4 runs   (  419.61 ms per token,     2.38 tokens per second)
0.03.032.922 I llama_perf_context_print:       total time =    1690.46 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m54.083s
user	2m48.835s
sys	0m9.410s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3941 (4dfd0080)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198318.96 ms
main:    total time = 198318.96 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.628 I build: 3941 (4dfd0080) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.857 I main: llama backend init
0.00.002.815 I main: load the model and apply lora adapter, if any
0.00.024.533 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.739 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.829 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.841 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.843 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.848 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.850 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.852 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.853 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.855 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.857 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.865 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.871 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.872 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.873 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.874 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.835 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.339 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.378 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.385 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.386 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.387 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.388 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.389 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.391 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.394 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.413 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.419 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.421 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.423 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.432 I llama_model_loader: - type  f32:   37 tensors
0.00.267.436 I llama_model_loader: - type q4_K:  108 tensors
0.00.267.437 I llama_model_loader: - type q6_K:   19 tensors
0.00.445.295 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.487.055 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.488.885 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.494.350 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.505.663 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.506.551 I llm_load_vocab: special tokens cache size = 5
0.00.601.602 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.601.672 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.601.673 I llm_load_print_meta: arch             = gemma
0.00.601.673 I llm_load_print_meta: vocab type       = SPM
0.00.601.674 I llm_load_print_meta: n_vocab          = 256000
0.00.601.677 I llm_load_print_meta: n_merges         = 0
0.00.601.677 I llm_load_print_meta: vocab_only       = 0
0.00.601.677 I llm_load_print_meta: n_ctx_train      = 8192
0.00.601.678 I llm_load_print_meta: n_embd           = 2048
0.00.601.678 I llm_load_print_meta: n_layer          = 18
0.00.601.744 I llm_load_print_meta: n_head           = 8
0.00.601.753 I llm_load_print_meta: n_head_kv        = 1
0.00.601.753 I llm_load_print_meta: n_rot            = 256
0.00.601.754 I llm_load_print_meta: n_swa            = 0
0.00.601.754 I llm_load_print_meta: n_embd_head_k    = 256
0.00.601.755 I llm_load_print_meta: n_embd_head_v    = 256
0.00.601.763 I llm_load_print_meta: n_gqa            = 8
0.00.601.769 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.601.782 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.601.785 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.601.786 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.601.787 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.601.788 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.601.789 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.601.798 I llm_load_print_meta: n_ff             = 16384
0.00.601.799 I llm_load_print_meta: n_expert         = 0
0.00.601.800 I llm_load_print_meta: n_expert_used    = 0
0.00.601.801 I llm_load_print_meta: causal attn      = 1
0.00.601.802 I llm_load_print_meta: pooling type     = 0
0.00.601.802 I llm_load_print_meta: rope type        = 2
0.00.601.806 I llm_load_print_meta: rope scaling     = linear
0.00.601.808 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.601.809 I llm_load_print_meta: freq_scale_train = 1
0.00.601.810 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.601.810 I llm_load_print_meta: rope_finetuned   = unknown
0.00.601.811 I llm_load_print_meta: ssm_d_conv       = 0
0.00.601.811 I llm_load_print_meta: ssm_d_inner      = 0
0.00.601.812 I llm_load_print_meta: ssm_d_state      = 0
0.00.601.812 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.601.813 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.601.817 I llm_load_print_meta: model type       = 2B
0.00.601.818 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.601.819 I llm_load_print_meta: model params     = 2.51 B
0.00.601.820 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.601.820 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.601.821 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.601.822 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.601.823 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.601.823 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.601.823 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.601.824 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.601.830 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.601.832 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.601.832 I llm_load_print_meta: max token length = 93
0.00.602.010 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.661.383 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.661.394 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.661.395 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.661.395 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.661.396 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.661.397 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.667.149 I llama_new_context_with_model: n_ctx      = 8192
0.00.667.155 I llama_new_context_with_model: n_batch    = 2048
0.00.667.156 I llama_new_context_with_model: n_ubatch   = 512
0.00.667.156 I llama_new_context_with_model: flash_attn = 0
0.00.667.159 I llama_new_context_with_model: freq_base  = 10000.0
0.00.667.160 I llama_new_context_with_model: freq_scale = 1
0.00.697.627 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.697.671 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.697.785 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.699.226 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.699.231 I llama_new_context_with_model: graph nodes  = 601
0.00.699.231 I llama_new_context_with_model: graph splits = 1
0.00.699.249 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.279.983 I main: llama threadpool init, n_threads = 4
0.01.279.994 I 
0.01.280.116 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.280.120 I 
0.01.280.291 I sampler seed: 2719833658
0.01.280.302 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.280.310 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.280.311 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.280.313 I 
 seconally and with great zest.

The passage describes a person who is full of energy and enthusiasm.

**Questions:**
1. What is the main

0.12.157.261 I llama_perf_sampler_print:    sampling time =      49.11 ms /    33 runs   (    1.49 ms per token,   671.99 tokens per second)
0.12.157.276 I llama_perf_context_print:        load time =    1277.08 ms
0.12.157.278 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.157.281 I llama_perf_context_print:        eval time =   10795.15 ms /    32 runs   (  337.35 ms per token,     2.96 tokens per second)
0.12.157.282 I llama_perf_context_print:       total time =   10877.29 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3941 (4dfd0080)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198259.77 ms
main:    total time = 198259.77 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.632 I build: 3941 (4dfd0080) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.848 I main: llama backend init
0.00.002.796 I main: load the model and apply lora adapter, if any
0.00.024.808 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.906 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.922 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.924 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.928 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.932 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.933 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.934 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.935 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.936 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.943 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.944 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.946 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.948 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.949 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.467 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.110 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.976 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.984 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.985 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.986 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.987 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.989 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.990 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.994 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.995 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.003 I llama_model_loader: - type  f32:   37 tensors
0.00.270.007 I llama_model_loader: - type q4_K:  108 tensors
0.00.270.008 I llama_model_loader: - type q6_K:   19 tensors
0.00.451.800 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.493.903 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.495.568 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.500.469 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.511.242 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.512.185 I llm_load_vocab: special tokens cache size = 5
0.00.616.900 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.616.972 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.616.976 I llm_load_print_meta: arch             = gemma
0.00.616.977 I llm_load_print_meta: vocab type       = SPM
0.00.616.978 I llm_load_print_meta: n_vocab          = 256000
0.00.616.980 I llm_load_print_meta: n_merges         = 0
0.00.616.980 I llm_load_print_meta: vocab_only       = 0
0.00.616.981 I llm_load_print_meta: n_ctx_train      = 8192
0.00.616.981 I llm_load_print_meta: n_embd           = 2048
0.00.616.982 I llm_load_print_meta: n_layer          = 18
0.00.617.044 I llm_load_print_meta: n_head           = 8
0.00.617.054 I llm_load_print_meta: n_head_kv        = 1
0.00.617.055 I llm_load_print_meta: n_rot            = 256
0.00.617.055 I llm_load_print_meta: n_swa            = 0
0.00.617.056 I llm_load_print_meta: n_embd_head_k    = 256
0.00.617.057 I llm_load_print_meta: n_embd_head_v    = 256
0.00.617.062 I llm_load_print_meta: n_gqa            = 8
0.00.617.069 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.617.074 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.617.075 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.617.077 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.617.078 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.617.079 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.617.079 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.617.084 I llm_load_print_meta: n_ff             = 16384
0.00.617.085 I llm_load_print_meta: n_expert         = 0
0.00.617.085 I llm_load_print_meta: n_expert_used    = 0
0.00.617.086 I llm_load_print_meta: causal attn      = 1
0.00.617.086 I llm_load_print_meta: pooling type     = 0
0.00.617.087 I llm_load_print_meta: rope type        = 2
0.00.617.088 I llm_load_print_meta: rope scaling     = linear
0.00.617.089 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.617.092 I llm_load_print_meta: freq_scale_train = 1
0.00.617.093 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.617.093 I llm_load_print_meta: rope_finetuned   = unknown
0.00.617.093 I llm_load_print_meta: ssm_d_conv       = 0
0.00.617.094 I llm_load_print_meta: ssm_d_inner      = 0
0.00.617.094 I llm_load_print_meta: ssm_d_state      = 0
0.00.617.094 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.617.095 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.617.095 I llm_load_print_meta: model type       = 2B
0.00.617.096 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.617.096 I llm_load_print_meta: model params     = 2.51 B
0.00.617.098 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.617.098 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.617.099 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.617.100 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.617.100 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.617.101 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.617.101 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.617.111 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.617.118 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.617.133 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.617.134 I llm_load_print_meta: max token length = 93
0.00.617.310 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.677.242 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.682.717 I llama_new_context_with_model: n_ctx      = 8192
0.00.682.725 I llama_new_context_with_model: n_batch    = 2048
0.00.682.725 I llama_new_context_with_model: n_ubatch   = 512
0.00.682.726 I llama_new_context_with_model: flash_attn = 0
0.00.682.728 I llama_new_context_with_model: freq_base  = 10000.0
0.00.682.729 I llama_new_context_with_model: freq_scale = 1
0.00.712.810 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.712.859 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.712.982 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.714.407 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.714.411 I llama_new_context_with_model: graph nodes  = 601
0.00.714.412 I llama_new_context_with_model: graph splits = 1
0.00.714.427 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.295.629 I main: llama threadpool init, n_threads = 4
0.01.295.641 I 
0.01.295.746 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.295.750 I 
0.01.295.916 I sampler seed: 4271622312
0.01.295.926 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.295.932 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.295.933 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.295.935 I 
 increamically in the air, carrying with it a sweet, earthy aroma and a tickle on the nose.

What is it?
\
... Coffee [end of text]


0.12.319.502 I llama_perf_sampler_print:    sampling time =      49.16 ms /    33 runs   (    1.49 ms per token,   671.30 tokens per second)
0.12.319.528 I llama_perf_context_print:        load time =    1292.75 ms
0.12.319.530 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.319.532 I llama_perf_context_print:        eval time =   10941.92 ms /    32 runs   (  341.94 ms per token,     2.92 tokens per second)
0.12.319.532 I llama_perf_context_print:       total time =   11023.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m3.921s
user	50m5.520s
sys	0m6.447s
