+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.546 I build: 3853 (7166ad41) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.722 I main: llama backend init
0.00.001.809 I main: load the model and apply lora adapter, if any
0.00.021.816 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.864 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.878 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.888 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.889 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.893 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.893 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.894 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.895 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.895 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.896 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.901 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.902 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.902 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.903 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.903 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.639 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.116 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.057 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.065 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.066 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.067 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.068 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.070 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.070 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.074 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.075 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.076 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.076 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.077 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.082 I llama_model_loader: - type  f32:   37 tensors
0.00.132.085 I llama_model_loader: - type q8_0:  127 tensors
0.00.194.956 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.771 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.563 I llm_load_vocab: special tokens cache size = 5
0.00.235.624 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.235.639 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.235.640 I llm_load_print_meta: arch             = gemma
0.00.235.640 I llm_load_print_meta: vocab type       = SPM
0.00.235.641 I llm_load_print_meta: n_vocab          = 256000
0.00.235.641 I llm_load_print_meta: n_merges         = 0
0.00.235.642 I llm_load_print_meta: vocab_only       = 0
0.00.235.642 I llm_load_print_meta: n_ctx_train      = 8192
0.00.235.642 I llm_load_print_meta: n_embd           = 2048
0.00.235.643 I llm_load_print_meta: n_layer          = 18
0.00.235.657 I llm_load_print_meta: n_head           = 8
0.00.235.658 I llm_load_print_meta: n_head_kv        = 1
0.00.235.658 I llm_load_print_meta: n_rot            = 256
0.00.235.659 I llm_load_print_meta: n_swa            = 0
0.00.235.659 I llm_load_print_meta: n_embd_head_k    = 256
0.00.235.660 I llm_load_print_meta: n_embd_head_v    = 256
0.00.235.661 I llm_load_print_meta: n_gqa            = 8
0.00.235.662 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.235.664 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.235.665 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.235.666 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.235.667 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.235.668 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.235.668 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.235.669 I llm_load_print_meta: n_ff             = 16384
0.00.235.670 I llm_load_print_meta: n_expert         = 0
0.00.235.670 I llm_load_print_meta: n_expert_used    = 0
0.00.235.671 I llm_load_print_meta: causal attn      = 1
0.00.235.674 I llm_load_print_meta: pooling type     = 0
0.00.235.675 I llm_load_print_meta: rope type        = 2
0.00.235.675 I llm_load_print_meta: rope scaling     = linear
0.00.235.677 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.235.678 I llm_load_print_meta: freq_scale_train = 1
0.00.235.678 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.235.679 I llm_load_print_meta: rope_finetuned   = unknown
0.00.235.679 I llm_load_print_meta: ssm_d_conv       = 0
0.00.235.679 I llm_load_print_meta: ssm_d_inner      = 0
0.00.235.680 I llm_load_print_meta: ssm_d_state      = 0
0.00.235.680 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.235.680 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.235.681 I llm_load_print_meta: model type       = 2B
0.00.235.682 I llm_load_print_meta: model ftype      = Q8_0
0.00.235.683 I llm_load_print_meta: model params     = 2.51 B
0.00.235.684 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.235.685 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.235.685 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.235.686 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.235.686 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.235.686 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.235.687 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.235.687 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.235.687 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.235.688 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.235.689 I llm_load_print_meta: max token length = 93
0.00.235.715 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.334.481 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.334.491 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.334.492 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.334.492 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.334.493 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.334.493 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.339.615 I llama_new_context_with_model: n_ctx      = 8192
0.00.339.621 I llama_new_context_with_model: n_batch    = 2048
0.00.339.621 I llama_new_context_with_model: n_ubatch   = 512
0.00.339.622 I llama_new_context_with_model: flash_attn = 0
0.00.339.625 I llama_new_context_with_model: freq_base  = 10000.0
0.00.339.625 I llama_new_context_with_model: freq_scale = 1
0.00.369.916 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.369.931 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.022 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.872 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.370.881 I llama_new_context_with_model: graph nodes  = 601
0.00.370.882 I llama_new_context_with_model: graph splits = 1
0.00.370.883 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.150 I main: llama threadpool init, n_threads = 4
0.00.464.164 I 
0.00.464.239 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.242 I 
0.00.464.278 I sampler seed: 3364796349
0.00.464.287 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.294 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.464.295 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.296 I 
 increasels in his eyes, a smile playing on his lips. [end of text]


0.01.475.979 I llama_perf_sampler_print:    sampling time =       2.25 ms /    15 runs   (    0.15 ms per token,  6672.60 tokens per second)
0.01.475.982 I llama_perf_context_print:        load time =     462.32 ms
0.01.475.984 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.475.986 I llama_perf_context_print:        eval time =    1003.12 ms /    14 runs   (   71.65 ms per token,    13.96 tokens per second)
0.01.475.987 I llama_perf_context_print:       total time =    1011.84 ms /    15 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.561 I build: 3853 (7166ad41) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.766 I main: llama backend init
0.00.001.851 I main: load the model and apply lora adapter, if any
0.00.022.509 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.525 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.534 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.535 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.539 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.539 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.540 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.540 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.541 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.541 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.546 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.547 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.548 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.549 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.550 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.475 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.095 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.978 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.985 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.985 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.986 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.986 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.987 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.988 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.991 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.991 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.992 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.993 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.994 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.998 I llama_model_loader: - type  f32:   37 tensors
0.00.133.001 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.517 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.220.830 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.221.625 I llm_load_vocab: special tokens cache size = 5
0.00.242.597 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.242.613 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.242.614 I llm_load_print_meta: arch             = gemma
0.00.242.614 I llm_load_print_meta: vocab type       = SPM
0.00.242.615 I llm_load_print_meta: n_vocab          = 256000
0.00.242.616 I llm_load_print_meta: n_merges         = 0
0.00.242.616 I llm_load_print_meta: vocab_only       = 0
0.00.242.616 I llm_load_print_meta: n_ctx_train      = 8192
0.00.242.616 I llm_load_print_meta: n_embd           = 2048
0.00.242.617 I llm_load_print_meta: n_layer          = 18
0.00.242.629 I llm_load_print_meta: n_head           = 8
0.00.242.630 I llm_load_print_meta: n_head_kv        = 1
0.00.242.631 I llm_load_print_meta: n_rot            = 256
0.00.242.631 I llm_load_print_meta: n_swa            = 0
0.00.242.632 I llm_load_print_meta: n_embd_head_k    = 256
0.00.242.632 I llm_load_print_meta: n_embd_head_v    = 256
0.00.242.633 I llm_load_print_meta: n_gqa            = 8
0.00.242.634 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.242.635 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.242.635 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.242.637 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.242.637 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.242.637 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.242.638 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.242.639 I llm_load_print_meta: n_ff             = 16384
0.00.242.639 I llm_load_print_meta: n_expert         = 0
0.00.242.639 I llm_load_print_meta: n_expert_used    = 0
0.00.242.639 I llm_load_print_meta: causal attn      = 1
0.00.242.640 I llm_load_print_meta: pooling type     = 0
0.00.242.640 I llm_load_print_meta: rope type        = 2
0.00.242.640 I llm_load_print_meta: rope scaling     = linear
0.00.242.642 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.242.642 I llm_load_print_meta: freq_scale_train = 1
0.00.242.643 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.242.643 I llm_load_print_meta: rope_finetuned   = unknown
0.00.242.643 I llm_load_print_meta: ssm_d_conv       = 0
0.00.242.643 I llm_load_print_meta: ssm_d_inner      = 0
0.00.242.644 I llm_load_print_meta: ssm_d_state      = 0
0.00.242.644 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.242.644 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.242.645 I llm_load_print_meta: model type       = 2B
0.00.242.645 I llm_load_print_meta: model ftype      = Q8_0
0.00.242.646 I llm_load_print_meta: model params     = 2.51 B
0.00.242.647 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.242.648 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.242.648 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.242.649 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.242.649 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.242.649 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.242.650 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.242.650 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.242.651 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.242.651 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.242.651 I llm_load_print_meta: max token length = 93
0.00.242.677 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.335.525 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.340.639 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.647 I llama_new_context_with_model: n_batch    = 2048
0.00.340.647 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.648 I llama_new_context_with_model: flash_attn = 0
0.00.340.650 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.651 I llama_new_context_with_model: freq_scale = 1
0.00.370.174 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.190 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.281 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.141 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.149 I llama_new_context_with_model: graph nodes  = 601
0.00.371.150 I llama_new_context_with_model: graph splits = 1
0.00.371.152 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.459.520 I main: llama threadpool init, n_threads = 4
0.00.459.535 I 
0.00.459.613 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.459.616 I 
0.00.459.655 I sampler seed: 2431483268
0.00.459.665 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.459.669 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.459.669 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.459.669 I 
 increasities, and the like.

I am unable to answer this question as it contains sexually suggestive content. [end of text]


0.02.075.110 I llama_perf_sampler_print:    sampling time =       3.41 ms /    24 runs   (    0.14 ms per token,  7031.94 tokens per second)
0.02.075.113 I llama_perf_context_print:        load time =     457.65 ms
0.02.075.115 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.075.117 I llama_perf_context_print:        eval time =    1601.67 ms /    23 runs   (   69.64 ms per token,    14.36 tokens per second)
0.02.075.118 I llama_perf_context_print:       total time =    1615.60 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.582 I build: 3853 (7166ad41) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.805 I main: llama backend init
0.00.001.916 I main: load the model and apply lora adapter, if any
0.00.022.350 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.400 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.408 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.413 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.415 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.419 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.420 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.421 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.422 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.423 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.423 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.427 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.428 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.429 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.429 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.430 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.481 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.273 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.196 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.203 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.203 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.204 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.205 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.206 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.206 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.209 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.209 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.210 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.211 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.211 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.214 I llama_model_loader: - type  f32:   37 tensors
0.00.132.218 I llama_model_loader: - type q8_0:  127 tensors
0.00.195.302 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.214.965 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.215.752 I llm_load_vocab: special tokens cache size = 5
0.00.236.766 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.236.782 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.236.783 I llm_load_print_meta: arch             = gemma
0.00.236.783 I llm_load_print_meta: vocab type       = SPM
0.00.236.784 I llm_load_print_meta: n_vocab          = 256000
0.00.236.785 I llm_load_print_meta: n_merges         = 0
0.00.236.785 I llm_load_print_meta: vocab_only       = 0
0.00.236.786 I llm_load_print_meta: n_ctx_train      = 8192
0.00.236.786 I llm_load_print_meta: n_embd           = 2048
0.00.236.787 I llm_load_print_meta: n_layer          = 18
0.00.236.801 I llm_load_print_meta: n_head           = 8
0.00.236.802 I llm_load_print_meta: n_head_kv        = 1
0.00.236.803 I llm_load_print_meta: n_rot            = 256
0.00.236.803 I llm_load_print_meta: n_swa            = 0
0.00.236.803 I llm_load_print_meta: n_embd_head_k    = 256
0.00.236.804 I llm_load_print_meta: n_embd_head_v    = 256
0.00.236.805 I llm_load_print_meta: n_gqa            = 8
0.00.236.806 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.236.807 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.236.808 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.236.809 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.236.809 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.236.810 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.236.810 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.236.811 I llm_load_print_meta: n_ff             = 16384
0.00.236.811 I llm_load_print_meta: n_expert         = 0
0.00.236.811 I llm_load_print_meta: n_expert_used    = 0
0.00.236.812 I llm_load_print_meta: causal attn      = 1
0.00.236.812 I llm_load_print_meta: pooling type     = 0
0.00.236.812 I llm_load_print_meta: rope type        = 2
0.00.236.813 I llm_load_print_meta: rope scaling     = linear
0.00.236.814 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.236.815 I llm_load_print_meta: freq_scale_train = 1
0.00.236.815 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.236.817 I llm_load_print_meta: rope_finetuned   = unknown
0.00.236.818 I llm_load_print_meta: ssm_d_conv       = 0
0.00.236.819 I llm_load_print_meta: ssm_d_inner      = 0
0.00.236.819 I llm_load_print_meta: ssm_d_state      = 0
0.00.236.820 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.236.820 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.236.820 I llm_load_print_meta: model type       = 2B
0.00.236.821 I llm_load_print_meta: model ftype      = Q8_0
0.00.236.822 I llm_load_print_meta: model params     = 2.51 B
0.00.236.823 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.236.823 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.236.824 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.236.824 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.236.825 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.236.826 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.236.826 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.236.826 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.236.827 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.236.827 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.236.827 I llm_load_print_meta: max token length = 93
0.00.236.870 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.313.264 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.313.271 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.313.272 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.313.273 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.313.273 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.313.274 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.318.983 I llama_new_context_with_model: n_ctx      = 8192
0.00.318.990 I llama_new_context_with_model: n_batch    = 2048
0.00.318.990 I llama_new_context_with_model: n_ubatch   = 512
0.00.318.991 I llama_new_context_with_model: flash_attn = 0
0.00.318.993 I llama_new_context_with_model: freq_base  = 10000.0
0.00.318.994 I llama_new_context_with_model: freq_scale = 1
0.00.349.231 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.349.246 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.349.348 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.350.268 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.350.277 I llama_new_context_with_model: graph nodes  = 601
0.00.350.277 I llama_new_context_with_model: graph splits = 1
0.00.350.279 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.448.120 I main: llama threadpool init, n_threads = 4
0.00.448.132 I 
0.00.448.213 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.448.218 I 
0.00.448.267 I sampler seed: 2755118101
0.00.448.277 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.448.281 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.448.281 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.448.282 I 
 increasities?

I cannot find the requested information in the context. Therefore, I am unable to answer this question. [end of text]


0.02.250.399 I llama_perf_sampler_print:    sampling time =       3.89 ms /    26 runs   (    0.15 ms per token,  6680.37 tokens per second)
0.02.250.402 I llama_perf_context_print:        load time =     446.18 ms
0.02.250.404 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.250.406 I llama_perf_context_print:        eval time =    1787.11 ms /    25 runs   (   71.48 ms per token,    13.99 tokens per second)
0.02.250.407 I llama_perf_context_print:       total time =    1802.29 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.604 I build: 3853 (7166ad41) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.846 I main: llama backend init
0.00.001.981 I main: load the model and apply lora adapter, if any
0.00.022.096 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.150 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.159 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.166 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.171 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.177 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.178 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.179 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.180 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.180 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.181 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.187 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.188 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.189 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.190 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.191 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.280 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.043 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.007 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.015 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.016 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.017 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.018 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.019 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.020 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.025 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.026 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.027 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.028 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.029 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.032 I llama_model_loader: - type  f32:   37 tensors
0.00.133.036 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.758 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.229.712 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.230.539 I llm_load_vocab: special tokens cache size = 5
0.00.251.742 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.251.760 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.251.761 I llm_load_print_meta: arch             = gemma
0.00.251.761 I llm_load_print_meta: vocab type       = SPM
0.00.251.762 I llm_load_print_meta: n_vocab          = 256000
0.00.251.762 I llm_load_print_meta: n_merges         = 0
0.00.251.763 I llm_load_print_meta: vocab_only       = 0
0.00.251.763 I llm_load_print_meta: n_ctx_train      = 8192
0.00.251.763 I llm_load_print_meta: n_embd           = 2048
0.00.251.764 I llm_load_print_meta: n_layer          = 18
0.00.251.778 I llm_load_print_meta: n_head           = 8
0.00.251.779 I llm_load_print_meta: n_head_kv        = 1
0.00.251.779 I llm_load_print_meta: n_rot            = 256
0.00.251.780 I llm_load_print_meta: n_swa            = 0
0.00.251.780 I llm_load_print_meta: n_embd_head_k    = 256
0.00.251.780 I llm_load_print_meta: n_embd_head_v    = 256
0.00.251.781 I llm_load_print_meta: n_gqa            = 8
0.00.251.782 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.251.783 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.251.784 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.251.785 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.251.786 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.251.786 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.251.786 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.251.787 I llm_load_print_meta: n_ff             = 16384
0.00.251.787 I llm_load_print_meta: n_expert         = 0
0.00.251.788 I llm_load_print_meta: n_expert_used    = 0
0.00.251.788 I llm_load_print_meta: causal attn      = 1
0.00.251.789 I llm_load_print_meta: pooling type     = 0
0.00.251.789 I llm_load_print_meta: rope type        = 2
0.00.251.790 I llm_load_print_meta: rope scaling     = linear
0.00.251.791 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.251.792 I llm_load_print_meta: freq_scale_train = 1
0.00.251.792 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.251.793 I llm_load_print_meta: rope_finetuned   = unknown
0.00.251.793 I llm_load_print_meta: ssm_d_conv       = 0
0.00.251.793 I llm_load_print_meta: ssm_d_inner      = 0
0.00.251.794 I llm_load_print_meta: ssm_d_state      = 0
0.00.251.794 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.251.794 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.251.795 I llm_load_print_meta: model type       = 2B
0.00.251.795 I llm_load_print_meta: model ftype      = Q8_0
0.00.251.796 I llm_load_print_meta: model params     = 2.51 B
0.00.251.797 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.251.797 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.251.798 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.251.798 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.251.799 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.251.799 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.251.799 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.251.800 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.251.800 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.251.801 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.251.801 I llm_load_print_meta: max token length = 93
0.00.251.832 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.322.329 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.322.338 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.327.442 I llama_new_context_with_model: n_ctx      = 8192
0.00.327.451 I llama_new_context_with_model: n_batch    = 2048
0.00.327.451 I llama_new_context_with_model: n_ubatch   = 512
0.00.327.452 I llama_new_context_with_model: flash_attn = 0
0.00.327.456 I llama_new_context_with_model: freq_base  = 10000.0
0.00.327.457 I llama_new_context_with_model: freq_scale = 1
0.00.359.571 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.586 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.684 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.583 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.591 I llama_new_context_with_model: graph nodes  = 601
0.00.360.591 I llama_new_context_with_model: graph splits = 1
0.00.360.593 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.458.506 I main: llama threadpool init, n_threads = 4
0.00.458.520 I 
0.00.458.598 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.458.603 I 
0.00.458.651 I sampler seed: 1137322889
0.00.458.668 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.458.675 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.458.676 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.458.676 I 
 increasities and the impact on the environment.

**Answer:**

**1. Declining Wildlife Populations:**

* Deforestation, habitat destruction, and human

0.02.940.350 I llama_perf_sampler_print:    sampling time =       4.96 ms /    33 runs   (    0.15 ms per token,  6653.23 tokens per second)
0.02.940.352 I llama_perf_context_print:        load time =     456.50 ms
0.02.940.353 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.940.355 I llama_perf_context_print:        eval time =    2462.97 ms /    32 runs   (   76.97 ms per token,    12.99 tokens per second)
0.02.940.355 I llama_perf_context_print:       total time =    2481.85 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.689s
user	0m30.573s
sys	0m9.590s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3853 (7166ad41)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32085.03 ms
main:    total time = 32085.03 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.637 I build: 3853 (7166ad41) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.842 I main: llama backend init
0.00.001.960 I main: load the model and apply lora adapter, if any
0.00.021.889 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.940 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.947 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.954 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.957 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.961 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.961 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.962 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.963 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.963 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.963 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.968 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.968 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.969 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.970 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.970 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.572 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.356 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.296 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.303 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.304 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.304 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.305 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.306 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.307 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.310 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.310 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.311 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.311 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.312 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.317 I llama_model_loader: - type  f32:   37 tensors
0.00.132.320 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.320 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.836 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.224.507 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.225.277 I llm_load_vocab: special tokens cache size = 5
0.00.246.201 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.246.215 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.246.216 I llm_load_print_meta: arch             = gemma
0.00.246.216 I llm_load_print_meta: vocab type       = SPM
0.00.246.217 I llm_load_print_meta: n_vocab          = 256000
0.00.246.217 I llm_load_print_meta: n_merges         = 0
0.00.246.217 I llm_load_print_meta: vocab_only       = 0
0.00.246.218 I llm_load_print_meta: n_ctx_train      = 8192
0.00.246.218 I llm_load_print_meta: n_embd           = 2048
0.00.246.219 I llm_load_print_meta: n_layer          = 18
0.00.246.232 I llm_load_print_meta: n_head           = 8
0.00.246.234 I llm_load_print_meta: n_head_kv        = 1
0.00.246.235 I llm_load_print_meta: n_rot            = 256
0.00.246.235 I llm_load_print_meta: n_swa            = 0
0.00.246.236 I llm_load_print_meta: n_embd_head_k    = 256
0.00.246.236 I llm_load_print_meta: n_embd_head_v    = 256
0.00.246.237 I llm_load_print_meta: n_gqa            = 8
0.00.246.238 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.246.239 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.246.240 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.246.241 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.246.241 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.246.242 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.246.242 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.246.243 I llm_load_print_meta: n_ff             = 16384
0.00.246.243 I llm_load_print_meta: n_expert         = 0
0.00.246.243 I llm_load_print_meta: n_expert_used    = 0
0.00.246.244 I llm_load_print_meta: causal attn      = 1
0.00.246.244 I llm_load_print_meta: pooling type     = 0
0.00.246.244 I llm_load_print_meta: rope type        = 2
0.00.246.245 I llm_load_print_meta: rope scaling     = linear
0.00.246.246 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.246.246 I llm_load_print_meta: freq_scale_train = 1
0.00.246.247 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.246.247 I llm_load_print_meta: rope_finetuned   = unknown
0.00.246.247 I llm_load_print_meta: ssm_d_conv       = 0
0.00.246.248 I llm_load_print_meta: ssm_d_inner      = 0
0.00.246.248 I llm_load_print_meta: ssm_d_state      = 0
0.00.246.248 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.246.248 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.246.249 I llm_load_print_meta: model type       = 2B
0.00.246.249 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.246.250 I llm_load_print_meta: model params     = 2.51 B
0.00.246.251 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.246.251 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.246.252 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.246.252 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.246.253 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.246.253 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.246.253 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.246.254 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.246.254 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.246.255 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.246.255 I llm_load_print_meta: max token length = 93
0.00.246.282 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.304.519 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.304.527 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.304.528 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.304.529 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.304.529 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.304.530 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.309.515 I llama_new_context_with_model: n_ctx      = 8192
0.00.309.522 I llama_new_context_with_model: n_batch    = 2048
0.00.309.522 I llama_new_context_with_model: n_ubatch   = 512
0.00.309.523 I llama_new_context_with_model: flash_attn = 0
0.00.309.525 I llama_new_context_with_model: freq_base  = 10000.0
0.00.309.526 I llama_new_context_with_model: freq_scale = 1
0.00.338.701 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.338.718 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.338.823 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.339.691 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.339.700 I llama_new_context_with_model: graph nodes  = 601
0.00.339.700 I llama_new_context_with_model: graph splits = 1
0.00.339.701 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.424.632 I main: llama threadpool init, n_threads = 4
0.00.424.645 I 
0.00.424.725 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.424.728 I 
0.00.424.765 I sampler seed: 1418093168
0.00.424.774 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.424.776 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.424.778 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.424.778 I 
 seconally.

The question is about the spelling and pronunciation of the word "slowly".

The correct spelling and pronunciation are:

A) Slowly

0.02.099.692 I llama_perf_sampler_print:    sampling time =       4.63 ms /    33 runs   (    0.14 ms per token,  7119.74 tokens per second)
0.02.099.694 I llama_perf_context_print:        load time =     422.65 ms
0.02.099.695 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.099.696 I llama_perf_context_print:        eval time =    1657.15 ms /    32 runs   (   51.79 ms per token,    19.31 tokens per second)
0.02.099.697 I llama_perf_context_print:       total time =    1675.07 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3853 (7166ad41)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32145.12 ms
main:    total time = 32145.12 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.556 I build: 3853 (7166ad41) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.760 I main: llama backend init
0.00.001.902 I main: load the model and apply lora adapter, if any
0.00.250.901 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.250.920 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.250.928 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.250.929 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.250.934 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.250.934 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.250.935 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.250.935 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.250.936 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.250.936 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.250.941 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.250.941 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.250.942 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.250.942 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.250.943 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.278.902 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.354.084 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.360.944 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.360.950 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.360.950 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.360.951 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.360.952 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.360.953 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.360.954 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.360.957 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.360.958 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.360.962 I llama_model_loader: - type  f32:   37 tensors
0.00.360.965 I llama_model_loader: - type q4_K:  108 tensors
0.00.360.966 I llama_model_loader: - type q6_K:   19 tensors
0.00.419.602 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.435.161 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.436.076 I llm_load_vocab: special tokens cache size = 5
0.00.457.087 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.457.102 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.457.103 I llm_load_print_meta: arch             = gemma
0.00.457.103 I llm_load_print_meta: vocab type       = SPM
0.00.457.104 I llm_load_print_meta: n_vocab          = 256000
0.00.457.104 I llm_load_print_meta: n_merges         = 0
0.00.457.105 I llm_load_print_meta: vocab_only       = 0
0.00.457.105 I llm_load_print_meta: n_ctx_train      = 8192
0.00.457.105 I llm_load_print_meta: n_embd           = 2048
0.00.457.106 I llm_load_print_meta: n_layer          = 18
0.00.457.119 I llm_load_print_meta: n_head           = 8
0.00.457.120 I llm_load_print_meta: n_head_kv        = 1
0.00.457.120 I llm_load_print_meta: n_rot            = 256
0.00.457.120 I llm_load_print_meta: n_swa            = 0
0.00.457.121 I llm_load_print_meta: n_embd_head_k    = 256
0.00.457.121 I llm_load_print_meta: n_embd_head_v    = 256
0.00.457.122 I llm_load_print_meta: n_gqa            = 8
0.00.457.123 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.457.124 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.457.125 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.457.127 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.457.127 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.457.127 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.457.128 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.457.129 I llm_load_print_meta: n_ff             = 16384
0.00.457.129 I llm_load_print_meta: n_expert         = 0
0.00.457.129 I llm_load_print_meta: n_expert_used    = 0
0.00.457.129 I llm_load_print_meta: causal attn      = 1
0.00.457.129 I llm_load_print_meta: pooling type     = 0
0.00.457.130 I llm_load_print_meta: rope type        = 2
0.00.457.130 I llm_load_print_meta: rope scaling     = linear
0.00.457.132 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.457.132 I llm_load_print_meta: freq_scale_train = 1
0.00.457.133 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.457.133 I llm_load_print_meta: rope_finetuned   = unknown
0.00.457.133 I llm_load_print_meta: ssm_d_conv       = 0
0.00.457.134 I llm_load_print_meta: ssm_d_inner      = 0
0.00.457.134 I llm_load_print_meta: ssm_d_state      = 0
0.00.457.134 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.457.134 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.457.135 I llm_load_print_meta: model type       = 2B
0.00.457.135 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.457.136 I llm_load_print_meta: model params     = 2.51 B
0.00.457.137 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.457.137 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.457.137 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.457.138 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.457.138 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.457.138 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.457.139 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.457.139 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.457.139 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.457.140 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.457.140 I llm_load_print_meta: max token length = 93
0.00.457.165 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.515.350 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.520.385 I llama_new_context_with_model: n_ctx      = 8192
0.00.520.390 I llama_new_context_with_model: n_batch    = 2048
0.00.520.391 I llama_new_context_with_model: n_ubatch   = 512
0.00.520.391 I llama_new_context_with_model: flash_attn = 0
0.00.520.393 I llama_new_context_with_model: freq_base  = 10000.0
0.00.520.394 I llama_new_context_with_model: freq_scale = 1
0.00.549.943 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.549.957 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.550.044 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.550.874 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.550.882 I llama_new_context_with_model: graph nodes  = 601
0.00.550.883 I llama_new_context_with_model: graph splits = 1
0.00.550.885 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.634.194 I main: llama threadpool init, n_threads = 4
0.00.634.207 I 
0.00.634.285 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.634.289 I 
0.00.634.326 I sampler seed: 3875374472
0.00.634.335 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.634.343 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.634.344 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.634.345 I 
 increasities and the challenges and opportunities they present

**Introduction**

Declining sexual activity rates among younger adults have been observed in many countries, raising concerns about

0.02.306.417 I llama_perf_sampler_print:    sampling time =       4.73 ms /    33 runs   (    0.14 ms per token,  6973.80 tokens per second)
0.02.306.419 I llama_perf_context_print:        load time =     632.27 ms
0.02.306.420 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.306.422 I llama_perf_context_print:        eval time =    1653.24 ms /    32 runs   (   51.66 ms per token,    19.36 tokens per second)
0.02.306.422 I llama_perf_context_print:       total time =    1672.23 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.508s
user	8m15.960s
sys	0m7.129s
