+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.478 I build: 4150 (71fc16bb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.667 I main: llama backend init
0.00.000.674 I main: load the model and apply lora adapter, if any
0.00.021.619 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.629 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.637 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.643 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.644 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.648 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.651 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.652 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.652 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.653 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.653 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.657 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.658 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.658 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.659 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.659 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.150 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.516 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.435 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.442 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.443 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.443 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.444 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.445 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.445 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.448 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.449 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.449 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.451 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.452 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.457 I llama_model_loader: - type  f32:   37 tensors
0.00.131.458 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.210 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.265.282 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.265.904 I llm_load_vocab: special tokens cache size = 5
0.00.286.981 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.286.999 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.287.000 I llm_load_print_meta: arch             = gemma
0.00.287.001 I llm_load_print_meta: vocab type       = SPM
0.00.287.001 I llm_load_print_meta: n_vocab          = 256000
0.00.287.002 I llm_load_print_meta: n_merges         = 0
0.00.287.002 I llm_load_print_meta: vocab_only       = 0
0.00.287.002 I llm_load_print_meta: n_ctx_train      = 8192
0.00.287.003 I llm_load_print_meta: n_embd           = 2048
0.00.287.003 I llm_load_print_meta: n_layer          = 18
0.00.287.015 I llm_load_print_meta: n_head           = 8
0.00.287.016 I llm_load_print_meta: n_head_kv        = 1
0.00.287.017 I llm_load_print_meta: n_rot            = 256
0.00.287.017 I llm_load_print_meta: n_swa            = 0
0.00.287.017 I llm_load_print_meta: n_embd_head_k    = 256
0.00.287.017 I llm_load_print_meta: n_embd_head_v    = 256
0.00.287.018 I llm_load_print_meta: n_gqa            = 8
0.00.287.019 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.287.020 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.287.021 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.287.022 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.287.022 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.287.023 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.287.023 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.287.024 I llm_load_print_meta: n_ff             = 16384
0.00.287.024 I llm_load_print_meta: n_expert         = 0
0.00.287.025 I llm_load_print_meta: n_expert_used    = 0
0.00.287.025 I llm_load_print_meta: causal attn      = 1
0.00.287.025 I llm_load_print_meta: pooling type     = 0
0.00.287.025 I llm_load_print_meta: rope type        = 2
0.00.287.026 I llm_load_print_meta: rope scaling     = linear
0.00.287.027 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.287.028 I llm_load_print_meta: freq_scale_train = 1
0.00.287.028 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.287.028 I llm_load_print_meta: rope_finetuned   = unknown
0.00.287.029 I llm_load_print_meta: ssm_d_conv       = 0
0.00.287.029 I llm_load_print_meta: ssm_d_inner      = 0
0.00.287.029 I llm_load_print_meta: ssm_d_state      = 0
0.00.287.029 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.287.030 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.287.030 I llm_load_print_meta: model type       = 2B
0.00.287.031 I llm_load_print_meta: model ftype      = Q8_0
0.00.287.031 I llm_load_print_meta: model params     = 2.51 B
0.00.287.032 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.287.033 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.287.033 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.287.033 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.287.034 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.287.034 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.287.034 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.287.034 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.287.035 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.287.035 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.287.036 I llm_load_print_meta: max token length = 93
0.00.386.237 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.386.244 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.386.245 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.386.245 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.386.246 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.386.247 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.391.563 I llama_new_context_with_model: n_seq_max     = 1
0.00.391.571 I llama_new_context_with_model: n_ctx         = 4096
0.00.391.571 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.391.571 I llama_new_context_with_model: n_batch       = 2048
0.00.391.572 I llama_new_context_with_model: n_ubatch      = 512
0.00.391.572 I llama_new_context_with_model: flash_attn    = 0
0.00.391.575 I llama_new_context_with_model: freq_base     = 10000.0
0.00.391.576 I llama_new_context_with_model: freq_scale    = 1
0.00.391.577 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.406.081 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.406.095 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.406.185 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.407.485 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.407.491 I llama_new_context_with_model: graph nodes  = 601
0.00.407.492 I llama_new_context_with_model: graph splits = 1
0.00.407.494 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.494.166 I main: llama threadpool init, n_threads = 4
0.00.494.180 I 
0.00.494.271 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.494.277 I 
0.00.494.318 I sampler seed: 2760974387
0.00.494.329 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.494.331 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.494.332 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.494.332 I 
 maneuvously,
But in the face of this treachery, my resolve shines like a beacon.

**What is the meaning of the poem?**



0.02.753.532 I llama_perf_sampler_print:    sampling time =       4.74 ms /    33 runs   (    0.14 ms per token,  6963.49 tokens per second)
0.02.753.534 I llama_perf_context_print:        load time =     493.47 ms
0.02.753.536 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.753.538 I llama_perf_context_print:        eval time =    2240.45 ms /    32 runs   (   70.01 ms per token,    14.28 tokens per second)
0.02.753.539 I llama_perf_context_print:       total time =    2259.37 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.496 I build: 4150 (71fc16bb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.717 I main: llama backend init
0.00.000.723 I main: load the model and apply lora adapter, if any
0.00.020.913 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.020.927 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.937 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.941 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.944 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.945 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.946 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.947 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.947 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.948 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.952 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.952 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.953 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.953 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.954 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.417 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.504 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.418 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.425 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.426 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.427 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.427 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.429 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.430 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.433 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.434 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.435 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.436 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.437 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.440 I llama_model_loader: - type  f32:   37 tensors
0.00.130.442 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.458 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.250 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.894 I llm_load_vocab: special tokens cache size = 5
0.00.270.710 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.726 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.727 I llm_load_print_meta: arch             = gemma
0.00.270.727 I llm_load_print_meta: vocab type       = SPM
0.00.270.728 I llm_load_print_meta: n_vocab          = 256000
0.00.270.728 I llm_load_print_meta: n_merges         = 0
0.00.270.729 I llm_load_print_meta: vocab_only       = 0
0.00.270.729 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.729 I llm_load_print_meta: n_embd           = 2048
0.00.270.730 I llm_load_print_meta: n_layer          = 18
0.00.270.743 I llm_load_print_meta: n_head           = 8
0.00.270.744 I llm_load_print_meta: n_head_kv        = 1
0.00.270.744 I llm_load_print_meta: n_rot            = 256
0.00.270.745 I llm_load_print_meta: n_swa            = 0
0.00.270.745 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.745 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.746 I llm_load_print_meta: n_gqa            = 8
0.00.270.747 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.748 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.749 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.750 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.750 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.750 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.751 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.752 I llm_load_print_meta: n_ff             = 16384
0.00.270.752 I llm_load_print_meta: n_expert         = 0
0.00.270.752 I llm_load_print_meta: n_expert_used    = 0
0.00.270.753 I llm_load_print_meta: causal attn      = 1
0.00.270.753 I llm_load_print_meta: pooling type     = 0
0.00.270.754 I llm_load_print_meta: rope type        = 2
0.00.270.754 I llm_load_print_meta: rope scaling     = linear
0.00.270.756 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.757 I llm_load_print_meta: freq_scale_train = 1
0.00.270.757 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.757 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.758 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.758 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.758 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.759 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.759 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.760 I llm_load_print_meta: model type       = 2B
0.00.270.761 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.761 I llm_load_print_meta: model params     = 2.51 B
0.00.270.763 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.763 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.764 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.764 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.764 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.764 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.765 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.765 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.765 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.766 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.769 I llm_load_print_meta: max token length = 93
0.00.362.708 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.367.850 I llama_new_context_with_model: n_seq_max     = 1
0.00.367.856 I llama_new_context_with_model: n_ctx         = 4096
0.00.367.857 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.367.857 I llama_new_context_with_model: n_batch       = 2048
0.00.367.857 I llama_new_context_with_model: n_ubatch      = 512
0.00.367.858 I llama_new_context_with_model: flash_attn    = 0
0.00.367.861 I llama_new_context_with_model: freq_base     = 10000.0
0.00.367.862 I llama_new_context_with_model: freq_scale    = 1
0.00.367.863 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.382.319 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.382.334 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.382.423 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.383.629 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.383.636 I llama_new_context_with_model: graph nodes  = 601
0.00.383.636 I llama_new_context_with_model: graph splits = 1
0.00.383.638 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.848 I main: llama threadpool init, n_threads = 4
0.00.463.863 I 
0.00.463.942 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.463.946 I 
0.00.463.995 I sampler seed: 2882266285
0.00.464.013 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.018 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.464.019 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.020 I 
 increadibly well with the rest of the cast in the movie.

**Explanation:**

The sentence is about the chemistry between two characters in a movie. The

0.02.655.840 I llama_perf_sampler_print:    sampling time =       5.13 ms /    33 runs   (    0.16 ms per token,  6434.00 tokens per second)
0.02.655.842 I llama_perf_context_print:        load time =     463.11 ms
0.02.655.844 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.655.845 I llama_perf_context_print:        eval time =    2172.37 ms /    32 runs   (   67.89 ms per token,    14.73 tokens per second)
0.02.655.846 I llama_perf_context_print:       total time =    2192.00 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.551 I build: 4150 (71fc16bb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.000.745 I main: load the model and apply lora adapter, if any
0.00.021.262 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.272 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.280 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.289 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.290 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.294 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.295 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.296 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.296 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.297 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.298 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.302 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.302 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.304 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.305 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.305 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.686 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.956 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.804 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.811 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.812 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.812 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.813 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.814 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.815 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.817 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.818 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.819 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.819 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.820 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.825 I llama_model_loader: - type  f32:   37 tensors
0.00.131.827 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.426 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.263.749 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.264.452 I llm_load_vocab: special tokens cache size = 5
0.00.285.457 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.285.474 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.285.475 I llm_load_print_meta: arch             = gemma
0.00.285.475 I llm_load_print_meta: vocab type       = SPM
0.00.285.476 I llm_load_print_meta: n_vocab          = 256000
0.00.285.476 I llm_load_print_meta: n_merges         = 0
0.00.285.477 I llm_load_print_meta: vocab_only       = 0
0.00.285.477 I llm_load_print_meta: n_ctx_train      = 8192
0.00.285.478 I llm_load_print_meta: n_embd           = 2048
0.00.285.478 I llm_load_print_meta: n_layer          = 18
0.00.285.488 I llm_load_print_meta: n_head           = 8
0.00.285.489 I llm_load_print_meta: n_head_kv        = 1
0.00.285.489 I llm_load_print_meta: n_rot            = 256
0.00.285.490 I llm_load_print_meta: n_swa            = 0
0.00.285.490 I llm_load_print_meta: n_embd_head_k    = 256
0.00.285.490 I llm_load_print_meta: n_embd_head_v    = 256
0.00.285.491 I llm_load_print_meta: n_gqa            = 8
0.00.285.492 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.285.493 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.285.494 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.285.495 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.285.495 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.285.496 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.285.496 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.285.497 I llm_load_print_meta: n_ff             = 16384
0.00.285.498 I llm_load_print_meta: n_expert         = 0
0.00.285.498 I llm_load_print_meta: n_expert_used    = 0
0.00.285.498 I llm_load_print_meta: causal attn      = 1
0.00.285.498 I llm_load_print_meta: pooling type     = 0
0.00.285.499 I llm_load_print_meta: rope type        = 2
0.00.285.499 I llm_load_print_meta: rope scaling     = linear
0.00.285.500 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.285.501 I llm_load_print_meta: freq_scale_train = 1
0.00.285.502 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.285.502 I llm_load_print_meta: rope_finetuned   = unknown
0.00.285.502 I llm_load_print_meta: ssm_d_conv       = 0
0.00.285.503 I llm_load_print_meta: ssm_d_inner      = 0
0.00.285.503 I llm_load_print_meta: ssm_d_state      = 0
0.00.285.503 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.285.504 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.285.504 I llm_load_print_meta: model type       = 2B
0.00.285.505 I llm_load_print_meta: model ftype      = Q8_0
0.00.285.507 I llm_load_print_meta: model params     = 2.51 B
0.00.285.508 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.285.509 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.285.509 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.285.509 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.285.509 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.285.510 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.285.510 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.285.511 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.285.511 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.285.512 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.285.512 I llm_load_print_meta: max token length = 93
0.00.358.133 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.358.140 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.358.141 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.358.141 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.358.142 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.358.143 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.363.266 I llama_new_context_with_model: n_seq_max     = 1
0.00.363.270 I llama_new_context_with_model: n_ctx         = 4096
0.00.363.270 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.363.270 I llama_new_context_with_model: n_batch       = 2048
0.00.363.271 I llama_new_context_with_model: n_ubatch      = 512
0.00.363.272 I llama_new_context_with_model: flash_attn    = 0
0.00.363.274 I llama_new_context_with_model: freq_base     = 10000.0
0.00.363.275 I llama_new_context_with_model: freq_scale    = 1
0.00.363.276 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.378.136 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.378.151 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.378.243 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.471 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.379.476 I llama_new_context_with_model: graph nodes  = 601
0.00.379.476 I llama_new_context_with_model: graph splits = 1
0.00.379.478 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.466.324 I main: llama threadpool init, n_threads = 4
0.00.466.338 I 
0.00.466.416 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.466.420 I 
0.00.466.461 I sampler seed: 827972284
0.00.466.471 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.466.474 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.466.475 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.466.476 I 
 increasities that occur in the natural world are fascinating and diverse, and understanding them can provide insights into the complexity of life and the interconnectedness of ecosystems.



0.02.774.873 I llama_perf_sampler_print:    sampling time =       4.93 ms /    33 runs   (    0.15 ms per token,  6688.29 tokens per second)
0.02.774.875 I llama_perf_context_print:        load time =     465.56 ms
0.02.774.876 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.774.878 I llama_perf_context_print:        eval time =    2289.55 ms /    32 runs   (   71.55 ms per token,    13.98 tokens per second)
0.02.774.879 I llama_perf_context_print:       total time =    2308.56 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.577 I build: 4150 (71fc16bb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.773 I main: llama backend init
0.00.000.780 I main: load the model and apply lora adapter, if any
0.00.021.141 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.152 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.160 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.165 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.166 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.172 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.175 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.176 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.177 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.177 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.178 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.182 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.183 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.184 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.184 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.185 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.231 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.635 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.522 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.529 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.529 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.530 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.530 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.531 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.532 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.534 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.535 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.535 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.536 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.537 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.541 I llama_model_loader: - type  f32:   37 tensors
0.00.131.543 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.648 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.258.276 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.846 I llm_load_vocab: special tokens cache size = 5
0.00.279.703 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.719 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.720 I llm_load_print_meta: arch             = gemma
0.00.279.720 I llm_load_print_meta: vocab type       = SPM
0.00.279.721 I llm_load_print_meta: n_vocab          = 256000
0.00.279.722 I llm_load_print_meta: n_merges         = 0
0.00.279.722 I llm_load_print_meta: vocab_only       = 0
0.00.279.722 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.723 I llm_load_print_meta: n_embd           = 2048
0.00.279.723 I llm_load_print_meta: n_layer          = 18
0.00.279.734 I llm_load_print_meta: n_head           = 8
0.00.279.735 I llm_load_print_meta: n_head_kv        = 1
0.00.279.735 I llm_load_print_meta: n_rot            = 256
0.00.279.736 I llm_load_print_meta: n_swa            = 0
0.00.279.736 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.736 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.737 I llm_load_print_meta: n_gqa            = 8
0.00.279.738 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.739 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.740 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.741 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.741 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.742 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.742 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.743 I llm_load_print_meta: n_ff             = 16384
0.00.279.743 I llm_load_print_meta: n_expert         = 0
0.00.279.744 I llm_load_print_meta: n_expert_used    = 0
0.00.279.744 I llm_load_print_meta: causal attn      = 1
0.00.279.744 I llm_load_print_meta: pooling type     = 0
0.00.279.745 I llm_load_print_meta: rope type        = 2
0.00.279.745 I llm_load_print_meta: rope scaling     = linear
0.00.279.746 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.747 I llm_load_print_meta: freq_scale_train = 1
0.00.279.747 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.748 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.748 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.748 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.748 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.749 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.749 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.749 I llm_load_print_meta: model type       = 2B
0.00.279.750 I llm_load_print_meta: model ftype      = Q8_0
0.00.279.751 I llm_load_print_meta: model params     = 2.51 B
0.00.279.752 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.279.752 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.752 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.753 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.753 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.753 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.753 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.754 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.754 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.755 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.755 I llm_load_print_meta: max token length = 93
0.00.350.691 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.350.698 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.356.023 I llama_new_context_with_model: n_seq_max     = 1
0.00.356.029 I llama_new_context_with_model: n_ctx         = 4096
0.00.356.030 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.356.030 I llama_new_context_with_model: n_batch       = 2048
0.00.356.031 I llama_new_context_with_model: n_ubatch      = 512
0.00.356.031 I llama_new_context_with_model: flash_attn    = 0
0.00.356.034 I llama_new_context_with_model: freq_base     = 10000.0
0.00.356.035 I llama_new_context_with_model: freq_scale    = 1
0.00.356.036 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.370.833 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.370.845 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.370.958 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.372.219 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.372.226 I llama_new_context_with_model: graph nodes  = 601
0.00.372.226 I llama_new_context_with_model: graph splits = 1
0.00.372.228 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.103 I main: llama threadpool init, n_threads = 4
0.00.461.115 I 
0.00.461.191 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.461.194 I 
0.00.461.234 I sampler seed: 1512175640
0.00.461.245 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.461.248 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.461.249 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.461.249 I 
 increasities in the context of the theory of mind (ToM).

**Concept of ToM:**

ToM is the mental capacity to attribute mental states

0.02.896.492 I llama_perf_sampler_print:    sampling time =       5.14 ms /    33 runs   (    0.16 ms per token,  6423.98 tokens per second)
0.02.896.494 I llama_perf_context_print:        load time =     460.30 ms
0.02.896.495 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.896.497 I llama_perf_context_print:        eval time =    2415.82 ms /    32 runs   (   75.49 ms per token,    13.25 tokens per second)
0.02.896.497 I llama_perf_context_print:       total time =    2435.40 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.626s
user	0m39.712s
sys	0m9.373s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4150 (71fc16bb)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40225.48 ms
main:    total time = 40225.48 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.549 I build: 4150 (71fc16bb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.742 I main: llama backend init
0.00.000.749 I main: load the model and apply lora adapter, if any
0.00.021.008 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.018 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.027 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.032 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.032 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.036 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.037 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.037 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.038 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.038 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.039 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.043 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.043 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.044 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.044 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.045 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.318 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.306 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.105 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.112 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.113 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.114 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.115 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.116 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.117 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.121 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.121 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.122 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.123 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.124 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.129 I llama_model_loader: - type  f32:   37 tensors
0.00.131.129 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.130 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.611 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.254.757 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.319 I llm_load_vocab: special tokens cache size = 5
0.00.276.187 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.276.204 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.276.205 I llm_load_print_meta: arch             = gemma
0.00.276.205 I llm_load_print_meta: vocab type       = SPM
0.00.276.206 I llm_load_print_meta: n_vocab          = 256000
0.00.276.207 I llm_load_print_meta: n_merges         = 0
0.00.276.207 I llm_load_print_meta: vocab_only       = 0
0.00.276.208 I llm_load_print_meta: n_ctx_train      = 8192
0.00.276.208 I llm_load_print_meta: n_embd           = 2048
0.00.276.208 I llm_load_print_meta: n_layer          = 18
0.00.276.219 I llm_load_print_meta: n_head           = 8
0.00.276.220 I llm_load_print_meta: n_head_kv        = 1
0.00.276.220 I llm_load_print_meta: n_rot            = 256
0.00.276.220 I llm_load_print_meta: n_swa            = 0
0.00.276.220 I llm_load_print_meta: n_embd_head_k    = 256
0.00.276.221 I llm_load_print_meta: n_embd_head_v    = 256
0.00.276.222 I llm_load_print_meta: n_gqa            = 8
0.00.276.223 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.276.224 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.276.224 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.276.225 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.276.226 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.276.226 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.276.227 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.276.228 I llm_load_print_meta: n_ff             = 16384
0.00.276.228 I llm_load_print_meta: n_expert         = 0
0.00.276.228 I llm_load_print_meta: n_expert_used    = 0
0.00.276.229 I llm_load_print_meta: causal attn      = 1
0.00.276.229 I llm_load_print_meta: pooling type     = 0
0.00.276.229 I llm_load_print_meta: rope type        = 2
0.00.276.230 I llm_load_print_meta: rope scaling     = linear
0.00.276.231 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.276.231 I llm_load_print_meta: freq_scale_train = 1
0.00.276.232 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.276.232 I llm_load_print_meta: rope_finetuned   = unknown
0.00.276.232 I llm_load_print_meta: ssm_d_conv       = 0
0.00.276.233 I llm_load_print_meta: ssm_d_inner      = 0
0.00.276.233 I llm_load_print_meta: ssm_d_state      = 0
0.00.276.233 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.276.234 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.276.234 I llm_load_print_meta: model type       = 2B
0.00.276.235 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.276.235 I llm_load_print_meta: model params     = 2.51 B
0.00.276.236 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.276.236 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.276.237 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.276.237 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.276.237 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.276.237 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.276.238 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.276.238 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.276.239 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.276.239 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.276.239 I llm_load_print_meta: max token length = 93
0.00.335.417 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.335.426 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.335.427 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.335.428 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.335.428 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.335.429 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.340.463 I llama_new_context_with_model: n_seq_max     = 1
0.00.340.468 I llama_new_context_with_model: n_ctx         = 4096
0.00.340.469 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.340.469 I llama_new_context_with_model: n_batch       = 2048
0.00.340.469 I llama_new_context_with_model: n_ubatch      = 512
0.00.340.470 I llama_new_context_with_model: flash_attn    = 0
0.00.340.472 I llama_new_context_with_model: freq_base     = 10000.0
0.00.340.473 I llama_new_context_with_model: freq_scale    = 1
0.00.340.473 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.355.555 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.355.570 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.355.661 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.356.933 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.356.938 I llama_new_context_with_model: graph nodes  = 601
0.00.356.938 I llama_new_context_with_model: graph splits = 1
0.00.356.940 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.431.628 I main: llama threadpool init, n_threads = 4
0.00.431.641 I 
0.00.431.715 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.431.719 I 
0.00.431.763 I sampler seed: 2853090353
0.00.431.773 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.431.776 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.431.777 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.431.778 I 
 increamically.

I am unable to generate the requested response as it contains sexually suggestive content. I am programmed to provide safe and appropriate responses. [end of text]


0.01.930.284 I llama_perf_sampler_print:    sampling time =       4.81 ms /    31 runs   (    0.16 ms per token,  6446.25 tokens per second)
0.01.930.286 I llama_perf_context_print:        load time =     430.86 ms
0.01.930.287 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.930.288 I llama_perf_context_print:        eval time =    1480.94 ms /    30 runs   (   49.36 ms per token,    20.26 tokens per second)
0.01.930.289 I llama_perf_context_print:       total time =    1498.66 ms /    31 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4150 (71fc16bb)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40223.66 ms
main:    total time = 40223.66 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.593 I build: 4150 (71fc16bb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.794 I main: llama backend init
0.00.000.801 I main: load the model and apply lora adapter, if any
0.00.021.262 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.278 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.286 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.287 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.292 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.293 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.294 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.294 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.295 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.295 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.299 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.300 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.301 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.302 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.302 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.182 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.727 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.595 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.602 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.603 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.603 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.604 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.605 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.606 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.608 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.609 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.613 I llama_model_loader: - type  f32:   37 tensors
0.00.130.614 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.614 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.098 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.757 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.394 I llm_load_vocab: special tokens cache size = 5
0.00.269.227 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.244 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.244 I llm_load_print_meta: arch             = gemma
0.00.269.245 I llm_load_print_meta: vocab type       = SPM
0.00.269.246 I llm_load_print_meta: n_vocab          = 256000
0.00.269.246 I llm_load_print_meta: n_merges         = 0
0.00.269.246 I llm_load_print_meta: vocab_only       = 0
0.00.269.247 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.247 I llm_load_print_meta: n_embd           = 2048
0.00.269.248 I llm_load_print_meta: n_layer          = 18
0.00.269.258 I llm_load_print_meta: n_head           = 8
0.00.269.259 I llm_load_print_meta: n_head_kv        = 1
0.00.269.260 I llm_load_print_meta: n_rot            = 256
0.00.269.260 I llm_load_print_meta: n_swa            = 0
0.00.269.260 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.261 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.261 I llm_load_print_meta: n_gqa            = 8
0.00.269.262 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.263 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.264 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.265 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.265 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.266 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.266 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.267 I llm_load_print_meta: n_ff             = 16384
0.00.269.267 I llm_load_print_meta: n_expert         = 0
0.00.269.267 I llm_load_print_meta: n_expert_used    = 0
0.00.269.268 I llm_load_print_meta: causal attn      = 1
0.00.269.268 I llm_load_print_meta: pooling type     = 0
0.00.269.269 I llm_load_print_meta: rope type        = 2
0.00.269.269 I llm_load_print_meta: rope scaling     = linear
0.00.269.270 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.271 I llm_load_print_meta: freq_scale_train = 1
0.00.269.271 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.271 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.271 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.272 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.272 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.272 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.272 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.273 I llm_load_print_meta: model type       = 2B
0.00.269.273 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.269.274 I llm_load_print_meta: model params     = 2.51 B
0.00.269.275 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.269.276 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.276 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.276 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.277 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.277 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.277 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.277 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.278 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.278 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.278 I llm_load_print_meta: max token length = 93
0.00.323.209 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.328.372 I llama_new_context_with_model: n_seq_max     = 1
0.00.328.379 I llama_new_context_with_model: n_ctx         = 4096
0.00.328.380 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.328.380 I llama_new_context_with_model: n_batch       = 2048
0.00.328.380 I llama_new_context_with_model: n_ubatch      = 512
0.00.328.381 I llama_new_context_with_model: flash_attn    = 0
0.00.328.384 I llama_new_context_with_model: freq_base     = 10000.0
0.00.328.384 I llama_new_context_with_model: freq_scale    = 1
0.00.328.385 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.343.992 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.344.008 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.344.101 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.345.372 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.345.378 I llama_new_context_with_model: graph nodes  = 601
0.00.345.379 I llama_new_context_with_model: graph splits = 1
0.00.345.381 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.420.176 I main: llama threadpool init, n_threads = 4
0.00.420.188 I 
0.00.420.262 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.420.265 I 
0.00.420.309 I sampler seed: 1137357155
0.00.420.320 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.420.323 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.420.323 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.420.323 I 
 squaRED.

I am unable to generate a response as requested because the prompt contains sexually suggestive or inappropriate content. I am programmed to uphold ethical guidelines and am

0.01.994.886 I llama_perf_sampler_print:    sampling time =       5.30 ms /    33 runs   (    0.16 ms per token,  6221.72 tokens per second)
0.01.994.889 I llama_perf_context_print:        load time =     419.35 ms
0.01.994.890 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.994.891 I llama_perf_context_print:        eval time =    1554.69 ms /    32 runs   (   48.58 ms per token,    20.58 tokens per second)
0.01.994.892 I llama_perf_context_print:       total time =    1574.72 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.169s
user	10m23.835s
sys	0m6.975s
