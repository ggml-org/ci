+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.558 I build: 3884 (71967c2a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.767 I main: llama backend init
0.00.001.854 I main: load the model and apply lora adapter, if any
0.00.022.167 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.211 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.222 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.228 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.228 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.233 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.233 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.234 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.234 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.235 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.236 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.239 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.240 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.241 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.241 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.242 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.528 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.720 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.530 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.536 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.537 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.538 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.539 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.540 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.541 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.545 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.546 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.547 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.548 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.549 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.553 I llama_model_loader: - type  f32:   37 tensors
0.00.132.556 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.149 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.219.497 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.220.257 I llm_load_vocab: special tokens cache size = 5
0.00.241.302 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.241.315 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.241.316 I llm_load_print_meta: arch             = gemma
0.00.241.316 I llm_load_print_meta: vocab type       = SPM
0.00.241.318 I llm_load_print_meta: n_vocab          = 256000
0.00.241.318 I llm_load_print_meta: n_merges         = 0
0.00.241.318 I llm_load_print_meta: vocab_only       = 0
0.00.241.319 I llm_load_print_meta: n_ctx_train      = 8192
0.00.241.319 I llm_load_print_meta: n_embd           = 2048
0.00.241.319 I llm_load_print_meta: n_layer          = 18
0.00.241.331 I llm_load_print_meta: n_head           = 8
0.00.241.332 I llm_load_print_meta: n_head_kv        = 1
0.00.241.332 I llm_load_print_meta: n_rot            = 256
0.00.241.332 I llm_load_print_meta: n_swa            = 0
0.00.241.333 I llm_load_print_meta: n_embd_head_k    = 256
0.00.241.333 I llm_load_print_meta: n_embd_head_v    = 256
0.00.241.334 I llm_load_print_meta: n_gqa            = 8
0.00.241.335 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.241.336 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.241.336 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.241.338 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.241.338 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.241.339 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.241.339 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.241.340 I llm_load_print_meta: n_ff             = 16384
0.00.241.340 I llm_load_print_meta: n_expert         = 0
0.00.241.341 I llm_load_print_meta: n_expert_used    = 0
0.00.241.341 I llm_load_print_meta: causal attn      = 1
0.00.241.341 I llm_load_print_meta: pooling type     = 0
0.00.241.342 I llm_load_print_meta: rope type        = 2
0.00.241.342 I llm_load_print_meta: rope scaling     = linear
0.00.241.344 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.241.344 I llm_load_print_meta: freq_scale_train = 1
0.00.241.344 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.241.345 I llm_load_print_meta: rope_finetuned   = unknown
0.00.241.345 I llm_load_print_meta: ssm_d_conv       = 0
0.00.241.345 I llm_load_print_meta: ssm_d_inner      = 0
0.00.241.346 I llm_load_print_meta: ssm_d_state      = 0
0.00.241.346 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.241.346 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.241.347 I llm_load_print_meta: model type       = 2B
0.00.241.348 I llm_load_print_meta: model ftype      = Q8_0
0.00.241.348 I llm_load_print_meta: model params     = 2.51 B
0.00.241.349 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.241.349 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.241.350 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.241.350 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.241.350 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.241.351 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.241.351 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.241.352 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.241.352 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.241.352 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.241.353 I llm_load_print_meta: max token length = 93
0.00.241.380 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.337.689 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.337.698 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.337.699 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.337.700 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.337.700 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.337.701 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.342.845 I llama_new_context_with_model: n_ctx      = 8192
0.00.342.851 I llama_new_context_with_model: n_batch    = 2048
0.00.342.852 I llama_new_context_with_model: n_ubatch   = 512
0.00.342.852 I llama_new_context_with_model: flash_attn = 0
0.00.342.854 I llama_new_context_with_model: freq_base  = 10000.0
0.00.342.855 I llama_new_context_with_model: freq_scale = 1
0.00.372.690 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.372.707 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.372.798 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.373.671 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.373.679 I llama_new_context_with_model: graph nodes  = 601
0.00.373.679 I llama_new_context_with_model: graph splits = 1
0.00.373.681 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.465.470 I main: llama threadpool init, n_threads = 4
0.00.465.482 I 
0.00.465.560 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.465.564 I 
0.00.465.598 I sampler seed: 2013677899
0.00.465.608 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.465.610 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.465.611 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.465.611 I 
 increasities for an improved user experience.

**What are the potential risks and challenges associated with using this approach?**

While using increasities may offer certain

0.02.739.552 I llama_perf_sampler_print:    sampling time =       5.66 ms /    33 runs   (    0.17 ms per token,  5826.27 tokens per second)
0.02.739.554 I llama_perf_context_print:        load time =     463.55 ms
0.02.739.555 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.739.557 I llama_perf_context_print:        eval time =    2254.80 ms /    32 runs   (   70.46 ms per token,    14.19 tokens per second)
0.02.739.557 I llama_perf_context_print:       total time =    2274.09 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.612 I build: 3884 (71967c2a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.822 I main: llama backend init
0.00.001.918 I main: load the model and apply lora adapter, if any
0.00.022.176 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.240 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.248 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.249 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.253 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.254 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.254 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.255 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.256 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.257 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.262 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.263 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.263 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.264 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.264 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.492 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.559 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.351 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.358 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.359 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.360 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.360 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.361 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.362 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.365 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.366 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.366 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.367 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.368 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.371 I llama_model_loader: - type  f32:   37 tensors
0.00.132.373 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.816 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.368 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.166 I llm_load_vocab: special tokens cache size = 5
0.00.224.150 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.163 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.164 I llm_load_print_meta: arch             = gemma
0.00.224.165 I llm_load_print_meta: vocab type       = SPM
0.00.224.166 I llm_load_print_meta: n_vocab          = 256000
0.00.224.166 I llm_load_print_meta: n_merges         = 0
0.00.224.167 I llm_load_print_meta: vocab_only       = 0
0.00.224.167 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.167 I llm_load_print_meta: n_embd           = 2048
0.00.224.168 I llm_load_print_meta: n_layer          = 18
0.00.224.179 I llm_load_print_meta: n_head           = 8
0.00.224.180 I llm_load_print_meta: n_head_kv        = 1
0.00.224.180 I llm_load_print_meta: n_rot            = 256
0.00.224.181 I llm_load_print_meta: n_swa            = 0
0.00.224.181 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.181 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.182 I llm_load_print_meta: n_gqa            = 8
0.00.224.183 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.184 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.185 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.187 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.187 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.187 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.188 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.189 I llm_load_print_meta: n_ff             = 16384
0.00.224.189 I llm_load_print_meta: n_expert         = 0
0.00.224.189 I llm_load_print_meta: n_expert_used    = 0
0.00.224.189 I llm_load_print_meta: causal attn      = 1
0.00.224.190 I llm_load_print_meta: pooling type     = 0
0.00.224.190 I llm_load_print_meta: rope type        = 2
0.00.224.190 I llm_load_print_meta: rope scaling     = linear
0.00.224.192 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.192 I llm_load_print_meta: freq_scale_train = 1
0.00.224.192 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.193 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.193 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.193 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.194 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.194 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.194 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.195 I llm_load_print_meta: model type       = 2B
0.00.224.195 I llm_load_print_meta: model ftype      = Q8_0
0.00.224.196 I llm_load_print_meta: model params     = 2.51 B
0.00.224.197 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.224.197 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.198 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.198 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.198 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.199 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.200 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.200 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.200 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.201 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.201 I llm_load_print_meta: max token length = 93
0.00.224.220 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.318.220 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.323.426 I llama_new_context_with_model: n_ctx      = 8192
0.00.323.431 I llama_new_context_with_model: n_batch    = 2048
0.00.323.432 I llama_new_context_with_model: n_ubatch   = 512
0.00.323.432 I llama_new_context_with_model: flash_attn = 0
0.00.323.435 I llama_new_context_with_model: freq_base  = 10000.0
0.00.323.436 I llama_new_context_with_model: freq_scale = 1
0.00.353.693 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.353.709 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.353.798 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.682 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.354.690 I llama_new_context_with_model: graph nodes  = 601
0.00.354.691 I llama_new_context_with_model: graph splits = 1
0.00.354.693 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.441.457 I main: llama threadpool init, n_threads = 4
0.00.441.469 I 
0.00.441.547 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.441.550 I 
0.00.441.584 I sampler seed: 3432478432
0.00.441.594 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.596 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.441.597 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.597 I 
 increasities

I'm not sure what you're trying to ask. Can you please rephrase your question? [end of text]


0.02.134.459 I llama_perf_sampler_print:    sampling time =       4.17 ms /    26 runs   (    0.16 ms per token,  6230.53 tokens per second)
0.02.134.461 I llama_perf_context_print:        load time =     439.47 ms
0.02.134.463 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.134.464 I llama_perf_context_print:        eval time =    1678.43 ms /    25 runs   (   67.14 ms per token,    14.89 tokens per second)
0.02.134.465 I llama_perf_context_print:       total time =    1693.01 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.543 I build: 3884 (71967c2a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.738 I main: llama backend init
0.00.001.842 I main: load the model and apply lora adapter, if any
0.00.021.914 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.961 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.974 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.980 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.981 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.985 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.986 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.986 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.987 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.987 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.988 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.993 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.993 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.994 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.995 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.996 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.258 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.893 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.759 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.768 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.768 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.769 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.770 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.771 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.771 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.774 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.775 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.776 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.776 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.777 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.781 I llama_model_loader: - type  f32:   37 tensors
0.00.132.784 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.313 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.219.575 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.220.370 I llm_load_vocab: special tokens cache size = 5
0.00.241.580 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.241.594 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.241.595 I llm_load_print_meta: arch             = gemma
0.00.241.595 I llm_load_print_meta: vocab type       = SPM
0.00.241.596 I llm_load_print_meta: n_vocab          = 256000
0.00.241.597 I llm_load_print_meta: n_merges         = 0
0.00.241.597 I llm_load_print_meta: vocab_only       = 0
0.00.241.597 I llm_load_print_meta: n_ctx_train      = 8192
0.00.241.598 I llm_load_print_meta: n_embd           = 2048
0.00.241.598 I llm_load_print_meta: n_layer          = 18
0.00.241.613 I llm_load_print_meta: n_head           = 8
0.00.241.613 I llm_load_print_meta: n_head_kv        = 1
0.00.241.614 I llm_load_print_meta: n_rot            = 256
0.00.241.614 I llm_load_print_meta: n_swa            = 0
0.00.241.614 I llm_load_print_meta: n_embd_head_k    = 256
0.00.241.614 I llm_load_print_meta: n_embd_head_v    = 256
0.00.241.615 I llm_load_print_meta: n_gqa            = 8
0.00.241.616 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.241.617 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.241.618 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.241.619 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.241.620 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.241.620 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.241.621 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.241.622 I llm_load_print_meta: n_ff             = 16384
0.00.241.622 I llm_load_print_meta: n_expert         = 0
0.00.241.622 I llm_load_print_meta: n_expert_used    = 0
0.00.241.622 I llm_load_print_meta: causal attn      = 1
0.00.241.623 I llm_load_print_meta: pooling type     = 0
0.00.241.623 I llm_load_print_meta: rope type        = 2
0.00.241.623 I llm_load_print_meta: rope scaling     = linear
0.00.241.625 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.241.625 I llm_load_print_meta: freq_scale_train = 1
0.00.241.626 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.241.626 I llm_load_print_meta: rope_finetuned   = unknown
0.00.241.626 I llm_load_print_meta: ssm_d_conv       = 0
0.00.241.627 I llm_load_print_meta: ssm_d_inner      = 0
0.00.241.627 I llm_load_print_meta: ssm_d_state      = 0
0.00.241.627 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.241.628 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.241.628 I llm_load_print_meta: model type       = 2B
0.00.241.629 I llm_load_print_meta: model ftype      = Q8_0
0.00.241.629 I llm_load_print_meta: model params     = 2.51 B
0.00.241.630 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.241.631 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.241.631 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.241.631 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.241.632 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.241.632 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.241.633 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.241.633 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.241.633 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.241.634 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.241.634 I llm_load_print_meta: max token length = 93
0.00.241.662 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.317.070 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.317.078 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.317.078 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.317.079 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.317.079 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.317.080 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.322.171 I llama_new_context_with_model: n_ctx      = 8192
0.00.322.177 I llama_new_context_with_model: n_batch    = 2048
0.00.322.178 I llama_new_context_with_model: n_ubatch   = 512
0.00.322.178 I llama_new_context_with_model: flash_attn = 0
0.00.322.181 I llama_new_context_with_model: freq_base  = 10000.0
0.00.322.181 I llama_new_context_with_model: freq_scale = 1
0.00.352.004 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.352.017 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.352.106 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.352.941 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.352.948 I llama_new_context_with_model: graph nodes  = 601
0.00.352.949 I llama_new_context_with_model: graph splits = 1
0.00.352.951 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.734 I main: llama threadpool init, n_threads = 4
0.00.446.746 I 
0.00.446.822 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.446.825 I 
0.00.446.861 I sampler seed: 2481748223
0.00.446.873 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.446.880 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.446.881 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.446.881 I 
 increasively and then regress to normal.

The sun was a brilliant orb of fire, illuminating the skies with its warm rays. But as the days turned into

0.02.732.419 I llama_perf_sampler_print:    sampling time =       5.48 ms /    33 runs   (    0.17 ms per token,  6024.10 tokens per second)
0.02.732.421 I llama_perf_context_print:        load time =     444.83 ms
0.02.732.422 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.732.424 I llama_perf_context_print:        eval time =    2266.24 ms /    32 runs   (   70.82 ms per token,    14.12 tokens per second)
0.02.732.425 I llama_perf_context_print:       total time =    2285.69 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.560 I build: 3884 (71967c2a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.001.893 I main: load the model and apply lora adapter, if any
0.00.022.204 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.250 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.260 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.266 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.269 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.274 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.275 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.276 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.276 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.277 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.278 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.283 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.284 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.284 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.284 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.285 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.528 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.967 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.790 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.798 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.799 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.800 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.801 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.802 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.803 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.807 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.808 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.809 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.810 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.811 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.815 I llama_model_loader: - type  f32:   37 tensors
0.00.132.818 I llama_model_loader: - type q8_0:  127 tensors
0.00.192.179 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.207.576 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.208.341 I llm_load_vocab: special tokens cache size = 5
0.00.229.329 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.229.343 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.229.344 I llm_load_print_meta: arch             = gemma
0.00.229.344 I llm_load_print_meta: vocab type       = SPM
0.00.229.345 I llm_load_print_meta: n_vocab          = 256000
0.00.229.346 I llm_load_print_meta: n_merges         = 0
0.00.229.346 I llm_load_print_meta: vocab_only       = 0
0.00.229.347 I llm_load_print_meta: n_ctx_train      = 8192
0.00.229.347 I llm_load_print_meta: n_embd           = 2048
0.00.229.347 I llm_load_print_meta: n_layer          = 18
0.00.229.359 I llm_load_print_meta: n_head           = 8
0.00.229.360 I llm_load_print_meta: n_head_kv        = 1
0.00.229.361 I llm_load_print_meta: n_rot            = 256
0.00.229.361 I llm_load_print_meta: n_swa            = 0
0.00.229.361 I llm_load_print_meta: n_embd_head_k    = 256
0.00.229.361 I llm_load_print_meta: n_embd_head_v    = 256
0.00.229.362 I llm_load_print_meta: n_gqa            = 8
0.00.229.363 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.229.364 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.229.365 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.229.367 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.229.367 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.229.367 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.229.368 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.229.369 I llm_load_print_meta: n_ff             = 16384
0.00.229.369 I llm_load_print_meta: n_expert         = 0
0.00.229.369 I llm_load_print_meta: n_expert_used    = 0
0.00.229.370 I llm_load_print_meta: causal attn      = 1
0.00.229.370 I llm_load_print_meta: pooling type     = 0
0.00.229.370 I llm_load_print_meta: rope type        = 2
0.00.229.371 I llm_load_print_meta: rope scaling     = linear
0.00.229.372 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.229.372 I llm_load_print_meta: freq_scale_train = 1
0.00.229.373 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.229.373 I llm_load_print_meta: rope_finetuned   = unknown
0.00.229.374 I llm_load_print_meta: ssm_d_conv       = 0
0.00.229.374 I llm_load_print_meta: ssm_d_inner      = 0
0.00.229.374 I llm_load_print_meta: ssm_d_state      = 0
0.00.229.374 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.229.375 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.229.375 I llm_load_print_meta: model type       = 2B
0.00.229.376 I llm_load_print_meta: model ftype      = Q8_0
0.00.229.377 I llm_load_print_meta: model params     = 2.51 B
0.00.229.377 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.229.378 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.229.378 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.229.378 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.229.379 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.229.379 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.229.380 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.229.380 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.229.381 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.229.381 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.229.381 I llm_load_print_meta: max token length = 93
0.00.229.407 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.300.467 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.300.475 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.305.719 I llama_new_context_with_model: n_ctx      = 8192
0.00.305.725 I llama_new_context_with_model: n_batch    = 2048
0.00.305.725 I llama_new_context_with_model: n_ubatch   = 512
0.00.305.726 I llama_new_context_with_model: flash_attn = 0
0.00.305.732 I llama_new_context_with_model: freq_base  = 10000.0
0.00.305.733 I llama_new_context_with_model: freq_scale = 1
0.00.334.791 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.334.806 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.334.898 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.335.745 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.335.754 I llama_new_context_with_model: graph nodes  = 601
0.00.335.754 I llama_new_context_with_model: graph splits = 1
0.00.335.756 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.431.497 I main: llama threadpool init, n_threads = 4
0.00.431.511 I 
0.00.431.587 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.431.590 I 
0.00.431.625 I sampler seed: 26605550
0.00.431.636 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.431.644 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.431.646 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.431.646 I 
 increasities. 

What does this statement mean?

I am unable to answer this question as the provided statement is incomplete and contains incorrect information. [end of text]


0.02.797.483 I llama_perf_sampler_print:    sampling time =       5.60 ms /    32 runs   (    0.18 ms per token,  5714.29 tokens per second)
0.02.797.485 I llama_perf_context_print:        load time =     429.54 ms
0.02.797.486 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.797.488 I llama_perf_context_print:        eval time =    2346.28 ms /    31 runs   (   75.69 ms per token,    13.21 tokens per second)
0.02.797.489 I llama_perf_context_print:       total time =    2365.99 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.995s
user	0m37.259s
sys	0m9.461s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3884 (71967c2a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31958.08 ms
main:    total time = 31958.08 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.571 I build: 3884 (71967c2a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.801 I main: llama backend init
0.00.001.904 I main: load the model and apply lora adapter, if any
0.00.022.077 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.129 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.138 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.145 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.152 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.156 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.157 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.158 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.159 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.161 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.161 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.166 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.167 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.168 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.172 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.173 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.308 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.062 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.866 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.872 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.872 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.873 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.873 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.874 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.875 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.877 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.878 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.879 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.879 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.881 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.884 I llama_model_loader: - type  f32:   37 tensors
0.00.131.886 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.887 I llama_model_loader: - type q6_K:   19 tensors
0.00.186.803 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.576 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.298 I llm_load_vocab: special tokens cache size = 5
0.00.223.274 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.288 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.289 I llm_load_print_meta: arch             = gemma
0.00.223.289 I llm_load_print_meta: vocab type       = SPM
0.00.223.290 I llm_load_print_meta: n_vocab          = 256000
0.00.223.290 I llm_load_print_meta: n_merges         = 0
0.00.223.291 I llm_load_print_meta: vocab_only       = 0
0.00.223.291 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.291 I llm_load_print_meta: n_embd           = 2048
0.00.223.292 I llm_load_print_meta: n_layer          = 18
0.00.223.304 I llm_load_print_meta: n_head           = 8
0.00.223.304 I llm_load_print_meta: n_head_kv        = 1
0.00.223.305 I llm_load_print_meta: n_rot            = 256
0.00.223.305 I llm_load_print_meta: n_swa            = 0
0.00.223.305 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.306 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.307 I llm_load_print_meta: n_gqa            = 8
0.00.223.308 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.309 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.310 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.312 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.313 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.314 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.314 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.316 I llm_load_print_meta: n_ff             = 16384
0.00.223.316 I llm_load_print_meta: n_expert         = 0
0.00.223.317 I llm_load_print_meta: n_expert_used    = 0
0.00.223.318 I llm_load_print_meta: causal attn      = 1
0.00.223.318 I llm_load_print_meta: pooling type     = 0
0.00.223.318 I llm_load_print_meta: rope type        = 2
0.00.223.318 I llm_load_print_meta: rope scaling     = linear
0.00.223.320 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.320 I llm_load_print_meta: freq_scale_train = 1
0.00.223.321 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.325 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.325 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.325 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.326 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.326 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.326 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.327 I llm_load_print_meta: model type       = 2B
0.00.223.327 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.223.328 I llm_load_print_meta: model params     = 2.51 B
0.00.223.329 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.223.329 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.329 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.329 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.330 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.330 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.331 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.331 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.332 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.333 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.333 I llm_load_print_meta: max token length = 93
0.00.223.360 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.281.591 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.281.599 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.281.599 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.281.600 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.281.600 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.281.601 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.286.747 I llama_new_context_with_model: n_ctx      = 8192
0.00.286.752 I llama_new_context_with_model: n_batch    = 2048
0.00.286.753 I llama_new_context_with_model: n_ubatch   = 512
0.00.286.753 I llama_new_context_with_model: flash_attn = 0
0.00.286.755 I llama_new_context_with_model: freq_base  = 10000.0
0.00.286.756 I llama_new_context_with_model: freq_scale = 1
0.00.316.022 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.316.037 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.316.137 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.317.030 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.317.038 I llama_new_context_with_model: graph nodes  = 601
0.00.317.039 I llama_new_context_with_model: graph splits = 1
0.00.317.040 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.397.699 I main: llama threadpool init, n_threads = 4
0.00.397.710 I 
0.00.397.795 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.397.799 I 
0.00.397.843 I sampler seed: 862067182
0.00.397.853 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.397.857 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.397.857 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.397.858 I 
 seconded arms outstretched to the heavens, clutching a tapestry woven with constellations. The tapestry shimmered with an ethereal glow, catching the light and refracting it into

0.02.017.771 I llama_perf_sampler_print:    sampling time =       5.73 ms /    33 runs   (    0.17 ms per token,  5756.15 tokens per second)
0.02.017.773 I llama_perf_context_print:        load time =     395.71 ms
0.02.017.774 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.017.776 I llama_perf_context_print:        eval time =    1600.57 ms /    32 runs   (   50.02 ms per token,    19.99 tokens per second)
0.02.017.776 I llama_perf_context_print:       total time =    1620.08 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3884 (71967c2a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32051.58 ms
main:    total time = 32051.58 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.567 I build: 3884 (71967c2a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.771 I main: llama backend init
0.00.001.883 I main: load the model and apply lora adapter, if any
0.00.021.935 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.947 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.954 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.964 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.968 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.969 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.970 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.971 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.971 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.972 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.975 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.976 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.976 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.977 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.977 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.908 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.394 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.229 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.236 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.236 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.237 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.237 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.238 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.239 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.242 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.243 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.246 I llama_model_loader: - type  f32:   37 tensors
0.00.132.249 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.250 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.443 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.218.451 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.219.198 I llm_load_vocab: special tokens cache size = 5
0.00.240.156 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.240.170 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.240.170 I llm_load_print_meta: arch             = gemma
0.00.240.171 I llm_load_print_meta: vocab type       = SPM
0.00.240.172 I llm_load_print_meta: n_vocab          = 256000
0.00.240.172 I llm_load_print_meta: n_merges         = 0
0.00.240.172 I llm_load_print_meta: vocab_only       = 0
0.00.240.173 I llm_load_print_meta: n_ctx_train      = 8192
0.00.240.173 I llm_load_print_meta: n_embd           = 2048
0.00.240.173 I llm_load_print_meta: n_layer          = 18
0.00.240.185 I llm_load_print_meta: n_head           = 8
0.00.240.186 I llm_load_print_meta: n_head_kv        = 1
0.00.240.187 I llm_load_print_meta: n_rot            = 256
0.00.240.187 I llm_load_print_meta: n_swa            = 0
0.00.240.187 I llm_load_print_meta: n_embd_head_k    = 256
0.00.240.188 I llm_load_print_meta: n_embd_head_v    = 256
0.00.240.189 I llm_load_print_meta: n_gqa            = 8
0.00.240.190 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.240.191 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.240.192 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.240.193 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.240.194 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.240.194 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.240.195 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.240.196 I llm_load_print_meta: n_ff             = 16384
0.00.240.196 I llm_load_print_meta: n_expert         = 0
0.00.240.197 I llm_load_print_meta: n_expert_used    = 0
0.00.240.197 I llm_load_print_meta: causal attn      = 1
0.00.240.197 I llm_load_print_meta: pooling type     = 0
0.00.240.198 I llm_load_print_meta: rope type        = 2
0.00.240.198 I llm_load_print_meta: rope scaling     = linear
0.00.240.199 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.240.200 I llm_load_print_meta: freq_scale_train = 1
0.00.240.200 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.240.200 I llm_load_print_meta: rope_finetuned   = unknown
0.00.240.200 I llm_load_print_meta: ssm_d_conv       = 0
0.00.240.201 I llm_load_print_meta: ssm_d_inner      = 0
0.00.240.201 I llm_load_print_meta: ssm_d_state      = 0
0.00.240.201 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.240.201 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.240.202 I llm_load_print_meta: model type       = 2B
0.00.240.203 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.240.204 I llm_load_print_meta: model params     = 2.51 B
0.00.240.205 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.240.205 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.240.205 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.240.206 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.240.206 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.240.206 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.240.207 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.240.207 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.240.207 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.240.208 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.240.208 I llm_load_print_meta: max token length = 93
0.00.240.226 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.297.342 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.302.428 I llama_new_context_with_model: n_ctx      = 8192
0.00.302.434 I llama_new_context_with_model: n_batch    = 2048
0.00.302.434 I llama_new_context_with_model: n_ubatch   = 512
0.00.302.435 I llama_new_context_with_model: flash_attn = 0
0.00.302.437 I llama_new_context_with_model: freq_base  = 10000.0
0.00.302.438 I llama_new_context_with_model: freq_scale = 1
0.00.331.251 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.331.266 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.331.354 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.332.184 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.332.192 I llama_new_context_with_model: graph nodes  = 601
0.00.332.192 I llama_new_context_with_model: graph splits = 1
0.00.332.195 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.412.684 I main: llama threadpool init, n_threads = 4
0.00.412.695 I 
0.00.412.772 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.412.776 I 
0.00.412.812 I sampler seed: 3230809853
0.00.412.821 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.412.825 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.412.826 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.412.826 I 
 fufillingly with the words "I cannot".

I am unable to perform the requested action due to the following reasons:

- The requested action requires access

0.02.032.367 I llama_perf_sampler_print:    sampling time =       5.51 ms /    33 runs   (    0.17 ms per token,  5988.02 tokens per second)
0.02.032.370 I llama_perf_context_print:        load time =     410.73 ms
0.02.032.371 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.032.372 I llama_perf_context_print:        eval time =    1601.09 ms /    32 runs   (   50.03 ms per token,    19.99 tokens per second)
0.02.032.373 I llama_perf_context_print:       total time =    1619.69 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.175s
user	8m14.535s
sys	0m6.925s
