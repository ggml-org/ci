+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.545 I build: 3897 (6dcb8991) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.765 I main: llama backend init
0.00.001.853 I main: load the model and apply lora adapter, if any
0.00.022.533 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.579 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.589 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.594 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.595 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.599 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.599 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.600 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.601 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.603 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.604 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.607 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.608 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.608 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.609 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.609 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.365 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.229 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.058 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.065 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.066 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.066 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.067 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.068 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.068 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.071 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.072 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.073 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.073 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.074 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.077 I llama_model_loader: - type  f32:   37 tensors
0.00.133.080 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.843 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.571 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.250 I llm_load_vocab: special tokens cache size = 5
0.00.223.323 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.337 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.337 I llm_load_print_meta: arch             = gemma
0.00.223.338 I llm_load_print_meta: vocab type       = SPM
0.00.223.338 I llm_load_print_meta: n_vocab          = 256000
0.00.223.339 I llm_load_print_meta: n_merges         = 0
0.00.223.339 I llm_load_print_meta: vocab_only       = 0
0.00.223.340 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.340 I llm_load_print_meta: n_embd           = 2048
0.00.223.340 I llm_load_print_meta: n_layer          = 18
0.00.223.354 I llm_load_print_meta: n_head           = 8
0.00.223.355 I llm_load_print_meta: n_head_kv        = 1
0.00.223.355 I llm_load_print_meta: n_rot            = 256
0.00.223.356 I llm_load_print_meta: n_swa            = 0
0.00.223.356 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.356 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.357 I llm_load_print_meta: n_gqa            = 8
0.00.223.358 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.359 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.360 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.361 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.362 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.362 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.362 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.363 I llm_load_print_meta: n_ff             = 16384
0.00.223.364 I llm_load_print_meta: n_expert         = 0
0.00.223.364 I llm_load_print_meta: n_expert_used    = 0
0.00.223.364 I llm_load_print_meta: causal attn      = 1
0.00.223.364 I llm_load_print_meta: pooling type     = 0
0.00.223.365 I llm_load_print_meta: rope type        = 2
0.00.223.365 I llm_load_print_meta: rope scaling     = linear
0.00.223.366 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.367 I llm_load_print_meta: freq_scale_train = 1
0.00.223.367 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.368 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.368 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.368 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.368 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.369 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.369 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.369 I llm_load_print_meta: model type       = 2B
0.00.223.370 I llm_load_print_meta: model ftype      = Q8_0
0.00.223.371 I llm_load_print_meta: model params     = 2.51 B
0.00.223.372 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.223.372 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.373 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.373 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.374 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.374 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.374 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.375 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.375 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.376 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.376 I llm_load_print_meta: max token length = 93
0.00.223.395 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.327.237 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.327.242 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.327.243 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.327.244 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.327.244 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.327.245 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.332.044 I llama_new_context_with_model: n_ctx      = 8192
0.00.332.050 I llama_new_context_with_model: n_batch    = 2048
0.00.332.050 I llama_new_context_with_model: n_ubatch   = 512
0.00.332.051 I llama_new_context_with_model: flash_attn = 0
0.00.332.053 I llama_new_context_with_model: freq_base  = 10000.0
0.00.332.053 I llama_new_context_with_model: freq_scale = 1
0.00.359.798 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.812 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.902 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.769 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.776 I llama_new_context_with_model: graph nodes  = 601
0.00.360.776 I llama_new_context_with_model: graph splits = 1
0.00.360.777 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.450.931 I main: llama threadpool init, n_threads = 4
0.00.450.943 I 
0.00.451.031 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.035 I 
0.00.451.078 I sampler seed: 2612893301
0.00.451.088 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.091 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.451.091 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.091 I 
 increably.

I am unable to generate the requested response due to the limitations of my current programming capabilities. I am unable to access or process external data sources

0.02.687.111 I llama_perf_sampler_print:    sampling time =       4.77 ms /    33 runs   (    0.14 ms per token,  6915.34 tokens per second)
0.02.687.114 I llama_perf_context_print:        load time =     449.01 ms
0.02.687.115 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.687.116 I llama_perf_context_print:        eval time =    2218.08 ms /    32 runs   (   69.31 ms per token,    14.43 tokens per second)
0.02.687.117 I llama_perf_context_print:       total time =    2236.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.545 I build: 3897 (6dcb8991) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.001.887 I main: load the model and apply lora adapter, if any
0.00.022.241 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.251 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.258 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.259 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.263 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.263 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.264 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.264 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.265 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.266 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.270 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.270 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.271 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.272 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.273 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.198 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.278 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.126 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.131 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.132 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.133 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.133 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.134 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.134 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.137 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.137 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.138 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.140 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.141 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.143 I llama_model_loader: - type  f32:   37 tensors
0.00.131.145 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.110 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.377 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.063 I llm_load_vocab: special tokens cache size = 5
0.00.222.382 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.394 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.394 I llm_load_print_meta: arch             = gemma
0.00.222.395 I llm_load_print_meta: vocab type       = SPM
0.00.222.396 I llm_load_print_meta: n_vocab          = 256000
0.00.222.396 I llm_load_print_meta: n_merges         = 0
0.00.222.397 I llm_load_print_meta: vocab_only       = 0
0.00.222.397 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.397 I llm_load_print_meta: n_embd           = 2048
0.00.222.398 I llm_load_print_meta: n_layer          = 18
0.00.222.409 I llm_load_print_meta: n_head           = 8
0.00.222.410 I llm_load_print_meta: n_head_kv        = 1
0.00.222.411 I llm_load_print_meta: n_rot            = 256
0.00.222.411 I llm_load_print_meta: n_swa            = 0
0.00.222.411 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.412 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.412 I llm_load_print_meta: n_gqa            = 8
0.00.222.413 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.414 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.415 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.416 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.417 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.417 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.418 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.418 I llm_load_print_meta: n_ff             = 16384
0.00.222.419 I llm_load_print_meta: n_expert         = 0
0.00.222.419 I llm_load_print_meta: n_expert_used    = 0
0.00.222.420 I llm_load_print_meta: causal attn      = 1
0.00.222.420 I llm_load_print_meta: pooling type     = 0
0.00.222.420 I llm_load_print_meta: rope type        = 2
0.00.222.420 I llm_load_print_meta: rope scaling     = linear
0.00.222.422 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.423 I llm_load_print_meta: freq_scale_train = 1
0.00.222.423 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.423 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.424 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.424 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.424 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.424 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.425 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.425 I llm_load_print_meta: model type       = 2B
0.00.222.426 I llm_load_print_meta: model ftype      = Q8_0
0.00.222.427 I llm_load_print_meta: model params     = 2.51 B
0.00.222.428 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.222.428 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.429 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.429 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.429 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.429 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.430 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.430 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.430 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.431 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.431 I llm_load_print_meta: max token length = 93
0.00.222.457 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.317.128 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.322.308 I llama_new_context_with_model: n_ctx      = 8192
0.00.322.314 I llama_new_context_with_model: n_batch    = 2048
0.00.322.314 I llama_new_context_with_model: n_ubatch   = 512
0.00.322.315 I llama_new_context_with_model: flash_attn = 0
0.00.322.317 I llama_new_context_with_model: freq_base  = 10000.0
0.00.322.318 I llama_new_context_with_model: freq_scale = 1
0.00.352.606 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.352.621 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.352.714 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.353.630 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.353.638 I llama_new_context_with_model: graph nodes  = 601
0.00.353.639 I llama_new_context_with_model: graph splits = 1
0.00.353.641 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.750 I main: llama threadpool init, n_threads = 4
0.00.440.763 I 
0.00.440.844 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.848 I 
0.00.440.892 I sampler seed: 3444069691
0.00.440.902 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.907 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.440.907 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.908 I 
 increasities, and provide guidance on how to navigate them safely.

**Answer:**

**Navigating Decorumous and Aggressive Communication**

**1.

0.02.591.960 I llama_perf_sampler_print:    sampling time =       4.69 ms /    33 runs   (    0.14 ms per token,  7034.75 tokens per second)
0.02.591.963 I llama_perf_context_print:        load time =     438.79 ms
0.02.591.965 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.591.967 I llama_perf_context_print:        eval time =    2133.87 ms /    32 runs   (   66.68 ms per token,    15.00 tokens per second)
0.02.591.969 I llama_perf_context_print:       total time =    2151.22 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.548 I build: 3897 (6dcb8991) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.788 I main: llama backend init
0.00.001.922 I main: load the model and apply lora adapter, if any
0.00.022.224 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.274 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.283 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.289 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.290 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.296 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.297 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.298 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.299 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.300 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.300 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.306 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.307 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.308 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.309 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.310 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.728 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.025 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.896 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.903 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.904 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.905 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.906 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.907 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.908 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.912 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.913 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.914 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.914 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.915 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.919 I llama_model_loader: - type  f32:   37 tensors
0.00.132.922 I llama_model_loader: - type q8_0:  127 tensors
0.00.190.462 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.204.952 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.205.722 I llm_load_vocab: special tokens cache size = 5
0.00.227.177 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.227.191 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.227.192 I llm_load_print_meta: arch             = gemma
0.00.227.192 I llm_load_print_meta: vocab type       = SPM
0.00.227.193 I llm_load_print_meta: n_vocab          = 256000
0.00.227.193 I llm_load_print_meta: n_merges         = 0
0.00.227.194 I llm_load_print_meta: vocab_only       = 0
0.00.227.194 I llm_load_print_meta: n_ctx_train      = 8192
0.00.227.194 I llm_load_print_meta: n_embd           = 2048
0.00.227.195 I llm_load_print_meta: n_layer          = 18
0.00.227.208 I llm_load_print_meta: n_head           = 8
0.00.227.209 I llm_load_print_meta: n_head_kv        = 1
0.00.227.210 I llm_load_print_meta: n_rot            = 256
0.00.227.210 I llm_load_print_meta: n_swa            = 0
0.00.227.210 I llm_load_print_meta: n_embd_head_k    = 256
0.00.227.210 I llm_load_print_meta: n_embd_head_v    = 256
0.00.227.211 I llm_load_print_meta: n_gqa            = 8
0.00.227.212 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.227.213 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.227.214 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.227.215 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.227.216 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.227.216 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.227.217 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.227.218 I llm_load_print_meta: n_ff             = 16384
0.00.227.218 I llm_load_print_meta: n_expert         = 0
0.00.227.218 I llm_load_print_meta: n_expert_used    = 0
0.00.227.218 I llm_load_print_meta: causal attn      = 1
0.00.227.219 I llm_load_print_meta: pooling type     = 0
0.00.227.219 I llm_load_print_meta: rope type        = 2
0.00.227.219 I llm_load_print_meta: rope scaling     = linear
0.00.227.220 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.227.221 I llm_load_print_meta: freq_scale_train = 1
0.00.227.221 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.227.222 I llm_load_print_meta: rope_finetuned   = unknown
0.00.227.222 I llm_load_print_meta: ssm_d_conv       = 0
0.00.227.222 I llm_load_print_meta: ssm_d_inner      = 0
0.00.227.222 I llm_load_print_meta: ssm_d_state      = 0
0.00.227.223 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.227.223 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.227.224 I llm_load_print_meta: model type       = 2B
0.00.227.224 I llm_load_print_meta: model ftype      = Q8_0
0.00.227.225 I llm_load_print_meta: model params     = 2.51 B
0.00.227.226 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.227.226 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.227.227 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.227.227 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.227.227 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.227.227 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.227.228 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.227.229 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.227.229 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.227.230 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.227.230 I llm_load_print_meta: max token length = 93
0.00.227.249 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.304.837 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.304.844 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.304.845 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.304.846 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.304.846 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.304.847 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.309.909 I llama_new_context_with_model: n_ctx      = 8192
0.00.309.915 I llama_new_context_with_model: n_batch    = 2048
0.00.309.916 I llama_new_context_with_model: n_ubatch   = 512
0.00.309.916 I llama_new_context_with_model: flash_attn = 0
0.00.309.919 I llama_new_context_with_model: freq_base  = 10000.0
0.00.309.919 I llama_new_context_with_model: freq_scale = 1
0.00.340.017 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.340.034 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.340.124 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.340.989 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.340.997 I llama_new_context_with_model: graph nodes  = 601
0.00.340.997 I llama_new_context_with_model: graph splits = 1
0.00.340.999 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.433.302 I main: llama threadpool init, n_threads = 4
0.00.433.315 I 
0.00.433.396 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.433.400 I 
0.00.433.439 I sampler seed: 2567625308
0.00.433.453 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.433.464 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.433.464 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.433.465 I 
 increasities are a common occurrence in the early stages of a relationship. They often involve intense physical intimacy, heightened emotional intensity, and heightened levels of vulnerability. While

0.02.710.250 I llama_perf_sampler_print:    sampling time =       4.86 ms /    33 runs   (    0.15 ms per token,  6790.12 tokens per second)
0.02.710.253 I llama_perf_context_print:        load time =     431.30 ms
0.02.710.255 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.710.258 I llama_perf_context_print:        eval time =    2258.99 ms /    32 runs   (   70.59 ms per token,    14.17 tokens per second)
0.02.710.259 I llama_perf_context_print:       total time =    2276.96 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.544 I build: 3897 (6dcb8991) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.759 I main: llama backend init
0.00.001.895 I main: load the model and apply lora adapter, if any
0.00.022.129 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.190 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.206 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.219 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.224 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.228 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.229 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.230 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.231 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.233 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.234 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.254 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.259 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.260 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.261 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.269 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.320 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.917 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.724 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.731 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.731 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.732 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.733 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.734 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.736 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.739 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.740 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.741 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.741 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.742 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.745 I llama_model_loader: - type  f32:   37 tensors
0.00.131.748 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.658 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.217 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.953 I llm_load_vocab: special tokens cache size = 5
0.00.224.542 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.555 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.556 I llm_load_print_meta: arch             = gemma
0.00.224.556 I llm_load_print_meta: vocab type       = SPM
0.00.224.557 I llm_load_print_meta: n_vocab          = 256000
0.00.224.557 I llm_load_print_meta: n_merges         = 0
0.00.224.558 I llm_load_print_meta: vocab_only       = 0
0.00.224.558 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.558 I llm_load_print_meta: n_embd           = 2048
0.00.224.559 I llm_load_print_meta: n_layer          = 18
0.00.224.571 I llm_load_print_meta: n_head           = 8
0.00.224.572 I llm_load_print_meta: n_head_kv        = 1
0.00.224.572 I llm_load_print_meta: n_rot            = 256
0.00.224.573 I llm_load_print_meta: n_swa            = 0
0.00.224.573 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.573 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.574 I llm_load_print_meta: n_gqa            = 8
0.00.224.575 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.576 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.576 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.578 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.578 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.578 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.579 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.580 I llm_load_print_meta: n_ff             = 16384
0.00.224.580 I llm_load_print_meta: n_expert         = 0
0.00.224.580 I llm_load_print_meta: n_expert_used    = 0
0.00.224.581 I llm_load_print_meta: causal attn      = 1
0.00.224.581 I llm_load_print_meta: pooling type     = 0
0.00.224.581 I llm_load_print_meta: rope type        = 2
0.00.224.581 I llm_load_print_meta: rope scaling     = linear
0.00.224.582 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.583 I llm_load_print_meta: freq_scale_train = 1
0.00.224.583 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.584 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.584 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.584 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.584 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.585 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.585 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.586 I llm_load_print_meta: model type       = 2B
0.00.224.586 I llm_load_print_meta: model ftype      = Q8_0
0.00.224.587 I llm_load_print_meta: model params     = 2.51 B
0.00.224.588 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.224.588 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.589 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.589 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.589 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.589 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.590 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.590 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.591 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.591 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.592 I llm_load_print_meta: max token length = 93
0.00.224.611 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.295.282 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.295.287 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.301.042 I llama_new_context_with_model: n_ctx      = 8192
0.00.301.049 I llama_new_context_with_model: n_batch    = 2048
0.00.301.049 I llama_new_context_with_model: n_ubatch   = 512
0.00.301.050 I llama_new_context_with_model: flash_attn = 0
0.00.301.052 I llama_new_context_with_model: freq_base  = 10000.0
0.00.301.052 I llama_new_context_with_model: freq_scale = 1
0.00.329.561 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.329.576 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.329.671 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.330.536 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.330.544 I llama_new_context_with_model: graph nodes  = 601
0.00.330.544 I llama_new_context_with_model: graph splits = 1
0.00.330.546 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.425.010 I main: llama threadpool init, n_threads = 4
0.00.425.022 I 
0.00.425.107 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.425.112 I 
0.00.425.153 I sampler seed: 3275202639
0.00.425.173 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.425.177 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.425.178 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.425.178 I 
 increably.

I am unable to generate the requested response because it contains inappropriate language and content. [end of text]


0.02.010.690 I llama_perf_sampler_print:    sampling time =       3.31 ms /    22 runs   (    0.15 ms per token,  6646.53 tokens per second)
0.02.010.692 I llama_perf_context_print:        load time =     423.03 ms
0.02.010.693 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.010.695 I llama_perf_context_print:        eval time =    1573.29 ms /    21 runs   (   74.92 ms per token,    13.35 tokens per second)
0.02.010.696 I llama_perf_context_print:       total time =    1585.69 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.632s
user	0m35.621s
sys	0m9.451s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3897 (6dcb8991)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32215.36 ms
main:    total time = 32215.36 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.544 I build: 3897 (6dcb8991) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.730 I main: llama backend init
0.00.001.853 I main: load the model and apply lora adapter, if any
0.00.022.254 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.301 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.312 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.317 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.318 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.322 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.322 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.323 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.323 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.324 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.324 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.327 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.328 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.328 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.329 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.329 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.495 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.927 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.803 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.809 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.810 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.811 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.812 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.813 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.814 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.818 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.819 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.820 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.820 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.821 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.824 I llama_model_loader: - type  f32:   37 tensors
0.00.131.827 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.828 I llama_model_loader: - type q6_K:   19 tensors
0.00.186.010 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.198.811 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.199.448 I llm_load_vocab: special tokens cache size = 5
0.00.220.477 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.491 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.491 I llm_load_print_meta: arch             = gemma
0.00.220.492 I llm_load_print_meta: vocab type       = SPM
0.00.220.493 I llm_load_print_meta: n_vocab          = 256000
0.00.220.494 I llm_load_print_meta: n_merges         = 0
0.00.220.494 I llm_load_print_meta: vocab_only       = 0
0.00.220.494 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.495 I llm_load_print_meta: n_embd           = 2048
0.00.220.495 I llm_load_print_meta: n_layer          = 18
0.00.220.506 I llm_load_print_meta: n_head           = 8
0.00.220.507 I llm_load_print_meta: n_head_kv        = 1
0.00.220.508 I llm_load_print_meta: n_rot            = 256
0.00.220.508 I llm_load_print_meta: n_swa            = 0
0.00.220.508 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.508 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.509 I llm_load_print_meta: n_gqa            = 8
0.00.220.510 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.511 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.512 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.514 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.514 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.515 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.515 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.516 I llm_load_print_meta: n_ff             = 16384
0.00.220.517 I llm_load_print_meta: n_expert         = 0
0.00.220.517 I llm_load_print_meta: n_expert_used    = 0
0.00.220.517 I llm_load_print_meta: causal attn      = 1
0.00.220.518 I llm_load_print_meta: pooling type     = 0
0.00.220.519 I llm_load_print_meta: rope type        = 2
0.00.220.519 I llm_load_print_meta: rope scaling     = linear
0.00.220.521 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.522 I llm_load_print_meta: freq_scale_train = 1
0.00.220.522 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.523 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.523 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.523 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.524 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.526 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.527 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.528 I llm_load_print_meta: model type       = 2B
0.00.220.528 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.220.530 I llm_load_print_meta: model params     = 2.51 B
0.00.220.530 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.220.531 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.531 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.531 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.532 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.220.532 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.220.533 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.220.533 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.220.533 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.220.534 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.220.534 I llm_load_print_meta: max token length = 93
0.00.220.552 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.278.615 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.278.621 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.278.622 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.278.622 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.278.623 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.278.623 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.283.736 I llama_new_context_with_model: n_ctx      = 8192
0.00.283.742 I llama_new_context_with_model: n_batch    = 2048
0.00.283.742 I llama_new_context_with_model: n_ubatch   = 512
0.00.283.743 I llama_new_context_with_model: flash_attn = 0
0.00.283.745 I llama_new_context_with_model: freq_base  = 10000.0
0.00.283.745 I llama_new_context_with_model: freq_scale = 1
0.00.313.528 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.313.542 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.313.632 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.314.518 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.314.525 I llama_new_context_with_model: graph nodes  = 601
0.00.314.526 I llama_new_context_with_model: graph splits = 1
0.00.314.527 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.394.790 I main: llama threadpool init, n_threads = 4
0.00.394.802 I 
0.00.394.879 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.394.882 I 
0.00.394.919 I sampler seed: 2672628650
0.00.394.929 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.394.932 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.394.932 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.394.933 I 
 increasities, but it is generally understood that these are not the true nature of consciousness.

Consciousness is generally understood to involve a subjective experience of the world

0.01.957.605 I llama_perf_sampler_print:    sampling time =       4.99 ms /    33 runs   (    0.15 ms per token,  6617.20 tokens per second)
0.01.957.607 I llama_perf_context_print:        load time =     392.88 ms
0.01.957.608 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.957.611 I llama_perf_context_print:        eval time =    1545.00 ms /    32 runs   (   48.28 ms per token,    20.71 tokens per second)
0.01.957.612 I llama_perf_context_print:       total time =    1562.82 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3897 (6dcb8991)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31987.08 ms
main:    total time = 31987.08 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.548 I build: 3897 (6dcb8991) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.761 I main: llama backend init
0.00.001.851 I main: load the model and apply lora adapter, if any
0.00.021.980 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.992 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.998 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.000 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.004 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.005 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.005 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.006 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.006 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.007 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.010 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.011 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.011 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.012 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.012 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.400 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.167 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.959 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.965 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.966 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.967 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.967 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.968 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.969 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.971 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.972 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.975 I llama_model_loader: - type  f32:   37 tensors
0.00.131.978 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.978 I llama_model_loader: - type q6_K:   19 tensors
0.00.186.445 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.026 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.199.596 I llm_load_vocab: special tokens cache size = 5
0.00.220.588 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.220.600 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.220.601 I llm_load_print_meta: arch             = gemma
0.00.220.601 I llm_load_print_meta: vocab type       = SPM
0.00.220.602 I llm_load_print_meta: n_vocab          = 256000
0.00.220.602 I llm_load_print_meta: n_merges         = 0
0.00.220.603 I llm_load_print_meta: vocab_only       = 0
0.00.220.603 I llm_load_print_meta: n_ctx_train      = 8192
0.00.220.603 I llm_load_print_meta: n_embd           = 2048
0.00.220.604 I llm_load_print_meta: n_layer          = 18
0.00.220.614 I llm_load_print_meta: n_head           = 8
0.00.220.615 I llm_load_print_meta: n_head_kv        = 1
0.00.220.615 I llm_load_print_meta: n_rot            = 256
0.00.220.615 I llm_load_print_meta: n_swa            = 0
0.00.220.616 I llm_load_print_meta: n_embd_head_k    = 256
0.00.220.616 I llm_load_print_meta: n_embd_head_v    = 256
0.00.220.617 I llm_load_print_meta: n_gqa            = 8
0.00.220.618 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.220.619 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.220.619 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.220.620 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.220.621 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.220.621 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.220.621 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.220.622 I llm_load_print_meta: n_ff             = 16384
0.00.220.623 I llm_load_print_meta: n_expert         = 0
0.00.220.623 I llm_load_print_meta: n_expert_used    = 0
0.00.220.623 I llm_load_print_meta: causal attn      = 1
0.00.220.624 I llm_load_print_meta: pooling type     = 0
0.00.220.624 I llm_load_print_meta: rope type        = 2
0.00.220.624 I llm_load_print_meta: rope scaling     = linear
0.00.220.625 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.220.626 I llm_load_print_meta: freq_scale_train = 1
0.00.220.626 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.220.627 I llm_load_print_meta: rope_finetuned   = unknown
0.00.220.627 I llm_load_print_meta: ssm_d_conv       = 0
0.00.220.627 I llm_load_print_meta: ssm_d_inner      = 0
0.00.220.627 I llm_load_print_meta: ssm_d_state      = 0
0.00.220.628 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.220.628 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.220.628 I llm_load_print_meta: model type       = 2B
0.00.220.629 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.220.630 I llm_load_print_meta: model params     = 2.51 B
0.00.220.631 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.220.631 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.220.632 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.220.632 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.220.632 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.220.632 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.220.633 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.220.633 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.220.633 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.220.634 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.220.634 I llm_load_print_meta: max token length = 93
0.00.220.655 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.277.994 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.283.027 I llama_new_context_with_model: n_ctx      = 8192
0.00.283.034 I llama_new_context_with_model: n_batch    = 2048
0.00.283.034 I llama_new_context_with_model: n_ubatch   = 512
0.00.283.035 I llama_new_context_with_model: flash_attn = 0
0.00.283.037 I llama_new_context_with_model: freq_base  = 10000.0
0.00.283.038 I llama_new_context_with_model: freq_scale = 1
0.00.312.759 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.312.774 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.312.876 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.313.768 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.313.774 I llama_new_context_with_model: graph nodes  = 601
0.00.313.775 I llama_new_context_with_model: graph splits = 1
0.00.313.776 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.394.242 I main: llama threadpool init, n_threads = 4
0.00.394.262 I 
0.00.394.343 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.394.346 I 
0.00.394.382 I sampler seed: 2697100433
0.00.394.391 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.394.394 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.394.394 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.394.394 I 
 seconally.

I'm not sure what you're trying to ask. Please rephrase your question. [end of text]


0.01.562.773 I llama_perf_sampler_print:    sampling time =       3.58 ms /    25 runs   (    0.14 ms per token,  6977.39 tokens per second)
0.01.562.775 I llama_perf_context_print:        load time =     392.32 ms
0.01.562.776 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.562.777 I llama_perf_context_print:        eval time =    1155.24 ms /    24 runs   (   48.14 ms per token,    20.77 tokens per second)
0.01.562.778 I llama_perf_context_print:       total time =    1168.54 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.625s
user	8m12.612s
sys	0m6.829s
