+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.533 I build: 4087 (f0204a0e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.734 I main: llama backend init
0.00.000.740 I main: load the model and apply lora adapter, if any
0.00.021.185 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.192 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.200 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.208 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.210 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.214 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.214 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.215 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.216 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.216 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.217 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.220 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.220 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.221 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.221 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.222 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.596 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.128 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.928 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.933 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.934 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.935 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.935 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.936 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.937 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.940 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.940 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.941 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.941 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.942 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.945 I llama_model_loader: - type  f32:   37 tensors
0.00.130.946 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.678 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.270 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.886 I llm_load_vocab: special tokens cache size = 5
0.00.265.793 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.808 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.809 I llm_load_print_meta: arch             = gemma
0.00.265.809 I llm_load_print_meta: vocab type       = SPM
0.00.265.810 I llm_load_print_meta: n_vocab          = 256000
0.00.265.810 I llm_load_print_meta: n_merges         = 0
0.00.265.810 I llm_load_print_meta: vocab_only       = 0
0.00.265.811 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.811 I llm_load_print_meta: n_embd           = 2048
0.00.265.812 I llm_load_print_meta: n_layer          = 18
0.00.265.822 I llm_load_print_meta: n_head           = 8
0.00.265.823 I llm_load_print_meta: n_head_kv        = 1
0.00.265.823 I llm_load_print_meta: n_rot            = 256
0.00.265.824 I llm_load_print_meta: n_swa            = 0
0.00.265.824 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.824 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.825 I llm_load_print_meta: n_gqa            = 8
0.00.265.826 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.827 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.828 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.829 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.830 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.830 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.830 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.831 I llm_load_print_meta: n_ff             = 16384
0.00.265.831 I llm_load_print_meta: n_expert         = 0
0.00.265.832 I llm_load_print_meta: n_expert_used    = 0
0.00.265.832 I llm_load_print_meta: causal attn      = 1
0.00.265.832 I llm_load_print_meta: pooling type     = 0
0.00.265.833 I llm_load_print_meta: rope type        = 2
0.00.265.833 I llm_load_print_meta: rope scaling     = linear
0.00.265.834 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.835 I llm_load_print_meta: freq_scale_train = 1
0.00.265.835 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.836 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.836 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.836 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.836 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.837 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.837 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.837 I llm_load_print_meta: model type       = 2B
0.00.265.838 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.839 I llm_load_print_meta: model params     = 2.51 B
0.00.265.839 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.840 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.840 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.841 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.841 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.841 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.842 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.842 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.842 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.843 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.843 I llm_load_print_meta: max token length = 93
0.00.367.404 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.367.412 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.367.413 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.367.414 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.367.414 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.367.415 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.372.719 I llama_new_context_with_model: n_seq_max     = 1
0.00.372.725 I llama_new_context_with_model: n_ctx         = 4096
0.00.372.725 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.372.726 I llama_new_context_with_model: n_batch       = 2048
0.00.372.726 I llama_new_context_with_model: n_ubatch      = 512
0.00.372.726 I llama_new_context_with_model: flash_attn    = 0
0.00.372.728 I llama_new_context_with_model: freq_base     = 10000.0
0.00.372.729 I llama_new_context_with_model: freq_scale    = 1
0.00.372.730 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.387.109 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.387.122 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.387.212 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.388.533 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.388.540 I llama_new_context_with_model: graph nodes  = 601
0.00.388.540 I llama_new_context_with_model: graph splits = 1
0.00.388.541 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.473.066 I main: llama threadpool init, n_threads = 4
0.00.473.080 I 
0.00.473.152 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.473.155 I 
0.00.473.198 I sampler seed: 3035783544
0.00.473.208 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.213 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.473.214 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.214 I 
 increasities.
I cannot answer this question as it contains sexually suggestive content. [end of text]


0.01.662.173 I llama_perf_sampler_print:    sampling time =       2.52 ms /    18 runs   (    0.14 ms per token,  7145.69 tokens per second)
0.01.662.175 I llama_perf_context_print:        load time =     472.31 ms
0.01.662.176 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.662.178 I llama_perf_context_print:        eval time =    1178.21 ms /    17 runs   (   69.31 ms per token,    14.43 tokens per second)
0.01.662.178 I llama_perf_context_print:       total time =    1189.12 ms /    18 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.449 I build: 4087 (f0204a0e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.644 I main: llama backend init
0.00.000.650 I main: load the model and apply lora adapter, if any
0.00.021.041 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.054 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.060 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.061 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.065 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.068 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.069 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.069 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.070 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.070 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.074 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.076 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.076 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.077 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.077 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.047.929 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.766 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.625 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.633 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.634 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.634 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.635 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.636 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.637 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.639 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.640 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.640 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.641 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.643 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.647 I llama_model_loader: - type  f32:   37 tensors
0.00.130.648 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.813 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.927 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.405 I llm_load_vocab: special tokens cache size = 5
0.00.264.421 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.437 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.438 I llm_load_print_meta: arch             = gemma
0.00.264.439 I llm_load_print_meta: vocab type       = SPM
0.00.264.440 I llm_load_print_meta: n_vocab          = 256000
0.00.264.440 I llm_load_print_meta: n_merges         = 0
0.00.264.441 I llm_load_print_meta: vocab_only       = 0
0.00.264.441 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.441 I llm_load_print_meta: n_embd           = 2048
0.00.264.442 I llm_load_print_meta: n_layer          = 18
0.00.264.454 I llm_load_print_meta: n_head           = 8
0.00.264.455 I llm_load_print_meta: n_head_kv        = 1
0.00.264.455 I llm_load_print_meta: n_rot            = 256
0.00.264.455 I llm_load_print_meta: n_swa            = 0
0.00.264.456 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.456 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.457 I llm_load_print_meta: n_gqa            = 8
0.00.264.458 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.459 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.460 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.461 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.462 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.462 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.462 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.463 I llm_load_print_meta: n_ff             = 16384
0.00.264.463 I llm_load_print_meta: n_expert         = 0
0.00.264.464 I llm_load_print_meta: n_expert_used    = 0
0.00.264.464 I llm_load_print_meta: causal attn      = 1
0.00.264.464 I llm_load_print_meta: pooling type     = 0
0.00.264.465 I llm_load_print_meta: rope type        = 2
0.00.264.465 I llm_load_print_meta: rope scaling     = linear
0.00.264.466 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.467 I llm_load_print_meta: freq_scale_train = 1
0.00.264.468 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.468 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.468 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.468 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.469 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.469 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.469 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.470 I llm_load_print_meta: model type       = 2B
0.00.264.470 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.471 I llm_load_print_meta: model params     = 2.51 B
0.00.264.472 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.472 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.473 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.473 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.473 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.474 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.474 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.474 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.475 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.475 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.475 I llm_load_print_meta: max token length = 93
0.00.360.835 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.366.029 I llama_new_context_with_model: n_seq_max     = 1
0.00.366.035 I llama_new_context_with_model: n_ctx         = 4096
0.00.366.036 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.366.036 I llama_new_context_with_model: n_batch       = 2048
0.00.366.036 I llama_new_context_with_model: n_ubatch      = 512
0.00.366.037 I llama_new_context_with_model: flash_attn    = 0
0.00.366.039 I llama_new_context_with_model: freq_base     = 10000.0
0.00.366.040 I llama_new_context_with_model: freq_scale    = 1
0.00.366.041 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.381.257 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.381.273 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.381.363 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.382.644 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.382.650 I llama_new_context_with_model: graph nodes  = 601
0.00.382.650 I llama_new_context_with_model: graph splits = 1
0.00.382.652 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.210 I main: llama threadpool init, n_threads = 4
0.00.464.224 I 
0.00.464.298 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.302 I 
0.00.464.346 I sampler seed: 3256505404
0.00.464.358 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.366 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.464.370 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.370 I 
 increasities, but the authorities were unable to provide any information about them. [end of text]


0.01.547.136 I llama_perf_sampler_print:    sampling time =       2.34 ms /    17 runs   (    0.14 ms per token,  7277.40 tokens per second)
0.01.547.139 I llama_perf_context_print:        load time =     463.54 ms
0.01.547.141 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.547.142 I llama_perf_context_print:        eval time =    1073.29 ms /    16 runs   (   67.08 ms per token,    14.91 tokens per second)
0.01.547.143 I llama_perf_context_print:       total time =    1082.93 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.537 I build: 4087 (f0204a0e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.000.762 I main: load the model and apply lora adapter, if any
0.00.021.212 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.222 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.230 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.239 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.244 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.251 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.252 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.254 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.255 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.256 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.256 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.262 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.263 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.264 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.265 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.266 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.198 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.121 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.956 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.962 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.963 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.964 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.964 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.965 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.965 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.967 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.968 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.969 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.969 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.130.970 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.974 I llama_model_loader: - type  f32:   37 tensors
0.00.130.976 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.121 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.116 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.238.637 I llm_load_vocab: special tokens cache size = 5
0.00.259.491 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.259.508 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.259.509 I llm_load_print_meta: arch             = gemma
0.00.259.509 I llm_load_print_meta: vocab type       = SPM
0.00.259.510 I llm_load_print_meta: n_vocab          = 256000
0.00.259.510 I llm_load_print_meta: n_merges         = 0
0.00.259.510 I llm_load_print_meta: vocab_only       = 0
0.00.259.511 I llm_load_print_meta: n_ctx_train      = 8192
0.00.259.511 I llm_load_print_meta: n_embd           = 2048
0.00.259.511 I llm_load_print_meta: n_layer          = 18
0.00.259.523 I llm_load_print_meta: n_head           = 8
0.00.259.524 I llm_load_print_meta: n_head_kv        = 1
0.00.259.524 I llm_load_print_meta: n_rot            = 256
0.00.259.524 I llm_load_print_meta: n_swa            = 0
0.00.259.525 I llm_load_print_meta: n_embd_head_k    = 256
0.00.259.525 I llm_load_print_meta: n_embd_head_v    = 256
0.00.259.526 I llm_load_print_meta: n_gqa            = 8
0.00.259.527 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.259.528 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.259.529 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.259.530 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.259.530 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.259.531 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.259.531 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.259.532 I llm_load_print_meta: n_ff             = 16384
0.00.259.532 I llm_load_print_meta: n_expert         = 0
0.00.259.532 I llm_load_print_meta: n_expert_used    = 0
0.00.259.533 I llm_load_print_meta: causal attn      = 1
0.00.259.533 I llm_load_print_meta: pooling type     = 0
0.00.259.533 I llm_load_print_meta: rope type        = 2
0.00.259.534 I llm_load_print_meta: rope scaling     = linear
0.00.259.535 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.259.536 I llm_load_print_meta: freq_scale_train = 1
0.00.259.536 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.259.536 I llm_load_print_meta: rope_finetuned   = unknown
0.00.259.536 I llm_load_print_meta: ssm_d_conv       = 0
0.00.259.537 I llm_load_print_meta: ssm_d_inner      = 0
0.00.259.537 I llm_load_print_meta: ssm_d_state      = 0
0.00.259.537 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.259.537 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.259.538 I llm_load_print_meta: model type       = 2B
0.00.259.538 I llm_load_print_meta: model ftype      = Q8_0
0.00.259.539 I llm_load_print_meta: model params     = 2.51 B
0.00.259.540 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.259.540 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.259.541 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.259.541 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.259.542 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.259.542 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.259.542 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.259.543 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.259.543 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.259.543 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.259.543 I llm_load_print_meta: max token length = 93
0.00.338.782 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.338.794 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.338.795 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.338.795 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.338.796 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.338.797 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.344.364 I llama_new_context_with_model: n_seq_max     = 1
0.00.344.372 I llama_new_context_with_model: n_ctx         = 4096
0.00.344.373 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.344.373 I llama_new_context_with_model: n_batch       = 2048
0.00.344.373 I llama_new_context_with_model: n_ubatch      = 512
0.00.344.374 I llama_new_context_with_model: flash_attn    = 0
0.00.344.377 I llama_new_context_with_model: freq_base     = 10000.0
0.00.344.378 I llama_new_context_with_model: freq_scale    = 1
0.00.344.379 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.360.056 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.360.073 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.360.175 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.361.612 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.361.618 I llama_new_context_with_model: graph nodes  = 601
0.00.361.618 I llama_new_context_with_model: graph splits = 1
0.00.361.620 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.455.669 I main: llama threadpool init, n_threads = 4
0.00.455.683 I 
0.00.455.770 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.455.773 I 
0.00.455.820 I sampler seed: 1790121157
0.00.455.833 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.455.838 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.455.842 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.455.842 I 
 increabling, and hyperinflation are serious economic problems that can have devastating effects on individuals and businesses.

**Discuss the causes of hyperinflation and how it can

0.02.659.928 I llama_perf_sampler_print:    sampling time =       5.03 ms /    33 runs   (    0.15 ms per token,  6559.33 tokens per second)
0.02.659.930 I llama_perf_context_print:        load time =     454.89 ms
0.02.659.931 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.659.932 I llama_perf_context_print:        eval time =    2184.91 ms /    32 runs   (   68.28 ms per token,    14.65 tokens per second)
0.02.659.933 I llama_perf_context_print:       total time =    2204.27 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.573 I build: 4087 (f0204a0e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.775 I main: llama backend init
0.00.000.782 I main: load the model and apply lora adapter, if any
0.00.023.011 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.020 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.028 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.035 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.036 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.041 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.045 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.046 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.046 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.047 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.047 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.051 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.052 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.053 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.053 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.054 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.196 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.110 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.135.928 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.135.934 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.135.935 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.135.936 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.135.936 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.135.937 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.135.938 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.135.941 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.135.941 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.135.942 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.135.942 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.135.944 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.135.947 I llama_model_loader: - type  f32:   37 tensors
0.00.135.949 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.081 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.005 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.584 I llm_load_vocab: special tokens cache size = 5
0.00.270.495 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.511 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.512 I llm_load_print_meta: arch             = gemma
0.00.270.512 I llm_load_print_meta: vocab type       = SPM
0.00.270.513 I llm_load_print_meta: n_vocab          = 256000
0.00.270.513 I llm_load_print_meta: n_merges         = 0
0.00.270.514 I llm_load_print_meta: vocab_only       = 0
0.00.270.514 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.514 I llm_load_print_meta: n_embd           = 2048
0.00.270.515 I llm_load_print_meta: n_layer          = 18
0.00.270.527 I llm_load_print_meta: n_head           = 8
0.00.270.528 I llm_load_print_meta: n_head_kv        = 1
0.00.270.528 I llm_load_print_meta: n_rot            = 256
0.00.270.529 I llm_load_print_meta: n_swa            = 0
0.00.270.529 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.529 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.530 I llm_load_print_meta: n_gqa            = 8
0.00.270.531 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.532 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.533 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.534 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.535 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.535 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.535 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.536 I llm_load_print_meta: n_ff             = 16384
0.00.270.536 I llm_load_print_meta: n_expert         = 0
0.00.270.537 I llm_load_print_meta: n_expert_used    = 0
0.00.270.537 I llm_load_print_meta: causal attn      = 1
0.00.270.538 I llm_load_print_meta: pooling type     = 0
0.00.270.538 I llm_load_print_meta: rope type        = 2
0.00.270.538 I llm_load_print_meta: rope scaling     = linear
0.00.270.539 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.540 I llm_load_print_meta: freq_scale_train = 1
0.00.270.540 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.541 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.541 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.541 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.541 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.542 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.542 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.542 I llm_load_print_meta: model type       = 2B
0.00.270.543 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.544 I llm_load_print_meta: model params     = 2.51 B
0.00.270.545 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.546 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.546 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.547 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.547 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.547 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.548 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.548 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.548 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.549 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.549 I llm_load_print_meta: max token length = 93
0.00.342.193 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.342.200 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.347.460 I llama_new_context_with_model: n_seq_max     = 1
0.00.347.466 I llama_new_context_with_model: n_ctx         = 4096
0.00.347.467 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.347.467 I llama_new_context_with_model: n_batch       = 2048
0.00.347.468 I llama_new_context_with_model: n_ubatch      = 512
0.00.347.468 I llama_new_context_with_model: flash_attn    = 0
0.00.347.471 I llama_new_context_with_model: freq_base     = 10000.0
0.00.347.472 I llama_new_context_with_model: freq_scale    = 1
0.00.347.472 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.362.315 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.362.330 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.362.431 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.363.723 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.363.731 I llama_new_context_with_model: graph nodes  = 601
0.00.363.731 I llama_new_context_with_model: graph splits = 1
0.00.363.733 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.138 I main: llama threadpool init, n_threads = 4
0.00.460.157 I 
0.00.460.247 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.460.252 I 
0.00.460.303 I sampler seed: 1301651137
0.00.460.318 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.322 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.460.324 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.324 I 
 increasities and the subsequent societal consequences. [end of text]


0.01.142.869 I llama_perf_sampler_print:    sampling time =       1.37 ms /    10 runs   (    0.14 ms per token,  7278.02 tokens per second)
0.01.142.871 I llama_perf_context_print:        load time =     459.34 ms
0.01.142.873 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.142.875 I llama_perf_context_print:        eval time =     676.45 ms /     9 runs   (   75.16 ms per token,    13.30 tokens per second)
0.01.142.876 I llama_perf_context_print:       total time =     682.74 ms /    10 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.188s
user	0m23.529s
sys	0m9.304s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4087 (f0204a0e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40354.60 ms
main:    total time = 40354.60 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.575 I build: 4087 (f0204a0e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.771 I main: llama backend init
0.00.000.778 I main: load the model and apply lora adapter, if any
0.00.021.136 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.145 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.154 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.158 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.160 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.164 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.167 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.168 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.169 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.169 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.170 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.173 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.174 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.175 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.175 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.176 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.080 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.565 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.415 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.421 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.421 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.422 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.422 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.423 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.424 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.427 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.427 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.428 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.430 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.431 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.436 I llama_model_loader: - type  f32:   37 tensors
0.00.130.437 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.438 I llama_model_loader: - type q6_K:   19 tensors
0.00.200.405 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.107 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.677 I llm_load_vocab: special tokens cache size = 5
0.00.262.435 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.449 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.450 I llm_load_print_meta: arch             = gemma
0.00.262.451 I llm_load_print_meta: vocab type       = SPM
0.00.262.451 I llm_load_print_meta: n_vocab          = 256000
0.00.262.452 I llm_load_print_meta: n_merges         = 0
0.00.262.452 I llm_load_print_meta: vocab_only       = 0
0.00.262.452 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.453 I llm_load_print_meta: n_embd           = 2048
0.00.262.453 I llm_load_print_meta: n_layer          = 18
0.00.262.464 I llm_load_print_meta: n_head           = 8
0.00.262.465 I llm_load_print_meta: n_head_kv        = 1
0.00.262.465 I llm_load_print_meta: n_rot            = 256
0.00.262.466 I llm_load_print_meta: n_swa            = 0
0.00.262.466 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.467 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.467 I llm_load_print_meta: n_gqa            = 8
0.00.262.468 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.469 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.470 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.472 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.472 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.472 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.473 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.473 I llm_load_print_meta: n_ff             = 16384
0.00.262.474 I llm_load_print_meta: n_expert         = 0
0.00.262.474 I llm_load_print_meta: n_expert_used    = 0
0.00.262.474 I llm_load_print_meta: causal attn      = 1
0.00.262.475 I llm_load_print_meta: pooling type     = 0
0.00.262.475 I llm_load_print_meta: rope type        = 2
0.00.262.475 I llm_load_print_meta: rope scaling     = linear
0.00.262.477 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.478 I llm_load_print_meta: freq_scale_train = 1
0.00.262.478 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.478 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.479 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.479 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.479 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.479 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.480 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.480 I llm_load_print_meta: model type       = 2B
0.00.262.481 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.262.482 I llm_load_print_meta: model params     = 2.51 B
0.00.262.482 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.262.483 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.483 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.484 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.484 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.485 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.485 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.485 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.486 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.486 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.486 I llm_load_print_meta: max token length = 93
0.00.322.928 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.322.934 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.322.934 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.322.935 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.322.936 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.322.936 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.328.083 I llama_new_context_with_model: n_seq_max     = 1
0.00.328.089 I llama_new_context_with_model: n_ctx         = 4096
0.00.328.089 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.328.090 I llama_new_context_with_model: n_batch       = 2048
0.00.328.090 I llama_new_context_with_model: n_ubatch      = 512
0.00.328.090 I llama_new_context_with_model: flash_attn    = 0
0.00.328.092 I llama_new_context_with_model: freq_base     = 10000.0
0.00.328.093 I llama_new_context_with_model: freq_scale    = 1
0.00.328.094 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.342.121 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.342.133 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.342.215 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.343.490 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.343.496 I llama_new_context_with_model: graph nodes  = 601
0.00.343.497 I llama_new_context_with_model: graph splits = 1
0.00.343.498 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.418.259 I main: llama threadpool init, n_threads = 4
0.00.418.274 I 
0.00.418.349 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.418.352 I 
0.00.418.395 I sampler seed: 1529392587
0.00.418.407 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.418.409 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.418.410 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.418.411 I 
 increasities, or other sexually suggestive content.

I am unable to generate sexually suggestive content as it goes against my programming guidelines. [end of text]


0.01.760.919 I llama_perf_sampler_print:    sampling time =       4.17 ms /    28 runs   (    0.15 ms per token,  6714.63 tokens per second)
0.01.760.921 I llama_perf_context_print:        load time =     417.46 ms
0.01.760.922 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.760.923 I llama_perf_context_print:        eval time =    1326.96 ms /    27 runs   (   49.15 ms per token,    20.35 tokens per second)
0.01.760.924 I llama_perf_context_print:       total time =    1342.67 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4087 (f0204a0e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40148.23 ms
main:    total time = 40148.23 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.541 I build: 4087 (f0204a0e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.779 I main: llama backend init
0.00.000.786 I main: load the model and apply lora adapter, if any
0.00.021.465 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.481 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.488 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.489 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.494 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.495 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.495 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.496 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.496 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.497 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.501 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.501 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.502 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.503 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.503 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.747 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.162 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.399 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.406 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.406 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.407 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.408 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.409 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.409 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.412 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.413 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.417 I llama_model_loader: - type  f32:   37 tensors
0.00.133.418 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.418 I llama_model_loader: - type q6_K:   19 tensors
0.00.206.744 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.952 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.438 I llm_load_vocab: special tokens cache size = 5
0.00.269.250 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.267 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.268 I llm_load_print_meta: arch             = gemma
0.00.269.268 I llm_load_print_meta: vocab type       = SPM
0.00.269.269 I llm_load_print_meta: n_vocab          = 256000
0.00.269.269 I llm_load_print_meta: n_merges         = 0
0.00.269.270 I llm_load_print_meta: vocab_only       = 0
0.00.269.270 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.270 I llm_load_print_meta: n_embd           = 2048
0.00.269.271 I llm_load_print_meta: n_layer          = 18
0.00.269.282 I llm_load_print_meta: n_head           = 8
0.00.269.283 I llm_load_print_meta: n_head_kv        = 1
0.00.269.284 I llm_load_print_meta: n_rot            = 256
0.00.269.284 I llm_load_print_meta: n_swa            = 0
0.00.269.284 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.285 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.286 I llm_load_print_meta: n_gqa            = 8
0.00.269.287 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.288 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.289 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.290 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.290 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.290 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.291 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.292 I llm_load_print_meta: n_ff             = 16384
0.00.269.292 I llm_load_print_meta: n_expert         = 0
0.00.269.292 I llm_load_print_meta: n_expert_used    = 0
0.00.269.292 I llm_load_print_meta: causal attn      = 1
0.00.269.293 I llm_load_print_meta: pooling type     = 0
0.00.269.293 I llm_load_print_meta: rope type        = 2
0.00.269.293 I llm_load_print_meta: rope scaling     = linear
0.00.269.295 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.295 I llm_load_print_meta: freq_scale_train = 1
0.00.269.296 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.296 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.297 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.297 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.297 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.298 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.298 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.298 I llm_load_print_meta: model type       = 2B
0.00.269.299 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.269.300 I llm_load_print_meta: model params     = 2.51 B
0.00.269.301 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.269.301 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.301 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.302 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.302 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.302 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.303 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.303 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.303 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.304 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.304 I llm_load_print_meta: max token length = 93
0.00.328.807 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.334.042 I llama_new_context_with_model: n_seq_max     = 1
0.00.334.046 I llama_new_context_with_model: n_ctx         = 4096
0.00.334.046 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.334.047 I llama_new_context_with_model: n_batch       = 2048
0.00.334.047 I llama_new_context_with_model: n_ubatch      = 512
0.00.334.048 I llama_new_context_with_model: flash_attn    = 0
0.00.334.050 I llama_new_context_with_model: freq_base     = 10000.0
0.00.334.051 I llama_new_context_with_model: freq_scale    = 1
0.00.334.051 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.348.675 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.348.689 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.348.796 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.350.035 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.350.040 I llama_new_context_with_model: graph nodes  = 601
0.00.350.041 I llama_new_context_with_model: graph splits = 1
0.00.350.043 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.423.897 I main: llama threadpool init, n_threads = 4
0.00.423.910 I 
0.00.423.993 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.423.997 I 
0.00.424.048 I sampler seed: 848850243
0.00.424.059 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.424.062 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.424.063 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.424.064 I 
 increasities can happen with the following:

a) Replication errors
b) Mutation
c) Insertion errors
d) All of the above

The correct

0.01.973.923 I llama_perf_sampler_print:    sampling time =       5.02 ms /    33 runs   (    0.15 ms per token,  6578.95 tokens per second)
0.01.973.926 I llama_perf_context_print:        load time =     423.09 ms
0.01.973.928 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.973.930 I llama_perf_context_print:        eval time =    1531.51 ms /    32 runs   (   47.86 ms per token,    20.89 tokens per second)
0.01.973.931 I llama_perf_context_print:       total time =    1550.03 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.017s
user	10m22.843s
sys	0m6.739s
