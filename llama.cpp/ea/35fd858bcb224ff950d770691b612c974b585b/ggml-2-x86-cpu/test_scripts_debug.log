+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.650 I build: 4227 (ea35fd85) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.845 I main: llama backend init
0.00.000.852 I main: load the model and apply lora adapter, if any
0.00.023.277 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.289 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.388 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.399 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.401 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.406 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.410 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.411 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.413 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.414 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.415 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.422 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.425 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.427 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.428 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.429 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.230.489 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.334.949 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.358.315 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.358.325 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.358.327 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.358.328 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.358.329 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.358.331 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.358.332 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.358.337 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.358.338 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.358.339 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.358.341 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.358.343 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.358.352 I llama_model_loader: - type  f32:   37 tensors
0.00.358.354 I llama_model_loader: - type q8_0:  127 tensors
0.00.622.787 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.751.811 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.752.824 I llm_load_vocab: special tokens cache size = 5
0.00.941.097 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.941.176 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.941.177 I llm_load_print_meta: arch             = gemma
0.00.941.178 I llm_load_print_meta: vocab type       = SPM
0.00.941.179 I llm_load_print_meta: n_vocab          = 256000
0.00.941.181 I llm_load_print_meta: n_merges         = 0
0.00.941.182 I llm_load_print_meta: vocab_only       = 0
0.00.941.182 I llm_load_print_meta: n_ctx_train      = 8192
0.00.941.183 I llm_load_print_meta: n_embd           = 2048
0.00.941.183 I llm_load_print_meta: n_layer          = 18
0.00.941.248 I llm_load_print_meta: n_head           = 8
0.00.941.256 I llm_load_print_meta: n_head_kv        = 1
0.00.941.257 I llm_load_print_meta: n_rot            = 256
0.00.941.271 I llm_load_print_meta: n_swa            = 0
0.00.941.275 I llm_load_print_meta: n_embd_head_k    = 256
0.00.941.276 I llm_load_print_meta: n_embd_head_v    = 256
0.00.941.282 I llm_load_print_meta: n_gqa            = 8
0.00.941.289 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.941.294 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.941.296 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.941.298 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.941.299 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.941.299 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.941.300 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.941.305 I llm_load_print_meta: n_ff             = 16384
0.00.941.305 I llm_load_print_meta: n_expert         = 0
0.00.941.305 I llm_load_print_meta: n_expert_used    = 0
0.00.941.306 I llm_load_print_meta: causal attn      = 1
0.00.941.306 I llm_load_print_meta: pooling type     = 0
0.00.941.307 I llm_load_print_meta: rope type        = 2
0.00.941.307 I llm_load_print_meta: rope scaling     = linear
0.00.941.308 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.941.309 I llm_load_print_meta: freq_scale_train = 1
0.00.941.310 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.941.310 I llm_load_print_meta: rope_finetuned   = unknown
0.00.941.311 I llm_load_print_meta: ssm_d_conv       = 0
0.00.941.311 I llm_load_print_meta: ssm_d_inner      = 0
0.00.941.312 I llm_load_print_meta: ssm_d_state      = 0
0.00.941.312 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.941.313 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.941.314 I llm_load_print_meta: model type       = 2B
0.00.941.315 I llm_load_print_meta: model ftype      = Q8_0
0.00.941.316 I llm_load_print_meta: model params     = 2.51 B
0.00.941.326 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.941.327 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.941.328 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.941.342 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.941.343 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.941.343 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.941.344 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.941.348 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.941.355 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.941.357 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.941.357 I llm_load_print_meta: max token length = 93
0.01.044.270 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.01.044.279 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.01.044.279 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.01.044.280 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.01.044.281 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.01.044.282 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.01.050.264 I llama_new_context_with_model: n_seq_max     = 1
0.01.050.272 I llama_new_context_with_model: n_ctx         = 4096
0.01.050.272 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.050.273 I llama_new_context_with_model: n_batch       = 2048
0.01.050.273 I llama_new_context_with_model: n_ubatch      = 512
0.01.050.274 I llama_new_context_with_model: flash_attn    = 0
0.01.050.276 I llama_new_context_with_model: freq_base     = 10000.0
0.01.050.277 I llama_new_context_with_model: freq_scale    = 1
0.01.050.277 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.065.390 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.065.429 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.065.558 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.068.137 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.068.141 I llama_new_context_with_model: graph nodes  = 601
0.01.068.142 I llama_new_context_with_model: graph splits = 1
0.01.068.167 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.679.029 I main: llama threadpool init, n_threads = 4
0.01.679.048 I 
0.01.679.173 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.679.177 I 
0.01.679.433 I sampler seed: 412954441
0.01.679.446 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.679.457 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.679.460 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.679.461 I 
 increasities on the internet, which often involve sexually suggestive or explicit content.

I am unable to provide information that is sexually suggestive or explicit in nature. [end of text]


0.15.267.927 I llama_perf_sampler_print:    sampling time =      48.37 ms /    33 runs   (    1.47 ms per token,   682.31 tokens per second)
0.15.267.930 I llama_perf_context_print:        load time =    1678.08 ms
0.15.267.931 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.267.956 I llama_perf_context_print:        eval time =   13500.80 ms /    32 runs   (  421.90 ms per token,     2.37 tokens per second)
0.15.267.960 I llama_perf_context_print:       total time =   13588.91 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.676 I build: 4227 (ea35fd85) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.877 I main: llama backend init
0.00.000.886 I main: load the model and apply lora adapter, if any
0.00.023.853 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.957 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.972 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.977 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.984 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.986 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.988 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.990 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.991 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.993 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.003 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.007 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.009 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.010 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.011 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.249.341 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.353.210 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.376.755 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.376.767 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.376.769 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.376.770 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.376.771 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.376.773 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.376.774 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.376.802 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.376.807 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.376.809 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.376.810 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.376.813 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.376.823 I llama_model_loader: - type  f32:   37 tensors
0.00.376.826 I llama_model_loader: - type q8_0:  127 tensors
0.00.644.872 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.771.241 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.772.186 I llm_load_vocab: special tokens cache size = 5
0.00.974.172 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.974.249 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.974.250 I llm_load_print_meta: arch             = gemma
0.00.974.251 I llm_load_print_meta: vocab type       = SPM
0.00.974.252 I llm_load_print_meta: n_vocab          = 256000
0.00.974.255 I llm_load_print_meta: n_merges         = 0
0.00.974.255 I llm_load_print_meta: vocab_only       = 0
0.00.974.256 I llm_load_print_meta: n_ctx_train      = 8192
0.00.974.256 I llm_load_print_meta: n_embd           = 2048
0.00.974.256 I llm_load_print_meta: n_layer          = 18
0.00.974.321 I llm_load_print_meta: n_head           = 8
0.00.974.328 I llm_load_print_meta: n_head_kv        = 1
0.00.974.329 I llm_load_print_meta: n_rot            = 256
0.00.974.329 I llm_load_print_meta: n_swa            = 0
0.00.974.330 I llm_load_print_meta: n_embd_head_k    = 256
0.00.974.330 I llm_load_print_meta: n_embd_head_v    = 256
0.00.974.335 I llm_load_print_meta: n_gqa            = 8
0.00.974.339 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.974.344 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.974.346 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.974.348 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.974.348 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.974.349 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.974.350 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.974.355 I llm_load_print_meta: n_ff             = 16384
0.00.974.356 I llm_load_print_meta: n_expert         = 0
0.00.974.356 I llm_load_print_meta: n_expert_used    = 0
0.00.974.356 I llm_load_print_meta: causal attn      = 1
0.00.974.357 I llm_load_print_meta: pooling type     = 0
0.00.974.357 I llm_load_print_meta: rope type        = 2
0.00.974.358 I llm_load_print_meta: rope scaling     = linear
0.00.974.359 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.974.360 I llm_load_print_meta: freq_scale_train = 1
0.00.974.360 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.974.372 I llm_load_print_meta: rope_finetuned   = unknown
0.00.974.372 I llm_load_print_meta: ssm_d_conv       = 0
0.00.974.373 I llm_load_print_meta: ssm_d_inner      = 0
0.00.974.373 I llm_load_print_meta: ssm_d_state      = 0
0.00.974.373 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.974.374 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.974.375 I llm_load_print_meta: model type       = 2B
0.00.974.376 I llm_load_print_meta: model ftype      = Q8_0
0.00.974.376 I llm_load_print_meta: model params     = 2.51 B
0.00.974.384 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.974.385 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.974.386 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.974.387 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.974.388 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.974.388 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.974.389 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.974.390 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.974.395 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.974.397 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.974.397 I llm_load_print_meta: max token length = 93
0.01.071.848 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.01.077.796 I llama_new_context_with_model: n_seq_max     = 1
0.01.077.804 I llama_new_context_with_model: n_ctx         = 4096
0.01.077.804 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.077.804 I llama_new_context_with_model: n_batch       = 2048
0.01.077.805 I llama_new_context_with_model: n_ubatch      = 512
0.01.077.805 I llama_new_context_with_model: flash_attn    = 0
0.01.077.807 I llama_new_context_with_model: freq_base     = 10000.0
0.01.077.808 I llama_new_context_with_model: freq_scale    = 1
0.01.077.809 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.092.809 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.092.853 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.092.986 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.095.609 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.095.613 I llama_new_context_with_model: graph nodes  = 601
0.01.095.614 I llama_new_context_with_model: graph splits = 1
0.01.095.637 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.711.256 I main: llama threadpool init, n_threads = 4
0.01.711.273 I 
0.01.711.403 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.711.407 I 
0.01.711.637 I sampler seed: 2070702798
0.01.711.650 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.711.660 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.711.663 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.711.664 I 
 increasities, a woman who embodies the essence of a goddess, and a tyrannical god who reigns over chaos and destruction.

What is the story?

The

0.15.356.685 I llama_perf_sampler_print:    sampling time =      48.70 ms /    33 runs   (    1.48 ms per token,   677.59 tokens per second)
0.15.356.688 I llama_perf_context_print:        load time =    1710.27 ms
0.15.356.703 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.356.705 I llama_perf_context_print:        eval time =   13556.02 ms /    32 runs   (  423.63 ms per token,     2.36 tokens per second)
0.15.356.706 I llama_perf_context_print:       total time =   13645.44 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.676 I build: 4227 (ea35fd85) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.899 I main: llama backend init
0.00.000.909 I main: load the model and apply lora adapter, if any
0.00.023.959 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.973 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.071 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.084 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.086 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.094 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.098 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.099 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.100 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.102 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.103 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.115 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.118 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.120 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.121 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.123 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.230.394 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.333.865 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.357.177 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.357.187 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.357.188 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.357.189 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.357.191 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.357.192 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.357.193 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.357.197 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.357.199 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.357.200 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.357.201 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.357.203 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.357.212 I llama_model_loader: - type  f32:   37 tensors
0.00.357.215 I llama_model_loader: - type q8_0:  127 tensors
0.00.615.395 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.739.086 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.740.111 I llm_load_vocab: special tokens cache size = 5
0.00.927.622 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.927.695 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.927.696 I llm_load_print_meta: arch             = gemma
0.00.927.696 I llm_load_print_meta: vocab type       = SPM
0.00.927.697 I llm_load_print_meta: n_vocab          = 256000
0.00.927.700 I llm_load_print_meta: n_merges         = 0
0.00.927.701 I llm_load_print_meta: vocab_only       = 0
0.00.927.701 I llm_load_print_meta: n_ctx_train      = 8192
0.00.927.701 I llm_load_print_meta: n_embd           = 2048
0.00.927.702 I llm_load_print_meta: n_layer          = 18
0.00.927.770 I llm_load_print_meta: n_head           = 8
0.00.927.777 I llm_load_print_meta: n_head_kv        = 1
0.00.927.777 I llm_load_print_meta: n_rot            = 256
0.00.927.778 I llm_load_print_meta: n_swa            = 0
0.00.927.779 I llm_load_print_meta: n_embd_head_k    = 256
0.00.927.780 I llm_load_print_meta: n_embd_head_v    = 256
0.00.927.785 I llm_load_print_meta: n_gqa            = 8
0.00.927.790 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.927.795 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.927.796 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.927.798 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.927.799 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.927.807 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.927.807 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.927.812 I llm_load_print_meta: n_ff             = 16384
0.00.927.812 I llm_load_print_meta: n_expert         = 0
0.00.927.813 I llm_load_print_meta: n_expert_used    = 0
0.00.927.813 I llm_load_print_meta: causal attn      = 1
0.00.927.813 I llm_load_print_meta: pooling type     = 0
0.00.927.813 I llm_load_print_meta: rope type        = 2
0.00.927.814 I llm_load_print_meta: rope scaling     = linear
0.00.927.815 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.927.817 I llm_load_print_meta: freq_scale_train = 1
0.00.927.819 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.927.820 I llm_load_print_meta: rope_finetuned   = unknown
0.00.927.820 I llm_load_print_meta: ssm_d_conv       = 0
0.00.927.820 I llm_load_print_meta: ssm_d_inner      = 0
0.00.927.821 I llm_load_print_meta: ssm_d_state      = 0
0.00.927.821 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.927.822 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.927.823 I llm_load_print_meta: model type       = 2B
0.00.927.825 I llm_load_print_meta: model ftype      = Q8_0
0.00.927.825 I llm_load_print_meta: model params     = 2.51 B
0.00.927.837 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.927.838 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.927.838 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.927.860 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.927.861 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.927.862 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.927.862 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.927.863 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.927.870 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.927.872 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.927.872 I llm_load_print_meta: max token length = 93
0.01.005.607 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.01.005.621 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.01.005.622 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.01.005.623 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.01.005.624 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.01.005.625 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.01.011.915 I llama_new_context_with_model: n_seq_max     = 1
0.01.011.924 I llama_new_context_with_model: n_ctx         = 4096
0.01.011.924 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.011.925 I llama_new_context_with_model: n_batch       = 2048
0.01.011.925 I llama_new_context_with_model: n_ubatch      = 512
0.01.011.926 I llama_new_context_with_model: flash_attn    = 0
0.01.011.930 I llama_new_context_with_model: freq_base     = 10000.0
0.01.011.931 I llama_new_context_with_model: freq_scale    = 1
0.01.011.931 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.027.372 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.027.414 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.027.554 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.030.161 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.030.165 I llama_new_context_with_model: graph nodes  = 601
0.01.030.165 I llama_new_context_with_model: graph splits = 1
0.01.030.189 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.640.038 I main: llama threadpool init, n_threads = 4
0.01.640.055 I 
0.01.640.174 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.640.178 I 
0.01.640.412 I sampler seed: 30485240
0.01.640.426 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.640.436 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.640.439 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.640.439 I 
 increasities in the realm of information technology, and the role of standardization in mitigating such risks.

**Discussion Points:**

**1. The Risks of Un

0.15.258.733 I llama_perf_sampler_print:    sampling time =      48.37 ms /    33 runs   (    1.47 ms per token,   682.21 tokens per second)
0.15.258.736 I llama_perf_context_print:        load time =    1639.01 ms
0.15.258.737 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.258.753 I llama_perf_context_print:        eval time =   13530.32 ms /    32 runs   (  422.82 ms per token,     2.37 tokens per second)
0.15.258.754 I llama_perf_context_print:       total time =   13618.71 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.641 I build: 4227 (ea35fd85) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.848 I main: llama backend init
0.00.000.856 I main: load the model and apply lora adapter, if any
0.00.023.605 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.618 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.710 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.722 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.726 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.732 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.737 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.738 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.739 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.740 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.743 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.749 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.750 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.752 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.753 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.754 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.230.119 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.334.263 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.357.578 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.357.588 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.357.589 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.357.591 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.357.592 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.357.593 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.357.595 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.357.599 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.357.601 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.357.602 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.357.603 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.357.605 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.357.613 I llama_model_loader: - type  f32:   37 tensors
0.00.357.616 I llama_model_loader: - type q8_0:  127 tensors
0.00.614.301 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.739.655 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.740.658 I llm_load_vocab: special tokens cache size = 5
0.00.947.187 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.947.262 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.947.263 I llm_load_print_meta: arch             = gemma
0.00.947.264 I llm_load_print_meta: vocab type       = SPM
0.00.947.265 I llm_load_print_meta: n_vocab          = 256000
0.00.947.267 I llm_load_print_meta: n_merges         = 0
0.00.947.267 I llm_load_print_meta: vocab_only       = 0
0.00.947.268 I llm_load_print_meta: n_ctx_train      = 8192
0.00.947.268 I llm_load_print_meta: n_embd           = 2048
0.00.947.268 I llm_load_print_meta: n_layer          = 18
0.00.947.335 I llm_load_print_meta: n_head           = 8
0.00.947.341 I llm_load_print_meta: n_head_kv        = 1
0.00.947.342 I llm_load_print_meta: n_rot            = 256
0.00.947.344 I llm_load_print_meta: n_swa            = 0
0.00.947.345 I llm_load_print_meta: n_embd_head_k    = 256
0.00.947.359 I llm_load_print_meta: n_embd_head_v    = 256
0.00.947.383 I llm_load_print_meta: n_gqa            = 8
0.00.947.389 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.947.397 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.947.399 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.947.400 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.947.400 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.947.401 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.947.401 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.947.406 I llm_load_print_meta: n_ff             = 16384
0.00.947.407 I llm_load_print_meta: n_expert         = 0
0.00.947.408 I llm_load_print_meta: n_expert_used    = 0
0.00.947.408 I llm_load_print_meta: causal attn      = 1
0.00.947.409 I llm_load_print_meta: pooling type     = 0
0.00.947.409 I llm_load_print_meta: rope type        = 2
0.00.947.410 I llm_load_print_meta: rope scaling     = linear
0.00.947.411 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.947.413 I llm_load_print_meta: freq_scale_train = 1
0.00.947.413 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.947.413 I llm_load_print_meta: rope_finetuned   = unknown
0.00.947.415 I llm_load_print_meta: ssm_d_conv       = 0
0.00.947.415 I llm_load_print_meta: ssm_d_inner      = 0
0.00.947.415 I llm_load_print_meta: ssm_d_state      = 0
0.00.947.416 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.947.417 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.947.417 I llm_load_print_meta: model type       = 2B
0.00.947.418 I llm_load_print_meta: model ftype      = Q8_0
0.00.947.419 I llm_load_print_meta: model params     = 2.51 B
0.00.947.429 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.947.430 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.947.430 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.947.431 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.947.431 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.947.432 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.947.432 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.947.433 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.947.439 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.947.441 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.947.441 I llm_load_print_meta: max token length = 93
0.01.020.848 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.01.020.857 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.01.026.570 I llama_new_context_with_model: n_seq_max     = 1
0.01.026.577 I llama_new_context_with_model: n_ctx         = 4096
0.01.026.577 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.026.578 I llama_new_context_with_model: n_batch       = 2048
0.01.026.578 I llama_new_context_with_model: n_ubatch      = 512
0.01.026.579 I llama_new_context_with_model: flash_attn    = 0
0.01.026.582 I llama_new_context_with_model: freq_base     = 10000.0
0.01.026.582 I llama_new_context_with_model: freq_scale    = 1
0.01.026.583 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.041.959 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.042.000 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.042.135 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.044.756 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.044.761 I llama_new_context_with_model: graph nodes  = 601
0.01.044.761 I llama_new_context_with_model: graph splits = 1
0.01.044.783 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.672.413 I main: llama threadpool init, n_threads = 4
0.01.672.430 I 
0.01.672.551 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.672.554 I 
0.01.672.784 I sampler seed: 2311720565
0.01.672.799 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.672.808 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.672.812 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.672.812 I 
 increasities, but they are not allowed to engage in any sexually suggestive behaviors.

This policy is designed to maintain a professional and respectful environment for all employees.

0.15.256.181 I llama_perf_sampler_print:    sampling time =      48.42 ms /    33 runs   (    1.47 ms per token,   681.58 tokens per second)
0.15.256.213 I llama_perf_context_print:        load time =    1671.46 ms
0.15.256.214 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.256.216 I llama_perf_context_print:        eval time =   13494.22 ms /    32 runs   (  421.69 ms per token,     2.37 tokens per second)
0.15.256.217 I llama_perf_context_print:       total time =   13583.78 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m12.151s
user	3m51.843s
sys	0m9.524s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4227 (ea35fd85)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 185662.24 ms
main:    total time = 185662.24 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.667 I build: 4227 (ea35fd85) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.858 I main: llama backend init
0.00.000.865 I main: load the model and apply lora adapter, if any
0.00.023.473 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.484 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.576 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.588 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.590 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.596 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.598 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.600 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.601 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.602 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.604 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.613 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.617 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.618 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.620 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.621 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.229.844 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.334.118 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.357.407 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.357.418 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.357.419 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.357.420 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.357.422 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.357.423 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.357.424 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.357.429 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.357.430 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.357.431 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.357.433 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.357.435 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.357.443 I llama_model_loader: - type  f32:   37 tensors
0.00.357.446 I llama_model_loader: - type q4_K:  108 tensors
0.00.357.447 I llama_model_loader: - type q6_K:   19 tensors
0.00.615.940 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.739.568 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.740.469 I llm_load_vocab: special tokens cache size = 5
0.00.926.857 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.926.930 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.926.932 I llm_load_print_meta: arch             = gemma
0.00.926.932 I llm_load_print_meta: vocab type       = SPM
0.00.926.933 I llm_load_print_meta: n_vocab          = 256000
0.00.926.936 I llm_load_print_meta: n_merges         = 0
0.00.926.936 I llm_load_print_meta: vocab_only       = 0
0.00.926.936 I llm_load_print_meta: n_ctx_train      = 8192
0.00.926.937 I llm_load_print_meta: n_embd           = 2048
0.00.926.937 I llm_load_print_meta: n_layer          = 18
0.00.927.003 I llm_load_print_meta: n_head           = 8
0.00.927.011 I llm_load_print_meta: n_head_kv        = 1
0.00.927.011 I llm_load_print_meta: n_rot            = 256
0.00.927.012 I llm_load_print_meta: n_swa            = 0
0.00.927.012 I llm_load_print_meta: n_embd_head_k    = 256
0.00.927.013 I llm_load_print_meta: n_embd_head_v    = 256
0.00.927.019 I llm_load_print_meta: n_gqa            = 8
0.00.927.023 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.927.028 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.927.029 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.927.031 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.927.032 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.927.033 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.927.034 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.927.038 I llm_load_print_meta: n_ff             = 16384
0.00.927.039 I llm_load_print_meta: n_expert         = 0
0.00.927.039 I llm_load_print_meta: n_expert_used    = 0
0.00.927.040 I llm_load_print_meta: causal attn      = 1
0.00.927.040 I llm_load_print_meta: pooling type     = 0
0.00.927.040 I llm_load_print_meta: rope type        = 2
0.00.927.041 I llm_load_print_meta: rope scaling     = linear
0.00.927.043 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.927.044 I llm_load_print_meta: freq_scale_train = 1
0.00.927.044 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.927.045 I llm_load_print_meta: rope_finetuned   = unknown
0.00.927.046 I llm_load_print_meta: ssm_d_conv       = 0
0.00.927.046 I llm_load_print_meta: ssm_d_inner      = 0
0.00.927.047 I llm_load_print_meta: ssm_d_state      = 0
0.00.927.047 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.927.048 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.927.049 I llm_load_print_meta: model type       = 2B
0.00.927.050 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.927.050 I llm_load_print_meta: model params     = 2.51 B
0.00.927.061 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.927.061 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.927.062 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.927.067 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.927.067 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.927.068 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.927.068 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.927.069 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.927.075 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.927.077 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.927.077 I llm_load_print_meta: max token length = 93
0.00.990.141 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.990.149 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.990.150 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.990.150 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.990.151 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.990.152 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.995.936 I llama_new_context_with_model: n_seq_max     = 1
0.00.995.943 I llama_new_context_with_model: n_ctx         = 4096
0.00.995.944 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.995.944 I llama_new_context_with_model: n_batch       = 2048
0.00.995.945 I llama_new_context_with_model: n_ubatch      = 512
0.00.995.945 I llama_new_context_with_model: flash_attn    = 0
0.00.995.948 I llama_new_context_with_model: freq_base     = 10000.0
0.00.995.949 I llama_new_context_with_model: freq_scale    = 1
0.00.995.949 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.010.260 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.010.299 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.010.424 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.012.931 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.012.934 I llama_new_context_with_model: graph nodes  = 601
0.01.012.935 I llama_new_context_with_model: graph splits = 1
0.01.012.958 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.601.453 I main: llama threadpool init, n_threads = 4
0.01.601.470 I 
0.01.601.614 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.601.617 I 
0.01.601.857 I sampler seed: 1199033308
0.01.601.871 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.601.883 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.601.884 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.601.884 I 
 seconading, the rhythmic pounding of a drummer's sticks on a cymbal, provides the pulse and heartbeat of countless genres and styles. But how does it

0.12.791.757 I llama_perf_sampler_print:    sampling time =      48.66 ms /    33 runs   (    1.47 ms per token,   678.11 tokens per second)
0.12.791.761 I llama_perf_context_print:        load time =    1600.50 ms
0.12.791.763 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.791.765 I llama_perf_context_print:        eval time =   11101.70 ms /    32 runs   (  346.93 ms per token,     2.88 tokens per second)
0.12.791.766 I llama_perf_context_print:       total time =   11190.31 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4227 (ea35fd85)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 185545.85 ms
main:    total time = 185545.85 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.652 I build: 4227 (ea35fd85) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.861 I main: llama backend init
0.00.000.869 I main: load the model and apply lora adapter, if any
0.00.023.280 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.388 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.403 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.405 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.412 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.417 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.419 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.421 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.423 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.425 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.438 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.443 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.445 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.448 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.450 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.231.134 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.335.230 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.358.665 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.358.677 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.358.678 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.358.680 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.358.681 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.358.682 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.358.684 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.358.688 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.358.689 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.358.698 I llama_model_loader: - type  f32:   37 tensors
0.00.358.700 I llama_model_loader: - type q4_K:  108 tensors
0.00.358.701 I llama_model_loader: - type q6_K:   19 tensors
0.00.635.028 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.757.830 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.758.793 I llm_load_vocab: special tokens cache size = 5
0.00.961.037 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.961.112 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.961.117 I llm_load_print_meta: arch             = gemma
0.00.961.117 I llm_load_print_meta: vocab type       = SPM
0.00.961.118 I llm_load_print_meta: n_vocab          = 256000
0.00.961.120 I llm_load_print_meta: n_merges         = 0
0.00.961.121 I llm_load_print_meta: vocab_only       = 0
0.00.961.121 I llm_load_print_meta: n_ctx_train      = 8192
0.00.961.121 I llm_load_print_meta: n_embd           = 2048
0.00.961.122 I llm_load_print_meta: n_layer          = 18
0.00.961.188 I llm_load_print_meta: n_head           = 8
0.00.961.198 I llm_load_print_meta: n_head_kv        = 1
0.00.961.199 I llm_load_print_meta: n_rot            = 256
0.00.961.200 I llm_load_print_meta: n_swa            = 0
0.00.961.200 I llm_load_print_meta: n_embd_head_k    = 256
0.00.961.201 I llm_load_print_meta: n_embd_head_v    = 256
0.00.961.206 I llm_load_print_meta: n_gqa            = 8
0.00.961.211 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.961.219 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.961.220 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.961.221 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.961.223 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.961.224 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.961.224 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.961.229 I llm_load_print_meta: n_ff             = 16384
0.00.961.230 I llm_load_print_meta: n_expert         = 0
0.00.961.230 I llm_load_print_meta: n_expert_used    = 0
0.00.961.230 I llm_load_print_meta: causal attn      = 1
0.00.961.231 I llm_load_print_meta: pooling type     = 0
0.00.961.231 I llm_load_print_meta: rope type        = 2
0.00.961.232 I llm_load_print_meta: rope scaling     = linear
0.00.961.233 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.961.234 I llm_load_print_meta: freq_scale_train = 1
0.00.961.235 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.961.235 I llm_load_print_meta: rope_finetuned   = unknown
0.00.961.235 I llm_load_print_meta: ssm_d_conv       = 0
0.00.961.236 I llm_load_print_meta: ssm_d_inner      = 0
0.00.961.238 I llm_load_print_meta: ssm_d_state      = 0
0.00.961.239 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.961.239 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.961.240 I llm_load_print_meta: model type       = 2B
0.00.961.241 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.961.241 I llm_load_print_meta: model params     = 2.51 B
0.00.961.252 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.961.253 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.961.254 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.961.254 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.961.255 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.961.257 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.961.257 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.961.258 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.961.264 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.961.266 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.961.266 I llm_load_print_meta: max token length = 93
0.01.018.283 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.01.024.295 I llama_new_context_with_model: n_seq_max     = 1
0.01.024.302 I llama_new_context_with_model: n_ctx         = 4096
0.01.024.303 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.01.024.303 I llama_new_context_with_model: n_batch       = 2048
0.01.024.304 I llama_new_context_with_model: n_ubatch      = 512
0.01.024.304 I llama_new_context_with_model: flash_attn    = 0
0.01.024.306 I llama_new_context_with_model: freq_base     = 10000.0
0.01.024.307 I llama_new_context_with_model: freq_scale    = 1
0.01.024.308 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.01.039.185 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.01.039.228 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.01.039.351 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.01.041.963 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.01.041.967 I llama_new_context_with_model: graph nodes  = 601
0.01.041.967 I llama_new_context_with_model: graph splits = 1
0.01.041.988 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.628.730 I main: llama threadpool init, n_threads = 4
0.01.628.747 I 
0.01.628.884 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.628.889 I 
0.01.629.129 I sampler seed: 2834976132
0.01.629.144 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.629.158 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.629.162 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.629.162 I 
 seconded.

I am unable to access my Google account due to a password reset request. I do not remember my current password and cannot access the recovery link

0.12.917.926 I llama_perf_sampler_print:    sampling time =      48.80 ms /    33 runs   (    1.48 ms per token,   676.22 tokens per second)
0.12.917.955 I llama_perf_context_print:        load time =    1627.76 ms
0.12.917.957 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.917.958 I llama_perf_context_print:        eval time =   11200.51 ms /    32 runs   (  350.02 ms per token,     2.86 tokens per second)
0.12.917.959 I llama_perf_context_print:       total time =   11289.21 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m39.821s
user	46m44.269s
sys	0m6.370s
