+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.657 I build: 3826 (ea9c32be) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.861 I main: llama backend init
0.00.002.789 I main: load the model and apply lora adapter, if any
0.00.024.861 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.057 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.149 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.161 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.162 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.167 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.170 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.171 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.172 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.173 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.173 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.180 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.181 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.182 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.183 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.184 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.698 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.933 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.457 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.466 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.467 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.467 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.468 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.469 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.470 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.473 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.474 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.475 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.475 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.198.476 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.484 I llama_model_loader: - type  f32:   37 tensors
0.00.198.488 I llama_model_loader: - type q8_0:  127 tensors
0.00.502.416 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.534.106 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.535.130 I llm_load_vocab: special tokens cache size = 5
0.00.592.568 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.592.635 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.592.640 I llm_load_print_meta: arch             = gemma
0.00.592.640 I llm_load_print_meta: vocab type       = SPM
0.00.592.641 I llm_load_print_meta: n_vocab          = 256000
0.00.592.644 I llm_load_print_meta: n_merges         = 0
0.00.592.644 I llm_load_print_meta: vocab_only       = 0
0.00.592.644 I llm_load_print_meta: n_ctx_train      = 8192
0.00.592.645 I llm_load_print_meta: n_embd           = 2048
0.00.592.645 I llm_load_print_meta: n_layer          = 18
0.00.592.682 I llm_load_print_meta: n_head           = 8
0.00.592.692 I llm_load_print_meta: n_head_kv        = 1
0.00.592.693 I llm_load_print_meta: n_rot            = 256
0.00.592.694 I llm_load_print_meta: n_swa            = 0
0.00.592.694 I llm_load_print_meta: n_embd_head_k    = 256
0.00.592.694 I llm_load_print_meta: n_embd_head_v    = 256
0.00.592.699 I llm_load_print_meta: n_gqa            = 8
0.00.592.705 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.592.710 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.592.712 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.592.713 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.592.714 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.592.714 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.592.715 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.592.720 I llm_load_print_meta: n_ff             = 16384
0.00.592.720 I llm_load_print_meta: n_expert         = 0
0.00.592.721 I llm_load_print_meta: n_expert_used    = 0
0.00.592.721 I llm_load_print_meta: causal attn      = 1
0.00.592.733 I llm_load_print_meta: pooling type     = 0
0.00.592.734 I llm_load_print_meta: rope type        = 2
0.00.592.734 I llm_load_print_meta: rope scaling     = linear
0.00.592.736 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.592.736 I llm_load_print_meta: freq_scale_train = 1
0.00.592.737 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.592.737 I llm_load_print_meta: rope_finetuned   = unknown
0.00.592.738 I llm_load_print_meta: ssm_d_conv       = 0
0.00.592.739 I llm_load_print_meta: ssm_d_inner      = 0
0.00.592.739 I llm_load_print_meta: ssm_d_state      = 0
0.00.592.739 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.592.740 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.592.741 I llm_load_print_meta: model type       = 2B
0.00.592.742 I llm_load_print_meta: model ftype      = Q8_0
0.00.592.743 I llm_load_print_meta: model params     = 2.51 B
0.00.592.744 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.592.744 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.592.746 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.592.746 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.592.746 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.592.747 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.592.747 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.592.748 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.592.755 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.592.756 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.592.757 I llm_load_print_meta: max token length = 93
0.00.592.946 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.691.088 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.691.100 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.691.101 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.691.102 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.691.102 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.691.103 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.696.958 I llama_new_context_with_model: n_ctx      = 8192
0.00.696.968 I llama_new_context_with_model: n_batch    = 2048
0.00.696.968 I llama_new_context_with_model: n_ubatch   = 512
0.00.696.969 I llama_new_context_with_model: flash_attn = 0
0.00.696.973 I llama_new_context_with_model: freq_base  = 10000.0
0.00.696.974 I llama_new_context_with_model: freq_scale = 1
0.00.727.179 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.727.221 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.727.331 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.728.771 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.728.778 I llama_new_context_with_model: graph nodes  = 601
0.00.728.778 I llama_new_context_with_model: graph splits = 1
0.00.728.794 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.346.278 I main: llama threadpool init, n_threads = 4
0.01.346.291 I 
0.01.346.385 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.346.389 I 
0.01.346.549 I sampler seed: 2302030166
0.01.346.560 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.346.564 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.346.565 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.346.565 I 
 maneuvled with an asterisk. [end of text]


0.04.743.017 I llama_perf_sampler_print:    sampling time =      12.38 ms /     9 runs   (    1.38 ms per token,   726.92 tokens per second)
0.04.743.029 I llama_perf_context_print:        load time =    1343.40 ms
0.04.743.031 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.04.743.033 I llama_perf_context_print:        eval time =    3374.41 ms /     8 runs   (  421.80 ms per token,     2.37 tokens per second)
0.04.743.034 I llama_perf_context_print:       total time =    3396.75 ms /     9 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.660 I build: 3826 (ea9c32be) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.867 I main: llama backend init
0.00.002.799 I main: load the model and apply lora adapter, if any
0.00.025.294 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.391 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.407 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.411 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.415 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.416 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.418 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.419 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.425 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.426 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.438 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.439 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.441 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.442 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.444 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.587 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.588 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.053 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.063 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.064 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.064 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.065 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.066 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.067 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.070 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.071 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.072 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.073 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.198.074 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.082 I llama_model_loader: - type  f32:   37 tensors
0.00.198.087 I llama_model_loader: - type q8_0:  127 tensors
0.00.501.163 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.529.621 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.530.645 I llm_load_vocab: special tokens cache size = 5
0.00.588.099 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.588.170 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.588.170 I llm_load_print_meta: arch             = gemma
0.00.588.172 I llm_load_print_meta: vocab type       = SPM
0.00.588.173 I llm_load_print_meta: n_vocab          = 256000
0.00.588.175 I llm_load_print_meta: n_merges         = 0
0.00.588.175 I llm_load_print_meta: vocab_only       = 0
0.00.588.176 I llm_load_print_meta: n_ctx_train      = 8192
0.00.588.176 I llm_load_print_meta: n_embd           = 2048
0.00.588.177 I llm_load_print_meta: n_layer          = 18
0.00.588.215 I llm_load_print_meta: n_head           = 8
0.00.588.221 I llm_load_print_meta: n_head_kv        = 1
0.00.588.222 I llm_load_print_meta: n_rot            = 256
0.00.588.222 I llm_load_print_meta: n_swa            = 0
0.00.588.223 I llm_load_print_meta: n_embd_head_k    = 256
0.00.588.223 I llm_load_print_meta: n_embd_head_v    = 256
0.00.588.257 I llm_load_print_meta: n_gqa            = 8
0.00.588.266 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.588.271 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.588.273 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.588.275 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.588.276 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.588.276 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.588.277 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.588.282 I llm_load_print_meta: n_ff             = 16384
0.00.588.282 I llm_load_print_meta: n_expert         = 0
0.00.588.283 I llm_load_print_meta: n_expert_used    = 0
0.00.588.288 I llm_load_print_meta: causal attn      = 1
0.00.588.288 I llm_load_print_meta: pooling type     = 0
0.00.588.288 I llm_load_print_meta: rope type        = 2
0.00.588.289 I llm_load_print_meta: rope scaling     = linear
0.00.588.291 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.588.291 I llm_load_print_meta: freq_scale_train = 1
0.00.588.292 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.588.292 I llm_load_print_meta: rope_finetuned   = unknown
0.00.588.301 I llm_load_print_meta: ssm_d_conv       = 0
0.00.588.302 I llm_load_print_meta: ssm_d_inner      = 0
0.00.588.302 I llm_load_print_meta: ssm_d_state      = 0
0.00.588.302 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.588.303 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.588.304 I llm_load_print_meta: model type       = 2B
0.00.588.305 I llm_load_print_meta: model ftype      = Q8_0
0.00.588.306 I llm_load_print_meta: model params     = 2.51 B
0.00.588.307 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.588.308 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.588.309 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.588.309 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.588.317 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.588.325 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.588.325 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.588.326 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.588.333 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.588.334 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.588.335 I llm_load_print_meta: max token length = 93
0.00.588.533 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.682.052 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.687.910 I llama_new_context_with_model: n_ctx      = 8192
0.00.687.919 I llama_new_context_with_model: n_batch    = 2048
0.00.687.919 I llama_new_context_with_model: n_ubatch   = 512
0.00.687.920 I llama_new_context_with_model: flash_attn = 0
0.00.687.923 I llama_new_context_with_model: freq_base  = 10000.0
0.00.687.924 I llama_new_context_with_model: freq_scale = 1
0.00.718.498 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.718.541 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.718.655 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.720.040 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.720.048 I llama_new_context_with_model: graph nodes  = 601
0.00.720.049 I llama_new_context_with_model: graph splits = 1
0.00.720.067 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.332.413 I main: llama threadpool init, n_threads = 4
0.01.332.426 I 
0.01.332.519 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.332.525 I 
0.01.332.717 I sampler seed: 2350220492
0.01.332.730 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.332.738 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.332.739 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.332.739 I 
 increasities of 2017 and 2018.

The data show that there was a significant increase in the number of women participating in

0.14.752.433 I llama_perf_sampler_print:    sampling time =      49.06 ms /    33 runs   (    1.49 ms per token,   672.62 tokens per second)
0.14.752.448 I llama_perf_context_print:        load time =    1329.52 ms
0.14.752.450 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.752.452 I llama_perf_context_print:        eval time =   13338.23 ms /    32 runs   (  416.82 ms per token,     2.40 tokens per second)
0.14.752.453 I llama_perf_context_print:       total time =   13420.03 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.659 I build: 3826 (ea9c32be) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.857 I main: llama backend init
0.00.002.797 I main: load the model and apply lora adapter, if any
0.00.024.838 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.030 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.119 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.130 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.132 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.135 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.139 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.140 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.141 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.141 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.142 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.149 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.150 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.151 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.152 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.153 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.246 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.584 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.901 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.909 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.910 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.911 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.912 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.913 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.913 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.918 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.918 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.920 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.920 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.198.921 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.930 I llama_model_loader: - type  f32:   37 tensors
0.00.198.934 I llama_model_loader: - type q8_0:  127 tensors
0.00.505.332 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.534.939 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.535.981 I llm_load_vocab: special tokens cache size = 5
0.00.593.491 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.593.556 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.593.556 I llm_load_print_meta: arch             = gemma
0.00.593.557 I llm_load_print_meta: vocab type       = SPM
0.00.593.558 I llm_load_print_meta: n_vocab          = 256000
0.00.593.560 I llm_load_print_meta: n_merges         = 0
0.00.593.561 I llm_load_print_meta: vocab_only       = 0
0.00.593.561 I llm_load_print_meta: n_ctx_train      = 8192
0.00.593.562 I llm_load_print_meta: n_embd           = 2048
0.00.593.562 I llm_load_print_meta: n_layer          = 18
0.00.593.596 I llm_load_print_meta: n_head           = 8
0.00.593.602 I llm_load_print_meta: n_head_kv        = 1
0.00.593.603 I llm_load_print_meta: n_rot            = 256
0.00.593.603 I llm_load_print_meta: n_swa            = 0
0.00.593.603 I llm_load_print_meta: n_embd_head_k    = 256
0.00.593.604 I llm_load_print_meta: n_embd_head_v    = 256
0.00.593.609 I llm_load_print_meta: n_gqa            = 8
0.00.593.613 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.593.618 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.593.619 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.593.620 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.593.621 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.593.621 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.593.622 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.593.626 I llm_load_print_meta: n_ff             = 16384
0.00.593.627 I llm_load_print_meta: n_expert         = 0
0.00.593.627 I llm_load_print_meta: n_expert_used    = 0
0.00.593.628 I llm_load_print_meta: causal attn      = 1
0.00.593.628 I llm_load_print_meta: pooling type     = 0
0.00.593.628 I llm_load_print_meta: rope type        = 2
0.00.593.629 I llm_load_print_meta: rope scaling     = linear
0.00.593.630 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.593.631 I llm_load_print_meta: freq_scale_train = 1
0.00.593.631 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.593.632 I llm_load_print_meta: rope_finetuned   = unknown
0.00.593.632 I llm_load_print_meta: ssm_d_conv       = 0
0.00.593.632 I llm_load_print_meta: ssm_d_inner      = 0
0.00.593.632 I llm_load_print_meta: ssm_d_state      = 0
0.00.593.633 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.593.633 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.593.634 I llm_load_print_meta: model type       = 2B
0.00.593.635 I llm_load_print_meta: model ftype      = Q8_0
0.00.593.636 I llm_load_print_meta: model params     = 2.51 B
0.00.593.637 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.593.637 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.593.637 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.593.638 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.593.638 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.593.638 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.593.639 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.593.639 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.593.645 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.593.647 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.593.648 I llm_load_print_meta: max token length = 93
0.00.593.827 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.671.471 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.671.484 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.671.485 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.671.485 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.671.486 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.671.487 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.677.286 I llama_new_context_with_model: n_ctx      = 8192
0.00.677.295 I llama_new_context_with_model: n_batch    = 2048
0.00.677.295 I llama_new_context_with_model: n_ubatch   = 512
0.00.677.296 I llama_new_context_with_model: flash_attn = 0
0.00.677.300 I llama_new_context_with_model: freq_base  = 10000.0
0.00.677.300 I llama_new_context_with_model: freq_scale = 1
0.00.707.674 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.707.716 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.707.832 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.709.229 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.709.235 I llama_new_context_with_model: graph nodes  = 601
0.00.709.236 I llama_new_context_with_model: graph splits = 1
0.00.709.250 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.387.249 I main: llama threadpool init, n_threads = 4
0.01.387.263 I 
0.01.387.374 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.387.378 I 
0.01.387.546 I sampler seed: 1246875563
0.01.387.557 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.387.562 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.387.563 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.387.572 I 
 increasities?

I am unable to answer this question as it contains sexually suggestive and inappropriate language. I am not allowed to provide responses that are sexually suggestive or

0.15.056.810 I llama_perf_sampler_print:    sampling time =      49.41 ms /    33 runs   (    1.50 ms per token,   667.81 tokens per second)
0.15.056.813 I llama_perf_context_print:        load time =    1384.36 ms
0.15.056.815 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.056.816 I llama_perf_context_print:        eval time =   13586.72 ms /    32 runs   (  424.59 ms per token,     2.36 tokens per second)
0.15.056.817 I llama_perf_context_print:       total time =   13669.57 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.714 I build: 3826 (ea9c32be) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.911 I main: llama backend init
0.00.002.866 I main: load the model and apply lora adapter, if any
0.00.025.008 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.209 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.303 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.315 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.317 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.321 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.325 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.325 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.326 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.327 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.328 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.335 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.337 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.337 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.339 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.340 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.998 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.226 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.633 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.641 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.642 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.643 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.644 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.645 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.646 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.649 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.650 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.651 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.652 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.198.653 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.661 I llama_model_loader: - type  f32:   37 tensors
0.00.198.666 I llama_model_loader: - type q8_0:  127 tensors
0.00.497.658 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.528.344 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.529.428 I llm_load_vocab: special tokens cache size = 5
0.00.586.660 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.586.722 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.586.723 I llm_load_print_meta: arch             = gemma
0.00.586.724 I llm_load_print_meta: vocab type       = SPM
0.00.586.725 I llm_load_print_meta: n_vocab          = 256000
0.00.586.727 I llm_load_print_meta: n_merges         = 0
0.00.586.728 I llm_load_print_meta: vocab_only       = 0
0.00.586.728 I llm_load_print_meta: n_ctx_train      = 8192
0.00.586.729 I llm_load_print_meta: n_embd           = 2048
0.00.586.729 I llm_load_print_meta: n_layer          = 18
0.00.586.763 I llm_load_print_meta: n_head           = 8
0.00.586.771 I llm_load_print_meta: n_head_kv        = 1
0.00.586.772 I llm_load_print_meta: n_rot            = 256
0.00.586.772 I llm_load_print_meta: n_swa            = 0
0.00.586.772 I llm_load_print_meta: n_embd_head_k    = 256
0.00.586.773 I llm_load_print_meta: n_embd_head_v    = 256
0.00.586.777 I llm_load_print_meta: n_gqa            = 8
0.00.586.782 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.586.787 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.586.788 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.586.815 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.586.816 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.586.817 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.586.817 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.586.823 I llm_load_print_meta: n_ff             = 16384
0.00.586.824 I llm_load_print_meta: n_expert         = 0
0.00.586.824 I llm_load_print_meta: n_expert_used    = 0
0.00.586.834 I llm_load_print_meta: causal attn      = 1
0.00.586.834 I llm_load_print_meta: pooling type     = 0
0.00.586.836 I llm_load_print_meta: rope type        = 2
0.00.586.837 I llm_load_print_meta: rope scaling     = linear
0.00.586.838 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.586.838 I llm_load_print_meta: freq_scale_train = 1
0.00.586.839 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.586.839 I llm_load_print_meta: rope_finetuned   = unknown
0.00.586.839 I llm_load_print_meta: ssm_d_conv       = 0
0.00.586.844 I llm_load_print_meta: ssm_d_inner      = 0
0.00.586.844 I llm_load_print_meta: ssm_d_state      = 0
0.00.586.845 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.586.845 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.586.845 I llm_load_print_meta: model type       = 2B
0.00.586.847 I llm_load_print_meta: model ftype      = Q8_0
0.00.586.847 I llm_load_print_meta: model params     = 2.51 B
0.00.586.848 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.586.856 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.586.859 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.586.860 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.586.860 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.586.860 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.586.861 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.586.861 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.586.868 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.586.870 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.586.870 I llm_load_print_meta: max token length = 93
0.00.587.052 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.658.232 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.658.243 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.664.074 I llama_new_context_with_model: n_ctx      = 8192
0.00.664.083 I llama_new_context_with_model: n_batch    = 2048
0.00.664.083 I llama_new_context_with_model: n_ubatch   = 512
0.00.664.084 I llama_new_context_with_model: flash_attn = 0
0.00.664.088 I llama_new_context_with_model: freq_base  = 10000.0
0.00.664.089 I llama_new_context_with_model: freq_scale = 1
0.00.696.367 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.696.410 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.696.525 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.697.996 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.698.004 I llama_new_context_with_model: graph nodes  = 601
0.00.698.004 I llama_new_context_with_model: graph splits = 1
0.00.698.021 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.313.334 I main: llama threadpool init, n_threads = 4
0.01.313.347 I 
0.01.313.437 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.313.441 I 
0.01.313.603 I sampler seed: 4048544170
0.01.313.614 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.313.620 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.313.620 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.313.622 I 
 increasities on the Internet can be harmful and inappropriate.

**True or False?**

The provided statement is true. [end of text]


0.12.405.781 I llama_perf_sampler_print:    sampling time =      39.86 ms /    27 runs   (    1.48 ms per token,   677.42 tokens per second)
0.12.405.784 I llama_perf_context_print:        load time =    1310.37 ms
0.12.405.785 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.405.787 I llama_perf_context_print:        eval time =   11026.25 ms /    26 runs   (  424.09 ms per token,     2.36 tokens per second)
0.12.405.788 I llama_perf_context_print:       total time =   11092.46 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m58.459s
user	2m59.163s
sys	0m9.683s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3826 (ea9c32be)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199327.85 ms
main:    total time = 199327.85 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.647 I build: 3826 (ea9c32be) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.854 I main: llama backend init
0.00.002.784 I main: load the model and apply lora adapter, if any
0.00.024.502 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.700 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.790 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.801 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.802 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.806 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.807 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.808 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.809 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.810 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.810 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.816 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.817 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.819 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.819 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.820 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.223 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.381 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.808 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.816 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.817 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.818 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.819 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.820 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.823 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.826 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.827 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.829 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.197.830 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.197.831 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.197.839 I llama_model_loader: - type  f32:   37 tensors
0.00.197.854 I llama_model_loader: - type q4_K:  108 tensors
0.00.197.859 I llama_model_loader: - type q6_K:   19 tensors
0.00.492.214 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.522.433 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.523.418 I llm_load_vocab: special tokens cache size = 5
0.00.581.019 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.581.082 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.581.084 I llm_load_print_meta: arch             = gemma
0.00.581.084 I llm_load_print_meta: vocab type       = SPM
0.00.581.085 I llm_load_print_meta: n_vocab          = 256000
0.00.581.093 I llm_load_print_meta: n_merges         = 0
0.00.581.093 I llm_load_print_meta: vocab_only       = 0
0.00.581.094 I llm_load_print_meta: n_ctx_train      = 8192
0.00.581.094 I llm_load_print_meta: n_embd           = 2048
0.00.581.095 I llm_load_print_meta: n_layer          = 18
0.00.581.130 I llm_load_print_meta: n_head           = 8
0.00.581.140 I llm_load_print_meta: n_head_kv        = 1
0.00.581.142 I llm_load_print_meta: n_rot            = 256
0.00.581.142 I llm_load_print_meta: n_swa            = 0
0.00.581.143 I llm_load_print_meta: n_embd_head_k    = 256
0.00.581.143 I llm_load_print_meta: n_embd_head_v    = 256
0.00.581.148 I llm_load_print_meta: n_gqa            = 8
0.00.581.153 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.581.158 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.581.160 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.581.161 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.581.161 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.581.162 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.581.162 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.581.168 I llm_load_print_meta: n_ff             = 16384
0.00.581.168 I llm_load_print_meta: n_expert         = 0
0.00.581.168 I llm_load_print_meta: n_expert_used    = 0
0.00.581.180 I llm_load_print_meta: causal attn      = 1
0.00.581.181 I llm_load_print_meta: pooling type     = 0
0.00.581.181 I llm_load_print_meta: rope type        = 2
0.00.581.182 I llm_load_print_meta: rope scaling     = linear
0.00.581.183 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.581.184 I llm_load_print_meta: freq_scale_train = 1
0.00.581.184 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.581.185 I llm_load_print_meta: rope_finetuned   = unknown
0.00.581.198 I llm_load_print_meta: ssm_d_conv       = 0
0.00.581.198 I llm_load_print_meta: ssm_d_inner      = 0
0.00.581.199 I llm_load_print_meta: ssm_d_state      = 0
0.00.581.199 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.581.202 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.581.203 I llm_load_print_meta: model type       = 2B
0.00.581.204 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.581.205 I llm_load_print_meta: model params     = 2.51 B
0.00.581.205 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.581.206 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.581.207 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.581.207 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.581.207 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.581.208 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.581.208 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.581.208 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.581.214 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.581.218 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.581.218 I llm_load_print_meta: max token length = 93
0.00.581.395 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.640.280 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.640.292 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.640.294 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.640.294 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.640.295 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.640.296 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.645.922 I llama_new_context_with_model: n_ctx      = 8192
0.00.645.929 I llama_new_context_with_model: n_batch    = 2048
0.00.645.930 I llama_new_context_with_model: n_ubatch   = 512
0.00.645.931 I llama_new_context_with_model: flash_attn = 0
0.00.645.933 I llama_new_context_with_model: freq_base  = 10000.0
0.00.645.934 I llama_new_context_with_model: freq_scale = 1
0.00.675.380 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.675.420 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.675.531 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.676.907 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.676.914 I llama_new_context_with_model: graph nodes  = 601
0.00.676.914 I llama_new_context_with_model: graph splits = 1
0.00.676.931 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.257.747 I main: llama threadpool init, n_threads = 4
0.01.257.759 I 
0.01.257.854 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.257.857 I 
0.01.258.015 I sampler seed: 2924065474
0.01.258.026 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.258.031 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.258.032 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.258.032 I 
 strick with her team to take down the corrupt corporation, but the corporation's defenses are formidable, and they ultimately defeat them.

**Themes:**

*

0.12.299.984 I llama_perf_sampler_print:    sampling time =      49.25 ms /    33 runs   (    1.49 ms per token,   670.12 tokens per second)
0.12.299.987 I llama_perf_context_print:        load time =    1254.87 ms
0.12.300.007 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.300.017 I llama_perf_context_print:        eval time =   10959.26 ms /    32 runs   (  342.48 ms per token,     2.92 tokens per second)
0.12.300.019 I llama_perf_context_print:       total time =   11042.25 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3826 (ea9c32be)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200030.11 ms
main:    total time = 200030.11 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.679 I build: 3826 (ea9c32be) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.896 I main: llama backend init
0.00.002.844 I main: load the model and apply lora adapter, if any
0.00.024.973 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.074 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.091 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.093 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.097 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.101 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.102 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.103 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.103 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.104 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.111 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.113 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.114 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.116 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.116 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.420 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.558 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.063 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.073 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.074 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.075 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.076 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.077 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.078 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.081 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.082 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.092 I llama_model_loader: - type  f32:   37 tensors
0.00.198.096 I llama_model_loader: - type q4_K:  108 tensors
0.00.198.098 I llama_model_loader: - type q6_K:   19 tensors
0.00.512.660 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.545.159 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.546.270 I llm_load_vocab: special tokens cache size = 5
0.00.603.802 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.603.863 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.603.864 I llm_load_print_meta: arch             = gemma
0.00.603.865 I llm_load_print_meta: vocab type       = SPM
0.00.603.866 I llm_load_print_meta: n_vocab          = 256000
0.00.603.868 I llm_load_print_meta: n_merges         = 0
0.00.603.869 I llm_load_print_meta: vocab_only       = 0
0.00.603.869 I llm_load_print_meta: n_ctx_train      = 8192
0.00.603.869 I llm_load_print_meta: n_embd           = 2048
0.00.603.870 I llm_load_print_meta: n_layer          = 18
0.00.603.907 I llm_load_print_meta: n_head           = 8
0.00.603.913 I llm_load_print_meta: n_head_kv        = 1
0.00.603.914 I llm_load_print_meta: n_rot            = 256
0.00.603.914 I llm_load_print_meta: n_swa            = 0
0.00.603.915 I llm_load_print_meta: n_embd_head_k    = 256
0.00.603.915 I llm_load_print_meta: n_embd_head_v    = 256
0.00.603.920 I llm_load_print_meta: n_gqa            = 8
0.00.603.924 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.603.930 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.603.930 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.603.932 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.603.932 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.603.933 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.603.933 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.603.938 I llm_load_print_meta: n_ff             = 16384
0.00.603.938 I llm_load_print_meta: n_expert         = 0
0.00.603.938 I llm_load_print_meta: n_expert_used    = 0
0.00.603.939 I llm_load_print_meta: causal attn      = 1
0.00.603.939 I llm_load_print_meta: pooling type     = 0
0.00.603.940 I llm_load_print_meta: rope type        = 2
0.00.603.940 I llm_load_print_meta: rope scaling     = linear
0.00.603.942 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.603.942 I llm_load_print_meta: freq_scale_train = 1
0.00.603.943 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.603.943 I llm_load_print_meta: rope_finetuned   = unknown
0.00.603.943 I llm_load_print_meta: ssm_d_conv       = 0
0.00.603.944 I llm_load_print_meta: ssm_d_inner      = 0
0.00.603.944 I llm_load_print_meta: ssm_d_state      = 0
0.00.603.944 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.603.945 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.603.945 I llm_load_print_meta: model type       = 2B
0.00.603.947 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.603.947 I llm_load_print_meta: model params     = 2.51 B
0.00.603.948 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.603.948 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.603.949 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.603.950 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.603.950 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.603.950 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.603.951 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.603.952 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.603.958 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.603.959 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.603.960 I llm_load_print_meta: max token length = 93
0.00.604.149 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.661.931 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.667.670 I llama_new_context_with_model: n_ctx      = 8192
0.00.667.679 I llama_new_context_with_model: n_batch    = 2048
0.00.667.680 I llama_new_context_with_model: n_ubatch   = 512
0.00.667.680 I llama_new_context_with_model: flash_attn = 0
0.00.667.684 I llama_new_context_with_model: freq_base  = 10000.0
0.00.667.685 I llama_new_context_with_model: freq_scale = 1
0.00.701.043 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.701.088 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.701.201 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.702.591 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.702.597 I llama_new_context_with_model: graph nodes  = 601
0.00.702.597 I llama_new_context_with_model: graph splits = 1
0.00.702.615 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.282.784 I main: llama threadpool init, n_threads = 4
0.01.282.796 I 
0.01.282.886 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.282.890 I 
0.01.283.057 I sampler seed: 3939724744
0.01.283.069 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.283.076 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.283.076 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.283.077 I 
 seconary lymphoid hyperplasia and leukemia

**Primary lymphoid hyperplasia**

* Lymphocytes infiltrating lymphoid tissue
* Increased infiltration of plasma cells and macrophages
* Production

0.12.213.599 I llama_perf_sampler_print:    sampling time =      49.41 ms /    33 runs   (    1.50 ms per token,   667.88 tokens per second)
0.12.213.603 I llama_perf_context_print:        load time =    1279.83 ms
0.12.213.614 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.213.616 I llama_perf_context_print:        eval time =   10847.27 ms /    32 runs   (  338.98 ms per token,     2.95 tokens per second)
0.12.213.618 I llama_perf_context_print:       total time =   10930.83 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m6.780s
user	50m24.675s
sys	0m6.393s
