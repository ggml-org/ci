+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.632 I build: 3883 (ae56ec25) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.844 I main: llama backend init
0.00.001.936 I main: load the model and apply lora adapter, if any
0.00.022.509 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.599 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.607 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.613 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.614 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.620 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.623 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.624 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.626 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.626 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.627 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.633 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.635 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.636 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.637 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.638 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.851 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.674 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.519 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.526 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.526 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.527 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.527 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.529 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.529 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.532 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.532 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.533 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.533 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.534 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.539 I llama_model_loader: - type  f32:   37 tensors
0.00.134.542 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.366 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.222.528 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.223.324 I llm_load_vocab: special tokens cache size = 5
0.00.244.790 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.244.805 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.244.805 I llm_load_print_meta: arch             = gemma
0.00.244.806 I llm_load_print_meta: vocab type       = SPM
0.00.244.806 I llm_load_print_meta: n_vocab          = 256000
0.00.244.807 I llm_load_print_meta: n_merges         = 0
0.00.244.807 I llm_load_print_meta: vocab_only       = 0
0.00.244.807 I llm_load_print_meta: n_ctx_train      = 8192
0.00.244.808 I llm_load_print_meta: n_embd           = 2048
0.00.244.808 I llm_load_print_meta: n_layer          = 18
0.00.244.821 I llm_load_print_meta: n_head           = 8
0.00.244.822 I llm_load_print_meta: n_head_kv        = 1
0.00.244.822 I llm_load_print_meta: n_rot            = 256
0.00.244.823 I llm_load_print_meta: n_swa            = 0
0.00.244.823 I llm_load_print_meta: n_embd_head_k    = 256
0.00.244.823 I llm_load_print_meta: n_embd_head_v    = 256
0.00.244.824 I llm_load_print_meta: n_gqa            = 8
0.00.244.825 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.244.826 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.244.827 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.244.829 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.244.830 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.244.830 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.244.830 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.244.831 I llm_load_print_meta: n_ff             = 16384
0.00.244.832 I llm_load_print_meta: n_expert         = 0
0.00.244.832 I llm_load_print_meta: n_expert_used    = 0
0.00.244.832 I llm_load_print_meta: causal attn      = 1
0.00.244.832 I llm_load_print_meta: pooling type     = 0
0.00.244.833 I llm_load_print_meta: rope type        = 2
0.00.244.833 I llm_load_print_meta: rope scaling     = linear
0.00.244.834 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.244.835 I llm_load_print_meta: freq_scale_train = 1
0.00.244.835 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.244.836 I llm_load_print_meta: rope_finetuned   = unknown
0.00.244.836 I llm_load_print_meta: ssm_d_conv       = 0
0.00.244.836 I llm_load_print_meta: ssm_d_inner      = 0
0.00.244.836 I llm_load_print_meta: ssm_d_state      = 0
0.00.244.837 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.244.837 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.244.837 I llm_load_print_meta: model type       = 2B
0.00.244.838 I llm_load_print_meta: model ftype      = Q8_0
0.00.244.839 I llm_load_print_meta: model params     = 2.51 B
0.00.244.840 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.244.840 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.244.841 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.244.841 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.244.841 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.244.842 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.244.842 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.244.843 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.244.843 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.244.844 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.244.844 I llm_load_print_meta: max token length = 93
0.00.244.870 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.342.622 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.342.630 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.342.631 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.342.632 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.342.632 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.342.633 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.347.722 I llama_new_context_with_model: n_ctx      = 8192
0.00.347.728 I llama_new_context_with_model: n_batch    = 2048
0.00.347.728 I llama_new_context_with_model: n_ubatch   = 512
0.00.347.729 I llama_new_context_with_model: flash_attn = 0
0.00.347.731 I llama_new_context_with_model: freq_base  = 10000.0
0.00.347.732 I llama_new_context_with_model: freq_scale = 1
0.00.378.560 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.378.574 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.378.667 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.526 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.379.534 I llama_new_context_with_model: graph nodes  = 601
0.00.379.535 I llama_new_context_with_model: graph splits = 1
0.00.379.536 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.473.538 I main: llama threadpool init, n_threads = 4
0.00.473.550 I 
0.00.473.627 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.473.631 I 
0.00.473.667 I sampler seed: 3396342294
0.00.473.676 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.678 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.473.679 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.679 I 
 increasements and expansions. [end of text]


0.00.911.799 I llama_perf_sampler_print:    sampling time =       1.04 ms /     7 runs   (    0.15 ms per token,  6743.74 tokens per second)
0.00.911.802 I llama_perf_context_print:        load time =     471.53 ms
0.00.911.803 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.911.805 I llama_perf_context_print:        eval time =     433.89 ms /     6 runs   (   72.32 ms per token,    13.83 tokens per second)
0.00.911.806 I llama_perf_context_print:       total time =     438.27 ms /     7 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.616 I build: 3883 (ae56ec25) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.848 I main: llama backend init
0.00.002.052 I main: load the model and apply lora adapter, if any
0.00.022.566 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.586 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.594 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.594 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.599 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.600 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.601 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.602 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.602 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.604 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.609 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.610 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.610 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.612 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.613 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.281 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.099 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.952 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.958 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.959 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.960 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.960 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.961 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.962 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.965 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.965 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.966 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.966 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.967 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.971 I llama_model_loader: - type  f32:   37 tensors
0.00.133.973 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.981 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.218.326 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.219.119 I llm_load_vocab: special tokens cache size = 5
0.00.240.305 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.240.321 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.240.322 I llm_load_print_meta: arch             = gemma
0.00.240.322 I llm_load_print_meta: vocab type       = SPM
0.00.240.323 I llm_load_print_meta: n_vocab          = 256000
0.00.240.324 I llm_load_print_meta: n_merges         = 0
0.00.240.324 I llm_load_print_meta: vocab_only       = 0
0.00.240.324 I llm_load_print_meta: n_ctx_train      = 8192
0.00.240.325 I llm_load_print_meta: n_embd           = 2048
0.00.240.325 I llm_load_print_meta: n_layer          = 18
0.00.240.338 I llm_load_print_meta: n_head           = 8
0.00.240.339 I llm_load_print_meta: n_head_kv        = 1
0.00.240.339 I llm_load_print_meta: n_rot            = 256
0.00.240.339 I llm_load_print_meta: n_swa            = 0
0.00.240.340 I llm_load_print_meta: n_embd_head_k    = 256
0.00.240.340 I llm_load_print_meta: n_embd_head_v    = 256
0.00.240.341 I llm_load_print_meta: n_gqa            = 8
0.00.240.341 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.240.342 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.240.343 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.240.345 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.240.345 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.240.345 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.240.346 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.240.346 I llm_load_print_meta: n_ff             = 16384
0.00.240.347 I llm_load_print_meta: n_expert         = 0
0.00.240.347 I llm_load_print_meta: n_expert_used    = 0
0.00.240.347 I llm_load_print_meta: causal attn      = 1
0.00.240.348 I llm_load_print_meta: pooling type     = 0
0.00.240.348 I llm_load_print_meta: rope type        = 2
0.00.240.348 I llm_load_print_meta: rope scaling     = linear
0.00.240.349 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.240.350 I llm_load_print_meta: freq_scale_train = 1
0.00.240.350 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.240.350 I llm_load_print_meta: rope_finetuned   = unknown
0.00.240.351 I llm_load_print_meta: ssm_d_conv       = 0
0.00.240.351 I llm_load_print_meta: ssm_d_inner      = 0
0.00.240.351 I llm_load_print_meta: ssm_d_state      = 0
0.00.240.352 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.240.352 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.240.353 I llm_load_print_meta: model type       = 2B
0.00.240.353 I llm_load_print_meta: model ftype      = Q8_0
0.00.240.354 I llm_load_print_meta: model params     = 2.51 B
0.00.240.355 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.240.355 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.240.355 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.240.356 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.240.356 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.240.356 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.240.357 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.240.357 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.240.357 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.240.358 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.240.358 I llm_load_print_meta: max token length = 93
0.00.240.388 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.332.959 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.338.225 I llama_new_context_with_model: n_ctx      = 8192
0.00.338.233 I llama_new_context_with_model: n_batch    = 2048
0.00.338.234 I llama_new_context_with_model: n_ubatch   = 512
0.00.338.234 I llama_new_context_with_model: flash_attn = 0
0.00.338.238 I llama_new_context_with_model: freq_base  = 10000.0
0.00.338.238 I llama_new_context_with_model: freq_scale = 1
0.00.369.025 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.369.042 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.369.132 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.369.991 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.369.998 I llama_new_context_with_model: graph nodes  = 601
0.00.369.999 I llama_new_context_with_model: graph splits = 1
0.00.370.000 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.020 I main: llama threadpool init, n_threads = 4
0.00.460.034 I 
0.00.460.118 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.460.122 I 
0.00.460.170 I sampler seed: 2098697018
0.00.460.179 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.182 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.460.183 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.183 I 
 increasities, but in a modern context. [end of text]


0.01.159.095 I llama_perf_sampler_print:    sampling time =       1.71 ms /    11 runs   (    0.16 ms per token,  6440.28 tokens per second)
0.01.159.098 I llama_perf_context_print:        load time =     457.89 ms
0.01.159.100 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.159.103 I llama_perf_context_print:        eval time =     692.46 ms /    10 runs   (   69.25 ms per token,    14.44 tokens per second)
0.01.159.104 I llama_perf_context_print:       total time =     699.08 ms /    11 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.557 I build: 3883 (ae56ec25) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.782 I main: llama backend init
0.00.001.923 I main: load the model and apply lora adapter, if any
0.00.022.281 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.334 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.349 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.356 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.357 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.362 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.363 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.364 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.365 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.366 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.367 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.373 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.374 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.375 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.376 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.378 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.622 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.243 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.091 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.097 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.098 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.098 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.099 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.100 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.101 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.103 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.104 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.105 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.105 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.106 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.110 I llama_model_loader: - type  f32:   37 tensors
0.00.133.113 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.027 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.229.568 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.230.361 I llm_load_vocab: special tokens cache size = 5
0.00.251.682 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.251.696 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.251.697 I llm_load_print_meta: arch             = gemma
0.00.251.698 I llm_load_print_meta: vocab type       = SPM
0.00.251.699 I llm_load_print_meta: n_vocab          = 256000
0.00.251.699 I llm_load_print_meta: n_merges         = 0
0.00.251.699 I llm_load_print_meta: vocab_only       = 0
0.00.251.700 I llm_load_print_meta: n_ctx_train      = 8192
0.00.251.700 I llm_load_print_meta: n_embd           = 2048
0.00.251.700 I llm_load_print_meta: n_layer          = 18
0.00.251.715 I llm_load_print_meta: n_head           = 8
0.00.251.716 I llm_load_print_meta: n_head_kv        = 1
0.00.251.716 I llm_load_print_meta: n_rot            = 256
0.00.251.716 I llm_load_print_meta: n_swa            = 0
0.00.251.716 I llm_load_print_meta: n_embd_head_k    = 256
0.00.251.716 I llm_load_print_meta: n_embd_head_v    = 256
0.00.251.717 I llm_load_print_meta: n_gqa            = 8
0.00.251.718 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.251.719 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.251.720 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.251.722 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.251.722 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.251.722 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.251.723 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.251.724 I llm_load_print_meta: n_ff             = 16384
0.00.251.724 I llm_load_print_meta: n_expert         = 0
0.00.251.724 I llm_load_print_meta: n_expert_used    = 0
0.00.251.725 I llm_load_print_meta: causal attn      = 1
0.00.251.725 I llm_load_print_meta: pooling type     = 0
0.00.251.725 I llm_load_print_meta: rope type        = 2
0.00.251.725 I llm_load_print_meta: rope scaling     = linear
0.00.251.727 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.251.727 I llm_load_print_meta: freq_scale_train = 1
0.00.251.727 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.251.728 I llm_load_print_meta: rope_finetuned   = unknown
0.00.251.728 I llm_load_print_meta: ssm_d_conv       = 0
0.00.251.728 I llm_load_print_meta: ssm_d_inner      = 0
0.00.251.729 I llm_load_print_meta: ssm_d_state      = 0
0.00.251.729 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.251.729 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.251.730 I llm_load_print_meta: model type       = 2B
0.00.251.730 I llm_load_print_meta: model ftype      = Q8_0
0.00.251.731 I llm_load_print_meta: model params     = 2.51 B
0.00.251.732 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.251.732 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.251.733 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.251.733 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.251.733 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.251.733 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.251.734 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.251.735 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.251.735 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.251.736 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.251.737 I llm_load_print_meta: max token length = 93
0.00.251.767 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.326.992 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.327.002 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.327.003 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.327.003 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.327.004 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.327.004 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.332.140 I llama_new_context_with_model: n_ctx      = 8192
0.00.332.150 I llama_new_context_with_model: n_batch    = 2048
0.00.332.151 I llama_new_context_with_model: n_ubatch   = 512
0.00.332.152 I llama_new_context_with_model: flash_attn = 0
0.00.332.155 I llama_new_context_with_model: freq_base  = 10000.0
0.00.332.156 I llama_new_context_with_model: freq_scale = 1
0.00.364.621 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.364.637 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.364.742 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.633 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.365.642 I llama_new_context_with_model: graph nodes  = 601
0.00.365.643 I llama_new_context_with_model: graph splits = 1
0.00.365.645 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.402 I main: llama threadpool init, n_threads = 4
0.00.463.413 I 
0.00.463.501 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.463.505 I 
0.00.463.555 I sampler seed: 266570283
0.00.463.565 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.463.568 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.463.569 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.463.569 I 
 increably.

I'm not sure what you're talking about. Can you please provide more context? [end of text]


0.02.230.816 I llama_perf_sampler_print:    sampling time =       4.11 ms /    25 runs   (    0.16 ms per token,  6081.25 tokens per second)
0.02.230.818 I llama_perf_context_print:        load time =     461.40 ms
0.02.230.819 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.230.821 I llama_perf_context_print:        eval time =    1753.02 ms /    24 runs   (   73.04 ms per token,    13.69 tokens per second)
0.02.230.822 I llama_perf_context_print:       total time =    1767.42 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.598 I build: 3883 (ae56ec25) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.808 I main: llama backend init
0.00.001.954 I main: load the model and apply lora adapter, if any
0.00.022.201 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.250 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.257 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.263 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.267 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.272 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.273 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.274 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.275 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.276 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.276 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.281 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.282 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.282 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.283 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.283 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.830 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.388 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.209 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.216 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.216 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.217 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.218 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.219 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.219 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.222 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.223 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.223 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.224 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.224 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.228 I llama_model_loader: - type  f32:   37 tensors
0.00.133.231 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.292 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.214.380 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.215.168 I llm_load_vocab: special tokens cache size = 5
0.00.236.624 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.236.638 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.236.639 I llm_load_print_meta: arch             = gemma
0.00.236.639 I llm_load_print_meta: vocab type       = SPM
0.00.236.640 I llm_load_print_meta: n_vocab          = 256000
0.00.236.640 I llm_load_print_meta: n_merges         = 0
0.00.236.641 I llm_load_print_meta: vocab_only       = 0
0.00.236.641 I llm_load_print_meta: n_ctx_train      = 8192
0.00.236.642 I llm_load_print_meta: n_embd           = 2048
0.00.236.642 I llm_load_print_meta: n_layer          = 18
0.00.236.655 I llm_load_print_meta: n_head           = 8
0.00.236.656 I llm_load_print_meta: n_head_kv        = 1
0.00.236.657 I llm_load_print_meta: n_rot            = 256
0.00.236.657 I llm_load_print_meta: n_swa            = 0
0.00.236.657 I llm_load_print_meta: n_embd_head_k    = 256
0.00.236.657 I llm_load_print_meta: n_embd_head_v    = 256
0.00.236.658 I llm_load_print_meta: n_gqa            = 8
0.00.236.659 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.236.660 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.236.661 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.236.663 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.236.663 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.236.664 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.236.666 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.236.667 I llm_load_print_meta: n_ff             = 16384
0.00.236.667 I llm_load_print_meta: n_expert         = 0
0.00.236.668 I llm_load_print_meta: n_expert_used    = 0
0.00.236.669 I llm_load_print_meta: causal attn      = 1
0.00.236.669 I llm_load_print_meta: pooling type     = 0
0.00.236.670 I llm_load_print_meta: rope type        = 2
0.00.236.670 I llm_load_print_meta: rope scaling     = linear
0.00.236.672 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.236.672 I llm_load_print_meta: freq_scale_train = 1
0.00.236.673 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.236.673 I llm_load_print_meta: rope_finetuned   = unknown
0.00.236.674 I llm_load_print_meta: ssm_d_conv       = 0
0.00.236.674 I llm_load_print_meta: ssm_d_inner      = 0
0.00.236.674 I llm_load_print_meta: ssm_d_state      = 0
0.00.236.674 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.236.675 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.236.676 I llm_load_print_meta: model type       = 2B
0.00.236.676 I llm_load_print_meta: model ftype      = Q8_0
0.00.236.677 I llm_load_print_meta: model params     = 2.51 B
0.00.236.679 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.236.679 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.236.679 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.236.680 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.236.681 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.236.681 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.236.682 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.236.682 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.236.682 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.236.683 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.236.683 I llm_load_print_meta: max token length = 93
0.00.236.712 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.307.101 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.307.110 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.312.154 I llama_new_context_with_model: n_ctx      = 8192
0.00.312.162 I llama_new_context_with_model: n_batch    = 2048
0.00.312.163 I llama_new_context_with_model: n_ubatch   = 512
0.00.312.163 I llama_new_context_with_model: flash_attn = 0
0.00.312.167 I llama_new_context_with_model: freq_base  = 10000.0
0.00.312.168 I llama_new_context_with_model: freq_scale = 1
0.00.343.546 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.343.562 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.343.654 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.344.517 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.344.525 I llama_new_context_with_model: graph nodes  = 601
0.00.344.526 I llama_new_context_with_model: graph splits = 1
0.00.344.528 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.442.494 I main: llama threadpool init, n_threads = 4
0.00.442.506 I 
0.00.442.587 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.442.590 I 
0.00.442.627 I sampler seed: 2618139248
0.00.442.638 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.442.641 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.442.643 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.442.643 I 
 increamental, 2018.

**Analyzing the Impact of Social Media on Mental Health: A Systematic Review and Meta-Analysis**

**Abstract

0.02.918.530 I llama_perf_sampler_print:    sampling time =       5.57 ms /    33 runs   (    0.17 ms per token,  5926.72 tokens per second)
0.02.918.532 I llama_perf_context_print:        load time =     440.46 ms
0.02.918.533 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.918.535 I llama_perf_context_print:        eval time =    2456.39 ms /    32 runs   (   76.76 ms per token,    13.03 tokens per second)
0.02.918.536 I llama_perf_context_print:       total time =    2476.05 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.082s
user	0m24.389s
sys	0m9.757s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3883 (ae56ec25)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32082.23 ms
main:    total time = 32082.23 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.557 I build: 3883 (ae56ec25) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.001.861 I main: load the model and apply lora adapter, if any
0.00.022.207 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.256 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.264 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.271 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.272 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.276 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.278 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.279 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.279 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.280 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.281 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.286 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.287 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.288 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.288 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.289 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.019 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.875 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.753 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.761 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.762 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.762 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.763 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.764 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.765 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.768 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.768 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.769 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.769 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.770 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.774 I llama_model_loader: - type  f32:   37 tensors
0.00.132.776 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.777 I llama_model_loader: - type q6_K:   19 tensors
0.00.195.814 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.298 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.090 I llm_load_vocab: special tokens cache size = 5
0.00.234.190 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.234.206 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.234.207 I llm_load_print_meta: arch             = gemma
0.00.234.207 I llm_load_print_meta: vocab type       = SPM
0.00.234.208 I llm_load_print_meta: n_vocab          = 256000
0.00.234.208 I llm_load_print_meta: n_merges         = 0
0.00.234.209 I llm_load_print_meta: vocab_only       = 0
0.00.234.209 I llm_load_print_meta: n_ctx_train      = 8192
0.00.234.209 I llm_load_print_meta: n_embd           = 2048
0.00.234.210 I llm_load_print_meta: n_layer          = 18
0.00.234.223 I llm_load_print_meta: n_head           = 8
0.00.234.224 I llm_load_print_meta: n_head_kv        = 1
0.00.234.224 I llm_load_print_meta: n_rot            = 256
0.00.234.224 I llm_load_print_meta: n_swa            = 0
0.00.234.224 I llm_load_print_meta: n_embd_head_k    = 256
0.00.234.224 I llm_load_print_meta: n_embd_head_v    = 256
0.00.234.225 I llm_load_print_meta: n_gqa            = 8
0.00.234.227 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.234.228 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.234.228 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.234.230 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.234.230 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.234.231 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.234.231 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.234.232 I llm_load_print_meta: n_ff             = 16384
0.00.234.232 I llm_load_print_meta: n_expert         = 0
0.00.234.233 I llm_load_print_meta: n_expert_used    = 0
0.00.234.233 I llm_load_print_meta: causal attn      = 1
0.00.234.233 I llm_load_print_meta: pooling type     = 0
0.00.234.233 I llm_load_print_meta: rope type        = 2
0.00.234.234 I llm_load_print_meta: rope scaling     = linear
0.00.234.235 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.234.235 I llm_load_print_meta: freq_scale_train = 1
0.00.234.236 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.234.236 I llm_load_print_meta: rope_finetuned   = unknown
0.00.234.237 I llm_load_print_meta: ssm_d_conv       = 0
0.00.234.237 I llm_load_print_meta: ssm_d_inner      = 0
0.00.234.237 I llm_load_print_meta: ssm_d_state      = 0
0.00.234.237 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.234.238 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.234.238 I llm_load_print_meta: model type       = 2B
0.00.234.239 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.234.240 I llm_load_print_meta: model params     = 2.51 B
0.00.234.241 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.234.241 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.234.241 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.234.242 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.234.242 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.234.242 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.234.243 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.234.243 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.234.244 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.234.244 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.234.244 I llm_load_print_meta: max token length = 93
0.00.234.276 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.292.745 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.292.753 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.292.754 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.292.755 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.292.755 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.292.756 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.297.994 I llama_new_context_with_model: n_ctx      = 8192
0.00.298.003 I llama_new_context_with_model: n_batch    = 2048
0.00.298.003 I llama_new_context_with_model: n_ubatch   = 512
0.00.298.004 I llama_new_context_with_model: flash_attn = 0
0.00.298.007 I llama_new_context_with_model: freq_base  = 10000.0
0.00.298.008 I llama_new_context_with_model: freq_scale = 1
0.00.329.388 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.329.402 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.329.505 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.330.398 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.330.407 I llama_new_context_with_model: graph nodes  = 601
0.00.330.408 I llama_new_context_with_model: graph splits = 1
0.00.330.409 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.416.287 I main: llama threadpool init, n_threads = 4
0.00.416.298 I 
0.00.416.386 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.416.390 I 
0.00.416.431 I sampler seed: 1563582329
0.00.416.441 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.416.444 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.416.445 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.416.445 I 
 encompassing the features of a good book review website:

**1. Comprehensive Book Coverage:**

* Detailed reviews of a wide variety of genres.
*

0.02.128.764 I llama_perf_sampler_print:    sampling time =       5.69 ms /    33 runs   (    0.17 ms per token,  5802.71 tokens per second)
0.02.128.767 I llama_perf_context_print:        load time =     414.36 ms
0.02.128.768 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.128.770 I llama_perf_context_print:        eval time =    1692.31 ms /    32 runs   (   52.88 ms per token,    18.91 tokens per second)
0.02.128.770 I llama_perf_context_print:       total time =    1712.49 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3883 (ae56ec25)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32112.53 ms
main:    total time = 32112.53 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.599 I build: 3883 (ae56ec25) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.796 I main: llama backend init
0.00.001.901 I main: load the model and apply lora adapter, if any
0.00.021.998 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.010 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.017 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.018 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.023 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.023 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.024 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.024 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.025 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.025 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.029 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.030 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.031 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.031 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.032 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.476 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.543 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.356 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.363 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.364 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.365 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.373 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.376 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.377 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.379 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.380 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.384 I llama_model_loader: - type  f32:   37 tensors
0.00.132.387 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.387 I llama_model_loader: - type q6_K:   19 tensors
0.00.198.066 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.219.365 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.220.199 I llm_load_vocab: special tokens cache size = 5
0.00.241.532 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.241.550 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.241.550 I llm_load_print_meta: arch             = gemma
0.00.241.551 I llm_load_print_meta: vocab type       = SPM
0.00.241.552 I llm_load_print_meta: n_vocab          = 256000
0.00.241.553 I llm_load_print_meta: n_merges         = 0
0.00.241.553 I llm_load_print_meta: vocab_only       = 0
0.00.241.553 I llm_load_print_meta: n_ctx_train      = 8192
0.00.241.554 I llm_load_print_meta: n_embd           = 2048
0.00.241.554 I llm_load_print_meta: n_layer          = 18
0.00.241.569 I llm_load_print_meta: n_head           = 8
0.00.241.570 I llm_load_print_meta: n_head_kv        = 1
0.00.241.571 I llm_load_print_meta: n_rot            = 256
0.00.241.571 I llm_load_print_meta: n_swa            = 0
0.00.241.571 I llm_load_print_meta: n_embd_head_k    = 256
0.00.241.571 I llm_load_print_meta: n_embd_head_v    = 256
0.00.241.572 I llm_load_print_meta: n_gqa            = 8
0.00.241.574 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.241.575 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.241.576 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.241.577 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.241.578 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.241.578 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.241.579 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.241.580 I llm_load_print_meta: n_ff             = 16384
0.00.241.580 I llm_load_print_meta: n_expert         = 0
0.00.241.580 I llm_load_print_meta: n_expert_used    = 0
0.00.241.581 I llm_load_print_meta: causal attn      = 1
0.00.241.581 I llm_load_print_meta: pooling type     = 0
0.00.241.582 I llm_load_print_meta: rope type        = 2
0.00.241.582 I llm_load_print_meta: rope scaling     = linear
0.00.241.584 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.241.584 I llm_load_print_meta: freq_scale_train = 1
0.00.241.584 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.241.585 I llm_load_print_meta: rope_finetuned   = unknown
0.00.241.585 I llm_load_print_meta: ssm_d_conv       = 0
0.00.241.586 I llm_load_print_meta: ssm_d_inner      = 0
0.00.241.586 I llm_load_print_meta: ssm_d_state      = 0
0.00.241.587 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.241.587 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.241.587 I llm_load_print_meta: model type       = 2B
0.00.241.588 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.241.589 I llm_load_print_meta: model params     = 2.51 B
0.00.241.590 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.241.590 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.241.590 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.241.591 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.241.591 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.241.591 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.241.592 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.241.593 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.241.593 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.241.594 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.241.594 I llm_load_print_meta: max token length = 93
0.00.241.615 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.297.418 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.302.494 I llama_new_context_with_model: n_ctx      = 8192
0.00.302.501 I llama_new_context_with_model: n_batch    = 2048
0.00.302.501 I llama_new_context_with_model: n_ubatch   = 512
0.00.302.502 I llama_new_context_with_model: flash_attn = 0
0.00.302.505 I llama_new_context_with_model: freq_base  = 10000.0
0.00.302.505 I llama_new_context_with_model: freq_scale = 1
0.00.332.716 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.332.735 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.332.824 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.333.666 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.333.673 I llama_new_context_with_model: graph nodes  = 601
0.00.333.674 I llama_new_context_with_model: graph splits = 1
0.00.333.676 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.418.289 I main: llama threadpool init, n_threads = 4
0.00.418.303 I 
0.00.418.385 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.418.388 I 
0.00.418.427 I sampler seed: 2277622675
0.00.418.438 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.418.440 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.418.441 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.418.441 I 
 effeing the world with their melodious laughter.

**Meaning:**

The passage describes the joyful and carefree nature of the human laughter. It emphasizes the power and

0.02.147.038 I llama_perf_sampler_print:    sampling time =       5.59 ms /    33 runs   (    0.17 ms per token,  5901.29 tokens per second)
0.02.147.040 I llama_perf_context_print:        load time =     416.32 ms
0.02.147.041 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.147.043 I llama_perf_context_print:        eval time =    1708.86 ms /    32 runs   (   53.40 ms per token,    18.73 tokens per second)
0.02.147.043 I llama_perf_context_print:       total time =    1728.76 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.351s
user	8m15.793s
sys	0m7.112s
