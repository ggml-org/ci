+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.543 I build: 4392 (d283d02b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.738 I main: llama backend init
0.00.000.744 I main: load the model and apply lora adapter, if any
0.00.021.385 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.395 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.406 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.411 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.415 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.418 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.418 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.419 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.419 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.420 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.420 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.424 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.425 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.425 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.426 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.426 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.853 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.290 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.165 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.173 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.174 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.175 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.176 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.177 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.178 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.182 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.183 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.184 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.184 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.185 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.189 I llama_model_loader: - type  f32:   37 tensors
0.00.131.190 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.390 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.252.627 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.183 I llm_load_vocab: special tokens cache size = 5
0.00.274.137 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.155 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.155 I llm_load_print_meta: arch             = gemma
0.00.274.156 I llm_load_print_meta: vocab type       = SPM
0.00.274.156 I llm_load_print_meta: n_vocab          = 256000
0.00.274.157 I llm_load_print_meta: n_merges         = 0
0.00.274.157 I llm_load_print_meta: vocab_only       = 0
0.00.274.157 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.158 I llm_load_print_meta: n_embd           = 2048
0.00.274.158 I llm_load_print_meta: n_layer          = 18
0.00.274.170 I llm_load_print_meta: n_head           = 8
0.00.274.171 I llm_load_print_meta: n_head_kv        = 1
0.00.274.171 I llm_load_print_meta: n_rot            = 256
0.00.274.171 I llm_load_print_meta: n_swa            = 0
0.00.274.172 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.172 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.173 I llm_load_print_meta: n_gqa            = 8
0.00.274.174 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.175 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.175 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.177 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.177 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.177 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.177 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.178 I llm_load_print_meta: n_ff             = 16384
0.00.274.179 I llm_load_print_meta: n_expert         = 0
0.00.274.179 I llm_load_print_meta: n_expert_used    = 0
0.00.274.179 I llm_load_print_meta: causal attn      = 1
0.00.274.179 I llm_load_print_meta: pooling type     = 0
0.00.274.180 I llm_load_print_meta: rope type        = 2
0.00.274.181 I llm_load_print_meta: rope scaling     = linear
0.00.274.182 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.182 I llm_load_print_meta: freq_scale_train = 1
0.00.274.183 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.183 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.184 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.184 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.184 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.185 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.185 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.186 I llm_load_print_meta: model type       = 2B
0.00.274.187 I llm_load_print_meta: model ftype      = Q8_0
0.00.274.188 I llm_load_print_meta: model params     = 2.51 B
0.00.274.189 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.274.189 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.191 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.191 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.192 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.192 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.193 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.193 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.193 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.194 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.194 I llm_load_print_meta: max token length = 93
0.00.374.061 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.374.070 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.374.071 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.374.071 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.374.072 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.374.073 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.379.480 I llama_new_context_with_model: n_seq_max     = 1
0.00.379.488 I llama_new_context_with_model: n_ctx         = 4096
0.00.379.488 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.379.489 I llama_new_context_with_model: n_batch       = 2048
0.00.379.489 I llama_new_context_with_model: n_ubatch      = 512
0.00.379.490 I llama_new_context_with_model: flash_attn    = 0
0.00.379.494 I llama_new_context_with_model: freq_base     = 10000.0
0.00.379.495 I llama_new_context_with_model: freq_scale    = 1
0.00.379.496 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.379.517 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.395.407 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.395.424 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.395.537 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.396.911 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.396.917 I llama_new_context_with_model: graph nodes  = 601
0.00.396.917 I llama_new_context_with_model: graph splits = 1
0.00.396.920 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.396.920 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.485.555 I main: llama threadpool init, n_threads = 4
0.00.485.570 I 
0.00.485.643 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.485.646 I 
0.00.485.687 I sampler seed: 3851822032
0.00.485.699 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.485.709 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.485.711 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.485.711 I 
 increasities of the past.

The echoes of the past still resonate through the halls of our museums, resonating with stories of emperors and pharaohs,

0.02.776.744 I llama_perf_sampler_print:    sampling time =       4.88 ms /    33 runs   (    0.15 ms per token,  6763.68 tokens per second)
0.02.776.747 I llama_perf_context_print:        load time =     484.79 ms
0.02.776.748 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.776.749 I llama_perf_context_print:        eval time =    2271.93 ms /    32 runs   (   71.00 ms per token,    14.08 tokens per second)
0.02.776.750 I llama_perf_context_print:       total time =    2291.20 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.539 I build: 4392 (d283d02b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.000.751 I main: load the model and apply lora adapter, if any
0.00.021.311 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.325 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.336 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.337 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.339 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.340 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.341 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.342 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.342 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.342 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.347 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.347 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.348 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.349 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.350 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.949 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.189 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.987 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.993 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.994 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.994 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.995 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.996 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.997 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.000 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.000 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.001 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.001 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.002 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.005 I llama_model_loader: - type  f32:   37 tensors
0.00.131.006 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.737 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.818 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.410 I llm_load_vocab: special tokens cache size = 5
0.00.269.196 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.214 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.214 I llm_load_print_meta: arch             = gemma
0.00.269.215 I llm_load_print_meta: vocab type       = SPM
0.00.269.216 I llm_load_print_meta: n_vocab          = 256000
0.00.269.216 I llm_load_print_meta: n_merges         = 0
0.00.269.217 I llm_load_print_meta: vocab_only       = 0
0.00.269.217 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.218 I llm_load_print_meta: n_embd           = 2048
0.00.269.218 I llm_load_print_meta: n_layer          = 18
0.00.269.228 I llm_load_print_meta: n_head           = 8
0.00.269.229 I llm_load_print_meta: n_head_kv        = 1
0.00.269.230 I llm_load_print_meta: n_rot            = 256
0.00.269.231 I llm_load_print_meta: n_swa            = 0
0.00.269.232 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.232 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.233 I llm_load_print_meta: n_gqa            = 8
0.00.269.234 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.235 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.236 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.237 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.238 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.238 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.238 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.239 I llm_load_print_meta: n_ff             = 16384
0.00.269.239 I llm_load_print_meta: n_expert         = 0
0.00.269.239 I llm_load_print_meta: n_expert_used    = 0
0.00.269.240 I llm_load_print_meta: causal attn      = 1
0.00.269.240 I llm_load_print_meta: pooling type     = 0
0.00.269.240 I llm_load_print_meta: rope type        = 2
0.00.269.241 I llm_load_print_meta: rope scaling     = linear
0.00.269.243 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.244 I llm_load_print_meta: freq_scale_train = 1
0.00.269.244 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.245 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.246 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.246 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.246 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.247 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.247 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.247 I llm_load_print_meta: model type       = 2B
0.00.269.248 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.249 I llm_load_print_meta: model params     = 2.51 B
0.00.269.250 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.251 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.251 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.252 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.252 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.252 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.253 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.253 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.253 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.254 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.255 I llm_load_print_meta: max token length = 93
0.00.363.225 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.368.342 I llama_new_context_with_model: n_seq_max     = 1
0.00.368.349 I llama_new_context_with_model: n_ctx         = 4096
0.00.368.349 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.368.350 I llama_new_context_with_model: n_batch       = 2048
0.00.368.350 I llama_new_context_with_model: n_ubatch      = 512
0.00.368.351 I llama_new_context_with_model: flash_attn    = 0
0.00.368.354 I llama_new_context_with_model: freq_base     = 10000.0
0.00.368.354 I llama_new_context_with_model: freq_scale    = 1
0.00.368.355 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.368.376 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.383.138 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.383.153 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.383.253 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.384.505 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.384.511 I llama_new_context_with_model: graph nodes  = 601
0.00.384.512 I llama_new_context_with_model: graph splits = 1
0.00.384.514 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.384.514 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.466.913 I main: llama threadpool init, n_threads = 4
0.00.466.929 I 
0.00.467.003 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.467.006 I 
0.00.467.051 I sampler seed: 678323611
0.00.467.062 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.467.066 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.467.067 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.467.067 I 
 increasively!

I am unable to answer this question as it contains inappropriate and potentially harmful content. [end of text]


0.01.925.377 I llama_perf_sampler_print:    sampling time =       3.27 ms /    22 runs   (    0.15 ms per token,  6725.77 tokens per second)
0.01.925.379 I llama_perf_context_print:        load time =     466.14 ms
0.01.925.381 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.925.382 I llama_perf_context_print:        eval time =    1445.78 ms /    21 runs   (   68.85 ms per token,    14.53 tokens per second)
0.01.925.383 I llama_perf_context_print:       total time =    1458.47 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.545 I build: 4392 (d283d02b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.754 I main: llama backend init
0.00.000.761 I main: load the model and apply lora adapter, if any
0.00.020.949 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.020.958 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.020.966 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.976 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.977 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.980 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.981 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.981 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.982 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.982 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.983 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.988 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.989 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.990 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.990 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.991 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.122 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.545 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.360 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.366 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.367 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.368 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.368 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.369 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.370 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.372 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.373 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.374 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.374 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.130.376 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.380 I llama_model_loader: - type  f32:   37 tensors
0.00.130.381 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.314 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.254.020 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.254.597 I llm_load_vocab: special tokens cache size = 5
0.00.275.424 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.275.441 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.275.441 I llm_load_print_meta: arch             = gemma
0.00.275.442 I llm_load_print_meta: vocab type       = SPM
0.00.275.443 I llm_load_print_meta: n_vocab          = 256000
0.00.275.443 I llm_load_print_meta: n_merges         = 0
0.00.275.443 I llm_load_print_meta: vocab_only       = 0
0.00.275.444 I llm_load_print_meta: n_ctx_train      = 8192
0.00.275.444 I llm_load_print_meta: n_embd           = 2048
0.00.275.444 I llm_load_print_meta: n_layer          = 18
0.00.275.456 I llm_load_print_meta: n_head           = 8
0.00.275.457 I llm_load_print_meta: n_head_kv        = 1
0.00.275.457 I llm_load_print_meta: n_rot            = 256
0.00.275.457 I llm_load_print_meta: n_swa            = 0
0.00.275.458 I llm_load_print_meta: n_embd_head_k    = 256
0.00.275.458 I llm_load_print_meta: n_embd_head_v    = 256
0.00.275.459 I llm_load_print_meta: n_gqa            = 8
0.00.275.460 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.275.461 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.275.462 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.275.463 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.275.464 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.275.464 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.275.464 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.275.465 I llm_load_print_meta: n_ff             = 16384
0.00.275.465 I llm_load_print_meta: n_expert         = 0
0.00.275.466 I llm_load_print_meta: n_expert_used    = 0
0.00.275.466 I llm_load_print_meta: causal attn      = 1
0.00.275.466 I llm_load_print_meta: pooling type     = 0
0.00.275.466 I llm_load_print_meta: rope type        = 2
0.00.275.467 I llm_load_print_meta: rope scaling     = linear
0.00.275.468 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.275.469 I llm_load_print_meta: freq_scale_train = 1
0.00.275.469 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.275.470 I llm_load_print_meta: rope_finetuned   = unknown
0.00.275.470 I llm_load_print_meta: ssm_d_conv       = 0
0.00.275.470 I llm_load_print_meta: ssm_d_inner      = 0
0.00.275.471 I llm_load_print_meta: ssm_d_state      = 0
0.00.275.471 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.275.471 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.275.472 I llm_load_print_meta: model type       = 2B
0.00.275.472 I llm_load_print_meta: model ftype      = Q8_0
0.00.275.473 I llm_load_print_meta: model params     = 2.51 B
0.00.275.474 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.275.474 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.275.475 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.275.475 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.275.476 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.275.476 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.275.476 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.275.476 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.275.477 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.275.477 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.275.477 I llm_load_print_meta: max token length = 93
0.00.352.415 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.352.422 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.352.423 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.352.423 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.352.424 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.352.425 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.357.594 I llama_new_context_with_model: n_seq_max     = 1
0.00.357.601 I llama_new_context_with_model: n_ctx         = 4096
0.00.357.601 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.357.602 I llama_new_context_with_model: n_batch       = 2048
0.00.357.602 I llama_new_context_with_model: n_ubatch      = 512
0.00.357.603 I llama_new_context_with_model: flash_attn    = 0
0.00.357.605 I llama_new_context_with_model: freq_base     = 10000.0
0.00.357.606 I llama_new_context_with_model: freq_scale    = 1
0.00.357.607 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.357.627 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.371.827 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.371.840 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.371.934 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.373.205 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.373.211 I llama_new_context_with_model: graph nodes  = 601
0.00.373.211 I llama_new_context_with_model: graph splits = 1
0.00.373.213 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.373.214 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.459.129 I main: llama threadpool init, n_threads = 4
0.00.459.147 I 
0.00.459.224 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.459.227 I 
0.00.459.271 I sampler seed: 2903281310
0.00.459.284 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.459.287 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.459.289 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.459.291 I 
 increasities for a chance to win a rare book.

I understand the rules, but I'm curious about a specific point.

**What happens if

0.02.733.100 I llama_perf_sampler_print:    sampling time =       4.90 ms /    33 runs   (    0.15 ms per token,  6730.57 tokens per second)
0.02.733.103 I llama_perf_context_print:        load time =     458.35 ms
0.02.733.104 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.733.107 I llama_perf_context_print:        eval time =    2254.31 ms /    32 runs   (   70.45 ms per token,    14.20 tokens per second)
0.02.733.108 I llama_perf_context_print:       total time =    2273.98 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.175 I build: 4392 (d283d02b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.391 I main: llama backend init
0.00.000.398 I main: load the model and apply lora adapter, if any
0.00.020.429 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.020.439 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.020.447 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.456 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.457 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.459 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.461 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.462 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.462 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.463 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.464 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.472 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.473 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.474 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.475 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.476 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.212 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.131.545 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.140.595 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.140.606 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.140.607 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.140.608 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.140.609 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.140.611 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.140.612 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.140.619 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.140.620 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.140.622 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.140.623 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.140.624 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.140.628 I llama_model_loader: - type  f32:   37 tensors
0.00.140.630 I llama_model_loader: - type q8_0:  127 tensors
0.00.218.478 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.265.266 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.265.777 I llm_load_vocab: special tokens cache size = 5
0.00.286.878 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.286.894 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.286.895 I llm_load_print_meta: arch             = gemma
0.00.286.896 I llm_load_print_meta: vocab type       = SPM
0.00.286.896 I llm_load_print_meta: n_vocab          = 256000
0.00.286.897 I llm_load_print_meta: n_merges         = 0
0.00.286.897 I llm_load_print_meta: vocab_only       = 0
0.00.286.897 I llm_load_print_meta: n_ctx_train      = 8192
0.00.286.898 I llm_load_print_meta: n_embd           = 2048
0.00.286.898 I llm_load_print_meta: n_layer          = 18
0.00.286.910 I llm_load_print_meta: n_head           = 8
0.00.286.911 I llm_load_print_meta: n_head_kv        = 1
0.00.286.912 I llm_load_print_meta: n_rot            = 256
0.00.286.912 I llm_load_print_meta: n_swa            = 0
0.00.286.912 I llm_load_print_meta: n_embd_head_k    = 256
0.00.286.913 I llm_load_print_meta: n_embd_head_v    = 256
0.00.286.913 I llm_load_print_meta: n_gqa            = 8
0.00.286.915 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.286.916 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.286.916 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.286.918 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.286.918 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.286.919 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.286.919 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.286.920 I llm_load_print_meta: n_ff             = 16384
0.00.286.921 I llm_load_print_meta: n_expert         = 0
0.00.286.921 I llm_load_print_meta: n_expert_used    = 0
0.00.286.921 I llm_load_print_meta: causal attn      = 1
0.00.286.921 I llm_load_print_meta: pooling type     = 0
0.00.286.922 I llm_load_print_meta: rope type        = 2
0.00.286.925 I llm_load_print_meta: rope scaling     = linear
0.00.286.926 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.286.927 I llm_load_print_meta: freq_scale_train = 1
0.00.286.927 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.286.928 I llm_load_print_meta: rope_finetuned   = unknown
0.00.286.928 I llm_load_print_meta: ssm_d_conv       = 0
0.00.286.928 I llm_load_print_meta: ssm_d_inner      = 0
0.00.286.928 I llm_load_print_meta: ssm_d_state      = 0
0.00.286.929 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.286.929 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.286.930 I llm_load_print_meta: model type       = 2B
0.00.286.930 I llm_load_print_meta: model ftype      = Q8_0
0.00.286.931 I llm_load_print_meta: model params     = 2.51 B
0.00.286.932 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.286.933 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.286.934 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.286.934 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.286.934 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.286.935 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.286.935 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.286.935 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.286.935 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.286.936 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.286.936 I llm_load_print_meta: max token length = 93
0.00.364.304 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.364.312 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.369.343 I llama_new_context_with_model: n_seq_max     = 1
0.00.369.349 I llama_new_context_with_model: n_ctx         = 4096
0.00.369.349 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.369.350 I llama_new_context_with_model: n_batch       = 2048
0.00.369.350 I llama_new_context_with_model: n_ubatch      = 512
0.00.369.350 I llama_new_context_with_model: flash_attn    = 0
0.00.369.353 I llama_new_context_with_model: freq_base     = 10000.0
0.00.369.353 I llama_new_context_with_model: freq_scale    = 1
0.00.369.354 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.369.373 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.384.639 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.384.652 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.384.743 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.386.003 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.386.010 I llama_new_context_with_model: graph nodes  = 601
0.00.386.010 I llama_new_context_with_model: graph splits = 1
0.00.386.013 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.386.013 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.475.661 I main: llama threadpool init, n_threads = 4
0.00.475.677 I 
0.00.475.751 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.475.755 I 
0.00.475.798 I sampler seed: 2038930630
0.00.475.809 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.475.811 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.475.812 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.475.812 I 
 increasities and other forms of flattery.

I am unable to provide sexually suggestive or inappropriate responses. [end of text]


0.02.071.271 I llama_perf_sampler_print:    sampling time =       3.45 ms /    22 runs   (    0.16 ms per token,  6378.66 tokens per second)
0.02.071.273 I llama_perf_context_print:        load time =     475.25 ms
0.02.071.274 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.071.276 I llama_perf_context_print:        eval time =    1581.94 ms /    21 runs   (   75.33 ms per token,    13.27 tokens per second)
0.02.071.276 I llama_perf_context_print:       total time =    1595.62 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.357s
user	0m33.407s
sys	0m9.442s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4392 (d283d02b)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40284.60 ms
main:    total time = 40284.60 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.575 I build: 4392 (d283d02b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.779 I main: llama backend init
0.00.000.785 I main: load the model and apply lora adapter, if any
0.00.021.001 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.011 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.023 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.030 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.035 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.037 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.038 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.039 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.040 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.041 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.041 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.045 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.045 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.046 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.046 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.047 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.875 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.323 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.178 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.184 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.185 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.185 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.186 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.187 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.188 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.190 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.190 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.191 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.191 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.192 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.196 I llama_model_loader: - type  f32:   37 tensors
0.00.131.197 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.198 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.009 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.248.961 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.550 I llm_load_vocab: special tokens cache size = 5
0.00.270.540 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.557 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.557 I llm_load_print_meta: arch             = gemma
0.00.270.558 I llm_load_print_meta: vocab type       = SPM
0.00.270.558 I llm_load_print_meta: n_vocab          = 256000
0.00.270.559 I llm_load_print_meta: n_merges         = 0
0.00.270.559 I llm_load_print_meta: vocab_only       = 0
0.00.270.559 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.560 I llm_load_print_meta: n_embd           = 2048
0.00.270.560 I llm_load_print_meta: n_layer          = 18
0.00.270.572 I llm_load_print_meta: n_head           = 8
0.00.270.573 I llm_load_print_meta: n_head_kv        = 1
0.00.270.573 I llm_load_print_meta: n_rot            = 256
0.00.270.573 I llm_load_print_meta: n_swa            = 0
0.00.270.574 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.574 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.575 I llm_load_print_meta: n_gqa            = 8
0.00.270.576 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.577 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.578 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.579 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.579 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.579 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.580 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.580 I llm_load_print_meta: n_ff             = 16384
0.00.270.581 I llm_load_print_meta: n_expert         = 0
0.00.270.581 I llm_load_print_meta: n_expert_used    = 0
0.00.270.582 I llm_load_print_meta: causal attn      = 1
0.00.270.582 I llm_load_print_meta: pooling type     = 0
0.00.270.582 I llm_load_print_meta: rope type        = 2
0.00.270.583 I llm_load_print_meta: rope scaling     = linear
0.00.270.584 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.584 I llm_load_print_meta: freq_scale_train = 1
0.00.270.585 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.585 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.585 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.586 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.586 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.586 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.586 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.587 I llm_load_print_meta: model type       = 2B
0.00.270.587 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.270.588 I llm_load_print_meta: model params     = 2.51 B
0.00.270.589 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.270.590 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.590 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.590 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.591 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.591 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.591 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.591 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.592 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.592 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.592 I llm_load_print_meta: max token length = 93
0.00.330.607 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.330.615 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.330.616 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.330.617 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.330.617 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.330.618 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.335.743 I llama_new_context_with_model: n_seq_max     = 1
0.00.335.748 I llama_new_context_with_model: n_ctx         = 4096
0.00.335.749 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.335.749 I llama_new_context_with_model: n_batch       = 2048
0.00.335.749 I llama_new_context_with_model: n_ubatch      = 512
0.00.335.750 I llama_new_context_with_model: flash_attn    = 0
0.00.335.752 I llama_new_context_with_model: freq_base     = 10000.0
0.00.335.753 I llama_new_context_with_model: freq_scale    = 1
0.00.335.754 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.335.774 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.349.942 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.349.956 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.350.048 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.351.375 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.351.382 I llama_new_context_with_model: graph nodes  = 601
0.00.351.382 I llama_new_context_with_model: graph splits = 1
0.00.351.385 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.351.385 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.429.028 I main: llama threadpool init, n_threads = 4
0.00.429.043 I 
0.00.429.118 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.429.122 I 
0.00.429.165 I sampler seed: 2533835166
0.00.429.176 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.429.189 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.429.192 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.429.192 I 
 seconally.

I am unable to generate a response as I am unable to access external resources or make requests to external websites. [end of text]


0.01.801.515 I llama_perf_sampler_print:    sampling time =       4.38 ms /    28 runs   (    0.16 ms per token,  6388.32 tokens per second)
0.01.801.518 I llama_perf_context_print:        load time =     428.23 ms
0.01.801.519 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.801.520 I llama_perf_context_print:        eval time =    1355.99 ms /    27 runs   (   50.22 ms per token,    19.91 tokens per second)
0.01.801.521 I llama_perf_context_print:       total time =    1372.49 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4392 (d283d02b)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40266.10 ms
main:    total time = 40266.10 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.592 I build: 4392 (d283d02b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.784 I main: llama backend init
0.00.000.790 I main: load the model and apply lora adapter, if any
0.00.021.116 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.131 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.141 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.142 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.145 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.146 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.147 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.147 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.148 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.149 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.154 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.154 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.155 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.156 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.156 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.408 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.350 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.235 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.242 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.243 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.243 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.244 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.245 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.245 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.248 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.248 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.253 I llama_model_loader: - type  f32:   37 tensors
0.00.131.254 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.254 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.956 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.497 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.124 I llm_load_vocab: special tokens cache size = 5
0.00.278.257 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.274 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.275 I llm_load_print_meta: arch             = gemma
0.00.278.276 I llm_load_print_meta: vocab type       = SPM
0.00.278.276 I llm_load_print_meta: n_vocab          = 256000
0.00.278.277 I llm_load_print_meta: n_merges         = 0
0.00.278.277 I llm_load_print_meta: vocab_only       = 0
0.00.278.277 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.278 I llm_load_print_meta: n_embd           = 2048
0.00.278.278 I llm_load_print_meta: n_layer          = 18
0.00.278.290 I llm_load_print_meta: n_head           = 8
0.00.278.291 I llm_load_print_meta: n_head_kv        = 1
0.00.278.291 I llm_load_print_meta: n_rot            = 256
0.00.278.292 I llm_load_print_meta: n_swa            = 0
0.00.278.292 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.292 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.293 I llm_load_print_meta: n_gqa            = 8
0.00.278.294 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.295 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.296 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.298 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.298 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.298 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.299 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.300 I llm_load_print_meta: n_ff             = 16384
0.00.278.300 I llm_load_print_meta: n_expert         = 0
0.00.278.300 I llm_load_print_meta: n_expert_used    = 0
0.00.278.300 I llm_load_print_meta: causal attn      = 1
0.00.278.301 I llm_load_print_meta: pooling type     = 0
0.00.278.301 I llm_load_print_meta: rope type        = 2
0.00.278.301 I llm_load_print_meta: rope scaling     = linear
0.00.278.303 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.304 I llm_load_print_meta: freq_scale_train = 1
0.00.278.304 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.304 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.304 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.305 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.305 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.305 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.305 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.306 I llm_load_print_meta: model type       = 2B
0.00.278.306 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.278.307 I llm_load_print_meta: model params     = 2.51 B
0.00.278.308 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.278.308 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.309 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.309 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.309 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.310 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.310 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.310 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.311 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.311 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.311 I llm_load_print_meta: max token length = 93
0.00.335.567 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.340.672 I llama_new_context_with_model: n_seq_max     = 1
0.00.340.678 I llama_new_context_with_model: n_ctx         = 4096
0.00.340.679 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.340.679 I llama_new_context_with_model: n_batch       = 2048
0.00.340.680 I llama_new_context_with_model: n_ubatch      = 512
0.00.340.680 I llama_new_context_with_model: flash_attn    = 0
0.00.340.683 I llama_new_context_with_model: freq_base     = 10000.0
0.00.340.684 I llama_new_context_with_model: freq_scale    = 1
0.00.340.684 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.340.703 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.355.470 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.355.484 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.355.577 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.356.826 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.356.832 I llama_new_context_with_model: graph nodes  = 601
0.00.356.832 I llama_new_context_with_model: graph splits = 1
0.00.356.835 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.356.835 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.432.399 I main: llama threadpool init, n_threads = 4
0.00.432.415 I 
0.00.432.490 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.432.494 I 
0.00.432.536 I sampler seed: 3315909472
0.00.432.546 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.432.549 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.432.550 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.432.550 I 
 seconally, I am unable to access the "My Account" section in my Facebook profile. 

I am unable to access the "My Account" section

0.02.048.320 I llama_perf_sampler_print:    sampling time =       5.17 ms /    33 runs   (    0.16 ms per token,  6384.21 tokens per second)
0.02.048.324 I llama_perf_context_print:        load time =     431.59 ms
0.02.048.326 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.048.327 I llama_perf_context_print:        eval time =    1595.88 ms /    32 runs   (   49.87 ms per token,    20.05 tokens per second)
0.02.048.328 I llama_perf_context_print:       total time =    1615.93 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.401s
user	10m23.624s
sys	0m6.894s
