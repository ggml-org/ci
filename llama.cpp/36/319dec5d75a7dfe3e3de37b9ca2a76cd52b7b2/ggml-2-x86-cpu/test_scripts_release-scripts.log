+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.542 I build: 4365 (36319dec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.728 I main: llama backend init
0.00.000.734 I main: load the model and apply lora adapter, if any
0.00.022.825 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.835 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.847 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.857 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.861 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.865 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.866 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.867 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.868 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.869 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.870 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.875 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.875 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.876 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.878 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.879 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.871 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.128.452 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.135.366 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.135.374 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.135.375 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.135.376 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.135.377 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.135.378 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.135.379 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.135.382 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.135.383 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.135.384 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.135.385 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.135.386 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.135.390 I llama_model_loader: - type  f32:   37 tensors
0.00.135.392 I llama_model_loader: - type q8_0:  127 tensors
0.00.233.859 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.288.069 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.288.781 I llm_load_vocab: special tokens cache size = 5
0.00.309.903 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.309.923 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.309.924 I llm_load_print_meta: arch             = gemma
0.00.309.924 I llm_load_print_meta: vocab type       = SPM
0.00.309.925 I llm_load_print_meta: n_vocab          = 256000
0.00.309.925 I llm_load_print_meta: n_merges         = 0
0.00.309.925 I llm_load_print_meta: vocab_only       = 0
0.00.309.926 I llm_load_print_meta: n_ctx_train      = 8192
0.00.309.926 I llm_load_print_meta: n_embd           = 2048
0.00.309.926 I llm_load_print_meta: n_layer          = 18
0.00.309.938 I llm_load_print_meta: n_head           = 8
0.00.309.939 I llm_load_print_meta: n_head_kv        = 1
0.00.309.939 I llm_load_print_meta: n_rot            = 256
0.00.309.939 I llm_load_print_meta: n_swa            = 0
0.00.309.940 I llm_load_print_meta: n_embd_head_k    = 256
0.00.309.940 I llm_load_print_meta: n_embd_head_v    = 256
0.00.309.941 I llm_load_print_meta: n_gqa            = 8
0.00.309.942 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.309.942 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.309.943 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.309.945 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.309.946 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.309.946 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.309.946 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.309.947 I llm_load_print_meta: n_ff             = 16384
0.00.309.948 I llm_load_print_meta: n_expert         = 0
0.00.309.948 I llm_load_print_meta: n_expert_used    = 0
0.00.309.948 I llm_load_print_meta: causal attn      = 1
0.00.309.948 I llm_load_print_meta: pooling type     = 0
0.00.309.949 I llm_load_print_meta: rope type        = 2
0.00.309.949 I llm_load_print_meta: rope scaling     = linear
0.00.309.951 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.309.952 I llm_load_print_meta: freq_scale_train = 1
0.00.309.952 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.309.952 I llm_load_print_meta: rope_finetuned   = unknown
0.00.309.952 I llm_load_print_meta: ssm_d_conv       = 0
0.00.309.953 I llm_load_print_meta: ssm_d_inner      = 0
0.00.309.953 I llm_load_print_meta: ssm_d_state      = 0
0.00.309.953 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.309.953 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.309.954 I llm_load_print_meta: model type       = 2B
0.00.309.955 I llm_load_print_meta: model ftype      = Q8_0
0.00.309.955 I llm_load_print_meta: model params     = 2.51 B
0.00.309.956 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.309.957 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.309.957 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.309.957 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.309.958 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.309.958 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.309.958 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.309.959 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.309.959 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.309.960 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.309.960 I llm_load_print_meta: max token length = 93
0.00.408.670 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.408.679 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.408.680 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.408.680 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.408.681 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.408.681 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.414.081 I llama_new_context_with_model: n_seq_max     = 1
0.00.414.087 I llama_new_context_with_model: n_ctx         = 4096
0.00.414.087 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.414.088 I llama_new_context_with_model: n_batch       = 2048
0.00.414.088 I llama_new_context_with_model: n_ubatch      = 512
0.00.414.089 I llama_new_context_with_model: flash_attn    = 0
0.00.414.092 I llama_new_context_with_model: freq_base     = 10000.0
0.00.414.093 I llama_new_context_with_model: freq_scale    = 1
0.00.414.094 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.414.114 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.429.080 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.429.095 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.429.190 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.430.530 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.430.537 I llama_new_context_with_model: graph nodes  = 601
0.00.430.538 I llama_new_context_with_model: graph splits = 1
0.00.430.541 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.430.541 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.518.451 I main: llama threadpool init, n_threads = 4
0.00.518.469 I 
0.00.518.544 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.518.547 I 
0.00.518.587 I sampler seed: 1545728867
0.00.518.599 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.518.603 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.518.603 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.518.605 I 
 increasively with each iteration.

**Iteration 1:**
- Value = 5
- Output = 5

**Iteration 2:**
-

0.02.824.297 I llama_perf_sampler_print:    sampling time =       4.81 ms /    33 runs   (    0.15 ms per token,  6862.13 tokens per second)
0.02.824.300 I llama_perf_context_print:        load time =     517.70 ms
0.02.824.301 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.824.303 I llama_perf_context_print:        eval time =    2286.70 ms /    32 runs   (   71.46 ms per token,    13.99 tokens per second)
0.02.824.303 I llama_perf_context_print:       total time =    2305.85 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.584 I build: 4365 (36319dec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.797 I main: llama backend init
0.00.000.804 I main: load the model and apply lora adapter, if any
0.00.021.779 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.794 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.805 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.806 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.812 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.816 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.817 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.817 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.818 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.819 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.827 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.827 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.829 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.830 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.830 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.864 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.007 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.922 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.931 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.932 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.932 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.933 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.934 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.934 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.938 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.938 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.939 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.939 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.941 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.945 I llama_model_loader: - type  f32:   37 tensors
0.00.133.947 I llama_model_loader: - type q8_0:  127 tensors
0.00.228.767 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.284.691 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.285.471 I llm_load_vocab: special tokens cache size = 5
0.00.306.929 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.306.951 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.306.952 I llm_load_print_meta: arch             = gemma
0.00.306.953 I llm_load_print_meta: vocab type       = SPM
0.00.306.954 I llm_load_print_meta: n_vocab          = 256000
0.00.306.954 I llm_load_print_meta: n_merges         = 0
0.00.306.954 I llm_load_print_meta: vocab_only       = 0
0.00.306.955 I llm_load_print_meta: n_ctx_train      = 8192
0.00.306.955 I llm_load_print_meta: n_embd           = 2048
0.00.306.955 I llm_load_print_meta: n_layer          = 18
0.00.306.967 I llm_load_print_meta: n_head           = 8
0.00.306.968 I llm_load_print_meta: n_head_kv        = 1
0.00.306.968 I llm_load_print_meta: n_rot            = 256
0.00.306.968 I llm_load_print_meta: n_swa            = 0
0.00.306.969 I llm_load_print_meta: n_embd_head_k    = 256
0.00.306.969 I llm_load_print_meta: n_embd_head_v    = 256
0.00.306.970 I llm_load_print_meta: n_gqa            = 8
0.00.306.971 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.306.972 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.306.973 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.306.974 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.306.975 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.306.975 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.306.976 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.306.977 I llm_load_print_meta: n_ff             = 16384
0.00.306.977 I llm_load_print_meta: n_expert         = 0
0.00.306.978 I llm_load_print_meta: n_expert_used    = 0
0.00.306.978 I llm_load_print_meta: causal attn      = 1
0.00.306.978 I llm_load_print_meta: pooling type     = 0
0.00.306.978 I llm_load_print_meta: rope type        = 2
0.00.306.979 I llm_load_print_meta: rope scaling     = linear
0.00.306.980 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.306.981 I llm_load_print_meta: freq_scale_train = 1
0.00.306.981 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.306.982 I llm_load_print_meta: rope_finetuned   = unknown
0.00.306.982 I llm_load_print_meta: ssm_d_conv       = 0
0.00.306.982 I llm_load_print_meta: ssm_d_inner      = 0
0.00.306.982 I llm_load_print_meta: ssm_d_state      = 0
0.00.306.983 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.306.983 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.306.983 I llm_load_print_meta: model type       = 2B
0.00.306.984 I llm_load_print_meta: model ftype      = Q8_0
0.00.306.985 I llm_load_print_meta: model params     = 2.51 B
0.00.306.986 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.306.986 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.306.987 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.306.987 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.306.987 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.306.988 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.306.988 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.306.988 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.306.989 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.306.989 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.306.990 I llm_load_print_meta: max token length = 93
0.00.402.045 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.407.541 I llama_new_context_with_model: n_seq_max     = 1
0.00.407.547 I llama_new_context_with_model: n_ctx         = 4096
0.00.407.548 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.407.548 I llama_new_context_with_model: n_batch       = 2048
0.00.407.549 I llama_new_context_with_model: n_ubatch      = 512
0.00.407.549 I llama_new_context_with_model: flash_attn    = 0
0.00.407.553 I llama_new_context_with_model: freq_base     = 10000.0
0.00.407.554 I llama_new_context_with_model: freq_scale    = 1
0.00.407.555 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.407.577 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.423.348 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.423.364 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.423.455 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.424.727 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.424.734 I llama_new_context_with_model: graph nodes  = 601
0.00.424.734 I llama_new_context_with_model: graph splits = 1
0.00.424.738 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.424.738 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.507.932 I main: llama threadpool init, n_threads = 4
0.00.507.948 I 
0.00.508.033 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.508.038 I 
0.00.508.092 I sampler seed: 2292182874
0.00.508.104 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.508.108 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.508.109 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.508.109 I 
 increasities in a way that is both humorous and insightful.

While I am unable to generate content that is sexually suggestive in nature, I can provide some humorous

0.02.751.687 I llama_perf_sampler_print:    sampling time =       4.82 ms /    33 runs   (    0.15 ms per token,  6846.47 tokens per second)
0.02.751.689 I llama_perf_context_print:        load time =     507.11 ms
0.02.751.690 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.751.691 I llama_perf_context_print:        eval time =    2224.38 ms /    32 runs   (   69.51 ms per token,    14.39 tokens per second)
0.02.751.692 I llama_perf_context_print:       total time =    2243.76 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.538 I build: 4365 (36319dec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.727 I main: llama backend init
0.00.000.734 I main: load the model and apply lora adapter, if any
0.00.021.319 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.329 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.341 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.346 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.350 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.353 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.354 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.355 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.356 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.357 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.358 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.362 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.362 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.363 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.363 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.364 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.758 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.019 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.848 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.854 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.855 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.856 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.856 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.858 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.858 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.861 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.861 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.862 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.863 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.864 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.868 I llama_model_loader: - type  f32:   37 tensors
0.00.132.869 I llama_model_loader: - type q8_0:  127 tensors
0.00.224.411 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.276.982 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.277.666 I llm_load_vocab: special tokens cache size = 5
0.00.298.655 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.298.673 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.298.673 I llm_load_print_meta: arch             = gemma
0.00.298.674 I llm_load_print_meta: vocab type       = SPM
0.00.298.674 I llm_load_print_meta: n_vocab          = 256000
0.00.298.675 I llm_load_print_meta: n_merges         = 0
0.00.298.675 I llm_load_print_meta: vocab_only       = 0
0.00.298.676 I llm_load_print_meta: n_ctx_train      = 8192
0.00.298.676 I llm_load_print_meta: n_embd           = 2048
0.00.298.677 I llm_load_print_meta: n_layer          = 18
0.00.298.687 I llm_load_print_meta: n_head           = 8
0.00.298.688 I llm_load_print_meta: n_head_kv        = 1
0.00.298.688 I llm_load_print_meta: n_rot            = 256
0.00.298.689 I llm_load_print_meta: n_swa            = 0
0.00.298.689 I llm_load_print_meta: n_embd_head_k    = 256
0.00.298.689 I llm_load_print_meta: n_embd_head_v    = 256
0.00.298.690 I llm_load_print_meta: n_gqa            = 8
0.00.298.691 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.298.692 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.298.693 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.298.694 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.298.694 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.298.695 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.298.695 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.298.696 I llm_load_print_meta: n_ff             = 16384
0.00.298.696 I llm_load_print_meta: n_expert         = 0
0.00.298.697 I llm_load_print_meta: n_expert_used    = 0
0.00.298.697 I llm_load_print_meta: causal attn      = 1
0.00.298.697 I llm_load_print_meta: pooling type     = 0
0.00.298.698 I llm_load_print_meta: rope type        = 2
0.00.298.698 I llm_load_print_meta: rope scaling     = linear
0.00.298.699 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.298.700 I llm_load_print_meta: freq_scale_train = 1
0.00.298.700 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.298.701 I llm_load_print_meta: rope_finetuned   = unknown
0.00.298.701 I llm_load_print_meta: ssm_d_conv       = 0
0.00.298.701 I llm_load_print_meta: ssm_d_inner      = 0
0.00.298.702 I llm_load_print_meta: ssm_d_state      = 0
0.00.298.702 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.298.702 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.298.703 I llm_load_print_meta: model type       = 2B
0.00.298.704 I llm_load_print_meta: model ftype      = Q8_0
0.00.298.705 I llm_load_print_meta: model params     = 2.51 B
0.00.298.706 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.298.706 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.298.707 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.298.708 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.298.708 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.298.708 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.298.709 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.298.709 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.298.710 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.298.711 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.298.711 I llm_load_print_meta: max token length = 93
0.00.374.783 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.374.791 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.374.791 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.374.792 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.374.792 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.374.793 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.380.014 I llama_new_context_with_model: n_seq_max     = 1
0.00.380.021 I llama_new_context_with_model: n_ctx         = 4096
0.00.380.022 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.380.022 I llama_new_context_with_model: n_batch       = 2048
0.00.380.023 I llama_new_context_with_model: n_ubatch      = 512
0.00.380.023 I llama_new_context_with_model: flash_attn    = 0
0.00.380.026 I llama_new_context_with_model: freq_base     = 10000.0
0.00.380.027 I llama_new_context_with_model: freq_scale    = 1
0.00.380.028 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.380.049 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.394.763 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.394.776 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.394.868 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.396.121 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.396.125 I llama_new_context_with_model: graph nodes  = 601
0.00.396.126 I llama_new_context_with_model: graph splits = 1
0.00.396.128 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.396.128 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.483.047 I main: llama threadpool init, n_threads = 4
0.00.483.065 I 
0.00.483.140 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.483.144 I 
0.00.483.184 I sampler seed: 1499919434
0.00.483.194 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.483.197 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.483.197 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.483.198 I 
 increadibly! I have no idea how to resolve the issue. [end of text]


0.01.502.558 I llama_perf_sampler_print:    sampling time =       2.28 ms /    15 runs   (    0.15 ms per token,  6578.95 tokens per second)
0.01.502.562 I llama_perf_context_print:        load time =     482.30 ms
0.01.502.564 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.502.568 I llama_perf_context_print:        eval time =    1009.84 ms /    14 runs   (   72.13 ms per token,    13.86 tokens per second)
0.01.502.570 I llama_perf_context_print:       total time =    1019.52 ms /    15 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.548 I build: 4365 (36319dec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.000.745 I main: load the model and apply lora adapter, if any
0.00.021.019 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.027 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.035 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.044 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.046 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.050 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.051 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.052 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.054 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.054 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.055 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.059 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.060 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.061 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.061 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.062 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.458 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.098 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.047 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.055 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.056 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.057 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.057 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.059 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.060 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.064 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.065 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.066 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.067 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.068 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.072 I llama_model_loader: - type  f32:   37 tensors
0.00.133.074 I llama_model_loader: - type q8_0:  127 tensors
0.00.234.741 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.285.789 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.286.368 I llm_load_vocab: special tokens cache size = 5
0.00.307.358 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.307.378 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.307.378 I llm_load_print_meta: arch             = gemma
0.00.307.379 I llm_load_print_meta: vocab type       = SPM
0.00.307.380 I llm_load_print_meta: n_vocab          = 256000
0.00.307.380 I llm_load_print_meta: n_merges         = 0
0.00.307.380 I llm_load_print_meta: vocab_only       = 0
0.00.307.381 I llm_load_print_meta: n_ctx_train      = 8192
0.00.307.381 I llm_load_print_meta: n_embd           = 2048
0.00.307.381 I llm_load_print_meta: n_layer          = 18
0.00.307.393 I llm_load_print_meta: n_head           = 8
0.00.307.394 I llm_load_print_meta: n_head_kv        = 1
0.00.307.394 I llm_load_print_meta: n_rot            = 256
0.00.307.395 I llm_load_print_meta: n_swa            = 0
0.00.307.395 I llm_load_print_meta: n_embd_head_k    = 256
0.00.307.395 I llm_load_print_meta: n_embd_head_v    = 256
0.00.307.396 I llm_load_print_meta: n_gqa            = 8
0.00.307.397 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.307.398 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.307.399 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.307.400 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.307.401 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.307.401 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.307.401 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.307.402 I llm_load_print_meta: n_ff             = 16384
0.00.307.403 I llm_load_print_meta: n_expert         = 0
0.00.307.403 I llm_load_print_meta: n_expert_used    = 0
0.00.307.403 I llm_load_print_meta: causal attn      = 1
0.00.307.403 I llm_load_print_meta: pooling type     = 0
0.00.307.404 I llm_load_print_meta: rope type        = 2
0.00.307.404 I llm_load_print_meta: rope scaling     = linear
0.00.307.406 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.307.406 I llm_load_print_meta: freq_scale_train = 1
0.00.307.407 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.307.407 I llm_load_print_meta: rope_finetuned   = unknown
0.00.307.407 I llm_load_print_meta: ssm_d_conv       = 0
0.00.307.407 I llm_load_print_meta: ssm_d_inner      = 0
0.00.307.408 I llm_load_print_meta: ssm_d_state      = 0
0.00.307.408 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.307.408 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.307.409 I llm_load_print_meta: model type       = 2B
0.00.307.409 I llm_load_print_meta: model ftype      = Q8_0
0.00.307.410 I llm_load_print_meta: model params     = 2.51 B
0.00.307.411 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.307.411 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.307.412 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.307.412 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.307.412 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.307.412 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.307.412 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.307.413 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.307.414 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.307.414 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.307.414 I llm_load_print_meta: max token length = 93
0.00.378.239 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.378.245 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.383.317 I llama_new_context_with_model: n_seq_max     = 1
0.00.383.323 I llama_new_context_with_model: n_ctx         = 4096
0.00.383.323 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.383.324 I llama_new_context_with_model: n_batch       = 2048
0.00.383.324 I llama_new_context_with_model: n_ubatch      = 512
0.00.383.325 I llama_new_context_with_model: flash_attn    = 0
0.00.383.327 I llama_new_context_with_model: freq_base     = 10000.0
0.00.383.328 I llama_new_context_with_model: freq_scale    = 1
0.00.383.329 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.383.350 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.397.779 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.397.793 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.397.886 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.399.114 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.399.121 I llama_new_context_with_model: graph nodes  = 601
0.00.399.122 I llama_new_context_with_model: graph splits = 1
0.00.399.124 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.399.125 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.490.120 I main: llama threadpool init, n_threads = 4
0.00.490.138 I 
0.00.490.220 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.490.223 I 
0.00.490.273 I sampler seed: 855686354
0.00.490.285 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.490.297 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.490.301 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.490.301 I 
 increabling sounds as if it were a rave

Disclaimer: The following sounds may be disturbing or uncomfortable for some listeners.

A hypnotic, pulsating melody floats

0.02.953.270 I llama_perf_sampler_print:    sampling time =       5.35 ms /    33 runs   (    0.16 ms per token,  6169.38 tokens per second)
0.02.953.272 I llama_perf_context_print:        load time =     489.36 ms
0.02.953.273 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.953.274 I llama_perf_context_print:        eval time =    2443.05 ms /    32 runs   (   76.35 ms per token,    13.10 tokens per second)
0.02.953.275 I llama_perf_context_print:       total time =    2463.16 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.936s
user	0m35.237s
sys	0m9.440s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4365 (36319dec)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40339.38 ms
main:    total time = 40339.38 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.573 I build: 4365 (36319dec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.785 I main: llama backend init
0.00.000.792 I main: load the model and apply lora adapter, if any
0.00.021.803 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.814 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.824 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.833 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.835 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.840 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.841 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.842 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.843 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.844 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.845 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.850 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.851 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.851 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.852 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.853 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.503 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.712 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.622 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.630 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.631 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.631 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.632 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.633 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.634 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.637 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.639 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.640 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.640 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.641 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.646 I llama_model_loader: - type  f32:   37 tensors
0.00.133.647 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.647 I llama_model_loader: - type q6_K:   19 tensors
0.00.219.893 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.274.020 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.274.854 I llm_load_vocab: special tokens cache size = 5
0.00.296.126 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.296.146 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.296.146 I llm_load_print_meta: arch             = gemma
0.00.296.147 I llm_load_print_meta: vocab type       = SPM
0.00.296.147 I llm_load_print_meta: n_vocab          = 256000
0.00.296.148 I llm_load_print_meta: n_merges         = 0
0.00.296.148 I llm_load_print_meta: vocab_only       = 0
0.00.296.148 I llm_load_print_meta: n_ctx_train      = 8192
0.00.296.149 I llm_load_print_meta: n_embd           = 2048
0.00.296.149 I llm_load_print_meta: n_layer          = 18
0.00.296.160 I llm_load_print_meta: n_head           = 8
0.00.296.161 I llm_load_print_meta: n_head_kv        = 1
0.00.296.161 I llm_load_print_meta: n_rot            = 256
0.00.296.162 I llm_load_print_meta: n_swa            = 0
0.00.296.162 I llm_load_print_meta: n_embd_head_k    = 256
0.00.296.162 I llm_load_print_meta: n_embd_head_v    = 256
0.00.296.163 I llm_load_print_meta: n_gqa            = 8
0.00.296.164 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.296.165 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.296.166 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.296.167 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.296.168 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.296.168 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.296.168 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.296.169 I llm_load_print_meta: n_ff             = 16384
0.00.296.170 I llm_load_print_meta: n_expert         = 0
0.00.296.170 I llm_load_print_meta: n_expert_used    = 0
0.00.296.170 I llm_load_print_meta: causal attn      = 1
0.00.296.170 I llm_load_print_meta: pooling type     = 0
0.00.296.171 I llm_load_print_meta: rope type        = 2
0.00.296.171 I llm_load_print_meta: rope scaling     = linear
0.00.296.172 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.296.173 I llm_load_print_meta: freq_scale_train = 1
0.00.296.173 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.296.174 I llm_load_print_meta: rope_finetuned   = unknown
0.00.296.174 I llm_load_print_meta: ssm_d_conv       = 0
0.00.296.174 I llm_load_print_meta: ssm_d_inner      = 0
0.00.296.175 I llm_load_print_meta: ssm_d_state      = 0
0.00.296.175 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.296.175 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.296.176 I llm_load_print_meta: model type       = 2B
0.00.296.176 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.296.177 I llm_load_print_meta: model params     = 2.51 B
0.00.296.178 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.296.178 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.296.179 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.296.179 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.296.179 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.296.180 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.296.180 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.296.180 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.296.181 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.296.181 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.296.181 I llm_load_print_meta: max token length = 93
0.00.356.442 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.356.449 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.356.450 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.356.451 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.356.451 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.356.452 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.361.734 I llama_new_context_with_model: n_seq_max     = 1
0.00.361.743 I llama_new_context_with_model: n_ctx         = 4096
0.00.361.744 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.361.744 I llama_new_context_with_model: n_batch       = 2048
0.00.361.745 I llama_new_context_with_model: n_ubatch      = 512
0.00.361.745 I llama_new_context_with_model: flash_attn    = 0
0.00.361.748 I llama_new_context_with_model: freq_base     = 10000.0
0.00.361.749 I llama_new_context_with_model: freq_scale    = 1
0.00.361.750 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.361.771 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.377.825 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.377.840 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.377.941 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.230 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.379.236 I llama_new_context_with_model: graph nodes  = 601
0.00.379.236 I llama_new_context_with_model: graph splits = 1
0.00.379.238 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.379.239 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.457.943 I main: llama threadpool init, n_threads = 4
0.00.457.962 I 
0.00.458.043 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.458.047 I 
0.00.458.096 I sampler seed: 2731929899
0.00.458.107 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.458.119 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.458.123 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.458.123 I 
 increasities, and other forms of sexual harassment can have devastating consequences for victims.

**What are the consequences of sexual harassment?**

**Physical Consequences:**

0.02.142.259 I llama_perf_sampler_print:    sampling time =       5.29 ms /    33 runs   (    0.16 ms per token,  6233.47 tokens per second)
0.02.142.262 I llama_perf_context_print:        load time =     457.13 ms
0.02.142.263 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.142.265 I llama_perf_context_print:        eval time =    1664.48 ms /    32 runs   (   52.02 ms per token,    19.23 tokens per second)
0.02.142.266 I llama_perf_context_print:       total time =    1684.32 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4365 (36319dec)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40311.33 ms
main:    total time = 40311.33 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.622 I build: 4365 (36319dec) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.828 I main: llama backend init
0.00.000.836 I main: load the model and apply lora adapter, if any
0.00.021.150 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.169 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.176 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.177 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.182 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.183 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.183 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.184 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.185 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.185 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.190 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.191 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.192 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.192 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.193 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.500 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.543 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.415 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.431 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.431 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.432 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.432 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.434 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.435 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.438 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.439 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.445 I llama_model_loader: - type  f32:   37 tensors
0.00.133.456 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.460 I llama_model_loader: - type q6_K:   19 tensors
0.00.226.721 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.279.774 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.280.483 I llm_load_vocab: special tokens cache size = 5
0.00.301.813 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.301.829 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.301.830 I llm_load_print_meta: arch             = gemma
0.00.301.831 I llm_load_print_meta: vocab type       = SPM
0.00.301.832 I llm_load_print_meta: n_vocab          = 256000
0.00.301.832 I llm_load_print_meta: n_merges         = 0
0.00.301.832 I llm_load_print_meta: vocab_only       = 0
0.00.301.833 I llm_load_print_meta: n_ctx_train      = 8192
0.00.301.833 I llm_load_print_meta: n_embd           = 2048
0.00.301.833 I llm_load_print_meta: n_layer          = 18
0.00.301.847 I llm_load_print_meta: n_head           = 8
0.00.301.848 I llm_load_print_meta: n_head_kv        = 1
0.00.301.848 I llm_load_print_meta: n_rot            = 256
0.00.301.848 I llm_load_print_meta: n_swa            = 0
0.00.301.849 I llm_load_print_meta: n_embd_head_k    = 256
0.00.301.849 I llm_load_print_meta: n_embd_head_v    = 256
0.00.301.850 I llm_load_print_meta: n_gqa            = 8
0.00.301.851 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.301.852 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.301.853 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.301.854 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.301.854 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.301.855 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.301.855 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.301.856 I llm_load_print_meta: n_ff             = 16384
0.00.301.856 I llm_load_print_meta: n_expert         = 0
0.00.301.856 I llm_load_print_meta: n_expert_used    = 0
0.00.301.857 I llm_load_print_meta: causal attn      = 1
0.00.301.857 I llm_load_print_meta: pooling type     = 0
0.00.301.857 I llm_load_print_meta: rope type        = 2
0.00.301.858 I llm_load_print_meta: rope scaling     = linear
0.00.301.859 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.301.860 I llm_load_print_meta: freq_scale_train = 1
0.00.301.861 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.301.861 I llm_load_print_meta: rope_finetuned   = unknown
0.00.301.861 I llm_load_print_meta: ssm_d_conv       = 0
0.00.301.861 I llm_load_print_meta: ssm_d_inner      = 0
0.00.301.862 I llm_load_print_meta: ssm_d_state      = 0
0.00.301.862 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.301.862 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.301.863 I llm_load_print_meta: model type       = 2B
0.00.301.863 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.301.864 I llm_load_print_meta: model params     = 2.51 B
0.00.301.865 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.301.865 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.301.866 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.301.866 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.301.866 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.301.867 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.301.867 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.301.867 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.301.867 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.301.868 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.301.868 I llm_load_print_meta: max token length = 93
0.00.358.642 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.363.721 I llama_new_context_with_model: n_seq_max     = 1
0.00.363.727 I llama_new_context_with_model: n_ctx         = 4096
0.00.363.728 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.363.728 I llama_new_context_with_model: n_batch       = 2048
0.00.363.729 I llama_new_context_with_model: n_ubatch      = 512
0.00.363.729 I llama_new_context_with_model: flash_attn    = 0
0.00.363.731 I llama_new_context_with_model: freq_base     = 10000.0
0.00.363.732 I llama_new_context_with_model: freq_scale    = 1
0.00.363.733 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.363.755 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.379.613 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.379.628 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.379.720 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.380.999 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.381.006 I llama_new_context_with_model: graph nodes  = 601
0.00.381.006 I llama_new_context_with_model: graph splits = 1
0.00.381.009 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.381.009 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.457.733 I main: llama threadpool init, n_threads = 4
0.00.457.749 I 
0.00.457.828 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.457.832 I 
0.00.457.875 I sampler seed: 3060375882
0.00.457.888 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.457.891 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.457.892 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.457.893 I 
 increasities on the internet, which often consist of sexually suggestive or sexually explicit content.

**Risks of Online Sex Work:**

* **Exploitation and abuse

0.02.134.229 I llama_perf_sampler_print:    sampling time =       4.98 ms /    33 runs   (    0.15 ms per token,  6630.50 tokens per second)
0.02.134.231 I llama_perf_context_print:        load time =     456.88 ms
0.02.134.232 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.134.233 I llama_perf_context_print:        eval time =    1656.74 ms /    32 runs   (   51.77 ms per token,    19.32 tokens per second)
0.02.134.234 I llama_perf_context_print:       total time =    1676.50 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.770s
user	10m25.505s
sys	0m7.259s
