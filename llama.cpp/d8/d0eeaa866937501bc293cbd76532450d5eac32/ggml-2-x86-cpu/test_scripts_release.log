+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.545 I build: 3921 (d8d0eeaa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.001.829 I main: load the model and apply lora adapter, if any
0.00.022.162 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.212 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.219 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.227 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.231 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.235 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.235 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.236 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.236 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.237 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.237 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.241 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.242 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.243 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.244 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.244 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.765 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.042 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.889 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.895 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.896 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.897 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.898 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.899 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.900 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.904 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.904 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.905 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.906 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.907 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.911 I llama_model_loader: - type  f32:   37 tensors
0.00.132.914 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.385 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.205 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.243.479 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.247.501 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.255.326 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.888 I llm_load_vocab: special tokens cache size = 5
0.00.276.521 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.276.537 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.276.538 I llm_load_print_meta: arch             = gemma
0.00.276.538 I llm_load_print_meta: vocab type       = SPM
0.00.276.539 I llm_load_print_meta: n_vocab          = 256000
0.00.276.539 I llm_load_print_meta: n_merges         = 0
0.00.276.540 I llm_load_print_meta: vocab_only       = 0
0.00.276.540 I llm_load_print_meta: n_ctx_train      = 8192
0.00.276.540 I llm_load_print_meta: n_embd           = 2048
0.00.276.541 I llm_load_print_meta: n_layer          = 18
0.00.276.551 I llm_load_print_meta: n_head           = 8
0.00.276.552 I llm_load_print_meta: n_head_kv        = 1
0.00.276.552 I llm_load_print_meta: n_rot            = 256
0.00.276.553 I llm_load_print_meta: n_swa            = 0
0.00.276.553 I llm_load_print_meta: n_embd_head_k    = 256
0.00.276.553 I llm_load_print_meta: n_embd_head_v    = 256
0.00.276.554 I llm_load_print_meta: n_gqa            = 8
0.00.276.555 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.276.556 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.276.557 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.276.558 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.276.559 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.276.559 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.276.559 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.276.560 I llm_load_print_meta: n_ff             = 16384
0.00.276.561 I llm_load_print_meta: n_expert         = 0
0.00.276.561 I llm_load_print_meta: n_expert_used    = 0
0.00.276.561 I llm_load_print_meta: causal attn      = 1
0.00.276.561 I llm_load_print_meta: pooling type     = 0
0.00.276.562 I llm_load_print_meta: rope type        = 2
0.00.276.562 I llm_load_print_meta: rope scaling     = linear
0.00.276.564 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.276.564 I llm_load_print_meta: freq_scale_train = 1
0.00.276.565 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.276.565 I llm_load_print_meta: rope_finetuned   = unknown
0.00.276.565 I llm_load_print_meta: ssm_d_conv       = 0
0.00.276.565 I llm_load_print_meta: ssm_d_inner      = 0
0.00.276.566 I llm_load_print_meta: ssm_d_state      = 0
0.00.276.566 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.276.566 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.276.567 I llm_load_print_meta: model type       = 2B
0.00.276.567 I llm_load_print_meta: model ftype      = Q8_0
0.00.276.569 I llm_load_print_meta: model params     = 2.51 B
0.00.276.570 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.276.570 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.276.570 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.276.571 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.276.571 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.276.571 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.276.572 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.276.572 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.276.572 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.276.572 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.276.573 I llm_load_print_meta: max token length = 93
0.00.276.593 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.377.820 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.377.827 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.377.827 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.377.828 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.377.828 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.377.829 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.382.916 I llama_new_context_with_model: n_ctx      = 8192
0.00.382.923 I llama_new_context_with_model: n_batch    = 2048
0.00.382.923 I llama_new_context_with_model: n_ubatch   = 512
0.00.382.924 I llama_new_context_with_model: flash_attn = 0
0.00.382.926 I llama_new_context_with_model: freq_base  = 10000.0
0.00.382.926 I llama_new_context_with_model: freq_scale = 1
0.00.411.922 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.411.935 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.412.033 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.412.893 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.412.901 I llama_new_context_with_model: graph nodes  = 601
0.00.412.901 I llama_new_context_with_model: graph splits = 1
0.00.412.903 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.504.324 I main: llama threadpool init, n_threads = 4
0.00.504.335 I 
0.00.504.410 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.504.414 I 
0.00.504.454 I sampler seed: 1806820126
0.00.504.465 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.504.468 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.504.469 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.504.469 I 
 increasements in the context of language models.

**Background:**

* Language models are trained on massive datasets of text and code.
* These models often

0.02.767.742 I llama_perf_sampler_print:    sampling time =       4.95 ms /    33 runs   (    0.15 ms per token,  6669.36 tokens per second)
0.02.767.745 I llama_perf_context_print:        load time =     502.47 ms
0.02.767.746 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.767.749 I llama_perf_context_print:        eval time =    2245.42 ms /    32 runs   (   70.17 ms per token,    14.25 tokens per second)
0.02.767.750 I llama_perf_context_print:       total time =    2263.43 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.539 I build: 3921 (d8d0eeaa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.720 I main: llama backend init
0.00.001.844 I main: load the model and apply lora adapter, if any
0.00.021.853 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.867 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.874 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.875 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.878 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.879 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.880 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.880 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.880 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.882 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.886 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.887 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.887 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.888 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.889 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.339 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.759 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.638 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.645 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.645 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.646 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.647 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.648 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.648 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.651 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.651 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.652 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.653 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.654 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.658 I llama_model_loader: - type  f32:   37 tensors
0.00.132.661 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.013 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.123 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.244.634 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.249.259 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.258.781 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.259.421 I llm_load_vocab: special tokens cache size = 5
0.00.280.244 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.280.262 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.280.262 I llm_load_print_meta: arch             = gemma
0.00.280.262 I llm_load_print_meta: vocab type       = SPM
0.00.280.263 I llm_load_print_meta: n_vocab          = 256000
0.00.280.263 I llm_load_print_meta: n_merges         = 0
0.00.280.264 I llm_load_print_meta: vocab_only       = 0
0.00.280.264 I llm_load_print_meta: n_ctx_train      = 8192
0.00.280.264 I llm_load_print_meta: n_embd           = 2048
0.00.280.265 I llm_load_print_meta: n_layer          = 18
0.00.280.276 I llm_load_print_meta: n_head           = 8
0.00.280.277 I llm_load_print_meta: n_head_kv        = 1
0.00.280.278 I llm_load_print_meta: n_rot            = 256
0.00.280.279 I llm_load_print_meta: n_swa            = 0
0.00.280.279 I llm_load_print_meta: n_embd_head_k    = 256
0.00.280.279 I llm_load_print_meta: n_embd_head_v    = 256
0.00.280.280 I llm_load_print_meta: n_gqa            = 8
0.00.280.282 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.280.283 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.280.283 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.280.285 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.280.285 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.280.285 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.280.286 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.280.287 I llm_load_print_meta: n_ff             = 16384
0.00.280.287 I llm_load_print_meta: n_expert         = 0
0.00.280.287 I llm_load_print_meta: n_expert_used    = 0
0.00.280.288 I llm_load_print_meta: causal attn      = 1
0.00.280.288 I llm_load_print_meta: pooling type     = 0
0.00.280.289 I llm_load_print_meta: rope type        = 2
0.00.280.289 I llm_load_print_meta: rope scaling     = linear
0.00.280.291 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.280.291 I llm_load_print_meta: freq_scale_train = 1
0.00.280.292 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.280.293 I llm_load_print_meta: rope_finetuned   = unknown
0.00.280.293 I llm_load_print_meta: ssm_d_conv       = 0
0.00.280.293 I llm_load_print_meta: ssm_d_inner      = 0
0.00.280.294 I llm_load_print_meta: ssm_d_state      = 0
0.00.280.295 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.280.295 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.280.296 I llm_load_print_meta: model type       = 2B
0.00.280.296 I llm_load_print_meta: model ftype      = Q8_0
0.00.280.297 I llm_load_print_meta: model params     = 2.51 B
0.00.280.299 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.280.299 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.280.300 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.280.301 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.280.301 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.280.301 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.280.301 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.280.302 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.280.302 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.280.302 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.280.303 I llm_load_print_meta: max token length = 93
0.00.280.321 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.375.188 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.380.155 I llama_new_context_with_model: n_ctx      = 8192
0.00.380.162 I llama_new_context_with_model: n_batch    = 2048
0.00.380.162 I llama_new_context_with_model: n_ubatch   = 512
0.00.380.163 I llama_new_context_with_model: flash_attn = 0
0.00.380.165 I llama_new_context_with_model: freq_base  = 10000.0
0.00.380.166 I llama_new_context_with_model: freq_scale = 1
0.00.408.935 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.408.951 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.409.041 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.409.885 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.409.893 I llama_new_context_with_model: graph nodes  = 601
0.00.409.894 I llama_new_context_with_model: graph splits = 1
0.00.409.895 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.497.830 I main: llama threadpool init, n_threads = 4
0.00.497.841 I 
0.00.497.914 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.497.918 I 
0.00.497.958 I sampler seed: 3767390646
0.00.497.968 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.497.976 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.497.977 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.497.978 I 
 increasities can be treated with medication.

True or False?

The statement is true.

The statement is false.

I cannot answer this question from

0.02.694.814 I llama_perf_sampler_print:    sampling time =       4.96 ms /    33 runs   (    0.15 ms per token,  6658.60 tokens per second)
0.02.694.818 I llama_perf_context_print:        load time =     495.96 ms
0.02.694.819 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.694.821 I llama_perf_context_print:        eval time =    2178.18 ms /    32 runs   (   68.07 ms per token,    14.69 tokens per second)
0.02.694.822 I llama_perf_context_print:       total time =    2196.99 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.582 I build: 3921 (d8d0eeaa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.788 I main: llama backend init
0.00.001.874 I main: load the model and apply lora adapter, if any
0.00.021.870 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.921 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.934 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.942 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.943 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.947 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.948 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.949 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.949 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.950 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.950 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.955 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.955 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.956 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.956 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.957 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.688 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.266 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.115 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.122 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.122 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.123 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.124 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.125 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.125 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.128 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.130 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.130 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.131 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.132 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.135 I llama_model_loader: - type  f32:   37 tensors
0.00.132.138 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.437 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.057 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.251.426 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.255.851 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.264.984 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.265.585 I llm_load_vocab: special tokens cache size = 5
0.00.286.344 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.286.364 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.286.365 I llm_load_print_meta: arch             = gemma
0.00.286.365 I llm_load_print_meta: vocab type       = SPM
0.00.286.366 I llm_load_print_meta: n_vocab          = 256000
0.00.286.367 I llm_load_print_meta: n_merges         = 0
0.00.286.367 I llm_load_print_meta: vocab_only       = 0
0.00.286.367 I llm_load_print_meta: n_ctx_train      = 8192
0.00.286.367 I llm_load_print_meta: n_embd           = 2048
0.00.286.368 I llm_load_print_meta: n_layer          = 18
0.00.286.380 I llm_load_print_meta: n_head           = 8
0.00.286.382 I llm_load_print_meta: n_head_kv        = 1
0.00.286.382 I llm_load_print_meta: n_rot            = 256
0.00.286.382 I llm_load_print_meta: n_swa            = 0
0.00.286.383 I llm_load_print_meta: n_embd_head_k    = 256
0.00.286.383 I llm_load_print_meta: n_embd_head_v    = 256
0.00.286.384 I llm_load_print_meta: n_gqa            = 8
0.00.286.385 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.286.386 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.286.386 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.286.387 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.286.387 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.286.388 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.286.388 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.286.389 I llm_load_print_meta: n_ff             = 16384
0.00.286.389 I llm_load_print_meta: n_expert         = 0
0.00.286.389 I llm_load_print_meta: n_expert_used    = 0
0.00.286.390 I llm_load_print_meta: causal attn      = 1
0.00.286.390 I llm_load_print_meta: pooling type     = 0
0.00.286.390 I llm_load_print_meta: rope type        = 2
0.00.286.391 I llm_load_print_meta: rope scaling     = linear
0.00.286.392 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.286.393 I llm_load_print_meta: freq_scale_train = 1
0.00.286.393 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.286.393 I llm_load_print_meta: rope_finetuned   = unknown
0.00.286.393 I llm_load_print_meta: ssm_d_conv       = 0
0.00.286.393 I llm_load_print_meta: ssm_d_inner      = 0
0.00.286.394 I llm_load_print_meta: ssm_d_state      = 0
0.00.286.394 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.286.394 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.286.395 I llm_load_print_meta: model type       = 2B
0.00.286.396 I llm_load_print_meta: model ftype      = Q8_0
0.00.286.397 I llm_load_print_meta: model params     = 2.51 B
0.00.286.397 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.286.398 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.286.398 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.286.398 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.286.399 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.286.399 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.286.399 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.286.400 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.286.400 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.286.401 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.286.401 I llm_load_print_meta: max token length = 93
0.00.286.422 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.361.869 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.361.876 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.361.877 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.361.877 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.361.878 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.361.878 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.367.069 I llama_new_context_with_model: n_ctx      = 8192
0.00.367.075 I llama_new_context_with_model: n_batch    = 2048
0.00.367.076 I llama_new_context_with_model: n_ubatch   = 512
0.00.367.076 I llama_new_context_with_model: flash_attn = 0
0.00.367.079 I llama_new_context_with_model: freq_base  = 10000.0
0.00.367.080 I llama_new_context_with_model: freq_scale = 1
0.00.396.367 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.396.383 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.396.486 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.397.379 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.397.387 I llama_new_context_with_model: graph nodes  = 601
0.00.397.387 I llama_new_context_with_model: graph splits = 1
0.00.397.389 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.498.601 I main: llama threadpool init, n_threads = 4
0.00.498.613 I 
0.00.498.690 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.498.694 I 
0.00.498.736 I sampler seed: 1021407261
0.00.498.748 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.498.752 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.498.753 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.498.753 I 
 increamically.

I have a number line representing my choices. The choices are labeled A, B, and C.

I am presented with a decision where

0.02.766.557 I llama_perf_sampler_print:    sampling time =       5.09 ms /    33 runs   (    0.15 ms per token,  6483.30 tokens per second)
0.02.766.559 I llama_perf_context_print:        load time =     496.70 ms
0.02.766.560 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.766.562 I llama_perf_context_print:        eval time =    2248.70 ms /    32 runs   (   70.27 ms per token,    14.23 tokens per second)
0.02.766.562 I llama_perf_context_print:       total time =    2267.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.561 I build: 3921 (d8d0eeaa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.001.835 I main: load the model and apply lora adapter, if any
0.00.021.913 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.959 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.966 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.971 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.972 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.976 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.977 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.977 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.978 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.978 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.979 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.984 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.984 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.985 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.985 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.986 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.306 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.149 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.997 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.004 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.005 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.005 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.006 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.007 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.008 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.010 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.011 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.012 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.013 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.014 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.016 I llama_model_loader: - type  f32:   37 tensors
0.00.132.022 I llama_model_loader: - type q8_0:  127 tensors
0.00.222.552 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.254.308 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.255.593 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.259.367 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.267.050 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.267.597 I llm_load_vocab: special tokens cache size = 5
0.00.288.099 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.288.119 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.288.119 I llm_load_print_meta: arch             = gemma
0.00.288.120 I llm_load_print_meta: vocab type       = SPM
0.00.288.120 I llm_load_print_meta: n_vocab          = 256000
0.00.288.121 I llm_load_print_meta: n_merges         = 0
0.00.288.121 I llm_load_print_meta: vocab_only       = 0
0.00.288.121 I llm_load_print_meta: n_ctx_train      = 8192
0.00.288.122 I llm_load_print_meta: n_embd           = 2048
0.00.288.122 I llm_load_print_meta: n_layer          = 18
0.00.288.136 I llm_load_print_meta: n_head           = 8
0.00.288.137 I llm_load_print_meta: n_head_kv        = 1
0.00.288.137 I llm_load_print_meta: n_rot            = 256
0.00.288.137 I llm_load_print_meta: n_swa            = 0
0.00.288.138 I llm_load_print_meta: n_embd_head_k    = 256
0.00.288.138 I llm_load_print_meta: n_embd_head_v    = 256
0.00.288.139 I llm_load_print_meta: n_gqa            = 8
0.00.288.140 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.288.141 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.288.142 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.288.143 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.288.143 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.288.144 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.288.144 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.288.145 I llm_load_print_meta: n_ff             = 16384
0.00.288.146 I llm_load_print_meta: n_expert         = 0
0.00.288.146 I llm_load_print_meta: n_expert_used    = 0
0.00.288.146 I llm_load_print_meta: causal attn      = 1
0.00.288.147 I llm_load_print_meta: pooling type     = 0
0.00.288.148 I llm_load_print_meta: rope type        = 2
0.00.288.148 I llm_load_print_meta: rope scaling     = linear
0.00.288.149 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.288.150 I llm_load_print_meta: freq_scale_train = 1
0.00.288.150 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.288.151 I llm_load_print_meta: rope_finetuned   = unknown
0.00.288.152 I llm_load_print_meta: ssm_d_conv       = 0
0.00.288.152 I llm_load_print_meta: ssm_d_inner      = 0
0.00.288.152 I llm_load_print_meta: ssm_d_state      = 0
0.00.288.152 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.288.153 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.288.153 I llm_load_print_meta: model type       = 2B
0.00.288.154 I llm_load_print_meta: model ftype      = Q8_0
0.00.288.155 I llm_load_print_meta: model params     = 2.51 B
0.00.288.156 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.288.156 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.288.157 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.288.158 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.288.158 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.288.159 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.288.159 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.288.159 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.288.160 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.288.160 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.288.160 I llm_load_print_meta: max token length = 93
0.00.288.191 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.358.502 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.358.509 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.363.540 I llama_new_context_with_model: n_ctx      = 8192
0.00.363.546 I llama_new_context_with_model: n_batch    = 2048
0.00.363.547 I llama_new_context_with_model: n_ubatch   = 512
0.00.363.547 I llama_new_context_with_model: flash_attn = 0
0.00.363.549 I llama_new_context_with_model: freq_base  = 10000.0
0.00.363.550 I llama_new_context_with_model: freq_scale = 1
0.00.392.746 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.392.760 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.392.850 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.393.726 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.393.734 I llama_new_context_with_model: graph nodes  = 601
0.00.393.734 I llama_new_context_with_model: graph splits = 1
0.00.393.737 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.489.405 I main: llama threadpool init, n_threads = 4
0.00.489.418 I 
0.00.489.491 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.489.495 I 
0.00.489.534 I sampler seed: 2066067616
0.00.489.544 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.489.546 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.489.547 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.489.547 I 
 increasities in the workplace.

**Discuss the causes and consequences of workplace harassment.**

**Discuss steps to prevent and address workplace harassment.**

**Discuss the

0.02.921.212 I llama_perf_sampler_print:    sampling time =       4.84 ms /    33 runs   (    0.15 ms per token,  6812.55 tokens per second)
0.02.921.214 I llama_perf_context_print:        load time =     487.55 ms
0.02.921.216 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.921.217 I llama_perf_context_print:        eval time =    2413.56 ms /    32 runs   (   75.42 ms per token,    13.26 tokens per second)
0.02.921.220 I llama_perf_context_print:       total time =    2431.82 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.600s
user	0m39.591s
sys	0m9.438s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3921 (d8d0eeaa)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32041.97 ms
main:    total time = 32041.97 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.541 I build: 3921 (d8d0eeaa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.001.881 I main: load the model and apply lora adapter, if any
0.00.022.266 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.329 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.337 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.342 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.347 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.351 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.352 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.353 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.355 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.356 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.357 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.362 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.363 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.364 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.365 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.370 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.591 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.385 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.283 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.290 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.291 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.291 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.292 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.293 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.293 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.296 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.296 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.297 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.298 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.299 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.302 I llama_model_loader: - type  f32:   37 tensors
0.00.132.305 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.305 I llama_model_loader: - type q6_K:   19 tensors
0.00.209.292 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.252 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.244.872 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.249.962 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.260.583 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.261.279 I llm_load_vocab: special tokens cache size = 5
0.00.281.981 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.281.999 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.000 I llm_load_print_meta: arch             = gemma
0.00.282.000 I llm_load_print_meta: vocab type       = SPM
0.00.282.011 I llm_load_print_meta: n_vocab          = 256000
0.00.282.011 I llm_load_print_meta: n_merges         = 0
0.00.282.011 I llm_load_print_meta: vocab_only       = 0
0.00.282.012 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.013 I llm_load_print_meta: n_embd           = 2048
0.00.282.013 I llm_load_print_meta: n_layer          = 18
0.00.282.026 I llm_load_print_meta: n_head           = 8
0.00.282.027 I llm_load_print_meta: n_head_kv        = 1
0.00.282.027 I llm_load_print_meta: n_rot            = 256
0.00.282.027 I llm_load_print_meta: n_swa            = 0
0.00.282.028 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.028 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.029 I llm_load_print_meta: n_gqa            = 8
0.00.282.030 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.031 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.032 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.033 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.033 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.034 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.034 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.035 I llm_load_print_meta: n_ff             = 16384
0.00.282.035 I llm_load_print_meta: n_expert         = 0
0.00.282.036 I llm_load_print_meta: n_expert_used    = 0
0.00.282.036 I llm_load_print_meta: causal attn      = 1
0.00.282.037 I llm_load_print_meta: pooling type     = 0
0.00.282.037 I llm_load_print_meta: rope type        = 2
0.00.282.038 I llm_load_print_meta: rope scaling     = linear
0.00.282.039 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.040 I llm_load_print_meta: freq_scale_train = 1
0.00.282.040 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.041 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.041 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.041 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.042 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.042 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.042 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.044 I llm_load_print_meta: model type       = 2B
0.00.282.044 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.282.045 I llm_load_print_meta: model params     = 2.51 B
0.00.282.046 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.282.047 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.047 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.048 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.048 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.048 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.049 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.050 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.050 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.051 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.051 I llm_load_print_meta: max token length = 93
0.00.282.075 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.341.285 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.341.292 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.341.293 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.341.294 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.341.295 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.341.295 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.346.433 I llama_new_context_with_model: n_ctx      = 8192
0.00.346.438 I llama_new_context_with_model: n_batch    = 2048
0.00.346.438 I llama_new_context_with_model: n_ubatch   = 512
0.00.346.439 I llama_new_context_with_model: flash_attn = 0
0.00.346.441 I llama_new_context_with_model: freq_base  = 10000.0
0.00.346.442 I llama_new_context_with_model: freq_scale = 1
0.00.375.068 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.375.083 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.375.182 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.376.067 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.376.076 I llama_new_context_with_model: graph nodes  = 601
0.00.376.076 I llama_new_context_with_model: graph splits = 1
0.00.376.078 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.456.915 I main: llama threadpool init, n_threads = 4
0.00.456.926 I 
0.00.457.004 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.457.008 I 
0.00.457.048 I sampler seed: 2512474798
0.00.457.059 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.457.062 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.457.063 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.457.064 I 
 increasities, which often lead to unintended pregnancies, unplanned deliveries, and increased risk of maternal and infant mortality.

**What are the potential consequences of unplanned pregnancies

0.02.094.513 I llama_perf_sampler_print:    sampling time =       6.00 ms /    33 runs   (    0.18 ms per token,  5500.92 tokens per second)
0.02.094.515 I llama_perf_context_print:        load time =     455.01 ms
0.02.094.516 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.094.519 I llama_perf_context_print:        eval time =    1617.77 ms /    32 runs   (   50.56 ms per token,    19.78 tokens per second)
0.02.094.520 I llama_perf_context_print:       total time =    1637.60 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3921 (d8d0eeaa)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32216.13 ms
main:    total time = 32216.13 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.599 I build: 3921 (d8d0eeaa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.792 I main: llama backend init
0.00.001.926 I main: load the model and apply lora adapter, if any
0.00.022.574 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.584 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.592 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.593 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.597 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.598 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.599 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.600 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.600 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.601 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.605 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.606 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.606 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.607 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.607 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.567 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.700 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.589 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.595 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.596 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.597 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.598 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.599 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.599 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.602 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.603 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.607 I llama_model_loader: - type  f32:   37 tensors
0.00.133.610 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.611 I llama_model_loader: - type q6_K:   19 tensors
0.00.210.683 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.511 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.241.744 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.245.442 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.252.844 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.369 I llm_load_vocab: special tokens cache size = 5
0.00.273.804 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.273.819 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.273.820 I llm_load_print_meta: arch             = gemma
0.00.273.821 I llm_load_print_meta: vocab type       = SPM
0.00.273.821 I llm_load_print_meta: n_vocab          = 256000
0.00.273.822 I llm_load_print_meta: n_merges         = 0
0.00.273.822 I llm_load_print_meta: vocab_only       = 0
0.00.273.822 I llm_load_print_meta: n_ctx_train      = 8192
0.00.273.823 I llm_load_print_meta: n_embd           = 2048
0.00.273.823 I llm_load_print_meta: n_layer          = 18
0.00.273.833 I llm_load_print_meta: n_head           = 8
0.00.273.834 I llm_load_print_meta: n_head_kv        = 1
0.00.273.835 I llm_load_print_meta: n_rot            = 256
0.00.273.835 I llm_load_print_meta: n_swa            = 0
0.00.273.835 I llm_load_print_meta: n_embd_head_k    = 256
0.00.273.835 I llm_load_print_meta: n_embd_head_v    = 256
0.00.273.836 I llm_load_print_meta: n_gqa            = 8
0.00.273.837 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.273.838 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.273.839 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.273.840 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.273.841 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.273.841 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.273.841 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.273.842 I llm_load_print_meta: n_ff             = 16384
0.00.273.842 I llm_load_print_meta: n_expert         = 0
0.00.273.843 I llm_load_print_meta: n_expert_used    = 0
0.00.273.843 I llm_load_print_meta: causal attn      = 1
0.00.273.843 I llm_load_print_meta: pooling type     = 0
0.00.273.844 I llm_load_print_meta: rope type        = 2
0.00.273.844 I llm_load_print_meta: rope scaling     = linear
0.00.273.846 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.846 I llm_load_print_meta: freq_scale_train = 1
0.00.273.847 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.847 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.847 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.847 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.848 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.848 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.848 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.848 I llm_load_print_meta: model type       = 2B
0.00.273.849 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.273.850 I llm_load_print_meta: model params     = 2.51 B
0.00.273.850 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.273.851 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.851 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.852 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.852 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.852 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.853 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.853 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.853 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.854 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.854 I llm_load_print_meta: max token length = 93
0.00.273.871 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.331.886 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.337.057 I llama_new_context_with_model: n_ctx      = 8192
0.00.337.063 I llama_new_context_with_model: n_batch    = 2048
0.00.337.063 I llama_new_context_with_model: n_ubatch   = 512
0.00.337.064 I llama_new_context_with_model: flash_attn = 0
0.00.337.066 I llama_new_context_with_model: freq_base  = 10000.0
0.00.337.067 I llama_new_context_with_model: freq_scale = 1
0.00.367.629 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.367.646 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.367.737 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.368.601 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.368.610 I llama_new_context_with_model: graph nodes  = 601
0.00.368.610 I llama_new_context_with_model: graph splits = 1
0.00.368.613 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.450.710 I main: llama threadpool init, n_threads = 4
0.00.450.723 I 
0.00.450.797 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.450.800 I 
0.00.450.841 I sampler seed: 378541928
0.00.450.853 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.450.855 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.450.869 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.450.872 I 
 seconally!

I cannot answer the question as it contains profanity. I am programmed to provide safe and respectful responses. [end of text]


0.01.784.279 I llama_perf_sampler_print:    sampling time =       3.95 ms /    27 runs   (    0.15 ms per token,  6837.17 tokens per second)
0.01.784.281 I llama_perf_context_print:        load time =     448.76 ms
0.01.784.282 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.784.283 I llama_perf_context_print:        eval time =    1317.83 ms /    26 runs   (   50.69 ms per token,    19.73 tokens per second)
0.01.784.284 I llama_perf_context_print:       total time =    1333.58 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.976s
user	8m13.796s
sys	0m7.105s
