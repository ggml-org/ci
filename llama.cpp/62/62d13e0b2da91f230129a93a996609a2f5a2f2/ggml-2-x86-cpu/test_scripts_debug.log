+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.601 I build: 3761 (6262d13e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.795 I main: llama backend init
0.00.002.733 I main: load the model and apply lora adapter, if any
0.00.024.644 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.839 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.925 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.935 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.937 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.941 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.942 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.943 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.944 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.945 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.946 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.953 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.954 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.955 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.956 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.957 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.101 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.184.935 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.006 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.014 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.014 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.015 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.016 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.017 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.018 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.020 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.021 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.037 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.197.039 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.197.045 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.197.053 I llama_model_loader: - type  f32:   37 tensors
0.00.197.063 I llama_model_loader: - type q8_0:  127 tensors
0.00.483.503 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.484.630 I llm_load_vocab: special tokens cache size = 5
0.00.547.138 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.547.194 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.547.198 I llm_load_print_meta: arch             = gemma
0.00.547.199 I llm_load_print_meta: vocab type       = SPM
0.00.547.200 I llm_load_print_meta: n_vocab          = 256000
0.00.547.202 I llm_load_print_meta: n_merges         = 0
0.00.547.203 I llm_load_print_meta: vocab_only       = 0
0.00.547.203 I llm_load_print_meta: n_ctx_train      = 8192
0.00.547.204 I llm_load_print_meta: n_embd           = 2048
0.00.547.205 I llm_load_print_meta: n_layer          = 18
0.00.547.240 I llm_load_print_meta: n_head           = 8
0.00.547.250 I llm_load_print_meta: n_head_kv        = 1
0.00.547.250 I llm_load_print_meta: n_rot            = 256
0.00.547.261 I llm_load_print_meta: n_swa            = 0
0.00.547.261 I llm_load_print_meta: n_embd_head_k    = 256
0.00.547.273 I llm_load_print_meta: n_embd_head_v    = 256
0.00.547.281 I llm_load_print_meta: n_gqa            = 8
0.00.547.286 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.547.291 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.547.294 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.547.296 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.547.296 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.547.296 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.547.297 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.547.302 I llm_load_print_meta: n_ff             = 16384
0.00.547.302 I llm_load_print_meta: n_expert         = 0
0.00.547.303 I llm_load_print_meta: n_expert_used    = 0
0.00.547.304 I llm_load_print_meta: causal attn      = 1
0.00.547.304 I llm_load_print_meta: pooling type     = 0
0.00.547.305 I llm_load_print_meta: rope type        = 2
0.00.547.306 I llm_load_print_meta: rope scaling     = linear
0.00.547.307 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.547.308 I llm_load_print_meta: freq_scale_train = 1
0.00.547.309 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.547.309 I llm_load_print_meta: rope_finetuned   = unknown
0.00.547.310 I llm_load_print_meta: ssm_d_conv       = 0
0.00.547.311 I llm_load_print_meta: ssm_d_inner      = 0
0.00.547.311 I llm_load_print_meta: ssm_d_state      = 0
0.00.547.311 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.547.312 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.547.313 I llm_load_print_meta: model type       = 2B
0.00.547.314 I llm_load_print_meta: model ftype      = Q8_0
0.00.547.315 I llm_load_print_meta: model params     = 2.51 B
0.00.547.316 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.547.318 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.547.319 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.547.319 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.547.320 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.547.320 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.547.321 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.547.322 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.547.322 I llm_load_print_meta: max token length = 93
0.00.547.507 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.646.526 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.646.536 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.646.537 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.646.537 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.646.538 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.646.539 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.652.112 I llama_new_context_with_model: n_ctx      = 8192
0.00.652.119 I llama_new_context_with_model: n_batch    = 2048
0.00.652.119 I llama_new_context_with_model: n_ubatch   = 512
0.00.652.120 I llama_new_context_with_model: flash_attn = 0
0.00.652.123 I llama_new_context_with_model: freq_base  = 10000.0
0.00.652.124 I llama_new_context_with_model: freq_scale = 1
0.00.681.557 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.681.602 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.681.713 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.683.089 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.683.095 I llama_new_context_with_model: graph nodes  = 601
0.00.683.095 I llama_new_context_with_model: graph splits = 1
0.00.683.111 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.295.399 I main: llama threadpool init, n_threads = 4
0.01.295.410 I 
0.01.295.500 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.295.505 I 
0.01.295.651 I sampler seed: 3599242771
0.01.295.662 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.295.666 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.295.667 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increasities, it is imperative that a comprehensive safety assessment is conducted to identify and mitigate potential hazards.

**Safety Assessment Process:**

1. **Hazard Identification

0.14.781.085 I llama_perf_sampler_print:    sampling time =      49.16 ms /    33 runs   (    1.49 ms per token,   671.24 tokens per second)
0.14.781.089 I llama_perf_context_print:        load time =    1292.60 ms
0.14.781.091 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.781.092 I llama_perf_context_print:        eval time =   13404.08 ms /    32 runs   (  418.88 ms per token,     2.39 tokens per second)
0.14.781.104 I llama_perf_context_print:       total time =   13485.70 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.622 I build: 3761 (6262d13e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.829 I main: llama backend init
0.00.002.787 I main: load the model and apply lora adapter, if any
0.00.024.629 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.716 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.729 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.733 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.737 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.737 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.738 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.739 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.740 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.740 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.746 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.747 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.747 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.748 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.749 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.328 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.183.434 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.195.563 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.195.569 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.195.570 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.195.571 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.195.572 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.195.573 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.195.574 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.195.577 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.195.578 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.195.579 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.195.579 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.195.580 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.195.588 I llama_model_loader: - type  f32:   37 tensors
0.00.195.592 I llama_model_loader: - type q8_0:  127 tensors
0.00.472.061 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.473.167 I llm_load_vocab: special tokens cache size = 5
0.00.531.739 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.531.793 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.531.794 I llm_load_print_meta: arch             = gemma
0.00.531.795 I llm_load_print_meta: vocab type       = SPM
0.00.531.796 I llm_load_print_meta: n_vocab          = 256000
0.00.531.798 I llm_load_print_meta: n_merges         = 0
0.00.531.799 I llm_load_print_meta: vocab_only       = 0
0.00.531.799 I llm_load_print_meta: n_ctx_train      = 8192
0.00.531.800 I llm_load_print_meta: n_embd           = 2048
0.00.531.800 I llm_load_print_meta: n_layer          = 18
0.00.531.834 I llm_load_print_meta: n_head           = 8
0.00.531.840 I llm_load_print_meta: n_head_kv        = 1
0.00.531.841 I llm_load_print_meta: n_rot            = 256
0.00.531.841 I llm_load_print_meta: n_swa            = 0
0.00.531.842 I llm_load_print_meta: n_embd_head_k    = 256
0.00.531.842 I llm_load_print_meta: n_embd_head_v    = 256
0.00.531.847 I llm_load_print_meta: n_gqa            = 8
0.00.531.852 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.531.857 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.531.858 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.531.859 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.531.860 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.531.860 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.531.860 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.531.865 I llm_load_print_meta: n_ff             = 16384
0.00.531.865 I llm_load_print_meta: n_expert         = 0
0.00.531.866 I llm_load_print_meta: n_expert_used    = 0
0.00.531.866 I llm_load_print_meta: causal attn      = 1
0.00.531.866 I llm_load_print_meta: pooling type     = 0
0.00.531.867 I llm_load_print_meta: rope type        = 2
0.00.531.867 I llm_load_print_meta: rope scaling     = linear
0.00.531.868 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.531.869 I llm_load_print_meta: freq_scale_train = 1
0.00.531.871 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.531.871 I llm_load_print_meta: rope_finetuned   = unknown
0.00.531.871 I llm_load_print_meta: ssm_d_conv       = 0
0.00.531.872 I llm_load_print_meta: ssm_d_inner      = 0
0.00.531.872 I llm_load_print_meta: ssm_d_state      = 0
0.00.531.872 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.531.872 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.531.873 I llm_load_print_meta: model type       = 2B
0.00.531.874 I llm_load_print_meta: model ftype      = Q8_0
0.00.531.875 I llm_load_print_meta: model params     = 2.51 B
0.00.531.876 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.531.876 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.531.877 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.531.877 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.531.881 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.531.882 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.531.882 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.531.883 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.531.892 I llm_load_print_meta: max token length = 93
0.00.532.058 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.624.363 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.630.062 I llama_new_context_with_model: n_ctx      = 8192
0.00.630.068 I llama_new_context_with_model: n_batch    = 2048
0.00.630.069 I llama_new_context_with_model: n_ubatch   = 512
0.00.630.070 I llama_new_context_with_model: flash_attn = 0
0.00.630.072 I llama_new_context_with_model: freq_base  = 10000.0
0.00.630.073 I llama_new_context_with_model: freq_scale = 1
0.00.659.074 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.659.119 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.659.230 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.660.580 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.660.585 I llama_new_context_with_model: graph nodes  = 601
0.00.660.586 I llama_new_context_with_model: graph splits = 1
0.00.660.602 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.272.312 I main: llama threadpool init, n_threads = 4
0.01.272.323 I 
0.01.272.413 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.272.417 I 
0.01.272.569 I sampler seed: 2070038442
0.01.272.579 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.272.584 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.272.584 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increasities that violate the law.

**Answer:**

I am unable to provide information that may facilitate or promote criminal activity. [end of text]


0.12.744.194 I llama_perf_sampler_print:    sampling time =      42.14 ms /    28 runs   (    1.50 ms per token,   664.48 tokens per second)
0.12.744.197 I llama_perf_context_print:        load time =    1269.45 ms
0.12.744.198 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.744.200 I llama_perf_context_print:        eval time =   11400.22 ms /    27 runs   (  422.23 ms per token,     2.37 tokens per second)
0.12.744.201 I llama_perf_context_print:       total time =   11471.89 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.650 I build: 3761 (6262d13e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.847 I main: llama backend init
0.00.002.794 I main: load the model and apply lora adapter, if any
0.00.024.467 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.652 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.734 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.745 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.747 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.751 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.752 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.760 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.761 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.762 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.763 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.769 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.769 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.770 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.778 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.791 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.279 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.183.377 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.195.345 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.195.352 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.195.353 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.195.354 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.195.355 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.195.356 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.195.356 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.195.360 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.195.361 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.195.362 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.195.362 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.195.363 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.195.370 I llama_model_loader: - type  f32:   37 tensors
0.00.195.373 I llama_model_loader: - type q8_0:  127 tensors
0.00.485.519 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.486.524 I llm_load_vocab: special tokens cache size = 5
0.00.544.841 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.544.895 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.544.896 I llm_load_print_meta: arch             = gemma
0.00.544.896 I llm_load_print_meta: vocab type       = SPM
0.00.544.897 I llm_load_print_meta: n_vocab          = 256000
0.00.544.900 I llm_load_print_meta: n_merges         = 0
0.00.544.900 I llm_load_print_meta: vocab_only       = 0
0.00.544.900 I llm_load_print_meta: n_ctx_train      = 8192
0.00.544.901 I llm_load_print_meta: n_embd           = 2048
0.00.544.901 I llm_load_print_meta: n_layer          = 18
0.00.544.933 I llm_load_print_meta: n_head           = 8
0.00.544.940 I llm_load_print_meta: n_head_kv        = 1
0.00.544.941 I llm_load_print_meta: n_rot            = 256
0.00.544.941 I llm_load_print_meta: n_swa            = 0
0.00.544.941 I llm_load_print_meta: n_embd_head_k    = 256
0.00.544.942 I llm_load_print_meta: n_embd_head_v    = 256
0.00.544.946 I llm_load_print_meta: n_gqa            = 8
0.00.544.951 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.544.956 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.544.957 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.544.958 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.544.959 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.544.959 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.544.959 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.544.964 I llm_load_print_meta: n_ff             = 16384
0.00.544.964 I llm_load_print_meta: n_expert         = 0
0.00.544.965 I llm_load_print_meta: n_expert_used    = 0
0.00.544.965 I llm_load_print_meta: causal attn      = 1
0.00.544.965 I llm_load_print_meta: pooling type     = 0
0.00.544.966 I llm_load_print_meta: rope type        = 2
0.00.544.966 I llm_load_print_meta: rope scaling     = linear
0.00.544.968 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.544.968 I llm_load_print_meta: freq_scale_train = 1
0.00.544.969 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.544.969 I llm_load_print_meta: rope_finetuned   = unknown
0.00.544.970 I llm_load_print_meta: ssm_d_conv       = 0
0.00.544.970 I llm_load_print_meta: ssm_d_inner      = 0
0.00.544.971 I llm_load_print_meta: ssm_d_state      = 0
0.00.544.971 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.544.971 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.544.972 I llm_load_print_meta: model type       = 2B
0.00.544.973 I llm_load_print_meta: model ftype      = Q8_0
0.00.544.974 I llm_load_print_meta: model params     = 2.51 B
0.00.544.975 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.544.975 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.544.976 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.544.976 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.544.976 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.544.977 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.544.977 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.544.978 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.544.978 I llm_load_print_meta: max token length = 93
0.00.545.150 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.623.408 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.623.418 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.623.419 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.623.420 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.623.420 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.623.421 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.629.015 I llama_new_context_with_model: n_ctx      = 8192
0.00.629.021 I llama_new_context_with_model: n_batch    = 2048
0.00.629.022 I llama_new_context_with_model: n_ubatch   = 512
0.00.629.022 I llama_new_context_with_model: flash_attn = 0
0.00.629.025 I llama_new_context_with_model: freq_base  = 10000.0
0.00.629.025 I llama_new_context_with_model: freq_scale = 1
0.00.657.647 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.657.689 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.657.802 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.659.190 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.659.196 I llama_new_context_with_model: graph nodes  = 601
0.00.659.196 I llama_new_context_with_model: graph splits = 1
0.00.659.214 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.271.238 I main: llama threadpool init, n_threads = 4
0.01.271.249 I 
0.01.271.340 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.271.343 I 
0.01.271.493 I sampler seed: 4273971683
0.01.271.503 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.271.508 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.271.509 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increasities. [end of text]


0.02.953.371 I llama_perf_sampler_print:    sampling time =       6.25 ms /     5 runs   (    1.25 ms per token,   800.38 tokens per second)
0.02.953.374 I llama_perf_context_print:        load time =    1268.37 ms
0.02.953.375 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.953.377 I llama_perf_context_print:        eval time =    1670.41 ms /     4 runs   (  417.60 ms per token,     2.39 tokens per second)
0.02.953.390 I llama_perf_context_print:       total time =    1682.14 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.626 I build: 3761 (6262d13e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.829 I main: llama backend init
0.00.002.785 I main: load the model and apply lora adapter, if any
0.00.024.459 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.650 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.734 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.744 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.745 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.749 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.751 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.753 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.754 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.754 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.763 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.774 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.778 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.779 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.780 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.781 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.458 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.183.398 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.195.469 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.195.476 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.195.478 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.195.478 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.195.479 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.195.480 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.195.481 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.195.484 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.195.485 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.195.486 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.195.487 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.195.488 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.195.496 I llama_model_loader: - type  f32:   37 tensors
0.00.195.502 I llama_model_loader: - type q8_0:  127 tensors
0.00.477.905 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.478.941 I llm_load_vocab: special tokens cache size = 5
0.00.543.173 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.543.226 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.543.227 I llm_load_print_meta: arch             = gemma
0.00.543.228 I llm_load_print_meta: vocab type       = SPM
0.00.543.229 I llm_load_print_meta: n_vocab          = 256000
0.00.543.231 I llm_load_print_meta: n_merges         = 0
0.00.543.231 I llm_load_print_meta: vocab_only       = 0
0.00.543.232 I llm_load_print_meta: n_ctx_train      = 8192
0.00.543.232 I llm_load_print_meta: n_embd           = 2048
0.00.543.232 I llm_load_print_meta: n_layer          = 18
0.00.543.264 I llm_load_print_meta: n_head           = 8
0.00.543.271 I llm_load_print_meta: n_head_kv        = 1
0.00.543.272 I llm_load_print_meta: n_rot            = 256
0.00.543.272 I llm_load_print_meta: n_swa            = 0
0.00.543.272 I llm_load_print_meta: n_embd_head_k    = 256
0.00.543.273 I llm_load_print_meta: n_embd_head_v    = 256
0.00.543.277 I llm_load_print_meta: n_gqa            = 8
0.00.543.282 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.543.287 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.543.288 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.543.290 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.543.290 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.543.290 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.543.291 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.543.295 I llm_load_print_meta: n_ff             = 16384
0.00.543.296 I llm_load_print_meta: n_expert         = 0
0.00.543.296 I llm_load_print_meta: n_expert_used    = 0
0.00.543.296 I llm_load_print_meta: causal attn      = 1
0.00.543.297 I llm_load_print_meta: pooling type     = 0
0.00.543.297 I llm_load_print_meta: rope type        = 2
0.00.543.298 I llm_load_print_meta: rope scaling     = linear
0.00.543.317 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.543.318 I llm_load_print_meta: freq_scale_train = 1
0.00.543.319 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.543.319 I llm_load_print_meta: rope_finetuned   = unknown
0.00.543.320 I llm_load_print_meta: ssm_d_conv       = 0
0.00.543.320 I llm_load_print_meta: ssm_d_inner      = 0
0.00.543.320 I llm_load_print_meta: ssm_d_state      = 0
0.00.543.320 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.543.321 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.543.321 I llm_load_print_meta: model type       = 2B
0.00.543.322 I llm_load_print_meta: model ftype      = Q8_0
0.00.543.323 I llm_load_print_meta: model params     = 2.51 B
0.00.543.324 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.543.325 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.543.326 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.543.326 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.543.327 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.543.327 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.543.328 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.543.329 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.543.329 I llm_load_print_meta: max token length = 93
0.00.543.496 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.614.900 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.614.910 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.620.423 I llama_new_context_with_model: n_ctx      = 8192
0.00.620.431 I llama_new_context_with_model: n_batch    = 2048
0.00.620.431 I llama_new_context_with_model: n_ubatch   = 512
0.00.620.432 I llama_new_context_with_model: flash_attn = 0
0.00.620.434 I llama_new_context_with_model: freq_base  = 10000.0
0.00.620.434 I llama_new_context_with_model: freq_scale = 1
0.00.649.127 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.649.167 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.649.280 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.650.697 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.650.704 I llama_new_context_with_model: graph nodes  = 601
0.00.650.704 I llama_new_context_with_model: graph splits = 1
0.00.650.720 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.269.001 I main: llama threadpool init, n_threads = 4
0.01.269.014 I 
0.01.269.104 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.269.107 I 
0.01.269.254 I sampler seed: 1342603377
0.01.269.264 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.269.268 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.269.269 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increasities and provide explanations for your answer.

I am unable to generate responses that are sexually suggestive in nature. [end of text]


0.11.365.398 I llama_perf_sampler_print:    sampling time =      36.83 ms /    25 runs   (    1.47 ms per token,   678.83 tokens per second)
0.11.365.400 I llama_perf_context_print:        load time =    1266.14 ms
0.11.365.402 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.11.365.403 I llama_perf_context_print:        eval time =   10035.01 ms /    24 runs   (  418.13 ms per token,     2.39 tokens per second)
0.11.365.404 I llama_perf_context_print:       total time =   10096.41 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m51.333s
user	2m39.385s
sys	0m9.281s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3761 (6262d13e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198992.30 ms
main:    total time = 198992.30 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.630 I build: 3761 (6262d13e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.835 I main: llama backend init
0.00.002.792 I main: load the model and apply lora adapter, if any
0.00.024.779 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.963 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.045 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.055 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.057 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.060 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.061 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.062 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.063 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.063 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.065 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.070 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.071 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.072 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.072 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.073 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.166 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.183.248 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.195.352 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.195.360 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.195.361 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.195.362 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.195.363 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.195.364 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.195.365 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.195.368 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.195.369 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.195.369 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.195.370 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.195.371 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.195.380 I llama_model_loader: - type  f32:   37 tensors
0.00.195.384 I llama_model_loader: - type q4_K:  108 tensors
0.00.195.385 I llama_model_loader: - type q6_K:   19 tensors
0.00.475.169 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.476.173 I llm_load_vocab: special tokens cache size = 5
0.00.534.562 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.534.617 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.534.618 I llm_load_print_meta: arch             = gemma
0.00.534.619 I llm_load_print_meta: vocab type       = SPM
0.00.534.619 I llm_load_print_meta: n_vocab          = 256000
0.00.534.622 I llm_load_print_meta: n_merges         = 0
0.00.534.622 I llm_load_print_meta: vocab_only       = 0
0.00.534.623 I llm_load_print_meta: n_ctx_train      = 8192
0.00.534.623 I llm_load_print_meta: n_embd           = 2048
0.00.534.623 I llm_load_print_meta: n_layer          = 18
0.00.534.656 I llm_load_print_meta: n_head           = 8
0.00.534.662 I llm_load_print_meta: n_head_kv        = 1
0.00.534.663 I llm_load_print_meta: n_rot            = 256
0.00.534.664 I llm_load_print_meta: n_swa            = 0
0.00.534.664 I llm_load_print_meta: n_embd_head_k    = 256
0.00.534.664 I llm_load_print_meta: n_embd_head_v    = 256
0.00.534.669 I llm_load_print_meta: n_gqa            = 8
0.00.534.674 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.534.678 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.534.679 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.534.681 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.534.681 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.534.682 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.534.682 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.534.704 I llm_load_print_meta: n_ff             = 16384
0.00.534.705 I llm_load_print_meta: n_expert         = 0
0.00.534.706 I llm_load_print_meta: n_expert_used    = 0
0.00.534.706 I llm_load_print_meta: causal attn      = 1
0.00.534.706 I llm_load_print_meta: pooling type     = 0
0.00.534.706 I llm_load_print_meta: rope type        = 2
0.00.534.707 I llm_load_print_meta: rope scaling     = linear
0.00.534.709 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.534.709 I llm_load_print_meta: freq_scale_train = 1
0.00.534.710 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.534.710 I llm_load_print_meta: rope_finetuned   = unknown
0.00.534.710 I llm_load_print_meta: ssm_d_conv       = 0
0.00.534.711 I llm_load_print_meta: ssm_d_inner      = 0
0.00.534.711 I llm_load_print_meta: ssm_d_state      = 0
0.00.534.712 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.534.720 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.534.728 I llm_load_print_meta: model type       = 2B
0.00.534.729 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.534.730 I llm_load_print_meta: model params     = 2.51 B
0.00.534.731 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.534.731 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.534.732 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.534.732 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.534.739 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.534.747 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.534.751 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.534.751 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.534.752 I llm_load_print_meta: max token length = 93
0.00.534.917 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.594.816 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.594.824 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.594.825 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.594.826 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.594.827 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.594.827 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.600.410 I llama_new_context_with_model: n_ctx      = 8192
0.00.600.418 I llama_new_context_with_model: n_batch    = 2048
0.00.600.418 I llama_new_context_with_model: n_ubatch   = 512
0.00.600.419 I llama_new_context_with_model: flash_attn = 0
0.00.600.421 I llama_new_context_with_model: freq_base  = 10000.0
0.00.600.422 I llama_new_context_with_model: freq_scale = 1
0.00.629.765 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.629.807 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.629.917 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.631.302 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.631.309 I llama_new_context_with_model: graph nodes  = 601
0.00.631.309 I llama_new_context_with_model: graph splits = 1
0.00.631.325 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.205.966 I main: llama threadpool init, n_threads = 4
0.01.205.978 I 
0.01.206.069 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.206.073 I 
0.01.206.238 I sampler seed: 3766257016
0.01.206.248 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.206.253 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.206.254 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 increamically. [end of text]


0.02.573.103 I llama_perf_sampler_print:    sampling time =       6.25 ms /     5 runs   (    1.25 ms per token,   800.13 tokens per second)
0.02.573.107 I llama_perf_context_print:        load time =    1203.10 ms
0.02.573.109 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.573.122 I llama_perf_context_print:        eval time =    1355.50 ms /     4 runs   (  338.87 ms per token,     2.95 tokens per second)
0.02.573.124 I llama_perf_context_print:       total time =    1367.15 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3761 (6262d13e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198931.26 ms
main:    total time = 198931.26 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.618 I build: 3761 (6262d13e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.809 I main: llama backend init
0.00.002.751 I main: load the model and apply lora adapter, if any
0.00.024.730 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.822 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.837 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.838 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.842 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.844 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.844 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.845 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.846 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.847 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.852 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.853 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.854 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.855 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.856 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.095.488 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.183.260 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.195.251 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.195.258 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.195.259 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.195.260 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.195.261 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.195.262 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.195.262 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.195.266 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.195.267 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.195.273 I llama_model_loader: - type  f32:   37 tensors
0.00.195.277 I llama_model_loader: - type q4_K:  108 tensors
0.00.195.278 I llama_model_loader: - type q6_K:   19 tensors
0.00.484.687 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.485.815 I llm_load_vocab: special tokens cache size = 5
0.00.550.077 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.550.129 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.550.130 I llm_load_print_meta: arch             = gemma
0.00.550.131 I llm_load_print_meta: vocab type       = SPM
0.00.550.132 I llm_load_print_meta: n_vocab          = 256000
0.00.550.134 I llm_load_print_meta: n_merges         = 0
0.00.550.134 I llm_load_print_meta: vocab_only       = 0
0.00.550.135 I llm_load_print_meta: n_ctx_train      = 8192
0.00.550.135 I llm_load_print_meta: n_embd           = 2048
0.00.550.136 I llm_load_print_meta: n_layer          = 18
0.00.550.166 I llm_load_print_meta: n_head           = 8
0.00.550.173 I llm_load_print_meta: n_head_kv        = 1
0.00.550.173 I llm_load_print_meta: n_rot            = 256
0.00.550.174 I llm_load_print_meta: n_swa            = 0
0.00.550.174 I llm_load_print_meta: n_embd_head_k    = 256
0.00.550.175 I llm_load_print_meta: n_embd_head_v    = 256
0.00.550.199 I llm_load_print_meta: n_gqa            = 8
0.00.550.205 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.550.210 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.550.212 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.550.213 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.550.214 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.550.214 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.550.215 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.550.219 I llm_load_print_meta: n_ff             = 16384
0.00.550.220 I llm_load_print_meta: n_expert         = 0
0.00.550.220 I llm_load_print_meta: n_expert_used    = 0
0.00.550.220 I llm_load_print_meta: causal attn      = 1
0.00.550.221 I llm_load_print_meta: pooling type     = 0
0.00.550.221 I llm_load_print_meta: rope type        = 2
0.00.550.221 I llm_load_print_meta: rope scaling     = linear
0.00.550.223 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.550.224 I llm_load_print_meta: freq_scale_train = 1
0.00.550.232 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.550.233 I llm_load_print_meta: rope_finetuned   = unknown
0.00.550.233 I llm_load_print_meta: ssm_d_conv       = 0
0.00.550.241 I llm_load_print_meta: ssm_d_inner      = 0
0.00.550.241 I llm_load_print_meta: ssm_d_state      = 0
0.00.550.242 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.550.249 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.550.250 I llm_load_print_meta: model type       = 2B
0.00.550.251 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.550.252 I llm_load_print_meta: model params     = 2.51 B
0.00.550.253 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.550.253 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.550.254 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.550.254 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.550.254 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.550.255 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.550.255 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.550.256 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.550.256 I llm_load_print_meta: max token length = 93
0.00.550.431 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.609.938 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.615.443 I llama_new_context_with_model: n_ctx      = 8192
0.00.615.449 I llama_new_context_with_model: n_batch    = 2048
0.00.615.450 I llama_new_context_with_model: n_ubatch   = 512
0.00.615.450 I llama_new_context_with_model: flash_attn = 0
0.00.615.453 I llama_new_context_with_model: freq_base  = 10000.0
0.00.615.453 I llama_new_context_with_model: freq_scale = 1
0.00.644.515 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.644.559 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.644.666 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.646.037 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.646.043 I llama_new_context_with_model: graph nodes  = 601
0.00.646.044 I llama_new_context_with_model: graph splits = 1
0.00.646.060 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.221.040 I main: llama threadpool init, n_threads = 4
0.01.221.051 I 
0.01.221.143 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.221.146 I 
0.01.221.295 I sampler seed: 455689309
0.01.221.305 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.221.309 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.221.310 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1

 squaRELLA is a program that assists in designing and analyzing software systems.

**Features:**

- **System Requirements Specification (SRS) creation:** Define clear

0.12.065.069 I llama_perf_sampler_print:    sampling time =      49.19 ms /    33 runs   (    1.49 ms per token,   670.92 tokens per second)
0.12.065.072 I llama_perf_context_print:        load time =    1218.21 ms
0.12.065.073 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.065.075 I llama_perf_context_print:        eval time =   10762.27 ms /    32 runs   (  336.32 ms per token,     2.97 tokens per second)
0.12.065.076 I llama_perf_context_print:       total time =   10844.04 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m55.340s
user	49m28.269s
sys	0m6.213s
