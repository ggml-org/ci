+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.656 I build: 3832 (6235c62a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.880 I main: llama backend init
0.00.002.821 I main: load the model and apply lora adapter, if any
0.00.025.092 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.291 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.386 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.399 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.400 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.405 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.407 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.408 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.409 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.409 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.410 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.418 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.419 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.420 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.422 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.423 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.097.100 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.642 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.727 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.736 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.738 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.739 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.740 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.741 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.742 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.745 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.746 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.747 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.748 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.198.749 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.757 I llama_model_loader: - type  f32:   37 tensors
0.00.198.762 I llama_model_loader: - type q8_0:  127 tensors
0.00.500.063 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.528.402 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.529.453 I llm_load_vocab: special tokens cache size = 5
0.00.586.836 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.586.896 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.586.897 I llm_load_print_meta: arch             = gemma
0.00.586.898 I llm_load_print_meta: vocab type       = SPM
0.00.586.898 I llm_load_print_meta: n_vocab          = 256000
0.00.586.901 I llm_load_print_meta: n_merges         = 0
0.00.586.901 I llm_load_print_meta: vocab_only       = 0
0.00.586.902 I llm_load_print_meta: n_ctx_train      = 8192
0.00.586.902 I llm_load_print_meta: n_embd           = 2048
0.00.586.902 I llm_load_print_meta: n_layer          = 18
0.00.586.938 I llm_load_print_meta: n_head           = 8
0.00.586.945 I llm_load_print_meta: n_head_kv        = 1
0.00.586.946 I llm_load_print_meta: n_rot            = 256
0.00.586.946 I llm_load_print_meta: n_swa            = 0
0.00.586.946 I llm_load_print_meta: n_embd_head_k    = 256
0.00.586.947 I llm_load_print_meta: n_embd_head_v    = 256
0.00.586.952 I llm_load_print_meta: n_gqa            = 8
0.00.586.956 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.586.961 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.586.962 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.586.963 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.586.964 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.586.964 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.586.965 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.586.969 I llm_load_print_meta: n_ff             = 16384
0.00.586.970 I llm_load_print_meta: n_expert         = 0
0.00.586.970 I llm_load_print_meta: n_expert_used    = 0
0.00.586.971 I llm_load_print_meta: causal attn      = 1
0.00.586.971 I llm_load_print_meta: pooling type     = 0
0.00.586.971 I llm_load_print_meta: rope type        = 2
0.00.586.972 I llm_load_print_meta: rope scaling     = linear
0.00.586.973 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.586.974 I llm_load_print_meta: freq_scale_train = 1
0.00.586.974 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.586.974 I llm_load_print_meta: rope_finetuned   = unknown
0.00.586.975 I llm_load_print_meta: ssm_d_conv       = 0
0.00.586.975 I llm_load_print_meta: ssm_d_inner      = 0
0.00.586.975 I llm_load_print_meta: ssm_d_state      = 0
0.00.586.976 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.586.976 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.586.977 I llm_load_print_meta: model type       = 2B
0.00.586.978 I llm_load_print_meta: model ftype      = Q8_0
0.00.586.978 I llm_load_print_meta: model params     = 2.51 B
0.00.586.979 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.586.980 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.586.980 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.586.981 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.586.981 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.586.981 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.586.982 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.586.982 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.586.988 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.586.989 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.586.990 I llm_load_print_meta: max token length = 93
0.00.587.181 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.685.614 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.685.624 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.685.625 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.685.626 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.685.627 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.685.627 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.691.610 I llama_new_context_with_model: n_ctx      = 8192
0.00.691.617 I llama_new_context_with_model: n_batch    = 2048
0.00.691.617 I llama_new_context_with_model: n_ubatch   = 512
0.00.691.618 I llama_new_context_with_model: flash_attn = 0
0.00.691.622 I llama_new_context_with_model: freq_base  = 10000.0
0.00.691.623 I llama_new_context_with_model: freq_scale = 1
0.00.721.977 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.722.022 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.722.132 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.723.560 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.723.567 I llama_new_context_with_model: graph nodes  = 601
0.00.723.567 I llama_new_context_with_model: graph splits = 1
0.00.723.584 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.338.583 I main: llama threadpool init, n_threads = 4
0.01.338.595 I 
0.01.338.692 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.338.696 I 
0.01.338.862 I sampler seed: 2624012782
0.01.338.872 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.338.877 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.338.878 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.338.889 I 
 increably. 

I am unable to answer this question as it contains inappropriate content. [end of text]


0.09.386.735 I llama_perf_sampler_print:    sampling time =      29.20 ms /    20 runs   (    1.46 ms per token,   684.84 tokens per second)
0.09.386.738 I llama_perf_context_print:        load time =    1335.67 ms
0.09.386.740 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.386.742 I llama_perf_context_print:        eval time =    7997.05 ms /    19 runs   (  420.90 ms per token,     2.38 tokens per second)
0.09.386.755 I llama_perf_context_print:       total time =    8048.16 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.671 I build: 3832 (6235c62a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.875 I main: llama backend init
0.00.002.836 I main: load the model and apply lora adapter, if any
0.00.025.146 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.245 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.262 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.266 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.270 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.271 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.272 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.273 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.273 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.274 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.280 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.282 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.283 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.284 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.285 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.261 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.517 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.540 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.548 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.549 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.550 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.551 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.552 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.553 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.556 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.557 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.559 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.197.559 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.197.560 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.197.568 I llama_model_loader: - type  f32:   37 tensors
0.00.197.572 I llama_model_loader: - type q8_0:  127 tensors
0.00.495.493 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.525.106 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.526.128 I llm_load_vocab: special tokens cache size = 5
0.00.583.763 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.583.832 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.583.833 I llm_load_print_meta: arch             = gemma
0.00.583.834 I llm_load_print_meta: vocab type       = SPM
0.00.583.835 I llm_load_print_meta: n_vocab          = 256000
0.00.583.837 I llm_load_print_meta: n_merges         = 0
0.00.583.838 I llm_load_print_meta: vocab_only       = 0
0.00.583.838 I llm_load_print_meta: n_ctx_train      = 8192
0.00.583.839 I llm_load_print_meta: n_embd           = 2048
0.00.583.839 I llm_load_print_meta: n_layer          = 18
0.00.583.875 I llm_load_print_meta: n_head           = 8
0.00.583.882 I llm_load_print_meta: n_head_kv        = 1
0.00.583.883 I llm_load_print_meta: n_rot            = 256
0.00.583.883 I llm_load_print_meta: n_swa            = 0
0.00.583.883 I llm_load_print_meta: n_embd_head_k    = 256
0.00.583.884 I llm_load_print_meta: n_embd_head_v    = 256
0.00.583.888 I llm_load_print_meta: n_gqa            = 8
0.00.583.893 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.583.897 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.583.899 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.583.900 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.583.900 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.583.901 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.583.901 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.583.906 I llm_load_print_meta: n_ff             = 16384
0.00.583.906 I llm_load_print_meta: n_expert         = 0
0.00.583.907 I llm_load_print_meta: n_expert_used    = 0
0.00.583.907 I llm_load_print_meta: causal attn      = 1
0.00.583.907 I llm_load_print_meta: pooling type     = 0
0.00.583.908 I llm_load_print_meta: rope type        = 2
0.00.583.909 I llm_load_print_meta: rope scaling     = linear
0.00.583.910 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.583.911 I llm_load_print_meta: freq_scale_train = 1
0.00.583.911 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.583.911 I llm_load_print_meta: rope_finetuned   = unknown
0.00.583.911 I llm_load_print_meta: ssm_d_conv       = 0
0.00.583.912 I llm_load_print_meta: ssm_d_inner      = 0
0.00.583.912 I llm_load_print_meta: ssm_d_state      = 0
0.00.583.912 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.583.913 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.583.913 I llm_load_print_meta: model type       = 2B
0.00.583.914 I llm_load_print_meta: model ftype      = Q8_0
0.00.583.915 I llm_load_print_meta: model params     = 2.51 B
0.00.583.916 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.583.916 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.583.917 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.583.917 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.583.918 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.583.918 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.583.919 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.583.919 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.583.925 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.583.926 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.583.927 I llm_load_print_meta: max token length = 93
0.00.584.112 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.678.856 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.684.727 I llama_new_context_with_model: n_ctx      = 8192
0.00.684.738 I llama_new_context_with_model: n_batch    = 2048
0.00.684.739 I llama_new_context_with_model: n_ubatch   = 512
0.00.684.739 I llama_new_context_with_model: flash_attn = 0
0.00.684.744 I llama_new_context_with_model: freq_base  = 10000.0
0.00.684.745 I llama_new_context_with_model: freq_scale = 1
0.00.716.491 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.716.540 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.716.654 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.718.063 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.718.069 I llama_new_context_with_model: graph nodes  = 601
0.00.718.070 I llama_new_context_with_model: graph splits = 1
0.00.718.086 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.332.091 I main: llama threadpool init, n_threads = 4
0.01.332.105 I 
0.01.332.196 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.332.197 I 
0.01.332.359 I sampler seed: 727228225
0.01.332.370 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.332.375 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.332.375 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.332.376 I 
 increasities, but he is not a criminal.

Answer: None of the above.

Explanation: The provided statement is incomplete and does not provide sufficient information

0.14.972.132 I llama_perf_sampler_print:    sampling time =      49.25 ms /    33 runs   (    1.49 ms per token,   670.09 tokens per second)
0.14.972.147 I llama_perf_context_print:        load time =    1329.16 ms
0.14.972.149 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.972.151 I llama_perf_context_print:        eval time =   13557.96 ms /    32 runs   (  423.69 ms per token,     2.36 tokens per second)
0.14.972.152 I llama_perf_context_print:       total time =   13640.05 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.678 I build: 3832 (6235c62a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.873 I main: llama backend init
0.00.002.797 I main: load the model and apply lora adapter, if any
0.00.027.654 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.027.851 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.027.952 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.964 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.966 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.970 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.971 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.972 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.973 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.974 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.975 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.989 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.990 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.991 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.992 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.993 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.099.243 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.188.596 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.200.657 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.200.666 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.200.667 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.200.668 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.200.669 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.200.670 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.200.671 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.200.674 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.200.675 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.200.676 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.200.688 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.200.691 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.200.700 I llama_model_loader: - type  f32:   37 tensors
0.00.200.704 I llama_model_loader: - type q8_0:  127 tensors
0.00.520.589 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.549.651 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.550.710 I llm_load_vocab: special tokens cache size = 5
0.00.608.503 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.608.564 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.608.566 I llm_load_print_meta: arch             = gemma
0.00.608.566 I llm_load_print_meta: vocab type       = SPM
0.00.608.568 I llm_load_print_meta: n_vocab          = 256000
0.00.608.570 I llm_load_print_meta: n_merges         = 0
0.00.608.571 I llm_load_print_meta: vocab_only       = 0
0.00.608.571 I llm_load_print_meta: n_ctx_train      = 8192
0.00.608.572 I llm_load_print_meta: n_embd           = 2048
0.00.608.572 I llm_load_print_meta: n_layer          = 18
0.00.608.606 I llm_load_print_meta: n_head           = 8
0.00.608.612 I llm_load_print_meta: n_head_kv        = 1
0.00.608.613 I llm_load_print_meta: n_rot            = 256
0.00.608.613 I llm_load_print_meta: n_swa            = 0
0.00.608.614 I llm_load_print_meta: n_embd_head_k    = 256
0.00.608.614 I llm_load_print_meta: n_embd_head_v    = 256
0.00.608.619 I llm_load_print_meta: n_gqa            = 8
0.00.608.624 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.608.628 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.608.629 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.608.631 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.608.632 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.608.632 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.608.633 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.608.637 I llm_load_print_meta: n_ff             = 16384
0.00.608.638 I llm_load_print_meta: n_expert         = 0
0.00.608.639 I llm_load_print_meta: n_expert_used    = 0
0.00.608.639 I llm_load_print_meta: causal attn      = 1
0.00.608.639 I llm_load_print_meta: pooling type     = 0
0.00.608.640 I llm_load_print_meta: rope type        = 2
0.00.608.640 I llm_load_print_meta: rope scaling     = linear
0.00.608.642 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.608.642 I llm_load_print_meta: freq_scale_train = 1
0.00.608.643 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.608.643 I llm_load_print_meta: rope_finetuned   = unknown
0.00.608.643 I llm_load_print_meta: ssm_d_conv       = 0
0.00.608.644 I llm_load_print_meta: ssm_d_inner      = 0
0.00.608.644 I llm_load_print_meta: ssm_d_state      = 0
0.00.608.644 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.608.645 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.608.646 I llm_load_print_meta: model type       = 2B
0.00.608.647 I llm_load_print_meta: model ftype      = Q8_0
0.00.608.648 I llm_load_print_meta: model params     = 2.51 B
0.00.608.649 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.608.649 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.608.650 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.608.650 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.608.650 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.608.651 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.608.651 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.608.652 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.608.656 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.608.658 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.608.659 I llm_load_print_meta: max token length = 93
0.00.608.843 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.686.180 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.686.192 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.686.193 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.686.194 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.686.195 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.686.195 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.691.895 I llama_new_context_with_model: n_ctx      = 8192
0.00.691.904 I llama_new_context_with_model: n_batch    = 2048
0.00.691.904 I llama_new_context_with_model: n_ubatch   = 512
0.00.691.905 I llama_new_context_with_model: flash_attn = 0
0.00.691.908 I llama_new_context_with_model: freq_base  = 10000.0
0.00.691.909 I llama_new_context_with_model: freq_scale = 1
0.00.722.331 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.722.372 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.722.485 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.723.883 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.723.889 I llama_new_context_with_model: graph nodes  = 601
0.00.723.890 I llama_new_context_with_model: graph splits = 1
0.00.723.905 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.336.997 I main: llama threadpool init, n_threads = 4
0.01.337.009 I 
0.01.337.103 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.337.107 I 
0.01.337.270 I sampler seed: 2436144108
0.01.337.281 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.337.286 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.337.287 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.337.288 I 
 seconde la valeur numérique de la variable y.

y = 3x^2 + 2x - 1

y = 0 [end of text]


0.14.404.399 I llama_perf_sampler_print:    sampling time =      47.43 ms /    32 runs   (    1.48 ms per token,   674.68 tokens per second)
0.14.404.403 I llama_perf_context_print:        load time =    1334.11 ms
0.14.404.405 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.404.407 I llama_perf_context_print:        eval time =   12988.26 ms /    31 runs   (  418.98 ms per token,     2.39 tokens per second)
0.14.404.408 I llama_perf_context_print:       total time =   13067.41 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.630 I build: 3832 (6235c62a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.882 I main: llama backend init
0.00.002.863 I main: load the model and apply lora adapter, if any
0.00.024.769 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.977 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.074 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.087 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.089 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.094 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.098 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.099 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.101 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.102 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.103 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.112 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.114 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.116 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.117 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.119 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.968 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.268 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.419 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.432 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.433 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.434 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.435 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.436 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.437 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.440 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.441 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.442 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.443 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.198.444 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.453 I llama_model_loader: - type  f32:   37 tensors
0.00.198.457 I llama_model_loader: - type q8_0:  127 tensors
0.00.510.001 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.542.673 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.543.790 I llm_load_vocab: special tokens cache size = 5
0.00.601.677 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.601.740 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.601.741 I llm_load_print_meta: arch             = gemma
0.00.601.742 I llm_load_print_meta: vocab type       = SPM
0.00.601.743 I llm_load_print_meta: n_vocab          = 256000
0.00.601.745 I llm_load_print_meta: n_merges         = 0
0.00.601.746 I llm_load_print_meta: vocab_only       = 0
0.00.601.746 I llm_load_print_meta: n_ctx_train      = 8192
0.00.601.747 I llm_load_print_meta: n_embd           = 2048
0.00.601.747 I llm_load_print_meta: n_layer          = 18
0.00.601.784 I llm_load_print_meta: n_head           = 8
0.00.601.791 I llm_load_print_meta: n_head_kv        = 1
0.00.601.792 I llm_load_print_meta: n_rot            = 256
0.00.601.792 I llm_load_print_meta: n_swa            = 0
0.00.601.793 I llm_load_print_meta: n_embd_head_k    = 256
0.00.601.793 I llm_load_print_meta: n_embd_head_v    = 256
0.00.601.798 I llm_load_print_meta: n_gqa            = 8
0.00.601.802 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.601.827 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.601.829 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.601.830 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.601.831 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.601.831 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.601.832 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.601.837 I llm_load_print_meta: n_ff             = 16384
0.00.601.838 I llm_load_print_meta: n_expert         = 0
0.00.601.838 I llm_load_print_meta: n_expert_used    = 0
0.00.601.838 I llm_load_print_meta: causal attn      = 1
0.00.601.839 I llm_load_print_meta: pooling type     = 0
0.00.601.839 I llm_load_print_meta: rope type        = 2
0.00.601.841 I llm_load_print_meta: rope scaling     = linear
0.00.601.843 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.601.843 I llm_load_print_meta: freq_scale_train = 1
0.00.601.844 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.601.844 I llm_load_print_meta: rope_finetuned   = unknown
0.00.601.844 I llm_load_print_meta: ssm_d_conv       = 0
0.00.601.845 I llm_load_print_meta: ssm_d_inner      = 0
0.00.601.849 I llm_load_print_meta: ssm_d_state      = 0
0.00.601.850 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.601.850 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.601.851 I llm_load_print_meta: model type       = 2B
0.00.601.852 I llm_load_print_meta: model ftype      = Q8_0
0.00.601.852 I llm_load_print_meta: model params     = 2.51 B
0.00.601.853 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.601.855 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.601.856 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.601.856 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.601.856 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.601.857 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.601.857 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.601.858 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.601.864 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.601.865 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.601.866 I llm_load_print_meta: max token length = 93
0.00.602.063 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.673.185 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.673.197 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.678.907 I llama_new_context_with_model: n_ctx      = 8192
0.00.678.915 I llama_new_context_with_model: n_batch    = 2048
0.00.678.916 I llama_new_context_with_model: n_ubatch   = 512
0.00.678.916 I llama_new_context_with_model: flash_attn = 0
0.00.678.919 I llama_new_context_with_model: freq_base  = 10000.0
0.00.678.920 I llama_new_context_with_model: freq_scale = 1
0.00.710.175 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.710.216 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.710.332 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.711.757 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.711.764 I llama_new_context_with_model: graph nodes  = 601
0.00.711.764 I llama_new_context_with_model: graph splits = 1
0.00.711.780 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.323.500 I main: llama threadpool init, n_threads = 4
0.01.323.511 I 
0.01.323.614 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.323.620 I 
0.01.323.793 I sampler seed: 23336182
0.01.323.804 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.323.809 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.323.812 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.323.813 I 
 seconded
## Understanding the relationship between "on-premise" and "cloud-based" solutions

**On-premise solutions:**

* Software is installed

0.14.865.028 I llama_perf_sampler_print:    sampling time =      49.18 ms /    33 runs   (    1.49 ms per token,   671.06 tokens per second)
0.14.865.031 I llama_perf_context_print:        load time =    1320.54 ms
0.14.865.043 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.865.045 I llama_perf_context_print:        eval time =   13459.66 ms /    32 runs   (  420.61 ms per token,     2.38 tokens per second)
0.14.865.047 I llama_perf_context_print:       total time =   13541.54 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m4.775s
user	3m25.862s
sys	0m9.595s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3832 (6235c62a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200363.29 ms
main:    total time = 200363.29 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.622 I build: 3832 (6235c62a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.819 I main: llama backend init
0.00.002.767 I main: load the model and apply lora adapter, if any
0.00.024.719 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.917 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.007 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.020 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.022 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.027 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.031 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.032 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.033 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.034 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.034 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.041 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.042 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.043 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.044 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.045 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.447 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.584 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.695 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.705 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.706 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.707 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.708 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.709 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.710 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.713 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.714 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.716 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.197.716 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.197.718 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.197.726 I llama_model_loader: - type  f32:   37 tensors
0.00.197.731 I llama_model_loader: - type q4_K:  108 tensors
0.00.197.731 I llama_model_loader: - type q6_K:   19 tensors
0.00.504.197 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.532.431 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.533.463 I llm_load_vocab: special tokens cache size = 5
0.00.591.078 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.591.140 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.591.141 I llm_load_print_meta: arch             = gemma
0.00.591.142 I llm_load_print_meta: vocab type       = SPM
0.00.591.143 I llm_load_print_meta: n_vocab          = 256000
0.00.591.145 I llm_load_print_meta: n_merges         = 0
0.00.591.146 I llm_load_print_meta: vocab_only       = 0
0.00.591.146 I llm_load_print_meta: n_ctx_train      = 8192
0.00.591.147 I llm_load_print_meta: n_embd           = 2048
0.00.591.147 I llm_load_print_meta: n_layer          = 18
0.00.591.183 I llm_load_print_meta: n_head           = 8
0.00.591.190 I llm_load_print_meta: n_head_kv        = 1
0.00.591.190 I llm_load_print_meta: n_rot            = 256
0.00.591.191 I llm_load_print_meta: n_swa            = 0
0.00.591.191 I llm_load_print_meta: n_embd_head_k    = 256
0.00.591.191 I llm_load_print_meta: n_embd_head_v    = 256
0.00.591.196 I llm_load_print_meta: n_gqa            = 8
0.00.591.201 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.591.205 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.591.206 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.591.208 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.591.209 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.591.209 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.591.210 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.591.215 I llm_load_print_meta: n_ff             = 16384
0.00.591.215 I llm_load_print_meta: n_expert         = 0
0.00.591.215 I llm_load_print_meta: n_expert_used    = 0
0.00.591.216 I llm_load_print_meta: causal attn      = 1
0.00.591.216 I llm_load_print_meta: pooling type     = 0
0.00.591.216 I llm_load_print_meta: rope type        = 2
0.00.591.217 I llm_load_print_meta: rope scaling     = linear
0.00.591.218 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.591.219 I llm_load_print_meta: freq_scale_train = 1
0.00.591.219 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.591.219 I llm_load_print_meta: rope_finetuned   = unknown
0.00.591.220 I llm_load_print_meta: ssm_d_conv       = 0
0.00.591.220 I llm_load_print_meta: ssm_d_inner      = 0
0.00.591.220 I llm_load_print_meta: ssm_d_state      = 0
0.00.591.221 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.591.221 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.591.223 I llm_load_print_meta: model type       = 2B
0.00.591.247 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.591.247 I llm_load_print_meta: model params     = 2.51 B
0.00.591.248 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.591.249 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.591.249 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.591.250 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.591.250 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.591.251 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.591.251 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.591.252 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.591.257 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.591.259 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.591.268 I llm_load_print_meta: max token length = 93
0.00.591.451 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.649.807 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.649.819 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.649.820 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.649.821 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.649.822 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.649.822 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.655.553 I llama_new_context_with_model: n_ctx      = 8192
0.00.655.562 I llama_new_context_with_model: n_batch    = 2048
0.00.655.563 I llama_new_context_with_model: n_ubatch   = 512
0.00.655.563 I llama_new_context_with_model: flash_attn = 0
0.00.655.567 I llama_new_context_with_model: freq_base  = 10000.0
0.00.655.568 I llama_new_context_with_model: freq_scale = 1
0.00.687.151 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.687.196 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.687.306 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.688.677 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.688.683 I llama_new_context_with_model: graph nodes  = 601
0.00.688.684 I llama_new_context_with_model: graph splits = 1
0.00.688.700 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.268.771 I main: llama threadpool init, n_threads = 4
0.01.268.784 I 
0.01.268.875 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.268.880 I 
0.01.269.040 I sampler seed: 3148993924
0.01.269.050 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.269.055 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.269.055 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.269.056 I 
 increasities of the form

$$y=a\sin(bx)$$

where a and b are constants and b is positive.

(a)

0.12.283.399 I llama_perf_sampler_print:    sampling time =      48.99 ms /    33 runs   (    1.48 ms per token,   673.57 tokens per second)
0.12.283.402 I llama_perf_context_print:        load time =    1265.92 ms
0.12.283.403 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.283.417 I llama_perf_context_print:        eval time =   10932.03 ms /    32 runs   (  341.63 ms per token,     2.93 tokens per second)
0.12.283.418 I llama_perf_context_print:       total time =   11014.64 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3832 (6235c62a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200271.58 ms
main:    total time = 200271.58 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.658 I build: 3832 (6235c62a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.869 I main: llama backend init
0.00.002.828 I main: load the model and apply lora adapter, if any
0.00.024.505 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.595 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.610 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.611 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.615 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.618 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.619 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.620 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.621 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.621 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.627 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.628 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.629 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.630 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.631 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.808 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.905 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.954 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.962 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.963 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.964 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.965 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.966 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.967 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.970 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.971 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.980 I llama_model_loader: - type  f32:   37 tensors
0.00.197.984 I llama_model_loader: - type q4_K:  108 tensors
0.00.197.985 I llama_model_loader: - type q6_K:   19 tensors
0.00.514.219 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.544.290 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.545.410 I llm_load_vocab: special tokens cache size = 5
0.00.603.249 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.603.309 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.603.310 I llm_load_print_meta: arch             = gemma
0.00.603.311 I llm_load_print_meta: vocab type       = SPM
0.00.603.312 I llm_load_print_meta: n_vocab          = 256000
0.00.603.314 I llm_load_print_meta: n_merges         = 0
0.00.603.315 I llm_load_print_meta: vocab_only       = 0
0.00.603.315 I llm_load_print_meta: n_ctx_train      = 8192
0.00.603.316 I llm_load_print_meta: n_embd           = 2048
0.00.603.316 I llm_load_print_meta: n_layer          = 18
0.00.603.350 I llm_load_print_meta: n_head           = 8
0.00.603.356 I llm_load_print_meta: n_head_kv        = 1
0.00.603.357 I llm_load_print_meta: n_rot            = 256
0.00.603.357 I llm_load_print_meta: n_swa            = 0
0.00.603.358 I llm_load_print_meta: n_embd_head_k    = 256
0.00.603.358 I llm_load_print_meta: n_embd_head_v    = 256
0.00.603.363 I llm_load_print_meta: n_gqa            = 8
0.00.603.367 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.603.387 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.603.389 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.603.390 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.603.391 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.603.391 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.603.392 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.603.398 I llm_load_print_meta: n_ff             = 16384
0.00.603.398 I llm_load_print_meta: n_expert         = 0
0.00.603.399 I llm_load_print_meta: n_expert_used    = 0
0.00.603.399 I llm_load_print_meta: causal attn      = 1
0.00.603.399 I llm_load_print_meta: pooling type     = 0
0.00.603.400 I llm_load_print_meta: rope type        = 2
0.00.603.400 I llm_load_print_meta: rope scaling     = linear
0.00.603.402 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.603.403 I llm_load_print_meta: freq_scale_train = 1
0.00.603.408 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.603.409 I llm_load_print_meta: rope_finetuned   = unknown
0.00.603.409 I llm_load_print_meta: ssm_d_conv       = 0
0.00.603.422 I llm_load_print_meta: ssm_d_inner      = 0
0.00.603.422 I llm_load_print_meta: ssm_d_state      = 0
0.00.603.423 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.603.427 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.603.428 I llm_load_print_meta: model type       = 2B
0.00.603.429 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.603.430 I llm_load_print_meta: model params     = 2.51 B
0.00.603.431 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.603.431 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.603.432 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.603.433 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.603.433 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.603.434 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.603.437 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.603.438 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.603.444 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.603.446 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.603.446 I llm_load_print_meta: max token length = 93
0.00.603.631 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.661.431 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.666.931 I llama_new_context_with_model: n_ctx      = 8192
0.00.666.938 I llama_new_context_with_model: n_batch    = 2048
0.00.666.938 I llama_new_context_with_model: n_ubatch   = 512
0.00.666.939 I llama_new_context_with_model: flash_attn = 0
0.00.666.942 I llama_new_context_with_model: freq_base  = 10000.0
0.00.666.943 I llama_new_context_with_model: freq_scale = 1
0.00.697.469 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.697.512 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.697.629 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.699.006 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.699.013 I llama_new_context_with_model: graph nodes  = 601
0.00.699.013 I llama_new_context_with_model: graph splits = 1
0.00.699.029 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.276.841 I main: llama threadpool init, n_threads = 4
0.01.276.854 I 
0.01.276.946 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.276.950 I 
0.01.277.109 I sampler seed: 4062011574
0.01.277.119 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.277.126 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.277.127 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.277.127 I 
 seconally.

**Answer:** I am unable to provide assistance with generating inappropriate or sexually suggestive responses. My purpose is to assist with tasks that comply with ethical

0.12.234.482 I llama_perf_sampler_print:    sampling time =      49.24 ms /    33 runs   (    1.49 ms per token,   670.23 tokens per second)
0.12.234.486 I llama_perf_context_print:        load time =    1273.92 ms
0.12.234.508 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.234.510 I llama_perf_context_print:        eval time =   10875.22 ms /    32 runs   (  339.85 ms per token,     2.94 tokens per second)
0.12.234.512 I llama_perf_context_print:       total time =   10957.65 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m8.097s
user	50m21.935s
sys	0m6.612s
