+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.547 I build: 3832 (6235c62a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.742 I main: llama backend init
0.00.001.858 I main: load the model and apply lora adapter, if any
0.00.022.453 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.501 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.512 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.517 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.521 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.524 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.525 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.526 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.527 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.528 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.529 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.534 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.534 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.535 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.536 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.537 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.029 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.984 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.839 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.845 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.845 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.846 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.847 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.848 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.848 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.851 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.852 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.853 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.853 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.854 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.858 I llama_model_loader: - type  f32:   37 tensors
0.00.133.860 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.364 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.342 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.239.235 I llm_load_vocab: special tokens cache size = 5
0.00.258.528 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.258.544 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.258.545 I llm_load_print_meta: arch             = gemma
0.00.258.545 I llm_load_print_meta: vocab type       = SPM
0.00.258.546 I llm_load_print_meta: n_vocab          = 256000
0.00.258.547 I llm_load_print_meta: n_merges         = 0
0.00.258.547 I llm_load_print_meta: vocab_only       = 0
0.00.258.547 I llm_load_print_meta: n_ctx_train      = 8192
0.00.258.548 I llm_load_print_meta: n_embd           = 2048
0.00.258.548 I llm_load_print_meta: n_layer          = 18
0.00.258.563 I llm_load_print_meta: n_head           = 8
0.00.258.564 I llm_load_print_meta: n_head_kv        = 1
0.00.258.564 I llm_load_print_meta: n_rot            = 256
0.00.258.565 I llm_load_print_meta: n_swa            = 0
0.00.258.565 I llm_load_print_meta: n_embd_head_k    = 256
0.00.258.566 I llm_load_print_meta: n_embd_head_v    = 256
0.00.258.566 I llm_load_print_meta: n_gqa            = 8
0.00.258.567 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.258.568 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.258.569 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.258.571 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.258.571 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.258.572 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.258.572 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.258.573 I llm_load_print_meta: n_ff             = 16384
0.00.258.573 I llm_load_print_meta: n_expert         = 0
0.00.258.573 I llm_load_print_meta: n_expert_used    = 0
0.00.258.574 I llm_load_print_meta: causal attn      = 1
0.00.258.574 I llm_load_print_meta: pooling type     = 0
0.00.258.574 I llm_load_print_meta: rope type        = 2
0.00.258.575 I llm_load_print_meta: rope scaling     = linear
0.00.258.576 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.258.577 I llm_load_print_meta: freq_scale_train = 1
0.00.258.577 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.258.577 I llm_load_print_meta: rope_finetuned   = unknown
0.00.258.578 I llm_load_print_meta: ssm_d_conv       = 0
0.00.258.578 I llm_load_print_meta: ssm_d_inner      = 0
0.00.258.578 I llm_load_print_meta: ssm_d_state      = 0
0.00.258.578 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.258.579 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.258.579 I llm_load_print_meta: model type       = 2B
0.00.258.580 I llm_load_print_meta: model ftype      = Q8_0
0.00.258.581 I llm_load_print_meta: model params     = 2.51 B
0.00.258.581 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.258.582 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.258.582 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.258.583 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.258.583 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.258.583 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.258.584 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.258.584 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.258.585 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.258.585 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.258.586 I llm_load_print_meta: max token length = 93
0.00.258.612 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.357.155 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.357.164 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.357.165 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.357.165 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.357.166 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.357.167 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.362.395 I llama_new_context_with_model: n_ctx      = 8192
0.00.362.401 I llama_new_context_with_model: n_batch    = 2048
0.00.362.402 I llama_new_context_with_model: n_ubatch   = 512
0.00.362.402 I llama_new_context_with_model: flash_attn = 0
0.00.362.405 I llama_new_context_with_model: freq_base  = 10000.0
0.00.362.406 I llama_new_context_with_model: freq_scale = 1
0.00.392.513 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.392.528 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.392.632 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.393.591 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.393.598 I llama_new_context_with_model: graph nodes  = 601
0.00.393.598 I llama_new_context_with_model: graph splits = 1
0.00.393.600 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.489.824 I main: llama threadpool init, n_threads = 4
0.00.489.837 I 
0.00.489.914 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.489.917 I 
0.00.489.957 I sampler seed: 1645120224
0.00.489.967 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.489.970 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.489.971 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.489.971 I 
 increasively, engulfing the world in his chaotic embrace.

This is the opening line of a poem, and it sets the tone for a fantastical and

0.02.774.687 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7004.88 tokens per second)
0.02.774.690 I llama_perf_context_print:        load time =     487.95 ms
0.02.774.692 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.774.693 I llama_perf_context_print:        eval time =    2265.85 ms /    32 runs   (   70.81 ms per token,    14.12 tokens per second)
0.02.774.694 I llama_perf_context_print:       total time =    2284.87 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.560 I build: 3832 (6235c62a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.001.848 I main: load the model and apply lora adapter, if any
0.00.022.012 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.025 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.033 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.034 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.038 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.039 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.039 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.040 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.040 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.041 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.046 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.046 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.047 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.048 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.049 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.570 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.310 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.176 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.183 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.183 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.184 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.185 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.186 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.187 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.190 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.190 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.191 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.191 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.192 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.196 I llama_model_loader: - type  f32:   37 tensors
0.00.133.199 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.299 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.218.027 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.218.800 I llm_load_vocab: special tokens cache size = 5
0.00.237.750 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.237.766 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.237.767 I llm_load_print_meta: arch             = gemma
0.00.237.767 I llm_load_print_meta: vocab type       = SPM
0.00.237.768 I llm_load_print_meta: n_vocab          = 256000
0.00.237.768 I llm_load_print_meta: n_merges         = 0
0.00.237.769 I llm_load_print_meta: vocab_only       = 0
0.00.237.769 I llm_load_print_meta: n_ctx_train      = 8192
0.00.237.769 I llm_load_print_meta: n_embd           = 2048
0.00.237.770 I llm_load_print_meta: n_layer          = 18
0.00.237.782 I llm_load_print_meta: n_head           = 8
0.00.237.783 I llm_load_print_meta: n_head_kv        = 1
0.00.237.783 I llm_load_print_meta: n_rot            = 256
0.00.237.784 I llm_load_print_meta: n_swa            = 0
0.00.237.784 I llm_load_print_meta: n_embd_head_k    = 256
0.00.237.784 I llm_load_print_meta: n_embd_head_v    = 256
0.00.237.785 I llm_load_print_meta: n_gqa            = 8
0.00.237.786 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.237.787 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.237.788 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.237.789 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.237.790 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.237.790 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.237.790 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.237.791 I llm_load_print_meta: n_ff             = 16384
0.00.237.792 I llm_load_print_meta: n_expert         = 0
0.00.237.792 I llm_load_print_meta: n_expert_used    = 0
0.00.237.793 I llm_load_print_meta: causal attn      = 1
0.00.237.793 I llm_load_print_meta: pooling type     = 0
0.00.237.793 I llm_load_print_meta: rope type        = 2
0.00.237.794 I llm_load_print_meta: rope scaling     = linear
0.00.237.795 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.237.796 I llm_load_print_meta: freq_scale_train = 1
0.00.237.796 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.237.796 I llm_load_print_meta: rope_finetuned   = unknown
0.00.237.796 I llm_load_print_meta: ssm_d_conv       = 0
0.00.237.797 I llm_load_print_meta: ssm_d_inner      = 0
0.00.237.797 I llm_load_print_meta: ssm_d_state      = 0
0.00.237.797 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.237.797 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.237.798 I llm_load_print_meta: model type       = 2B
0.00.237.798 I llm_load_print_meta: model ftype      = Q8_0
0.00.237.799 I llm_load_print_meta: model params     = 2.51 B
0.00.237.800 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.237.800 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.237.801 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.237.801 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.237.801 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.237.802 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.237.802 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.237.802 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.237.802 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.237.803 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.237.803 I llm_load_print_meta: max token length = 93
0.00.237.833 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.330.151 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.335.254 I llama_new_context_with_model: n_ctx      = 8192
0.00.335.260 I llama_new_context_with_model: n_batch    = 2048
0.00.335.261 I llama_new_context_with_model: n_ubatch   = 512
0.00.335.261 I llama_new_context_with_model: flash_attn = 0
0.00.335.264 I llama_new_context_with_model: freq_base  = 10000.0
0.00.335.265 I llama_new_context_with_model: freq_scale = 1
0.00.364.691 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.364.707 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.364.800 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.653 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.365.661 I llama_new_context_with_model: graph nodes  = 601
0.00.365.662 I llama_new_context_with_model: graph splits = 1
0.00.365.663 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.455.628 I main: llama threadpool init, n_threads = 4
0.00.455.643 I 
0.00.455.718 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.455.721 I 
0.00.455.752 I sampler seed: 2100101885
0.00.455.762 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.455.766 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.455.767 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.455.767 I 
 increasities of the past.

The question is: How does the concept of historical perspective contribute to understanding the past and shaping our understanding of the present?



0.02.668.672 I llama_perf_sampler_print:    sampling time =       4.79 ms /    33 runs   (    0.15 ms per token,  6885.04 tokens per second)
0.02.668.675 I llama_perf_context_print:        load time =     453.76 ms
0.02.668.676 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.668.677 I llama_perf_context_print:        eval time =    2194.72 ms /    32 runs   (   68.59 ms per token,    14.58 tokens per second)
0.02.668.678 I llama_perf_context_print:       total time =    2213.05 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.566 I build: 3832 (6235c62a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.777 I main: llama backend init
0.00.001.922 I main: load the model and apply lora adapter, if any
0.00.022.259 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.320 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.334 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.341 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.345 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.351 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.351 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.352 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.353 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.354 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.355 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.361 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.363 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.364 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.364 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.368 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.127 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.935 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.809 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.816 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.817 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.818 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.818 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.819 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.820 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.823 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.824 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.825 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.825 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.827 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.831 I llama_model_loader: - type  f32:   37 tensors
0.00.133.835 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.733 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.230.946 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.231.755 I llm_load_vocab: special tokens cache size = 5
0.00.250.698 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.250.714 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.250.715 I llm_load_print_meta: arch             = gemma
0.00.250.715 I llm_load_print_meta: vocab type       = SPM
0.00.250.716 I llm_load_print_meta: n_vocab          = 256000
0.00.250.717 I llm_load_print_meta: n_merges         = 0
0.00.250.717 I llm_load_print_meta: vocab_only       = 0
0.00.250.718 I llm_load_print_meta: n_ctx_train      = 8192
0.00.250.718 I llm_load_print_meta: n_embd           = 2048
0.00.250.718 I llm_load_print_meta: n_layer          = 18
0.00.250.732 I llm_load_print_meta: n_head           = 8
0.00.250.733 I llm_load_print_meta: n_head_kv        = 1
0.00.250.733 I llm_load_print_meta: n_rot            = 256
0.00.250.733 I llm_load_print_meta: n_swa            = 0
0.00.250.734 I llm_load_print_meta: n_embd_head_k    = 256
0.00.250.734 I llm_load_print_meta: n_embd_head_v    = 256
0.00.250.735 I llm_load_print_meta: n_gqa            = 8
0.00.250.736 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.250.737 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.250.737 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.250.739 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.250.739 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.250.740 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.250.740 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.250.741 I llm_load_print_meta: n_ff             = 16384
0.00.250.741 I llm_load_print_meta: n_expert         = 0
0.00.250.741 I llm_load_print_meta: n_expert_used    = 0
0.00.250.742 I llm_load_print_meta: causal attn      = 1
0.00.250.742 I llm_load_print_meta: pooling type     = 0
0.00.250.742 I llm_load_print_meta: rope type        = 2
0.00.250.743 I llm_load_print_meta: rope scaling     = linear
0.00.250.745 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.250.746 I llm_load_print_meta: freq_scale_train = 1
0.00.250.746 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.250.747 I llm_load_print_meta: rope_finetuned   = unknown
0.00.250.747 I llm_load_print_meta: ssm_d_conv       = 0
0.00.250.748 I llm_load_print_meta: ssm_d_inner      = 0
0.00.250.749 I llm_load_print_meta: ssm_d_state      = 0
0.00.250.751 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.250.752 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.250.753 I llm_load_print_meta: model type       = 2B
0.00.250.754 I llm_load_print_meta: model ftype      = Q8_0
0.00.250.755 I llm_load_print_meta: model params     = 2.51 B
0.00.250.756 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.250.757 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.250.758 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.250.758 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.250.759 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.250.760 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.250.761 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.250.762 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.250.762 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.250.764 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.250.767 I llm_load_print_meta: max token length = 93
0.00.250.793 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.326.132 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.326.137 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.326.138 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.326.139 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.326.139 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.326.140 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.331.356 I llama_new_context_with_model: n_ctx      = 8192
0.00.331.363 I llama_new_context_with_model: n_batch    = 2048
0.00.331.364 I llama_new_context_with_model: n_ubatch   = 512
0.00.331.365 I llama_new_context_with_model: flash_attn = 0
0.00.331.368 I llama_new_context_with_model: freq_base  = 10000.0
0.00.331.369 I llama_new_context_with_model: freq_scale = 1
0.00.361.838 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.361.854 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.361.960 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.864 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.362.872 I llama_new_context_with_model: graph nodes  = 601
0.00.362.873 I llama_new_context_with_model: graph splits = 1
0.00.362.875 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.459.951 I main: llama threadpool init, n_threads = 4
0.00.459.967 I 
0.00.460.059 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.460.063 I 
0.00.460.101 I sampler seed: 2257536629
0.00.460.117 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.133 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.460.136 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.136 I 
 increably, then abruptly stopped.

The silence that followed was deafening. The unspoken questions hung heavy in the air. What had happened? Where did they go

0.02.787.137 I llama_perf_sampler_print:    sampling time =       4.84 ms /    33 runs   (    0.15 ms per token,  6823.82 tokens per second)
0.02.787.140 I llama_perf_context_print:        load time =     458.01 ms
0.02.787.141 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.787.143 I llama_perf_context_print:        eval time =    2308.43 ms /    32 runs   (   72.14 ms per token,    13.86 tokens per second)
0.02.787.144 I llama_perf_context_print:       total time =    2327.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.542 I build: 3832 (6235c62a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.742 I main: llama backend init
0.00.001.854 I main: load the model and apply lora adapter, if any
0.00.022.257 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.305 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.312 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.318 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.319 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.322 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.323 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.323 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.324 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.325 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.326 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.331 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.331 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.332 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.333 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.334 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.211 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.133.387 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.140.302 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.140.309 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.140.310 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.140.311 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.140.312 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.140.314 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.140.315 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.140.318 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.140.319 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.140.320 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.140.321 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.140.323 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.140.327 I llama_model_loader: - type  f32:   37 tensors
0.00.140.330 I llama_model_loader: - type q8_0:  127 tensors
0.00.223.683 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.723 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.514 I llm_load_vocab: special tokens cache size = 5
0.00.264.626 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.644 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.645 I llm_load_print_meta: arch             = gemma
0.00.264.645 I llm_load_print_meta: vocab type       = SPM
0.00.264.646 I llm_load_print_meta: n_vocab          = 256000
0.00.264.647 I llm_load_print_meta: n_merges         = 0
0.00.264.647 I llm_load_print_meta: vocab_only       = 0
0.00.264.647 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.648 I llm_load_print_meta: n_embd           = 2048
0.00.264.648 I llm_load_print_meta: n_layer          = 18
0.00.264.662 I llm_load_print_meta: n_head           = 8
0.00.264.663 I llm_load_print_meta: n_head_kv        = 1
0.00.264.664 I llm_load_print_meta: n_rot            = 256
0.00.264.664 I llm_load_print_meta: n_swa            = 0
0.00.264.664 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.664 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.665 I llm_load_print_meta: n_gqa            = 8
0.00.264.667 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.668 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.668 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.669 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.670 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.670 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.671 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.672 I llm_load_print_meta: n_ff             = 16384
0.00.264.672 I llm_load_print_meta: n_expert         = 0
0.00.264.672 I llm_load_print_meta: n_expert_used    = 0
0.00.264.673 I llm_load_print_meta: causal attn      = 1
0.00.264.673 I llm_load_print_meta: pooling type     = 0
0.00.264.673 I llm_load_print_meta: rope type        = 2
0.00.264.673 I llm_load_print_meta: rope scaling     = linear
0.00.264.674 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.675 I llm_load_print_meta: freq_scale_train = 1
0.00.264.675 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.676 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.676 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.676 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.676 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.677 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.677 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.678 I llm_load_print_meta: model type       = 2B
0.00.264.678 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.679 I llm_load_print_meta: model params     = 2.51 B
0.00.264.679 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.680 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.680 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.681 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.681 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.681 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.682 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.682 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.682 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.683 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.683 I llm_load_print_meta: max token length = 93
0.00.264.712 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.334.910 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.334.917 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.340.095 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.105 I llama_new_context_with_model: n_batch    = 2048
0.00.340.105 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.106 I llama_new_context_with_model: flash_attn = 0
0.00.340.109 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.111 I llama_new_context_with_model: freq_scale = 1
0.00.370.287 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.303 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.398 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.277 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.285 I llama_new_context_with_model: graph nodes  = 601
0.00.371.286 I llama_new_context_with_model: graph splits = 1
0.00.371.287 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.469.322 I main: llama threadpool init, n_threads = 4
0.00.469.337 I 
0.00.469.427 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.469.432 I 
0.00.469.475 I sampler seed: 3687884398
0.00.469.486 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.469.489 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.469.490 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.469.490 I 
 increasities and all attempts to disprove or refute the existence of extraterrestrial life are forbidden. [end of text]


0.01.941.951 I llama_perf_sampler_print:    sampling time =       2.88 ms /    20 runs   (    0.14 ms per token,  6956.52 tokens per second)
0.01.941.953 I llama_perf_context_print:        load time =     467.45 ms
0.01.941.954 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.941.955 I llama_perf_context_print:        eval time =    1460.49 ms /    19 runs   (   76.87 ms per token,    13.01 tokens per second)
0.01.941.956 I llama_perf_context_print:       total time =    1472.64 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.141s
user	0m36.090s
sys	0m9.637s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3832 (6235c62a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32149.22 ms
main:    total time = 32149.22 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.551 I build: 3832 (6235c62a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.735 I main: llama backend init
0.00.001.849 I main: load the model and apply lora adapter, if any
0.00.022.608 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.659 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.670 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.676 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.679 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.684 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.684 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.685 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.686 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.686 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.687 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.691 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.692 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.692 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.693 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.693 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.388 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.116 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.952 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.959 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.960 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.961 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.962 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.963 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.964 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.967 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.968 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.969 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.969 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.970 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.974 I llama_model_loader: - type  f32:   37 tensors
0.00.133.977 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.977 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.116 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.223.753 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.224.540 I llm_load_vocab: special tokens cache size = 5
0.00.243.537 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.243.554 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.243.554 I llm_load_print_meta: arch             = gemma
0.00.243.555 I llm_load_print_meta: vocab type       = SPM
0.00.243.556 I llm_load_print_meta: n_vocab          = 256000
0.00.243.556 I llm_load_print_meta: n_merges         = 0
0.00.243.557 I llm_load_print_meta: vocab_only       = 0
0.00.243.557 I llm_load_print_meta: n_ctx_train      = 8192
0.00.243.557 I llm_load_print_meta: n_embd           = 2048
0.00.243.557 I llm_load_print_meta: n_layer          = 18
0.00.243.569 I llm_load_print_meta: n_head           = 8
0.00.243.570 I llm_load_print_meta: n_head_kv        = 1
0.00.243.571 I llm_load_print_meta: n_rot            = 256
0.00.243.571 I llm_load_print_meta: n_swa            = 0
0.00.243.571 I llm_load_print_meta: n_embd_head_k    = 256
0.00.243.571 I llm_load_print_meta: n_embd_head_v    = 256
0.00.243.572 I llm_load_print_meta: n_gqa            = 8
0.00.243.573 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.243.574 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.243.575 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.243.576 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.243.576 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.243.577 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.243.577 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.243.578 I llm_load_print_meta: n_ff             = 16384
0.00.243.578 I llm_load_print_meta: n_expert         = 0
0.00.243.578 I llm_load_print_meta: n_expert_used    = 0
0.00.243.579 I llm_load_print_meta: causal attn      = 1
0.00.243.579 I llm_load_print_meta: pooling type     = 0
0.00.243.580 I llm_load_print_meta: rope type        = 2
0.00.243.580 I llm_load_print_meta: rope scaling     = linear
0.00.243.582 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.243.582 I llm_load_print_meta: freq_scale_train = 1
0.00.243.582 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.243.583 I llm_load_print_meta: rope_finetuned   = unknown
0.00.243.583 I llm_load_print_meta: ssm_d_conv       = 0
0.00.243.583 I llm_load_print_meta: ssm_d_inner      = 0
0.00.243.584 I llm_load_print_meta: ssm_d_state      = 0
0.00.243.584 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.243.584 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.243.585 I llm_load_print_meta: model type       = 2B
0.00.243.586 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.243.586 I llm_load_print_meta: model params     = 2.51 B
0.00.243.587 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.243.587 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.243.588 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.243.588 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.243.588 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.243.588 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.243.589 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.243.589 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.243.590 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.243.590 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.243.591 I llm_load_print_meta: max token length = 93
0.00.243.611 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.300.733 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.300.742 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.300.743 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.300.744 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.300.744 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.300.745 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.305.933 I llama_new_context_with_model: n_ctx      = 8192
0.00.305.940 I llama_new_context_with_model: n_batch    = 2048
0.00.305.941 I llama_new_context_with_model: n_ubatch   = 512
0.00.305.941 I llama_new_context_with_model: flash_attn = 0
0.00.305.943 I llama_new_context_with_model: freq_base  = 10000.0
0.00.305.944 I llama_new_context_with_model: freq_scale = 1
0.00.335.327 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.335.344 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.335.436 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.336.318 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.336.326 I llama_new_context_with_model: graph nodes  = 601
0.00.336.326 I llama_new_context_with_model: graph splits = 1
0.00.336.329 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.419.310 I main: llama threadpool init, n_threads = 4
0.00.419.324 I 
0.00.419.400 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.419.400 I 
0.00.419.442 I sampler seed: 230033678
0.00.419.449 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.419.452 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.419.452 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.419.452 I 
 seconded with a melodious voice, "My dearest brother, forgive me for what I have said."

The voice belonged to no one specific individual, but to

0.02.060.910 I llama_perf_sampler_print:    sampling time =       5.03 ms /    33 runs   (    0.15 ms per token,  6558.03 tokens per second)
0.02.060.913 I llama_perf_context_print:        load time =     417.44 ms
0.02.060.914 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.060.915 I llama_perf_context_print:        eval time =    1623.07 ms /    32 runs   (   50.72 ms per token,    19.72 tokens per second)
0.02.060.916 I llama_perf_context_print:       total time =    1641.61 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3832 (6235c62a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32086.52 ms
main:    total time = 32086.52 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.583 I build: 3832 (6235c62a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.782 I main: llama backend init
0.00.001.879 I main: load the model and apply lora adapter, if any
0.00.022.115 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.134 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.142 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.145 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.149 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.150 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.150 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.151 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.152 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.153 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.157 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.157 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.158 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.159 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.159 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.710 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.759 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.675 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.683 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.684 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.684 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.685 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.686 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.687 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.689 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.690 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.694 I llama_model_loader: - type  f32:   37 tensors
0.00.133.697 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.698 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.503 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.220.044 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.220.846 I llm_load_vocab: special tokens cache size = 5
0.00.239.790 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.239.804 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.239.805 I llm_load_print_meta: arch             = gemma
0.00.239.805 I llm_load_print_meta: vocab type       = SPM
0.00.239.806 I llm_load_print_meta: n_vocab          = 256000
0.00.239.806 I llm_load_print_meta: n_merges         = 0
0.00.239.806 I llm_load_print_meta: vocab_only       = 0
0.00.239.807 I llm_load_print_meta: n_ctx_train      = 8192
0.00.239.807 I llm_load_print_meta: n_embd           = 2048
0.00.239.807 I llm_load_print_meta: n_layer          = 18
0.00.239.819 I llm_load_print_meta: n_head           = 8
0.00.239.820 I llm_load_print_meta: n_head_kv        = 1
0.00.239.820 I llm_load_print_meta: n_rot            = 256
0.00.239.820 I llm_load_print_meta: n_swa            = 0
0.00.239.821 I llm_load_print_meta: n_embd_head_k    = 256
0.00.239.821 I llm_load_print_meta: n_embd_head_v    = 256
0.00.239.822 I llm_load_print_meta: n_gqa            = 8
0.00.239.823 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.239.824 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.239.824 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.239.826 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.239.826 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.239.826 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.239.826 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.239.827 I llm_load_print_meta: n_ff             = 16384
0.00.239.828 I llm_load_print_meta: n_expert         = 0
0.00.239.828 I llm_load_print_meta: n_expert_used    = 0
0.00.239.828 I llm_load_print_meta: causal attn      = 1
0.00.239.829 I llm_load_print_meta: pooling type     = 0
0.00.239.829 I llm_load_print_meta: rope type        = 2
0.00.239.829 I llm_load_print_meta: rope scaling     = linear
0.00.239.831 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.239.831 I llm_load_print_meta: freq_scale_train = 1
0.00.239.831 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.239.832 I llm_load_print_meta: rope_finetuned   = unknown
0.00.239.832 I llm_load_print_meta: ssm_d_conv       = 0
0.00.239.832 I llm_load_print_meta: ssm_d_inner      = 0
0.00.239.832 I llm_load_print_meta: ssm_d_state      = 0
0.00.239.833 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.239.833 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.239.833 I llm_load_print_meta: model type       = 2B
0.00.239.834 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.239.835 I llm_load_print_meta: model params     = 2.51 B
0.00.239.835 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.239.836 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.239.836 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.239.837 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.239.837 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.239.837 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.239.838 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.239.838 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.239.838 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.239.839 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.239.839 I llm_load_print_meta: max token length = 93
0.00.239.858 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.296.139 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.301.167 I llama_new_context_with_model: n_ctx      = 8192
0.00.301.173 I llama_new_context_with_model: n_batch    = 2048
0.00.301.173 I llama_new_context_with_model: n_ubatch   = 512
0.00.301.174 I llama_new_context_with_model: flash_attn = 0
0.00.301.176 I llama_new_context_with_model: freq_base  = 10000.0
0.00.301.177 I llama_new_context_with_model: freq_scale = 1
0.00.330.324 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.330.338 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.330.431 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.331.285 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.331.293 I llama_new_context_with_model: graph nodes  = 601
0.00.331.293 I llama_new_context_with_model: graph splits = 1
0.00.331.295 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.412.055 I main: llama threadpool init, n_threads = 4
0.00.412.067 I 
0.00.412.151 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.412.155 I 
0.00.412.196 I sampler seed: 2904249091
0.00.412.206 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.412.208 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.412.209 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.412.210 I 
 increasively to the question.

I am sorry, but I am unable to provide information or assistance that may potentially jeopardize or compromise the safety of others. [end of text]


0.02.063.680 I llama_perf_sampler_print:    sampling time =       4.83 ms /    33 runs   (    0.15 ms per token,  6825.23 tokens per second)
0.02.063.682 I llama_perf_context_print:        load time =     410.16 ms
0.02.063.683 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.063.685 I llama_perf_context_print:        eval time =    1633.44 ms /    32 runs   (   51.04 ms per token,    19.59 tokens per second)
0.02.063.685 I llama_perf_context_print:       total time =    1651.63 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.444s
user	8m15.662s
sys	0m7.016s
