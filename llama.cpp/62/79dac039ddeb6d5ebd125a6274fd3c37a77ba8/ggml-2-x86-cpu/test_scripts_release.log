+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.457 I build: 3894 (6279dac0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.633 I main: llama backend init
0.00.001.722 I main: load the model and apply lora adapter, if any
0.00.021.656 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.702 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.710 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.715 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.716 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.720 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.721 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.721 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.722 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.723 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.724 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.728 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.729 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.729 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.730 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.730 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.661 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.832 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.074 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.081 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.081 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.082 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.082 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.083 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.084 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.087 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.088 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.089 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.090 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.091 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.094 I llama_model_loader: - type  f32:   37 tensors
0.00.133.097 I llama_model_loader: - type q8_0:  127 tensors
0.00.196.764 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.128 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.941 I llm_load_vocab: special tokens cache size = 5
0.00.235.400 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.235.416 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.235.418 I llm_load_print_meta: arch             = gemma
0.00.235.419 I llm_load_print_meta: vocab type       = SPM
0.00.235.420 I llm_load_print_meta: n_vocab          = 256000
0.00.235.420 I llm_load_print_meta: n_merges         = 0
0.00.235.420 I llm_load_print_meta: vocab_only       = 0
0.00.235.421 I llm_load_print_meta: n_ctx_train      = 8192
0.00.235.421 I llm_load_print_meta: n_embd           = 2048
0.00.235.421 I llm_load_print_meta: n_layer          = 18
0.00.235.435 I llm_load_print_meta: n_head           = 8
0.00.235.435 I llm_load_print_meta: n_head_kv        = 1
0.00.235.436 I llm_load_print_meta: n_rot            = 256
0.00.235.436 I llm_load_print_meta: n_swa            = 0
0.00.235.436 I llm_load_print_meta: n_embd_head_k    = 256
0.00.235.437 I llm_load_print_meta: n_embd_head_v    = 256
0.00.235.438 I llm_load_print_meta: n_gqa            = 8
0.00.235.439 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.235.440 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.235.441 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.235.442 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.235.443 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.235.443 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.235.444 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.235.445 I llm_load_print_meta: n_ff             = 16384
0.00.235.445 I llm_load_print_meta: n_expert         = 0
0.00.235.445 I llm_load_print_meta: n_expert_used    = 0
0.00.235.446 I llm_load_print_meta: causal attn      = 1
0.00.235.446 I llm_load_print_meta: pooling type     = 0
0.00.235.447 I llm_load_print_meta: rope type        = 2
0.00.235.447 I llm_load_print_meta: rope scaling     = linear
0.00.235.449 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.235.449 I llm_load_print_meta: freq_scale_train = 1
0.00.235.450 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.235.451 I llm_load_print_meta: rope_finetuned   = unknown
0.00.235.451 I llm_load_print_meta: ssm_d_conv       = 0
0.00.235.451 I llm_load_print_meta: ssm_d_inner      = 0
0.00.235.451 I llm_load_print_meta: ssm_d_state      = 0
0.00.235.452 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.235.452 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.235.453 I llm_load_print_meta: model type       = 2B
0.00.235.454 I llm_load_print_meta: model ftype      = Q8_0
0.00.235.454 I llm_load_print_meta: model params     = 2.51 B
0.00.235.455 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.235.455 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.235.456 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.235.457 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.235.457 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.235.457 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.235.458 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.235.458 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.235.459 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.235.459 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.235.460 I llm_load_print_meta: max token length = 93
0.00.235.488 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.334.896 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.334.904 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.334.905 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.334.905 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.334.906 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.334.906 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.339.885 I llama_new_context_with_model: n_ctx      = 8192
0.00.339.892 I llama_new_context_with_model: n_batch    = 2048
0.00.339.893 I llama_new_context_with_model: n_ubatch   = 512
0.00.339.893 I llama_new_context_with_model: flash_attn = 0
0.00.339.896 I llama_new_context_with_model: freq_base  = 10000.0
0.00.339.897 I llama_new_context_with_model: freq_scale = 1
0.00.368.599 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.368.616 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.368.707 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.369.581 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.369.589 I llama_new_context_with_model: graph nodes  = 601
0.00.369.589 I llama_new_context_with_model: graph splits = 1
0.00.369.591 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.947 I main: llama threadpool init, n_threads = 4
0.00.461.959 I 
0.00.462.038 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.462.042 I 
0.00.462.078 I sampler seed: 3300932179
0.00.462.088 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.462.090 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.462.091 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.462.091 I 
 increasities, and the occasional cuckolery, add spice to this otherwise mundane existence. [end of text]


0.01.802.798 I llama_perf_sampler_print:    sampling time =       2.85 ms /    20 runs   (    0.14 ms per token,  7022.47 tokens per second)
0.01.802.801 I llama_perf_context_print:        load time =     460.16 ms
0.01.802.802 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.802.803 I llama_perf_context_print:        eval time =    1329.69 ms /    19 runs   (   69.98 ms per token,    14.29 tokens per second)
0.01.802.804 I llama_perf_context_print:       total time =    1340.86 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.595 I build: 3894 (6279dac0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.802 I main: llama backend init
0.00.001.894 I main: load the model and apply lora adapter, if any
0.00.022.359 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.373 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.380 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.381 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.385 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.386 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.387 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.387 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.388 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.388 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.394 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.394 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.395 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.395 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.396 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.519 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.111 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.963 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.970 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.970 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.971 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.972 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.973 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.974 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.977 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.977 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.978 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.980 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.980 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.985 I llama_model_loader: - type  f32:   37 tensors
0.00.131.988 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.258 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.215.152 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.215.908 I llm_load_vocab: special tokens cache size = 5
0.00.237.070 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.237.082 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.237.083 I llm_load_print_meta: arch             = gemma
0.00.237.083 I llm_load_print_meta: vocab type       = SPM
0.00.237.084 I llm_load_print_meta: n_vocab          = 256000
0.00.237.084 I llm_load_print_meta: n_merges         = 0
0.00.237.085 I llm_load_print_meta: vocab_only       = 0
0.00.237.085 I llm_load_print_meta: n_ctx_train      = 8192
0.00.237.085 I llm_load_print_meta: n_embd           = 2048
0.00.237.086 I llm_load_print_meta: n_layer          = 18
0.00.237.097 I llm_load_print_meta: n_head           = 8
0.00.237.098 I llm_load_print_meta: n_head_kv        = 1
0.00.237.098 I llm_load_print_meta: n_rot            = 256
0.00.237.098 I llm_load_print_meta: n_swa            = 0
0.00.237.098 I llm_load_print_meta: n_embd_head_k    = 256
0.00.237.099 I llm_load_print_meta: n_embd_head_v    = 256
0.00.237.099 I llm_load_print_meta: n_gqa            = 8
0.00.237.100 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.237.101 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.237.102 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.237.103 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.237.103 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.237.104 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.237.104 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.237.105 I llm_load_print_meta: n_ff             = 16384
0.00.237.105 I llm_load_print_meta: n_expert         = 0
0.00.237.106 I llm_load_print_meta: n_expert_used    = 0
0.00.237.106 I llm_load_print_meta: causal attn      = 1
0.00.237.106 I llm_load_print_meta: pooling type     = 0
0.00.237.106 I llm_load_print_meta: rope type        = 2
0.00.237.107 I llm_load_print_meta: rope scaling     = linear
0.00.237.109 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.237.109 I llm_load_print_meta: freq_scale_train = 1
0.00.237.109 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.237.110 I llm_load_print_meta: rope_finetuned   = unknown
0.00.237.110 I llm_load_print_meta: ssm_d_conv       = 0
0.00.237.111 I llm_load_print_meta: ssm_d_inner      = 0
0.00.237.111 I llm_load_print_meta: ssm_d_state      = 0
0.00.237.111 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.237.112 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.237.112 I llm_load_print_meta: model type       = 2B
0.00.237.113 I llm_load_print_meta: model ftype      = Q8_0
0.00.237.114 I llm_load_print_meta: model params     = 2.51 B
0.00.237.114 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.237.115 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.237.115 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.237.115 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.237.115 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.237.116 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.237.116 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.237.117 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.237.117 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.237.117 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.237.118 I llm_load_print_meta: max token length = 93
0.00.237.134 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.330.300 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.335.365 I llama_new_context_with_model: n_ctx      = 8192
0.00.335.370 I llama_new_context_with_model: n_batch    = 2048
0.00.335.371 I llama_new_context_with_model: n_ubatch   = 512
0.00.335.371 I llama_new_context_with_model: flash_attn = 0
0.00.335.374 I llama_new_context_with_model: freq_base  = 10000.0
0.00.335.374 I llama_new_context_with_model: freq_scale = 1
0.00.365.952 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.365.968 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.366.069 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.366.989 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.366.997 I llama_new_context_with_model: graph nodes  = 601
0.00.366.998 I llama_new_context_with_model: graph splits = 1
0.00.366.999 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.454.256 I main: llama threadpool init, n_threads = 4
0.00.454.269 I 
0.00.454.341 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.454.344 I 
0.00.454.378 I sampler seed: 3365443314
0.00.454.388 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.454.394 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.454.395 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.454.395 I 
 increasities. 

I am unable to access the requested context. Please provide the necessary context for me to assist you. [end of text]


0.02.218.309 I llama_perf_sampler_print:    sampling time =       4.19 ms /    27 runs   (    0.16 ms per token,  6443.91 tokens per second)
0.02.218.311 I llama_perf_context_print:        load time =     452.29 ms
0.02.218.312 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.218.314 I llama_perf_context_print:        eval time =    1748.21 ms /    26 runs   (   67.24 ms per token,    14.87 tokens per second)
0.02.218.315 I llama_perf_context_print:       total time =    1764.06 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.577 I build: 3894 (6279dac0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.821 I main: llama backend init
0.00.001.961 I main: load the model and apply lora adapter, if any
0.00.022.268 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.318 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.325 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.330 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.331 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.335 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.335 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.336 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.337 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.337 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.338 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.343 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.344 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.345 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.346 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.347 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.800 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.169 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.030 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.037 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.038 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.038 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.039 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.040 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.040 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.043 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.043 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.044 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.045 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.046 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.050 I llama_model_loader: - type  f32:   37 tensors
0.00.132.052 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.006 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.370 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.067 I llm_load_vocab: special tokens cache size = 5
0.00.223.382 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.223.397 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.223.398 I llm_load_print_meta: arch             = gemma
0.00.223.399 I llm_load_print_meta: vocab type       = SPM
0.00.223.400 I llm_load_print_meta: n_vocab          = 256000
0.00.223.400 I llm_load_print_meta: n_merges         = 0
0.00.223.400 I llm_load_print_meta: vocab_only       = 0
0.00.223.401 I llm_load_print_meta: n_ctx_train      = 8192
0.00.223.401 I llm_load_print_meta: n_embd           = 2048
0.00.223.401 I llm_load_print_meta: n_layer          = 18
0.00.223.417 I llm_load_print_meta: n_head           = 8
0.00.223.418 I llm_load_print_meta: n_head_kv        = 1
0.00.223.418 I llm_load_print_meta: n_rot            = 256
0.00.223.418 I llm_load_print_meta: n_swa            = 0
0.00.223.419 I llm_load_print_meta: n_embd_head_k    = 256
0.00.223.419 I llm_load_print_meta: n_embd_head_v    = 256
0.00.223.420 I llm_load_print_meta: n_gqa            = 8
0.00.223.421 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.223.422 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.223.423 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.223.424 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.223.424 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.223.425 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.223.425 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.223.426 I llm_load_print_meta: n_ff             = 16384
0.00.223.426 I llm_load_print_meta: n_expert         = 0
0.00.223.427 I llm_load_print_meta: n_expert_used    = 0
0.00.223.427 I llm_load_print_meta: causal attn      = 1
0.00.223.427 I llm_load_print_meta: pooling type     = 0
0.00.223.428 I llm_load_print_meta: rope type        = 2
0.00.223.428 I llm_load_print_meta: rope scaling     = linear
0.00.223.429 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.223.430 I llm_load_print_meta: freq_scale_train = 1
0.00.223.430 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.223.430 I llm_load_print_meta: rope_finetuned   = unknown
0.00.223.431 I llm_load_print_meta: ssm_d_conv       = 0
0.00.223.431 I llm_load_print_meta: ssm_d_inner      = 0
0.00.223.431 I llm_load_print_meta: ssm_d_state      = 0
0.00.223.431 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.223.432 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.223.432 I llm_load_print_meta: model type       = 2B
0.00.223.433 I llm_load_print_meta: model ftype      = Q8_0
0.00.223.434 I llm_load_print_meta: model params     = 2.51 B
0.00.223.435 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.223.435 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.223.436 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.223.436 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.223.436 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.223.437 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.223.437 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.223.438 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.223.438 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.223.439 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.223.439 I llm_load_print_meta: max token length = 93
0.00.223.473 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.299.444 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.299.453 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.299.454 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.299.455 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.299.455 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.299.456 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.304.644 I llama_new_context_with_model: n_ctx      = 8192
0.00.304.653 I llama_new_context_with_model: n_batch    = 2048
0.00.304.654 I llama_new_context_with_model: n_ubatch   = 512
0.00.304.654 I llama_new_context_with_model: flash_attn = 0
0.00.304.657 I llama_new_context_with_model: freq_base  = 10000.0
0.00.304.658 I llama_new_context_with_model: freq_scale = 1
0.00.334.327 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.334.343 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.334.437 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.335.327 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.335.335 I llama_new_context_with_model: graph nodes  = 601
0.00.335.336 I llama_new_context_with_model: graph splits = 1
0.00.335.337 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.427.634 I main: llama threadpool init, n_threads = 4
0.00.427.646 I 
0.00.427.725 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.427.730 I 
0.00.427.774 I sampler seed: 3750061395
0.00.427.789 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.427.792 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.427.794 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.427.794 I 
 seconary factors are the factors by which the denominator of a fraction is divided to obtain the numerator. [end of text]


0.01.924.206 I llama_perf_sampler_print:    sampling time =       3.29 ms /    22 runs   (    0.15 ms per token,  6684.90 tokens per second)
0.01.924.208 I llama_perf_context_print:        load time =     425.59 ms
0.01.924.209 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.924.211 I llama_perf_context_print:        eval time =    1483.57 ms /    21 runs   (   70.65 ms per token,    14.16 tokens per second)
0.01.924.212 I llama_perf_context_print:       total time =    1496.58 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.612 I build: 3894 (6279dac0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.823 I main: llama backend init
0.00.001.975 I main: load the model and apply lora adapter, if any
0.00.022.444 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.493 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.504 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.512 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.514 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.519 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.521 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.522 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.523 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.523 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.524 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.528 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.529 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.530 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.530 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.531 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.915 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.128.006 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.902 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.908 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.909 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.909 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.910 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.911 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.912 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.915 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.915 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.916 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.916 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.134.917 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.921 I llama_model_loader: - type  f32:   37 tensors
0.00.134.924 I llama_model_loader: - type q8_0:  127 tensors
0.00.190.200 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.203.181 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.839 I llm_load_vocab: special tokens cache size = 5
0.00.224.931 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.946 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.946 I llm_load_print_meta: arch             = gemma
0.00.224.947 I llm_load_print_meta: vocab type       = SPM
0.00.224.948 I llm_load_print_meta: n_vocab          = 256000
0.00.224.948 I llm_load_print_meta: n_merges         = 0
0.00.224.949 I llm_load_print_meta: vocab_only       = 0
0.00.224.949 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.949 I llm_load_print_meta: n_embd           = 2048
0.00.224.950 I llm_load_print_meta: n_layer          = 18
0.00.224.961 I llm_load_print_meta: n_head           = 8
0.00.224.962 I llm_load_print_meta: n_head_kv        = 1
0.00.224.963 I llm_load_print_meta: n_rot            = 256
0.00.224.963 I llm_load_print_meta: n_swa            = 0
0.00.224.963 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.963 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.964 I llm_load_print_meta: n_gqa            = 8
0.00.224.965 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.966 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.967 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.968 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.969 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.969 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.969 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.970 I llm_load_print_meta: n_ff             = 16384
0.00.224.971 I llm_load_print_meta: n_expert         = 0
0.00.224.971 I llm_load_print_meta: n_expert_used    = 0
0.00.224.971 I llm_load_print_meta: causal attn      = 1
0.00.224.972 I llm_load_print_meta: pooling type     = 0
0.00.224.972 I llm_load_print_meta: rope type        = 2
0.00.224.972 I llm_load_print_meta: rope scaling     = linear
0.00.224.973 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.974 I llm_load_print_meta: freq_scale_train = 1
0.00.224.974 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.975 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.975 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.975 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.975 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.976 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.976 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.977 I llm_load_print_meta: model type       = 2B
0.00.224.977 I llm_load_print_meta: model ftype      = Q8_0
0.00.224.978 I llm_load_print_meta: model params     = 2.51 B
0.00.224.979 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.224.979 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.979 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.980 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.980 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.980 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.981 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.981 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.982 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.982 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.982 I llm_load_print_meta: max token length = 93
0.00.225.000 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.295.901 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.295.908 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.301.091 I llama_new_context_with_model: n_ctx      = 8192
0.00.301.099 I llama_new_context_with_model: n_batch    = 2048
0.00.301.099 I llama_new_context_with_model: n_ubatch   = 512
0.00.301.100 I llama_new_context_with_model: flash_attn = 0
0.00.301.103 I llama_new_context_with_model: freq_base  = 10000.0
0.00.301.104 I llama_new_context_with_model: freq_scale = 1
0.00.331.702 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.331.720 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.331.814 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.332.684 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.332.692 I llama_new_context_with_model: graph nodes  = 601
0.00.332.692 I llama_new_context_with_model: graph splits = 1
0.00.332.694 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.431.225 I main: llama threadpool init, n_threads = 4
0.00.431.239 I 
0.00.431.321 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.431.325 I 
0.00.431.366 I sampler seed: 991719181
0.00.431.376 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.431.381 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.431.381 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.431.381 I 
 increasively. [end of text]


0.00.735.644 I llama_perf_sampler_print:    sampling time =       0.64 ms /     5 runs   (    0.13 ms per token,  7836.99 tokens per second)
0.00.735.647 I llama_perf_context_print:        load time =     429.17 ms
0.00.735.649 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.735.652 I llama_perf_context_print:        eval time =     301.31 ms /     4 runs   (   75.33 ms per token,    13.28 tokens per second)
0.00.735.653 I llama_perf_context_print:       total time =     304.43 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.617s
user	0m22.365s
sys	0m9.476s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3894 (6279dac0)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32228.07 ms
main:    total time = 32228.07 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.583 I build: 3894 (6279dac0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.793 I main: llama backend init
0.00.001.908 I main: load the model and apply lora adapter, if any
0.00.022.236 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.283 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.291 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.296 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.297 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.304 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.304 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.305 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.305 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.309 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.309 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.313 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.314 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.315 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.315 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.316 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.445 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.141 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.999 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.005 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.006 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.006 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.007 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.008 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.008 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.011 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.012 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.012 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.014 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.014 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.017 I llama_model_loader: - type  f32:   37 tensors
0.00.132.021 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.021 I llama_model_loader: - type q6_K:   19 tensors
0.00.188.364 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.952 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.825 I llm_load_vocab: special tokens cache size = 5
0.00.224.210 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.224 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.224 I llm_load_print_meta: arch             = gemma
0.00.224.224 I llm_load_print_meta: vocab type       = SPM
0.00.224.225 I llm_load_print_meta: n_vocab          = 256000
0.00.224.226 I llm_load_print_meta: n_merges         = 0
0.00.224.226 I llm_load_print_meta: vocab_only       = 0
0.00.224.226 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.227 I llm_load_print_meta: n_embd           = 2048
0.00.224.227 I llm_load_print_meta: n_layer          = 18
0.00.224.242 I llm_load_print_meta: n_head           = 8
0.00.224.243 I llm_load_print_meta: n_head_kv        = 1
0.00.224.243 I llm_load_print_meta: n_rot            = 256
0.00.224.244 I llm_load_print_meta: n_swa            = 0
0.00.224.244 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.244 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.245 I llm_load_print_meta: n_gqa            = 8
0.00.224.246 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.247 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.248 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.250 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.250 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.251 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.251 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.252 I llm_load_print_meta: n_ff             = 16384
0.00.224.253 I llm_load_print_meta: n_expert         = 0
0.00.224.253 I llm_load_print_meta: n_expert_used    = 0
0.00.224.256 I llm_load_print_meta: causal attn      = 1
0.00.224.256 I llm_load_print_meta: pooling type     = 0
0.00.224.256 I llm_load_print_meta: rope type        = 2
0.00.224.257 I llm_load_print_meta: rope scaling     = linear
0.00.224.258 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.259 I llm_load_print_meta: freq_scale_train = 1
0.00.224.260 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.260 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.260 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.261 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.261 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.262 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.262 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.262 I llm_load_print_meta: model type       = 2B
0.00.224.263 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.224.264 I llm_load_print_meta: model params     = 2.51 B
0.00.224.264 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.224.264 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.265 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.265 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.266 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.267 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.267 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.268 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.268 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.269 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.269 I llm_load_print_meta: max token length = 93
0.00.224.295 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.281.627 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.281.635 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.281.636 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.281.637 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.281.637 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.281.638 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.286.665 I llama_new_context_with_model: n_ctx      = 8192
0.00.286.670 I llama_new_context_with_model: n_batch    = 2048
0.00.286.670 I llama_new_context_with_model: n_ubatch   = 512
0.00.286.671 I llama_new_context_with_model: flash_attn = 0
0.00.286.674 I llama_new_context_with_model: freq_base  = 10000.0
0.00.286.675 I llama_new_context_with_model: freq_scale = 1
0.00.317.039 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.317.055 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.317.154 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.318.089 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.318.095 I llama_new_context_with_model: graph nodes  = 601
0.00.318.096 I llama_new_context_with_model: graph splits = 1
0.00.318.098 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.399.535 I main: llama threadpool init, n_threads = 4
0.00.399.546 I 
0.00.399.623 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.399.627 I 
0.00.399.663 I sampler seed: 350115786
0.00.399.672 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.399.675 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.399.676 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.399.676 I 
 squaRED text.

I am unable to access the requested text. Please provide me with the text or specify the location of the text so that I can assist

0.02.012.386 I llama_perf_sampler_print:    sampling time =       4.73 ms /    33 runs   (    0.14 ms per token,  6981.17 tokens per second)
0.02.012.388 I llama_perf_context_print:        load time =     397.55 ms
0.02.012.389 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.012.391 I llama_perf_context_print:        eval time =    1595.28 ms /    32 runs   (   49.85 ms per token,    20.06 tokens per second)
0.02.012.392 I llama_perf_context_print:       total time =    1612.86 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3894 (6279dac0)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32016.42 ms
main:    total time = 32016.42 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.550 I build: 3894 (6279dac0) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.786 I main: llama backend init
0.00.001.899 I main: load the model and apply lora adapter, if any
0.00.022.030 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.045 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.052 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.053 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.058 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.062 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.063 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.064 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.065 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.065 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.070 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.071 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.072 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.073 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.075 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.690 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.370 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.234 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.241 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.242 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.242 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.243 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.243 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.244 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.247 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.247 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.252 I llama_model_loader: - type  f32:   37 tensors
0.00.132.255 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.256 I llama_model_loader: - type q6_K:   19 tensors
0.00.195.645 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.025 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.212.775 I llm_load_vocab: special tokens cache size = 5
0.00.234.039 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.234.056 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.234.056 I llm_load_print_meta: arch             = gemma
0.00.234.057 I llm_load_print_meta: vocab type       = SPM
0.00.234.058 I llm_load_print_meta: n_vocab          = 256000
0.00.234.058 I llm_load_print_meta: n_merges         = 0
0.00.234.059 I llm_load_print_meta: vocab_only       = 0
0.00.234.059 I llm_load_print_meta: n_ctx_train      = 8192
0.00.234.059 I llm_load_print_meta: n_embd           = 2048
0.00.234.060 I llm_load_print_meta: n_layer          = 18
0.00.234.073 I llm_load_print_meta: n_head           = 8
0.00.234.073 I llm_load_print_meta: n_head_kv        = 1
0.00.234.074 I llm_load_print_meta: n_rot            = 256
0.00.234.075 I llm_load_print_meta: n_swa            = 0
0.00.234.075 I llm_load_print_meta: n_embd_head_k    = 256
0.00.234.075 I llm_load_print_meta: n_embd_head_v    = 256
0.00.234.076 I llm_load_print_meta: n_gqa            = 8
0.00.234.077 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.234.078 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.234.079 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.234.080 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.234.080 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.234.081 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.234.081 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.234.082 I llm_load_print_meta: n_ff             = 16384
0.00.234.082 I llm_load_print_meta: n_expert         = 0
0.00.234.083 I llm_load_print_meta: n_expert_used    = 0
0.00.234.083 I llm_load_print_meta: causal attn      = 1
0.00.234.083 I llm_load_print_meta: pooling type     = 0
0.00.234.083 I llm_load_print_meta: rope type        = 2
0.00.234.084 I llm_load_print_meta: rope scaling     = linear
0.00.234.085 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.234.086 I llm_load_print_meta: freq_scale_train = 1
0.00.234.086 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.234.086 I llm_load_print_meta: rope_finetuned   = unknown
0.00.234.087 I llm_load_print_meta: ssm_d_conv       = 0
0.00.234.087 I llm_load_print_meta: ssm_d_inner      = 0
0.00.234.087 I llm_load_print_meta: ssm_d_state      = 0
0.00.234.087 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.234.088 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.234.088 I llm_load_print_meta: model type       = 2B
0.00.234.089 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.234.089 I llm_load_print_meta: model params     = 2.51 B
0.00.234.090 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.234.091 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.234.091 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.234.092 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.234.092 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.234.092 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.234.092 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.234.093 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.234.093 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.234.094 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.234.094 I llm_load_print_meta: max token length = 93
0.00.234.115 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.291.110 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.296.056 I llama_new_context_with_model: n_ctx      = 8192
0.00.296.062 I llama_new_context_with_model: n_batch    = 2048
0.00.296.063 I llama_new_context_with_model: n_ubatch   = 512
0.00.296.063 I llama_new_context_with_model: flash_attn = 0
0.00.296.066 I llama_new_context_with_model: freq_base  = 10000.0
0.00.296.067 I llama_new_context_with_model: freq_scale = 1
0.00.324.899 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.324.915 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.325.004 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.325.866 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.325.873 I llama_new_context_with_model: graph nodes  = 601
0.00.325.873 I llama_new_context_with_model: graph splits = 1
0.00.325.876 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.406.877 I main: llama threadpool init, n_threads = 4
0.00.406.890 I 
0.00.406.975 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.406.987 I 
0.00.407.028 I sampler seed: 266404730
0.00.407.038 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.407.047 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.407.050 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.407.051 I 
 squaRELLA

## Introduction

The term "squashilella" is derived from the Latin word "squasere" meaning "to squish"

0.02.022.100 I llama_perf_sampler_print:    sampling time =       5.08 ms /    33 runs   (    0.15 ms per token,  6496.06 tokens per second)
0.02.022.103 I llama_perf_context_print:        load time =     404.91 ms
0.02.022.105 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.022.108 I llama_perf_context_print:        eval time =    1596.73 ms /    32 runs   (   49.90 ms per token,    20.04 tokens per second)
0.02.022.109 I llama_perf_context_print:       total time =    1615.23 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.496s
user	8m14.562s
sys	0m6.934s
