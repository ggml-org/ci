+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.545 I build: 4017 (a73ca128) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.737 I main: llama backend init
0.00.000.871 I main: load the model and apply lora adapter, if any
0.00.021.553 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.563 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.571 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.579 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.583 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.587 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.588 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.588 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.589 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.589 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.590 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.594 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.595 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.595 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.596 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.597 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.835 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.658 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.494 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.501 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.502 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.502 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.503 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.504 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.505 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.507 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.508 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.509 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.509 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.510 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.514 I llama_model_loader: - type  f32:   37 tensors
0.00.131.515 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.857 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.267.023 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.267.624 I llm_load_vocab: special tokens cache size = 5
0.00.288.580 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.288.596 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.288.597 I llm_load_print_meta: arch             = gemma
0.00.288.597 I llm_load_print_meta: vocab type       = SPM
0.00.288.598 I llm_load_print_meta: n_vocab          = 256000
0.00.288.598 I llm_load_print_meta: n_merges         = 0
0.00.288.599 I llm_load_print_meta: vocab_only       = 0
0.00.288.599 I llm_load_print_meta: n_ctx_train      = 8192
0.00.288.599 I llm_load_print_meta: n_embd           = 2048
0.00.288.599 I llm_load_print_meta: n_layer          = 18
0.00.288.610 I llm_load_print_meta: n_head           = 8
0.00.288.611 I llm_load_print_meta: n_head_kv        = 1
0.00.288.612 I llm_load_print_meta: n_rot            = 256
0.00.288.612 I llm_load_print_meta: n_swa            = 0
0.00.288.612 I llm_load_print_meta: n_embd_head_k    = 256
0.00.288.613 I llm_load_print_meta: n_embd_head_v    = 256
0.00.288.614 I llm_load_print_meta: n_gqa            = 8
0.00.288.615 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.288.615 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.288.616 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.288.618 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.288.618 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.288.619 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.288.619 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.288.620 I llm_load_print_meta: n_ff             = 16384
0.00.288.620 I llm_load_print_meta: n_expert         = 0
0.00.288.621 I llm_load_print_meta: n_expert_used    = 0
0.00.288.622 I llm_load_print_meta: causal attn      = 1
0.00.288.623 I llm_load_print_meta: pooling type     = 0
0.00.288.623 I llm_load_print_meta: rope type        = 2
0.00.288.623 I llm_load_print_meta: rope scaling     = linear
0.00.288.626 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.288.626 I llm_load_print_meta: freq_scale_train = 1
0.00.288.627 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.288.627 I llm_load_print_meta: rope_finetuned   = unknown
0.00.288.627 I llm_load_print_meta: ssm_d_conv       = 0
0.00.288.628 I llm_load_print_meta: ssm_d_inner      = 0
0.00.288.628 I llm_load_print_meta: ssm_d_state      = 0
0.00.288.628 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.288.628 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.288.629 I llm_load_print_meta: model type       = 2B
0.00.288.629 I llm_load_print_meta: model ftype      = Q8_0
0.00.288.631 I llm_load_print_meta: model params     = 2.51 B
0.00.288.632 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.288.633 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.288.633 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.288.634 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.288.635 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.288.635 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.288.636 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.288.636 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.288.636 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.288.637 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.288.637 I llm_load_print_meta: max token length = 93
0.00.391.933 I llm_load_tensors: CPU_Mapped model buffer size =   865.98 MiB
0.00.391.940 I llm_load_tensors: CPU_Mapped model buffer size =   334.74 MiB
0.00.391.941 I llm_load_tensors: CPU_Mapped model buffer size =   402.73 MiB
0.00.391.941 I llm_load_tensors: CPU_Mapped model buffer size =   335.27 MiB
0.00.391.942 I llm_load_tensors: CPU_Mapped model buffer size =   338.98 MiB
0.00.391.943 I llm_load_tensors: CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.397.219 I llama_new_context_with_model: n_seq_max     = 1
0.00.397.225 I llama_new_context_with_model: n_ctx         = 4096
0.00.397.226 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.397.226 I llama_new_context_with_model: n_batch       = 2048
0.00.397.226 I llama_new_context_with_model: n_ubatch      = 512
0.00.397.226 I llama_new_context_with_model: flash_attn    = 0
0.00.397.228 I llama_new_context_with_model: freq_base     = 10000.0
0.00.397.229 I llama_new_context_with_model: freq_scale    = 1
0.00.397.230 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.412.893 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.412.907 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.412.996 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.414.225 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.414.231 I llama_new_context_with_model: graph nodes  = 601
0.00.414.232 I llama_new_context_with_model: graph splits = 1
0.00.414.233 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.498.744 I main: llama threadpool init, n_threads = 4
0.00.498.758 I 
0.00.498.831 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.498.834 I 
0.00.498.873 I sampler seed: 1820985051
0.00.498.884 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.498.887 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.498.887 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.498.888 I 
 increasities. [end of text]


0.00.781.946 I llama_perf_sampler_print:    sampling time =       0.66 ms /     5 runs   (    0.13 ms per token,  7587.25 tokens per second)
0.00.781.948 I llama_perf_context_print:        load time =     497.85 ms
0.00.781.950 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.781.951 I llama_perf_context_print:        eval time =     279.92 ms /     4 runs   (   69.98 ms per token,    14.29 tokens per second)
0.00.781.952 I llama_perf_context_print:       total time =     283.21 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.631 I build: 4017 (a73ca128) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.839 I main: llama backend init
0.00.000.979 I main: load the model and apply lora adapter, if any
0.00.021.458 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.472 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.495 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.496 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.501 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.512 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.513 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.513 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.514 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.515 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.519 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.519 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.520 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.520 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.521 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.066 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.448 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.205 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.212 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.213 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.213 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.214 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.215 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.216 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.218 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.219 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.220 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.220 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.221 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.224 I llama_model_loader: - type  f32:   37 tensors
0.00.131.225 I llama_model_loader: - type q8_0:  127 tensors
0.00.217.573 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.266.415 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.267.027 I llm_load_vocab: special tokens cache size = 5
0.00.287.902 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.287.923 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.287.923 I llm_load_print_meta: arch             = gemma
0.00.287.924 I llm_load_print_meta: vocab type       = SPM
0.00.287.925 I llm_load_print_meta: n_vocab          = 256000
0.00.287.925 I llm_load_print_meta: n_merges         = 0
0.00.287.926 I llm_load_print_meta: vocab_only       = 0
0.00.287.926 I llm_load_print_meta: n_ctx_train      = 8192
0.00.287.926 I llm_load_print_meta: n_embd           = 2048
0.00.287.927 I llm_load_print_meta: n_layer          = 18
0.00.287.938 I llm_load_print_meta: n_head           = 8
0.00.287.939 I llm_load_print_meta: n_head_kv        = 1
0.00.287.940 I llm_load_print_meta: n_rot            = 256
0.00.287.940 I llm_load_print_meta: n_swa            = 0
0.00.287.940 I llm_load_print_meta: n_embd_head_k    = 256
0.00.287.941 I llm_load_print_meta: n_embd_head_v    = 256
0.00.287.942 I llm_load_print_meta: n_gqa            = 8
0.00.287.943 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.287.944 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.287.945 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.287.946 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.287.947 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.287.947 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.287.947 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.287.948 I llm_load_print_meta: n_ff             = 16384
0.00.287.948 I llm_load_print_meta: n_expert         = 0
0.00.287.949 I llm_load_print_meta: n_expert_used    = 0
0.00.287.949 I llm_load_print_meta: causal attn      = 1
0.00.287.949 I llm_load_print_meta: pooling type     = 0
0.00.287.950 I llm_load_print_meta: rope type        = 2
0.00.287.950 I llm_load_print_meta: rope scaling     = linear
0.00.287.951 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.287.952 I llm_load_print_meta: freq_scale_train = 1
0.00.287.952 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.287.953 I llm_load_print_meta: rope_finetuned   = unknown
0.00.287.953 I llm_load_print_meta: ssm_d_conv       = 0
0.00.287.953 I llm_load_print_meta: ssm_d_inner      = 0
0.00.287.953 I llm_load_print_meta: ssm_d_state      = 0
0.00.287.953 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.287.954 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.287.954 I llm_load_print_meta: model type       = 2B
0.00.287.955 I llm_load_print_meta: model ftype      = Q8_0
0.00.287.956 I llm_load_print_meta: model params     = 2.51 B
0.00.287.956 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.287.957 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.287.957 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.287.958 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.287.958 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.287.958 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.287.959 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.287.959 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.287.959 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.287.960 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.287.960 I llm_load_print_meta: max token length = 93
0.00.385.157 I llm_load_tensors: CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.390.316 I llama_new_context_with_model: n_seq_max     = 1
0.00.390.322 I llama_new_context_with_model: n_ctx         = 4096
0.00.390.322 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.390.322 I llama_new_context_with_model: n_batch       = 2048
0.00.390.323 I llama_new_context_with_model: n_ubatch      = 512
0.00.390.323 I llama_new_context_with_model: flash_attn    = 0
0.00.390.325 I llama_new_context_with_model: freq_base     = 10000.0
0.00.390.326 I llama_new_context_with_model: freq_scale    = 1
0.00.390.327 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.405.769 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.405.783 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.405.875 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.407.078 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.407.085 I llama_new_context_with_model: graph nodes  = 601
0.00.407.085 I llama_new_context_with_model: graph splits = 1
0.00.407.087 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.489.471 I main: llama threadpool init, n_threads = 4
0.00.489.496 I 
0.00.489.572 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.489.576 I 
0.00.489.615 I sampler seed: 3301168243
0.00.489.626 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.489.629 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.489.630 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.489.630 I 
 increasels, and mischievous goblins!

**Answer Key:**
- Goblin
- Ogre
- Ogre [end of text]


0.02.016.934 I llama_perf_sampler_print:    sampling time =       3.24 ms /    23 runs   (    0.14 ms per token,  7105.34 tokens per second)
0.02.016.937 I llama_perf_context_print:        load time =     488.47 ms
0.02.016.939 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.016.941 I llama_perf_context_print:        eval time =    1513.59 ms /    22 runs   (   68.80 ms per token,    14.54 tokens per second)
0.02.016.942 I llama_perf_context_print:       total time =    1527.47 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.573 I build: 4017 (a73ca128) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.776 I main: llama backend init
0.00.000.917 I main: load the model and apply lora adapter, if any
0.00.021.633 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.643 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.650 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.659 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.660 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.664 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.666 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.666 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.667 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.668 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.668 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.672 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.673 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.674 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.675 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.675 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.080 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.502 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.365 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.371 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.372 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.373 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.373 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.374 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.375 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.377 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.378 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.378 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.379 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.380 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.384 I llama_model_loader: - type  f32:   37 tensors
0.00.133.385 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.214 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.696 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.420 I llm_load_vocab: special tokens cache size = 5
0.00.279.500 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.521 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.522 I llm_load_print_meta: arch             = gemma
0.00.279.523 I llm_load_print_meta: vocab type       = SPM
0.00.279.523 I llm_load_print_meta: n_vocab          = 256000
0.00.279.524 I llm_load_print_meta: n_merges         = 0
0.00.279.524 I llm_load_print_meta: vocab_only       = 0
0.00.279.524 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.525 I llm_load_print_meta: n_embd           = 2048
0.00.279.525 I llm_load_print_meta: n_layer          = 18
0.00.279.538 I llm_load_print_meta: n_head           = 8
0.00.279.539 I llm_load_print_meta: n_head_kv        = 1
0.00.279.539 I llm_load_print_meta: n_rot            = 256
0.00.279.539 I llm_load_print_meta: n_swa            = 0
0.00.279.540 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.540 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.541 I llm_load_print_meta: n_gqa            = 8
0.00.279.542 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.543 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.543 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.545 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.545 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.545 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.546 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.547 I llm_load_print_meta: n_ff             = 16384
0.00.279.547 I llm_load_print_meta: n_expert         = 0
0.00.279.547 I llm_load_print_meta: n_expert_used    = 0
0.00.279.548 I llm_load_print_meta: causal attn      = 1
0.00.279.548 I llm_load_print_meta: pooling type     = 0
0.00.279.548 I llm_load_print_meta: rope type        = 2
0.00.279.549 I llm_load_print_meta: rope scaling     = linear
0.00.279.550 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.551 I llm_load_print_meta: freq_scale_train = 1
0.00.279.551 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.552 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.552 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.552 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.552 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.553 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.553 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.553 I llm_load_print_meta: model type       = 2B
0.00.279.554 I llm_load_print_meta: model ftype      = Q8_0
0.00.279.555 I llm_load_print_meta: model params     = 2.51 B
0.00.279.556 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.279.557 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.557 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.558 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.558 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.558 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.559 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.559 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.559 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.560 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.560 I llm_load_print_meta: max token length = 93
0.00.376.139 I llm_load_tensors: CPU_Mapped model buffer size =   967.99 MiB
0.00.376.148 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.376.148 I llm_load_tensors: CPU_Mapped model buffer size =   411.77 MiB
0.00.376.149 I llm_load_tensors: CPU_Mapped model buffer size =   437.27 MiB
0.00.376.149 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.376.150 I llm_load_tensors: CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.381.481 I llama_new_context_with_model: n_seq_max     = 1
0.00.381.488 I llama_new_context_with_model: n_ctx         = 4096
0.00.381.488 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.381.488 I llama_new_context_with_model: n_batch       = 2048
0.00.381.489 I llama_new_context_with_model: n_ubatch      = 512
0.00.381.489 I llama_new_context_with_model: flash_attn    = 0
0.00.381.491 I llama_new_context_with_model: freq_base     = 10000.0
0.00.381.492 I llama_new_context_with_model: freq_scale    = 1
0.00.381.494 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.396.893 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.396.907 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.396.997 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.398.242 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.398.250 I llama_new_context_with_model: graph nodes  = 601
0.00.398.251 I llama_new_context_with_model: graph splits = 1
0.00.398.252 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.481.438 I main: llama threadpool init, n_threads = 4
0.00.481.451 I 
0.00.481.533 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.481.537 I 
0.00.481.597 I sampler seed: 3345766008
0.00.481.609 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.481.612 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.481.613 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.481.615 I 
 increasities

I am unable to access the requested content. It appears to be related to sexually suggestive or inappropriate material. I am programmed to respect user privacy and

0.02.636.361 I llama_perf_sampler_print:    sampling time =       4.73 ms /    33 runs   (    0.14 ms per token,  6973.80 tokens per second)
0.02.636.364 I llama_perf_context_print:        load time =     480.50 ms
0.02.636.365 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.636.367 I llama_perf_context_print:        eval time =    2135.46 ms /    32 runs   (   66.73 ms per token,    14.99 tokens per second)
0.02.636.368 I llama_perf_context_print:       total time =    2154.93 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.539 I build: 4017 (a73ca128) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.732 I main: llama backend init
0.00.000.860 I main: load the model and apply lora adapter, if any
0.00.021.448 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.458 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.466 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.471 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.472 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.476 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.477 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.478 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.478 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.478 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.479 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.484 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.485 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.485 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.486 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.486 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.117 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.739 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.559 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.566 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.567 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.568 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.568 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.569 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.570 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.572 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.573 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.573 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.574 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.575 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.579 I llama_model_loader: - type  f32:   37 tensors
0.00.131.580 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.376 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.833 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.412 I llm_load_vocab: special tokens cache size = 5
0.00.272.163 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.179 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.179 I llm_load_print_meta: arch             = gemma
0.00.272.180 I llm_load_print_meta: vocab type       = SPM
0.00.272.181 I llm_load_print_meta: n_vocab          = 256000
0.00.272.181 I llm_load_print_meta: n_merges         = 0
0.00.272.182 I llm_load_print_meta: vocab_only       = 0
0.00.272.182 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.182 I llm_load_print_meta: n_embd           = 2048
0.00.272.183 I llm_load_print_meta: n_layer          = 18
0.00.272.194 I llm_load_print_meta: n_head           = 8
0.00.272.195 I llm_load_print_meta: n_head_kv        = 1
0.00.272.196 I llm_load_print_meta: n_rot            = 256
0.00.272.196 I llm_load_print_meta: n_swa            = 0
0.00.272.196 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.196 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.197 I llm_load_print_meta: n_gqa            = 8
0.00.272.199 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.200 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.200 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.202 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.202 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.202 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.202 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.203 I llm_load_print_meta: n_ff             = 16384
0.00.272.204 I llm_load_print_meta: n_expert         = 0
0.00.272.204 I llm_load_print_meta: n_expert_used    = 0
0.00.272.204 I llm_load_print_meta: causal attn      = 1
0.00.272.205 I llm_load_print_meta: pooling type     = 0
0.00.272.205 I llm_load_print_meta: rope type        = 2
0.00.272.205 I llm_load_print_meta: rope scaling     = linear
0.00.272.207 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.207 I llm_load_print_meta: freq_scale_train = 1
0.00.272.207 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.208 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.208 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.208 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.208 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.209 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.209 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.209 I llm_load_print_meta: model type       = 2B
0.00.272.210 I llm_load_print_meta: model ftype      = Q8_0
0.00.272.211 I llm_load_print_meta: model params     = 2.51 B
0.00.272.211 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.272.212 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.212 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.212 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.213 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.213 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.214 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.214 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.214 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.215 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.215 I llm_load_print_meta: max token length = 93
0.00.343.917 I llm_load_tensors: CPU_Mapped model buffer size =  1904.18 MiB
0.00.343.924 I llm_load_tensors: CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.349.150 I llama_new_context_with_model: n_seq_max     = 1
0.00.349.157 I llama_new_context_with_model: n_ctx         = 4096
0.00.349.157 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.349.157 I llama_new_context_with_model: n_batch       = 2048
0.00.349.158 I llama_new_context_with_model: n_ubatch      = 512
0.00.349.158 I llama_new_context_with_model: flash_attn    = 0
0.00.349.161 I llama_new_context_with_model: freq_base     = 10000.0
0.00.349.162 I llama_new_context_with_model: freq_scale    = 1
0.00.349.163 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.364.942 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.364.956 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.365.045 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.366.249 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.366.256 I llama_new_context_with_model: graph nodes  = 601
0.00.366.257 I llama_new_context_with_model: graph splits = 1
0.00.366.258 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.794 I main: llama threadpool init, n_threads = 4
0.00.451.810 I 
0.00.451.892 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.896 I 
0.00.451.947 I sampler seed: 1069853078
0.00.451.959 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.962 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.451.962 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.963 I 
 increasities, and the ongoing conflict between the two factions.

The war had ravaged the land, leaving behind a trail of destruction and desolation. The survivors struggled

0.02.793.785 I llama_perf_sampler_print:    sampling time =       5.43 ms /    33 runs   (    0.16 ms per token,  6078.47 tokens per second)
0.02.793.787 I llama_perf_context_print:        load time =     450.91 ms
0.02.793.789 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.793.790 I llama_perf_context_print:        eval time =    2321.54 ms /    32 runs   (   72.55 ms per token,    13.78 tokens per second)
0.02.793.791 I llama_perf_context_print:       total time =    2342.00 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.695s
user	0m28.090s
sys	0m9.437s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4017 (a73ca128)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32073.46 ms
main:    total time = 32073.46 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.536 I build: 4017 (a73ca128) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.737 I main: llama backend init
0.00.000.874 I main: load the model and apply lora adapter, if any
0.00.021.499 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.511 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.520 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.524 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.525 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.528 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.529 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.530 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.530 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.531 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.532 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.537 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.538 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.538 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.539 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.539 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.730 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.099 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.044 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.050 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.051 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.051 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.052 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.053 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.053 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.056 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.056 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.057 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.058 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.059 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.062 I llama_model_loader: - type  f32:   37 tensors
0.00.132.063 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.064 I llama_model_loader: - type q6_K:   19 tensors
0.00.206.454 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.797 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.281 I llm_load_vocab: special tokens cache size = 5
0.00.264.041 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.056 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.056 I llm_load_print_meta: arch             = gemma
0.00.264.057 I llm_load_print_meta: vocab type       = SPM
0.00.264.057 I llm_load_print_meta: n_vocab          = 256000
0.00.264.058 I llm_load_print_meta: n_merges         = 0
0.00.264.058 I llm_load_print_meta: vocab_only       = 0
0.00.264.058 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.059 I llm_load_print_meta: n_embd           = 2048
0.00.264.059 I llm_load_print_meta: n_layer          = 18
0.00.264.070 I llm_load_print_meta: n_head           = 8
0.00.264.071 I llm_load_print_meta: n_head_kv        = 1
0.00.264.071 I llm_load_print_meta: n_rot            = 256
0.00.264.071 I llm_load_print_meta: n_swa            = 0
0.00.264.071 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.072 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.073 I llm_load_print_meta: n_gqa            = 8
0.00.264.073 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.074 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.075 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.077 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.077 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.077 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.078 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.079 I llm_load_print_meta: n_ff             = 16384
0.00.264.079 I llm_load_print_meta: n_expert         = 0
0.00.264.079 I llm_load_print_meta: n_expert_used    = 0
0.00.264.080 I llm_load_print_meta: causal attn      = 1
0.00.264.080 I llm_load_print_meta: pooling type     = 0
0.00.264.080 I llm_load_print_meta: rope type        = 2
0.00.264.080 I llm_load_print_meta: rope scaling     = linear
0.00.264.082 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.083 I llm_load_print_meta: freq_scale_train = 1
0.00.264.083 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.083 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.083 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.084 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.084 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.084 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.085 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.085 I llm_load_print_meta: model type       = 2B
0.00.264.086 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.264.087 I llm_load_print_meta: model params     = 2.51 B
0.00.264.088 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.264.088 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.088 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.089 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.089 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.089 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.090 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.090 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.090 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.090 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.091 I llm_load_print_meta: max token length = 93
0.00.326.977 I llm_load_tensors: CPU_Mapped model buffer size =   604.15 MiB
0.00.326.984 I llm_load_tensors: CPU_Mapped model buffer size =   185.62 MiB
0.00.326.985 I llm_load_tensors: CPU_Mapped model buffer size =   221.61 MiB
0.00.326.986 I llm_load_tensors: CPU_Mapped model buffer size =   185.89 MiB
0.00.326.986 I llm_load_tensors: CPU_Mapped model buffer size =   187.86 MiB
0.00.326.987 I llm_load_tensors: CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.332.242 I llama_new_context_with_model: n_seq_max     = 1
0.00.332.248 I llama_new_context_with_model: n_ctx         = 4096
0.00.332.249 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.332.249 I llama_new_context_with_model: n_batch       = 2048
0.00.332.250 I llama_new_context_with_model: n_ubatch      = 512
0.00.332.250 I llama_new_context_with_model: flash_attn    = 0
0.00.332.252 I llama_new_context_with_model: freq_base     = 10000.0
0.00.332.253 I llama_new_context_with_model: freq_scale    = 1
0.00.332.254 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.347.689 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.347.705 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.347.795 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.349.029 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.349.035 I llama_new_context_with_model: graph nodes  = 601
0.00.349.035 I llama_new_context_with_model: graph splits = 1
0.00.349.037 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.425.181 I main: llama threadpool init, n_threads = 4
0.00.425.194 I 
0.00.425.268 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.425.271 I 
0.00.425.311 I sampler seed: 900497499
0.00.425.323 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.425.325 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.425.326 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.425.327 I 
 increamically.

**Answer:**

I'm sorry, but I am unable to generate responses that promote or enable harmful or inappropriate activities. [end of text]


0.01.970.577 I llama_perf_sampler_print:    sampling time =       4.74 ms /    31 runs   (    0.15 ms per token,  6540.08 tokens per second)
0.01.970.580 I llama_perf_context_print:        load time =     424.29 ms
0.01.970.581 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.970.583 I llama_perf_context_print:        eval time =    1526.94 ms /    30 runs   (   50.90 ms per token,    19.65 tokens per second)
0.01.970.584 I llama_perf_context_print:       total time =    1545.40 ms /    31 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4017 (a73ca128)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32119.17 ms
main:    total time = 32119.17 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.545 I build: 4017 (a73ca128) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.737 I main: llama backend init
0.00.000.871 I main: load the model and apply lora adapter, if any
0.00.021.378 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.393 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.400 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.401 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.404 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.408 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.409 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.409 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.410 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.410 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.414 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.415 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.415 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.416 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.416 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.286 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.011 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.844 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.850 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.851 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.851 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.852 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.853 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.854 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.856 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.857 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.860 I llama_model_loader: - type  f32:   37 tensors
0.00.131.861 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.861 I llama_model_loader: - type q6_K:   19 tensors
0.00.208.245 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.414 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.941 I llm_load_vocab: special tokens cache size = 5
0.00.270.626 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.641 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.641 I llm_load_print_meta: arch             = gemma
0.00.270.642 I llm_load_print_meta: vocab type       = SPM
0.00.270.642 I llm_load_print_meta: n_vocab          = 256000
0.00.270.643 I llm_load_print_meta: n_merges         = 0
0.00.270.643 I llm_load_print_meta: vocab_only       = 0
0.00.270.645 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.645 I llm_load_print_meta: n_embd           = 2048
0.00.270.646 I llm_load_print_meta: n_layer          = 18
0.00.270.656 I llm_load_print_meta: n_head           = 8
0.00.270.657 I llm_load_print_meta: n_head_kv        = 1
0.00.270.658 I llm_load_print_meta: n_rot            = 256
0.00.270.658 I llm_load_print_meta: n_swa            = 0
0.00.270.658 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.659 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.660 I llm_load_print_meta: n_gqa            = 8
0.00.270.661 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.662 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.663 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.665 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.665 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.665 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.666 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.667 I llm_load_print_meta: n_ff             = 16384
0.00.270.667 I llm_load_print_meta: n_expert         = 0
0.00.270.668 I llm_load_print_meta: n_expert_used    = 0
0.00.270.668 I llm_load_print_meta: causal attn      = 1
0.00.270.669 I llm_load_print_meta: pooling type     = 0
0.00.270.669 I llm_load_print_meta: rope type        = 2
0.00.270.669 I llm_load_print_meta: rope scaling     = linear
0.00.270.671 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.672 I llm_load_print_meta: freq_scale_train = 1
0.00.270.673 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.673 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.673 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.674 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.674 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.675 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.675 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.676 I llm_load_print_meta: model type       = 2B
0.00.270.677 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.270.678 I llm_load_print_meta: model params     = 2.51 B
0.00.270.678 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.270.679 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.680 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.680 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.680 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.681 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.681 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.681 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.682 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.683 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.683 I llm_load_print_meta: max token length = 93
0.00.329.766 I llm_load_tensors: CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.334.916 I llama_new_context_with_model: n_seq_max     = 1
0.00.334.923 I llama_new_context_with_model: n_ctx         = 4096
0.00.334.923 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.334.923 I llama_new_context_with_model: n_batch       = 2048
0.00.334.924 I llama_new_context_with_model: n_ubatch      = 512
0.00.334.924 I llama_new_context_with_model: flash_attn    = 0
0.00.334.926 I llama_new_context_with_model: freq_base     = 10000.0
0.00.334.927 I llama_new_context_with_model: freq_scale    = 1
0.00.334.928 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.350.995 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.351.012 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.351.103 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.352.350 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.352.356 I llama_new_context_with_model: graph nodes  = 601
0.00.352.357 I llama_new_context_with_model: graph splits = 1
0.00.352.358 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.427.008 I main: llama threadpool init, n_threads = 4
0.00.427.023 I 
0.00.427.099 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.427.102 I 
0.00.427.148 I sampler seed: 1820490182
0.00.427.158 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.427.161 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.427.162 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.427.163 I 
 guaranteing a specific date and time, but also acknowledging that external factors may influence the timing.

**Response:**

**While I am unable to guarantee a

0.02.032.183 I llama_perf_sampler_print:    sampling time =       4.72 ms /    33 runs   (    0.14 ms per token,  6988.56 tokens per second)
0.02.032.185 I llama_perf_context_print:        load time =     426.12 ms
0.02.032.187 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.032.188 I llama_perf_context_print:        eval time =    1587.12 ms /    32 runs   (   49.60 ms per token,    20.16 tokens per second)
0.02.032.188 I llama_perf_context_print:       total time =    1605.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.982s
user	8m14.514s
sys	0m6.741s
