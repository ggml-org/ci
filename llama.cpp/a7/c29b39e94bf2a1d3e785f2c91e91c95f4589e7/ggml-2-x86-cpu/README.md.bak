### ctest_debug

Runs ctest in debug mode
- status: 0
```
+ ctest --output-on-failure -L main -E test-opt
Test project /home/ggml/work/llama.cpp/build-ci-debug
      Start  1: test-tokenizer-0-bert-bge
 1/27 Test  #1: test-tokenizer-0-bert-bge .........   Passed    0.12 sec
      Start  2: test-tokenizer-0-command-r
 2/27 Test  #2: test-tokenizer-0-command-r ........   Passed    2.54 sec
      Start  3: test-tokenizer-0-deepseek-coder
 3/27 Test  #3: test-tokenizer-0-deepseek-coder ...   Passed    0.39 sec
      Start  4: test-tokenizer-0-deepseek-llm
 4/27 Test  #4: test-tokenizer-0-deepseek-llm .....   Passed    0.94 sec
      Start  5: test-tokenizer-0-falcon
 5/27 Test  #5: test-tokenizer-0-falcon ...........   Passed    0.59 sec
      Start  6: test-tokenizer-0-gpt-2
 6/27 Test  #6: test-tokenizer-0-gpt-2 ............   Passed    0.45 sec
      Start  7: test-tokenizer-0-llama-bpe
 7/27 Test  #7: test-tokenizer-0-llama-bpe ........   Passed    1.80 sec
      Start  8: test-tokenizer-0-llama-spm
 8/27 Test  #8: test-tokenizer-0-llama-spm ........   Passed    0.12 sec
      Start  9: test-tokenizer-0-mpt
 9/27 Test  #9: test-tokenizer-0-mpt ..............   Passed    0.44 sec
      Start 10: test-tokenizer-0-phi-3
10/27 Test #10: test-tokenizer-0-phi-3 ............   Passed    0.12 sec
      Start 11: test-tokenizer-0-qwen2
11/27 Test #11: test-tokenizer-0-qwen2 ............   Passed    1.68 sec
      Start 12: test-tokenizer-0-refact
12/27 Test #12: test-tokenizer-0-refact ...........   Passed    0.45 sec
      Start 13: test-tokenizer-0-starcoder
13/27 Test #13: test-tokenizer-0-starcoder ........   Passed    0.45 sec
      Start 14: test-tokenizer-1-llama-spm
14/27 Test #14: test-tokenizer-1-llama-spm ........   Passed    1.75 sec
      Start 15: test-log
15/27 Test #15: test-log ..........................   Passed    0.02 sec
      Start 16: test-arg-parser
16/27 Test #16: test-arg-parser ...................   Passed    0.04 sec
      Start 17: test-sampling
17/27 Test #17: test-sampling .....................   Passed    6.39 sec
      Start 18: test-chat-template
18/27 Test #18: test-chat-template ................   Passed    0.00 sec
      Start 19: test-grammar-parser
19/27 Test #19: test-grammar-parser ...............   Passed    0.00 sec
      Start 20: test-grammar-integration
20/27 Test #20: test-grammar-integration ..........   Passed    0.04 sec
      Start 21: test-llama-grammar
21/27 Test #21: test-llama-grammar ................   Passed    0.00 sec
      Start 22: test-backend-ops
22/27 Test #22: test-backend-ops ..................   Passed    0.01 sec
      Start 25: test-barrier
23/27 Test #25: test-barrier ......................   Passed    1.31 sec
      Start 26: test-quantize-fns
24/27 Test #26: test-quantize-fns .................   Passed   30.92 sec
      Start 27: test-quantize-perf
25/27 Test #27: test-quantize-perf ................   Passed    0.62 sec
      Start 28: test-rope
26/27 Test #28: test-rope .........................   Passed    0.06 sec
      Start 29: test-json-schema-to-grammar
27/27 Test #29: test-json-schema-to-grammar .......   Passed    1.93 sec

100% tests passed, 0 tests failed out of 27

Label Time Summary:
main    =  53.17 sec*proc (27 tests)

Total Test time (real) =  53.19 sec

real	0m53.252s
user	1m8.457s
sys	0m0.708s
```

### ctest_release

Runs ctest in release mode
- status: 0
```
+ ctest --output-on-failure -L main
Test project /home/ggml/work/llama.cpp/build-ci-release
      Start  1: test-tokenizer-0-bert-bge
 1/27 Test  #1: test-tokenizer-0-bert-bge .........   Passed    0.03 sec
      Start  2: test-tokenizer-0-command-r
 2/27 Test  #2: test-tokenizer-0-command-r ........   Passed    0.61 sec
      Start  3: test-tokenizer-0-deepseek-coder
 3/27 Test  #3: test-tokenizer-0-deepseek-coder ...   Passed    0.07 sec
      Start  4: test-tokenizer-0-deepseek-llm
 4/27 Test  #4: test-tokenizer-0-deepseek-llm .....   Passed    0.21 sec
      Start  5: test-tokenizer-0-falcon
 5/27 Test  #5: test-tokenizer-0-falcon ...........   Passed    0.12 sec
      Start  6: test-tokenizer-0-gpt-2
 6/27 Test  #6: test-tokenizer-0-gpt-2 ............   Passed    0.09 sec
      Start  7: test-tokenizer-0-llama-bpe
 7/27 Test  #7: test-tokenizer-0-llama-bpe ........   Passed    0.40 sec
      Start  8: test-tokenizer-0-llama-spm
 8/27 Test  #8: test-tokenizer-0-llama-spm ........   Passed    0.04 sec
      Start  9: test-tokenizer-0-mpt
 9/27 Test  #9: test-tokenizer-0-mpt ..............   Passed    0.10 sec
      Start 10: test-tokenizer-0-phi-3
10/27 Test #10: test-tokenizer-0-phi-3 ............   Passed    0.04 sec
      Start 11: test-tokenizer-0-qwen2
11/27 Test #11: test-tokenizer-0-qwen2 ............   Passed    0.33 sec
      Start 12: test-tokenizer-0-refact
12/27 Test #12: test-tokenizer-0-refact ...........   Passed    0.09 sec
      Start 13: test-tokenizer-0-starcoder
13/27 Test #13: test-tokenizer-0-starcoder ........   Passed    0.09 sec
      Start 14: test-tokenizer-1-llama-spm
14/27 Test #14: test-tokenizer-1-llama-spm ........   Passed    0.23 sec
      Start 15: test-log
15/27 Test #15: test-log ..........................   Passed    0.02 sec
      Start 16: test-arg-parser
16/27 Test #16: test-arg-parser ...................   Passed    0.02 sec
      Start 17: test-sampling
17/27 Test #17: test-sampling .....................   Passed    1.28 sec
      Start 18: test-chat-template
18/27 Test #18: test-chat-template ................   Passed    0.00 sec
      Start 19: test-grammar-parser
19/27 Test #19: test-grammar-parser ...............   Passed    0.00 sec
      Start 20: test-grammar-integration
20/27 Test #20: test-grammar-integration ..........   Passed    0.01 sec
      Start 21: test-llama-grammar
21/27 Test #21: test-llama-grammar ................   Passed    0.00 sec
      Start 22: test-backend-ops
22/27 Test #22: test-backend-ops ..................   Passed    0.00 sec
      Start 25: test-barrier
23/27 Test #25: test-barrier ......................   Passed    0.32 sec
      Start 26: test-quantize-fns
24/27 Test #26: test-quantize-fns .................   Passed   16.48 sec
      Start 27: test-quantize-perf
25/27 Test #27: test-quantize-perf ................   Passed    0.08 sec
      Start 28: test-rope
26/27 Test #28: test-rope .........................   Passed    0.04 sec
      Start 29: test-json-schema-to-grammar
27/27 Test #29: test-json-schema-to-grammar .......   Passed    1.87 sec

100% tests passed, 0 tests failed out of 27

Label Time Summary:
main    =  22.56 sec*proc (27 tests)

Total Test time (real) =  22.57 sec

real	0m22.635s
user	0m24.228s
sys	0m0.702s
```
### embd_bge_small

BGE Small (BERT):
- status: 0
- f16: 
```
+ ./bin/llama-embedding --model ../models-mnt/bge-small/ggml-model-f16.gguf -p 'I believe the meaning of life is' -ngl 99 -c 0
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.546 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.003.788 I llama_model_loader: loaded meta data with 25 key-value pairs and 197 tensors from ../models-mnt/bge-small/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.003.800 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.003.806 I llama_model_loader: - kv   0:                       general.architecture str              = bert
0.00.003.807 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.003.807 I llama_model_loader: - kv   2:                               general.name str              = Bge Small
0.00.003.809 I llama_model_loader: - kv   3:                           general.basename str              = bge
0.00.003.810 I llama_model_loader: - kv   4:                         general.size_label str              = small
0.00.003.813 I llama_model_loader: - kv   5:                           bert.block_count u32              = 12
0.00.003.814 I llama_model_loader: - kv   6:                        bert.context_length u32              = 512
0.00.003.815 I llama_model_loader: - kv   7:                      bert.embedding_length u32              = 384
0.00.003.816 I llama_model_loader: - kv   8:                   bert.feed_forward_length u32              = 1536
0.00.003.817 I llama_model_loader: - kv   9:                  bert.attention.head_count u32              = 12
0.00.003.821 I llama_model_loader: - kv  10:          bert.attention.layer_norm_epsilon f32              = 0.000000
0.00.003.822 I llama_model_loader: - kv  11:                          general.file_type u32              = 1
0.00.003.823 I llama_model_loader: - kv  12:                      bert.attention.causal bool             = false
0.00.003.824 I llama_model_loader: - kv  13:                          bert.pooling_type u32              = 2
0.00.003.825 I llama_model_loader: - kv  14:            tokenizer.ggml.token_type_count u32              = 2
0.00.003.826 I llama_model_loader: - kv  15:                       tokenizer.ggml.model str              = bert
0.00.003.828 I llama_model_loader: - kv  16:                         tokenizer.ggml.pre str              = jina-v2-en
0.00.007.301 I llama_model_loader: - kv  17:                      tokenizer.ggml.tokens arr[str,30522]   = ["[PAD]", "[unused0]", "[unused1]", "...
0.00.008.104 I llama_model_loader: - kv  18:                  tokenizer.ggml.token_type arr[i32,30522]   = [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.008.109 I llama_model_loader: - kv  19:            tokenizer.ggml.unknown_token_id u32              = 100
0.00.008.109 I llama_model_loader: - kv  20:          tokenizer.ggml.seperator_token_id u32              = 102
0.00.008.110 I llama_model_loader: - kv  21:            tokenizer.ggml.padding_token_id u32              = 0
0.00.008.110 I llama_model_loader: - kv  22:                tokenizer.ggml.cls_token_id u32              = 101
0.00.008.110 I llama_model_loader: - kv  23:               tokenizer.ggml.mask_token_id u32              = 103
0.00.008.111 I llama_model_loader: - kv  24:               general.quantization_version u32              = 2
0.00.008.112 I llama_model_loader: - type  f32:  124 tensors
0.00.008.113 I llama_model_loader: - type  f16:   73 tensors
0.00.019.326 I llm_load_vocab: special tokens cache size = 5
0.00.022.008 I llm_load_vocab: token to piece cache size = 0.2032 MB
0.00.022.019 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.022.020 I llm_load_print_meta: arch             = bert
0.00.022.021 I llm_load_print_meta: vocab type       = WPM
0.00.022.021 I llm_load_print_meta: n_vocab          = 30522
0.00.022.022 I llm_load_print_meta: n_merges         = 0
0.00.022.022 I llm_load_print_meta: vocab_only       = 0
0.00.022.022 I llm_load_print_meta: n_ctx_train      = 512
0.00.022.022 I llm_load_print_meta: n_embd           = 384
0.00.022.023 I llm_load_print_meta: n_layer          = 12
0.00.022.029 I llm_load_print_meta: n_head           = 12
0.00.022.030 I llm_load_print_meta: n_head_kv        = 12
0.00.022.030 I llm_load_print_meta: n_rot            = 32
0.00.022.030 I llm_load_print_meta: n_swa            = 0
0.00.022.031 I llm_load_print_meta: n_embd_head_k    = 32
0.00.022.032 I llm_load_print_meta: n_embd_head_v    = 32
0.00.022.034 I llm_load_print_meta: n_gqa            = 1
0.00.022.036 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.022.037 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.022.038 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.022.039 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.022.043 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.022.043 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.022.044 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.022.045 I llm_load_print_meta: n_ff             = 1536
0.00.022.046 I llm_load_print_meta: n_expert         = 0
0.00.022.047 I llm_load_print_meta: n_expert_used    = 0
0.00.022.047 I llm_load_print_meta: causal attn      = 0
0.00.022.048 I llm_load_print_meta: pooling type     = 2
0.00.022.048 I llm_load_print_meta: rope type        = 2
0.00.022.049 I llm_load_print_meta: rope scaling     = linear
0.00.022.050 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.022.051 I llm_load_print_meta: freq_scale_train = 1
0.00.022.051 I llm_load_print_meta: n_ctx_orig_yarn  = 512
0.00.022.052 I llm_load_print_meta: rope_finetuned   = unknown
0.00.022.052 I llm_load_print_meta: ssm_d_conv       = 0
0.00.022.053 I llm_load_print_meta: ssm_d_inner      = 0
0.00.022.053 I llm_load_print_meta: ssm_d_state      = 0
0.00.022.054 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.022.054 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.022.055 I llm_load_print_meta: model type       = 33M
0.00.022.056 I llm_load_print_meta: model ftype      = F16
0.00.022.057 I llm_load_print_meta: model params     = 33.21 M
0.00.022.058 I llm_load_print_meta: model size       = 63.84 MiB (16.12 BPW) 
0.00.022.059 I llm_load_print_meta: general.name     = Bge Small
0.00.022.060 I llm_load_print_meta: UNK token        = 100 '[UNK]'
0.00.022.061 I llm_load_print_meta: SEP token        = 102 '[SEP]'
0.00.022.062 I llm_load_print_meta: PAD token        = 0 '[PAD]'
0.00.022.063 I llm_load_print_meta: CLS token        = 101 '[CLS]'
0.00.022.063 I llm_load_print_meta: MASK token       = 103 '[MASK]'
0.00.022.064 I llm_load_print_meta: LF token         = 0 '[PAD]'
0.00.022.066 I llm_load_print_meta: max token length = 21
0.00.026.438 I llm_load_tensors:   CPU_Mapped model buffer size =    63.84 MiB
...............................................
0.00.027.677 I llama_new_context_with_model: n_seq_max     = 1
0.00.027.682 I llama_new_context_with_model: n_ctx         = 512
0.00.027.682 I llama_new_context_with_model: n_ctx_per_seq = 512
0.00.027.682 I llama_new_context_with_model: n_batch       = 2048
0.00.027.683 I llama_new_context_with_model: n_ubatch      = 2048
0.00.027.683 I llama_new_context_with_model: flash_attn    = 0
0.00.027.685 I llama_new_context_with_model: freq_base     = 10000.0
0.00.027.685 I llama_new_context_with_model: freq_scale    = 1
0.00.030.039 I llama_kv_cache_init:        CPU KV buffer size =     9.00 MiB
0.00.030.048 I llama_new_context_with_model: KV self size  =    9.00 MiB, K (f16):    4.50 MiB, V (f16):    4.50 MiB
0.00.030.053 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.031.512 I llama_new_context_with_model:        CPU compute buffer size =    16.01 MiB
0.00.031.518 I llama_new_context_with_model: graph nodes  = 429
0.00.031.518 I llama_new_context_with_model: graph splits = 1
0.00.031.519 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.034.755 I 
0.00.034.819 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.036.351 I batch_decode: n_tokens = 9, n_seq = 1

embedding 0: -0.043981 -0.019912  0.007653 -0.000817  0.001368 -0.037036  0.109434  0.042551  0.092053 -0.015928  0.006786 -0.035685 -0.017891  0.015067  0.018122  0.015897 -0.011289  0.010462 -0.085223 -0.008462  0.091371 -0.017062 -0.060338 -0.024475  0.027552  0.076068  0.027959 -0.014586  0.017650 -0.033272 -0.037874 -0.018970  0.068696 -0.009850 -0.025049  0.072347 -0.046561  0.011048 -0.050250  0.047711  0.032363 -0.011729  0.022058  0.049651  0.010451  0.005790 -0.028889  0.008910 -0.018504 -0.051470 -0.046051  0.030501 -0.035401  0.054201 -0.069637  0.044231  0.029804  0.046312  0.073396 -0.042574  0.076081  0.038866 -0.181164  0.082478  0.042289 -0.064568 -0.060101 -0.017852  0.006443  0.005881  0.017190 -0.026621  0.064579  0.112592  0.035119 -0.067439  0.027085 -0.067310 -0.033500 -0.033203  0.033284  0.013506 -0.003304 -0.037496 -0.052081  0.055139 -0.002003 -0.038281  0.064455  0.028829 -0.043329 -0.029286 -0.039474  0.036341  0.008404 -0.015484 -0.036588  0.018115  0.028594  0.342771 -0.044499  0.056128  0.017652 -0.020864 -0.066821  0.000156 -0.037885 -0.030052 -0.008532 -0.021580  0.000528 -0.003207  0.004002  0.018917 -0.008578  0.025847  0.049425  0.000093  0.050960 -0.042520 -0.031882  0.023591  0.030688 -0.023180 -0.046251 -0.079296  0.115182  0.046762  0.027825 -0.040706  0.067815 -0.022944  0.010327 -0.032950 -0.018314  0.043851  0.024273  0.052408  0.007479  0.008896  0.011261 -0.074641 -0.065550 -0.026755 -0.041183 -0.023861  0.026700  0.006908  0.027733  0.052891 -0.036685  0.057699 -0.000166  0.031751 -0.019797 -0.022062  0.041041 -0.058920  0.019588  0.043124  0.043576  0.041590 -0.022536  0.027068 -0.021847  0.005468 -0.041329 -0.001252  0.024406  0.002114  0.044361 -0.022769  0.043658  0.064761  0.055420  0.037071 -0.000892  0.046132  0.045799 -0.008473  0.063054 -0.073263 -0.011963  0.032102  0.023951  0.014715 -0.033687  0.001103 -0.015832 -0.019009  0.047889  0.110844  0.028409  0.031342 -0.013292 -0.057500  0.006651  0.005130 -0.012266 -0.051441 -0.000961 -0.017656 -0.019406 -0.040925  0.009218 -0.057942  0.050951  0.052334 -0.009604 -0.040249 -0.014093 -0.024869 -0.017245  0.006308  0.006589 -0.026888  0.015623  0.030737  0.002593  0.023236 -0.022227 -0.098571 -0.051117 -0.278013 -0.014983 -0.061554 -0.027217  0.017664 -0.010937 -0.017106  0.035068  0.047014 -0.015436  0.015181 -0.025469  0.047838 -0.005962 -0.000707 -0.061015 -0.068932 -0.060372 -0.035959  0.043333 -0.055008  0.015049  0.000546 -0.058232 -0.010431  0.012631  0.151511  0.127122 -0.013588  0.042000 -0.025680  0.014036 -0.001037 -0.150464  0.044853  0.005319 -0.036292 -0.029771 -0.020195 -0.034879  0.010257  0.033528 -0.048161 -0.051813 -0.017459 -0.023496  0.047369  0.052034 -0.016808 -0.055448  0.025848 -0.005719  0.010710  0.038711  0.008214 -0.009744 -0.105767 -0.027430 -0.096152  0.025073 -0.011257  0.092356  0.056104  0.003724  0.027786  0.002081 -0.051055 -0.039905 -0.013559 -0.044960 -0.015337  0.002931 -0.043514 -0.077954  0.065211 -0.006809 -0.001642 -0.014600  0.071543  0.023728 -0.037174  0.009152  0.001557 -0.032289  0.015478  0.037923  0.000353 -0.053199  0.021299 -0.039830  0.000027  0.013394  0.019804 -0.057902  0.006492 -0.049545 -0.267872  0.039153 -0.067966  0.038268 -0.012340  0.041505 -0.016141  0.052383 -0.071362  0.011378  0.024707 -0.007224  0.082095  0.028495 -0.021513  0.040507 -0.004541 -0.074590 -0.014750  0.020038  0.002290  0.023143  0.197207 -0.043248 -0.026016 -0.004951 -0.019268  0.074266  0.001757 -0.031968 -0.036601 -0.045052  0.000560 -0.011559  0.018118 -0.029477 -0.008451  0.006411  0.050800 -0.014935  0.006192  0.026092 -0.030786  0.048049  0.114067 -0.040810 -0.011428  0.005412 -0.003587  0.025157 -0.059144  0.013758 -0.010409  0.038707  0.051460  0.035409  0.035034 -0.017059  0.026389 -0.014506 -0.050054  0.003248  0.054119  0.039741 -0.039141 

0.00.042.444 I llama_perf_context_print:        load time =      34.18 ms
0.00.042.447 I llama_perf_context_print: prompt eval time =       5.71 ms /     9 tokens (    0.64 ms per token,  1574.80 tokens per second)
0.00.042.449 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.042.449 I llama_perf_context_print:       total time =       7.69 ms /    10 tokens

real	0m0.053s
user	0m0.086s
sys	0m0.011s
```
- q8_0:
```
+ ./bin/llama-embedding --model ../models-mnt/bge-small/ggml-model-q8_0.gguf -p 'I believe the meaning of life is' -ngl 99 -c 0
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.551 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.003.920 I llama_model_loader: loaded meta data with 25 key-value pairs and 197 tensors from ../models-mnt/bge-small/ggml-model-q8_0.gguf (version GGUF V3 (latest))
0.00.003.932 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.003.937 I llama_model_loader: - kv   0:                       general.architecture str              = bert
0.00.003.938 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.003.939 I llama_model_loader: - kv   2:                               general.name str              = Bge Small
0.00.003.939 I llama_model_loader: - kv   3:                           general.basename str              = bge
0.00.003.940 I llama_model_loader: - kv   4:                         general.size_label str              = small
0.00.003.944 I llama_model_loader: - kv   5:                           bert.block_count u32              = 12
0.00.003.944 I llama_model_loader: - kv   6:                        bert.context_length u32              = 512
0.00.003.945 I llama_model_loader: - kv   7:                      bert.embedding_length u32              = 384
0.00.003.946 I llama_model_loader: - kv   8:                   bert.feed_forward_length u32              = 1536
0.00.003.946 I llama_model_loader: - kv   9:                  bert.attention.head_count u32              = 12
0.00.003.949 I llama_model_loader: - kv  10:          bert.attention.layer_norm_epsilon f32              = 0.000000
0.00.003.950 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.003.951 I llama_model_loader: - kv  12:                      bert.attention.causal bool             = false
0.00.003.952 I llama_model_loader: - kv  13:                          bert.pooling_type u32              = 2
0.00.003.952 I llama_model_loader: - kv  14:            tokenizer.ggml.token_type_count u32              = 2
0.00.003.953 I llama_model_loader: - kv  15:                       tokenizer.ggml.model str              = bert
0.00.003.954 I llama_model_loader: - kv  16:                         tokenizer.ggml.pre str              = jina-v2-en
0.00.007.313 I llama_model_loader: - kv  17:                      tokenizer.ggml.tokens arr[str,30522]   = ["[PAD]", "[unused0]", "[unused1]", "...
0.00.008.126 I llama_model_loader: - kv  18:                  tokenizer.ggml.token_type arr[i32,30522]   = [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.008.129 I llama_model_loader: - kv  19:            tokenizer.ggml.unknown_token_id u32              = 100
0.00.008.130 I llama_model_loader: - kv  20:          tokenizer.ggml.seperator_token_id u32              = 102
0.00.008.131 I llama_model_loader: - kv  21:            tokenizer.ggml.padding_token_id u32              = 0
0.00.008.131 I llama_model_loader: - kv  22:                tokenizer.ggml.cls_token_id u32              = 101
0.00.008.131 I llama_model_loader: - kv  23:               tokenizer.ggml.mask_token_id u32              = 103
0.00.008.132 I llama_model_loader: - kv  24:               general.quantization_version u32              = 2
0.00.008.133 I llama_model_loader: - type  f32:  124 tensors
0.00.008.134 I llama_model_loader: - type q8_0:   73 tensors
0.00.019.312 I llm_load_vocab: special tokens cache size = 5
0.00.022.180 I llm_load_vocab: token to piece cache size = 0.2032 MB
0.00.022.191 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.022.191 I llm_load_print_meta: arch             = bert
0.00.022.192 I llm_load_print_meta: vocab type       = WPM
0.00.022.193 I llm_load_print_meta: n_vocab          = 30522
0.00.022.193 I llm_load_print_meta: n_merges         = 0
0.00.022.193 I llm_load_print_meta: vocab_only       = 0
0.00.022.194 I llm_load_print_meta: n_ctx_train      = 512
0.00.022.194 I llm_load_print_meta: n_embd           = 384
0.00.022.194 I llm_load_print_meta: n_layer          = 12
0.00.022.201 I llm_load_print_meta: n_head           = 12
0.00.022.202 I llm_load_print_meta: n_head_kv        = 12
0.00.022.202 I llm_load_print_meta: n_rot            = 32
0.00.022.202 I llm_load_print_meta: n_swa            = 0
0.00.022.202 I llm_load_print_meta: n_embd_head_k    = 32
0.00.022.203 I llm_load_print_meta: n_embd_head_v    = 32
0.00.022.204 I llm_load_print_meta: n_gqa            = 1
0.00.022.205 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.022.206 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.022.207 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.022.207 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.022.208 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.022.208 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.022.208 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.022.209 I llm_load_print_meta: n_ff             = 1536
0.00.022.209 I llm_load_print_meta: n_expert         = 0
0.00.022.210 I llm_load_print_meta: n_expert_used    = 0
0.00.022.210 I llm_load_print_meta: causal attn      = 0
0.00.022.210 I llm_load_print_meta: pooling type     = 2
0.00.022.211 I llm_load_print_meta: rope type        = 2
0.00.022.211 I llm_load_print_meta: rope scaling     = linear
0.00.022.212 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.022.213 I llm_load_print_meta: freq_scale_train = 1
0.00.022.214 I llm_load_print_meta: n_ctx_orig_yarn  = 512
0.00.022.214 I llm_load_print_meta: rope_finetuned   = unknown
0.00.022.214 I llm_load_print_meta: ssm_d_conv       = 0
0.00.022.214 I llm_load_print_meta: ssm_d_inner      = 0
0.00.022.215 I llm_load_print_meta: ssm_d_state      = 0
0.00.022.215 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.022.215 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.022.216 I llm_load_print_meta: model type       = 33M
0.00.022.216 I llm_load_print_meta: model ftype      = Q8_0
0.00.022.218 I llm_load_print_meta: model params     = 33.21 M
0.00.022.219 I llm_load_print_meta: model size       = 34.38 MiB (8.68 BPW) 
0.00.022.219 I llm_load_print_meta: general.name     = Bge Small
0.00.022.220 I llm_load_print_meta: UNK token        = 100 '[UNK]'
0.00.022.220 I llm_load_print_meta: SEP token        = 102 '[SEP]'
0.00.022.221 I llm_load_print_meta: PAD token        = 0 '[PAD]'
0.00.022.221 I llm_load_print_meta: CLS token        = 101 '[CLS]'
0.00.022.221 I llm_load_print_meta: MASK token       = 103 '[MASK]'
0.00.022.221 I llm_load_print_meta: LF token         = 0 '[PAD]'
0.00.022.222 I llm_load_print_meta: max token length = 21
0.00.025.287 I llm_load_tensors:   CPU_Mapped model buffer size =    34.38 MiB
.................................................
0.00.026.229 I llama_new_context_with_model: n_seq_max     = 1
0.00.026.233 I llama_new_context_with_model: n_ctx         = 512
0.00.026.233 I llama_new_context_with_model: n_ctx_per_seq = 512
0.00.026.233 I llama_new_context_with_model: n_batch       = 2048
0.00.026.234 I llama_new_context_with_model: n_ubatch      = 2048
0.00.026.234 I llama_new_context_with_model: flash_attn    = 0
0.00.026.235 I llama_new_context_with_model: freq_base     = 10000.0
0.00.026.236 I llama_new_context_with_model: freq_scale    = 1
0.00.028.571 I llama_kv_cache_init:        CPU KV buffer size =     9.00 MiB
0.00.028.580 I llama_new_context_with_model: KV self size  =    9.00 MiB, K (f16):    4.50 MiB, V (f16):    4.50 MiB
0.00.028.585 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.030.083 I llama_new_context_with_model:        CPU compute buffer size =    16.01 MiB
0.00.030.088 I llama_new_context_with_model: graph nodes  = 429
0.00.030.088 I llama_new_context_with_model: graph splits = 1
0.00.030.090 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.032.842 I 
0.00.032.909 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.034.396 I batch_decode: n_tokens = 9, n_seq = 1

embedding 0: -0.044922 -0.019413  0.009515 -0.002102  0.002819 -0.037346  0.108884  0.042320  0.092050 -0.015802  0.006203 -0.037483 -0.019315  0.014838  0.017312  0.014293 -0.014406  0.012199 -0.084337 -0.007969  0.092391 -0.017228 -0.062058 -0.024418  0.027417  0.077134  0.028219 -0.014623  0.017895 -0.035334 -0.038133 -0.018044  0.068934 -0.010808 -0.024000  0.071910 -0.045750  0.011734 -0.050866  0.050023  0.032255 -0.012384  0.022736  0.051037  0.009457  0.005324 -0.028037  0.007784 -0.019140 -0.054168 -0.047119  0.029088 -0.036035  0.053016 -0.067690  0.044014  0.029616  0.047229  0.073648 -0.043168  0.075918  0.037900 -0.183180  0.081508  0.042762 -0.066165 -0.059699 -0.017308  0.007110  0.005047  0.016962 -0.027730  0.064833  0.111964  0.034996 -0.068446  0.026829 -0.066310 -0.034038 -0.035547  0.032486  0.014914 -0.004339 -0.037040 -0.051606  0.053873 -0.002577 -0.037109  0.062467  0.029008 -0.041969 -0.029640 -0.039698  0.037257  0.007866 -0.014732 -0.036933  0.018711  0.029345  0.345662 -0.043828  0.055518  0.015965 -0.021585 -0.062967  0.000030 -0.037829 -0.031117 -0.008600 -0.019632  0.000917 -0.003949  0.004752  0.017646 -0.010475  0.024866  0.048859 -0.001073  0.050841 -0.042711 -0.029936  0.023056  0.031158 -0.023216 -0.044477 -0.079865  0.114434  0.046968  0.027606 -0.040895  0.067793 -0.022368  0.009769 -0.034681 -0.016154  0.044193  0.022540  0.051639  0.007797  0.007391  0.010083 -0.074316 -0.064372 -0.025101 -0.041340 -0.024550  0.027224  0.005440  0.026617  0.051940 -0.036700  0.058742  0.001461  0.032451 -0.020921 -0.021366  0.040976 -0.059863  0.019722  0.043085  0.042850  0.040582 -0.022107  0.029685 -0.022324  0.007497 -0.040081  0.000397  0.023739  0.002122  0.044315 -0.022987  0.043469  0.064731  0.056117  0.038352  0.000367  0.048953  0.045241 -0.009339  0.060821 -0.073344 -0.011166  0.032674  0.022647  0.014999 -0.033428  0.000347 -0.015448 -0.018743  0.048620  0.110470  0.029597  0.030962 -0.011328 -0.056829  0.006497  0.004694 -0.012985 -0.051779 -0.003150 -0.017702 -0.019727 -0.040388  0.009924 -0.059078  0.050095  0.052471 -0.010575 -0.039471 -0.015563 -0.023734 -0.016019  0.005706  0.007087 -0.027253  0.016754  0.030656  0.001635  0.023381 -0.021934 -0.097271 -0.050370 -0.277306 -0.014223 -0.061428 -0.027445  0.017050 -0.009608 -0.017319  0.033824  0.048471 -0.016368  0.016177 -0.022949  0.049435 -0.005335  0.000750 -0.060800 -0.068838 -0.059804 -0.036057  0.042588 -0.054961  0.014508 -0.000423 -0.059416 -0.009816  0.010768  0.150426  0.126644 -0.011118  0.042668 -0.025554  0.015019 -0.000210 -0.150502  0.042745  0.005784 -0.036606 -0.029014 -0.019236 -0.034275  0.009913  0.034990 -0.049935 -0.053754 -0.017105 -0.024232  0.048749  0.050670 -0.016684 -0.056609  0.023764 -0.005639  0.011582  0.038581  0.006578 -0.008041 -0.106921 -0.027615 -0.097465  0.025000 -0.011210  0.092479  0.055639  0.005293  0.026939  0.001806 -0.051768 -0.038913 -0.013483 -0.046246 -0.014757  0.001830 -0.044614 -0.077737  0.066446 -0.006428 -0.000018 -0.014871  0.071112  0.024387 -0.036434  0.008250  0.001929 -0.033247  0.017147  0.038480  0.001671 -0.051957  0.021081 -0.038685  0.000496  0.012745  0.021241 -0.057647  0.004903 -0.049491 -0.267161  0.038997 -0.067915  0.037074 -0.011075  0.043293 -0.015534  0.050443 -0.070772  0.012405  0.024955 -0.006946  0.082643  0.029026 -0.022356  0.042367 -0.003229 -0.074061 -0.015830  0.020035  0.002637  0.023772  0.196120 -0.044049 -0.024944 -0.004666 -0.017908  0.073222  0.001813 -0.031931 -0.035815 -0.044377 -0.000573 -0.011445  0.018698 -0.027002 -0.010099  0.005813  0.048950 -0.014805  0.006814  0.027005 -0.030880  0.048526  0.111968 -0.039582 -0.012955  0.004347 -0.002677  0.025424 -0.060709  0.014993 -0.008847  0.037792  0.050273  0.035482  0.036962 -0.017363  0.025554 -0.016189 -0.050841  0.003358  0.054623  0.039363 -0.039516 

0.00.038.496 I llama_perf_context_print:        load time =      32.27 ms
0.00.038.501 I llama_perf_context_print: prompt eval time =       3.78 ms /     9 tokens (    0.42 ms per token,  2378.44 tokens per second)
0.00.038.502 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.038.503 I llama_perf_context_print:       total time =       5.65 ms /    10 tokens

real	0m0.048s
user	0m0.071s
sys	0m0.012s
```
### rerank_tiny

Rerank Tiny (Jina):
- status: 0
- f16: 
```
+ ./bin/llama-embedding --model ../models-mnt/rerank-tiny/ggml-model-f16.gguf -p 'what is panda?</s></s>hi\nwhat is panda?</s></s>it'\''s a bear\nwhat is panda?</s></s>The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.' -ngl 99 -c 0 --pooling rank --embd-normalize -1 --verbose-prompt
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.580 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.008.587 I llama_model_loader: loaded meta data with 29 key-value pairs and 70 tensors from ../models-mnt/rerank-tiny/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.008.599 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.008.605 I llama_model_loader: - kv   0:                       general.architecture str              = jina-bert-v2
0.00.008.607 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.008.608 I llama_model_loader: - kv   2:                               general.name str              = Jina Bert Implementation
0.00.008.609 I llama_model_loader: - kv   3:                       general.organization str              = Jinaai
0.00.008.609 I llama_model_loader: - kv   4:                         general.size_label str              = 33M
0.00.008.613 I llama_model_loader: - kv   5:                   jina-bert-v2.block_count u32              = 4
0.00.008.614 I llama_model_loader: - kv   6:                jina-bert-v2.context_length u32              = 8192
0.00.008.615 I llama_model_loader: - kv   7:              jina-bert-v2.embedding_length u32              = 384
0.00.008.615 I llama_model_loader: - kv   8:           jina-bert-v2.feed_forward_length u32              = 1536
0.00.008.616 I llama_model_loader: - kv   9:          jina-bert-v2.attention.head_count u32              = 12
0.00.008.620 I llama_model_loader: - kv  10:  jina-bert-v2.attention.layer_norm_epsilon f32              = 0.000000
0.00.008.621 I llama_model_loader: - kv  11:                          general.file_type u32              = 1
0.00.008.622 I llama_model_loader: - kv  12:              jina-bert-v2.attention.causal bool             = false
0.00.008.622 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.008.623 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = jina-v1-en
0.00.014.962 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,61056]   = ["<s>", "<pad>", "</s>", "<unk>", "<m...
0.00.016.560 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,61056]   = [3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, ...
0.00.020.513 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,39382]   = ["t h", "i n", "a n", "e r", "th e", ...
0.00.020.520 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.020.521 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 2
0.00.020.521 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.020.522 I llama_model_loader: - kv  21:          tokenizer.ggml.seperator_token_id u32              = 2
0.00.020.523 I llama_model_loader: - kv  22:            tokenizer.ggml.padding_token_id u32              = 1
0.00.020.523 I llama_model_loader: - kv  23:                tokenizer.ggml.cls_token_id u32              = 0
0.00.020.524 I llama_model_loader: - kv  24:               tokenizer.ggml.mask_token_id u32              = 4
0.00.020.524 I llama_model_loader: - kv  25:            tokenizer.ggml.token_type_count u32              = 2
0.00.020.525 I llama_model_loader: - kv  26:               tokenizer.ggml.add_bos_token bool             = true
0.00.020.525 I llama_model_loader: - kv  27:               tokenizer.ggml.add_eos_token bool             = true
0.00.020.526 I llama_model_loader: - kv  28:               general.quantization_version u32              = 2
0.00.020.529 I llama_model_loader: - type  f32:   41 tensors
0.00.020.530 I llama_model_loader: - type  f16:   29 tensors
0.00.040.652 W llm_load_vocab: empty token at index 5
0.00.050.919 W llm_load_vocab: model vocab missing newline token, using special_pad_id instead
0.00.066.857 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.066.987 I llm_load_vocab: special tokens cache size = 5
0.00.434.836 I llm_load_vocab: token to piece cache size = 1.5060 MB
0.00.434.864 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.434.865 I llm_load_print_meta: arch             = jina-bert-v2
0.00.434.865 I llm_load_print_meta: vocab type       = BPE
0.00.434.866 I llm_load_print_meta: n_vocab          = 61056
0.00.434.866 I llm_load_print_meta: n_merges         = 39382
0.00.434.867 I llm_load_print_meta: vocab_only       = 0
0.00.434.867 I llm_load_print_meta: n_ctx_train      = 8192
0.00.434.868 I llm_load_print_meta: n_embd           = 384
0.00.434.868 I llm_load_print_meta: n_layer          = 4
0.00.434.878 I llm_load_print_meta: n_head           = 12
0.00.434.879 I llm_load_print_meta: n_head_kv        = 12
0.00.434.879 I llm_load_print_meta: n_rot            = 32
0.00.434.879 I llm_load_print_meta: n_swa            = 0
0.00.434.880 I llm_load_print_meta: n_embd_head_k    = 32
0.00.434.880 I llm_load_print_meta: n_embd_head_v    = 32
0.00.434.881 I llm_load_print_meta: n_gqa            = 1
0.00.434.881 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.434.882 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.434.884 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.434.885 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.434.885 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.434.886 I llm_load_print_meta: f_max_alibi_bias = 8.0e+00
0.00.434.886 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.434.887 I llm_load_print_meta: n_ff             = 1536
0.00.434.887 I llm_load_print_meta: n_expert         = 0
0.00.434.888 I llm_load_print_meta: n_expert_used    = 0
0.00.434.888 I llm_load_print_meta: causal attn      = 0
0.00.434.888 I llm_load_print_meta: pooling type     = -1
0.00.434.888 I llm_load_print_meta: rope type        = -1
0.00.434.889 I llm_load_print_meta: rope scaling     = linear
0.00.434.890 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.434.890 I llm_load_print_meta: freq_scale_train = 1
0.00.434.890 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.434.891 I llm_load_print_meta: rope_finetuned   = unknown
0.00.434.891 I llm_load_print_meta: ssm_d_conv       = 0
0.00.434.891 I llm_load_print_meta: ssm_d_inner      = 0
0.00.434.892 I llm_load_print_meta: ssm_d_state      = 0
0.00.434.892 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.434.892 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.434.893 I llm_load_print_meta: model type       = 33M
0.00.434.894 I llm_load_print_meta: model ftype      = F16
0.00.434.895 I llm_load_print_meta: model params     = 32.90 M
0.00.434.895 I llm_load_print_meta: model size       = 62.78 MiB (16.01 BPW) 
0.00.434.896 I llm_load_print_meta: general.name     = Jina Bert Implementation
0.00.434.896 I llm_load_print_meta: BOS token        = 0 '<s>'
0.00.434.897 I llm_load_print_meta: EOS token        = 2 '</s>'
0.00.434.897 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.434.897 I llm_load_print_meta: SEP token        = 2 '</s>'
0.00.434.897 I llm_load_print_meta: PAD token        = 1 '<pad>'
0.00.434.898 I llm_load_print_meta: CLS token        = 0 '<s>'
0.00.434.898 I llm_load_print_meta: MASK token       = 4 '<mask>'
0.00.434.899 I llm_load_print_meta: EOG token        = 2 '</s>'
0.00.434.899 I llm_load_print_meta: max token length = 45
0.00.438.620 I llm_load_tensors:   CPU_Mapped model buffer size =    62.78 MiB
......................
0.00.440.700 I llama_new_context_with_model: n_seq_max     = 1
0.00.440.706 I llama_new_context_with_model: n_ctx         = 8192
0.00.440.706 I llama_new_context_with_model: n_ctx_per_seq = 8192
0.00.440.706 I llama_new_context_with_model: n_batch       = 2048
0.00.440.707 I llama_new_context_with_model: n_ubatch      = 2048
0.00.440.708 I llama_new_context_with_model: flash_attn    = 0
0.00.440.710 I llama_new_context_with_model: freq_base     = 10000.0
0.00.440.711 I llama_new_context_with_model: freq_scale    = 1
0.00.450.709 I llama_kv_cache_init:        CPU KV buffer size =    48.00 MiB
0.00.450.722 I llama_new_context_with_model: KV self size  =   48.00 MiB, K (f16):   24.00 MiB, V (f16):   24.00 MiB
0.00.450.731 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.452.421 I llama_new_context_with_model:        CPU compute buffer size =   220.02 MiB
0.00.452.427 I llama_new_context_with_model: graph nodes  = 154
0.00.452.427 I llama_new_context_with_model: graph splits = 1
0.00.452.429 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.036 I 
0.00.460.130 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.460.365 I main: prompt 0: 'what is panda?</s></s>hi'
0.00.460.368 I main: number of tokens in prompt = 9
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 23233 -> 'hi'
     2 -> '</s>'


0.00.460.374 I main: prompt 1: 'what is panda?</s></s>it's a bear'
0.00.460.375 I main: number of tokens in prompt = 13
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 21153 -> 'it'
    37 -> '''
    87 -> 's'
    69 -> 'a'
 25706 -> 'bear'
     2 -> '</s>'


0.00.460.383 I main: prompt 2: 'what is panda?</s></s>The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.'
0.00.460.383 I main: number of tokens in prompt = 40
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 21215 -> 'he'
 28390 -> 'giant'
 49990 -> 'panda'
    38 -> '('
 21163 -> 'il'
 26237 -> 'uro'
 21223 -> 'po'
 23179 -> 'da'
 36906 -> 'melan'
 26791 -> 'ole'
    89 -> 'u'
 21402 -> 'ca'
 21686 -> '),'
 23314 -> 'sometimes'
 22517 -> 'called'
    69 -> 'a'
 49990 -> 'panda'
 25706 -> 'bear'
 21142 -> 'or'
 22810 -> 'simply'
 49990 -> 'panda'
    42 -> ','
 21152 -> 'is'
    69 -> 'a'
 25706 -> 'bear'
 25677 -> 'species'
 28930 -> 'ende'
 22024 -> 'mic'
 21148 -> 'to'
    76 -> 'h'
 22344 -> 'ina'
    44 -> '.'
     2 -> '</s>'


0.00.463.856 I batch_decode: n_tokens = 62, n_seq = 3

rerank score 0:    0.023
rerank score 1:    0.024
rerank score 2:    0.199

0.00.479.984 I llama_perf_context_print:        load time =     459.42 ms
0.00.479.987 I llama_perf_context_print: prompt eval time =      15.94 ms /    62 tokens (    0.26 ms per token,  3889.34 tokens per second)
0.00.479.989 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.479.990 I llama_perf_context_print:       total time =      19.95 ms /    63 tokens

real	0m0.499s
user	0m0.526s
sys	0m0.056s
  - rerank score 0 @ 0.023 OK
  - rerank score 1 @ 0.024 OK
  - rerank score 2 @ 0.199 OK
```
### test_scripts_debug

Runs test scripts in debug mode
- status: 0
```
+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.652 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.899 I main: llama backend init
0.00.000.907 I main: load the model and apply lora adapter, if any
0.00.023.725 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.737 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.835 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.848 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.851 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.862 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.868 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.870 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.873 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.875 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.876 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.891 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.897 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.899 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.910 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.916 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.223.918 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.307 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.350.096 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.350.108 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.350.110 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.350.111 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.350.112 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.350.114 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.350.115 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.350.119 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.350.121 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.350.122 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.350.124 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.350.126 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.350.136 I llama_model_loader: - type  f32:   37 tensors
0.00.350.138 I llama_model_loader: - type q8_0:  127 tensors
0.00.592.802 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.655.906 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.656.953 I llm_load_vocab: special tokens cache size = 5
0.00.853.460 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.853.535 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.853.536 I llm_load_print_meta: arch             = gemma
0.00.853.537 I llm_load_print_meta: vocab type       = SPM
0.00.853.538 I llm_load_print_meta: n_vocab          = 256000
0.00.853.540 I llm_load_print_meta: n_merges         = 0
0.00.853.541 I llm_load_print_meta: vocab_only       = 0
0.00.853.541 I llm_load_print_meta: n_ctx_train      = 8192
0.00.853.541 I llm_load_print_meta: n_embd           = 2048
0.00.853.542 I llm_load_print_meta: n_layer          = 18
0.00.853.610 I llm_load_print_meta: n_head           = 8
0.00.853.619 I llm_load_print_meta: n_head_kv        = 1
0.00.853.620 I llm_load_print_meta: n_rot            = 256
0.00.853.621 I llm_load_print_meta: n_swa            = 0
0.00.853.622 I llm_load_print_meta: n_embd_head_k    = 256
0.00.853.623 I llm_load_print_meta: n_embd_head_v    = 256
0.00.853.634 I llm_load_print_meta: n_gqa            = 8
0.00.853.640 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.853.647 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.853.648 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.853.650 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.853.651 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.853.652 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.853.653 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.853.661 I llm_load_print_meta: n_ff             = 16384
0.00.853.666 I llm_load_print_meta: n_expert         = 0
0.00.853.666 I llm_load_print_meta: n_expert_used    = 0
0.00.853.667 I llm_load_print_meta: causal attn      = 1
0.00.853.667 I llm_load_print_meta: pooling type     = 0
0.00.853.668 I llm_load_print_meta: rope type        = 2
0.00.853.669 I llm_load_print_meta: rope scaling     = linear
0.00.853.671 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.853.680 I llm_load_print_meta: freq_scale_train = 1
0.00.853.682 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.853.683 I llm_load_print_meta: rope_finetuned   = unknown
0.00.853.686 I llm_load_print_meta: ssm_d_conv       = 0
0.00.853.686 I llm_load_print_meta: ssm_d_inner      = 0
0.00.853.687 I llm_load_print_meta: ssm_d_state      = 0
0.00.853.688 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.853.688 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.853.689 I llm_load_print_meta: model type       = 2B
0.00.853.690 I llm_load_print_meta: model ftype      = Q8_0
0.00.853.692 I llm_load_print_meta: model params     = 2.51 B
0.00.853.702 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.853.703 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.853.704 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.853.705 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.853.706 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.853.707 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.853.708 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.853.708 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.853.715 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.853.720 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.853.721 I llm_load_print_meta: max token length = 93
0.00.954.252 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.954.262 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.954.263 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.954.264 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.954.265 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.954.265 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.960.599 I llama_new_context_with_model: n_seq_max     = 1
0.00.960.608 I llama_new_context_with_model: n_ctx         = 4096
0.00.960.608 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.960.608 I llama_new_context_with_model: n_batch       = 2048
0.00.960.609 I llama_new_context_with_model: n_ubatch      = 512
0.00.960.609 I llama_new_context_with_model: flash_attn    = 0
0.00.960.612 I llama_new_context_with_model: freq_base     = 10000.0
0.00.960.613 I llama_new_context_with_model: freq_scale    = 1
0.00.960.614 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.975.294 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.975.341 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.975.482 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.978.092 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.978.097 I llama_new_context_with_model: graph nodes  = 601
0.00.978.097 I llama_new_context_with_model: graph splits = 1
0.00.978.122 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.709.876 I main: llama threadpool init, n_threads = 4
0.01.709.892 I 
0.01.710.022 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.710.026 I 
0.01.710.275 I sampler seed: 4262136946
0.01.710.289 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.710.301 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.710.302 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.710.302 I 
 increasities, the story of a young woman named Anya, who discovers a hidden passage beneath her childhood home.

Anya's childhood was filled with the

0.15.179.542 I llama_perf_sampler_print:    sampling time =      49.23 ms /    33 runs   (    1.49 ms per token,   670.34 tokens per second)
0.15.179.545 I llama_perf_context_print:        load time =    1708.85 ms
0.15.179.548 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.179.552 I llama_perf_context_print:        eval time =   13379.02 ms /    32 runs   (  418.09 ms per token,     2.39 tokens per second)
0.15.179.554 I llama_perf_context_print:       total time =   13469.68 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.680 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.902 I main: llama backend init
0.00.000.911 I main: load the model and apply lora adapter, if any
0.00.023.550 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.663 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.680 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.682 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.688 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.694 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.696 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.698 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.700 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.703 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.723 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.729 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.731 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.733 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.735 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.641 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.327.088 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.350.718 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.350.727 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.350.729 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.350.730 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.350.731 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.350.733 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.350.734 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.350.738 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.350.740 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.350.741 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.350.743 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.350.744 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.350.753 I llama_model_loader: - type  f32:   37 tensors
0.00.350.755 I llama_model_loader: - type q8_0:  127 tensors
0.00.578.099 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.636.298 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.637.278 I llm_load_vocab: special tokens cache size = 5
0.00.840.916 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.840.990 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.840.991 I llm_load_print_meta: arch             = gemma
0.00.840.992 I llm_load_print_meta: vocab type       = SPM
0.00.840.993 I llm_load_print_meta: n_vocab          = 256000
0.00.840.995 I llm_load_print_meta: n_merges         = 0
0.00.840.995 I llm_load_print_meta: vocab_only       = 0
0.00.840.996 I llm_load_print_meta: n_ctx_train      = 8192
0.00.840.996 I llm_load_print_meta: n_embd           = 2048
0.00.840.996 I llm_load_print_meta: n_layer          = 18
0.00.841.062 I llm_load_print_meta: n_head           = 8
0.00.841.069 I llm_load_print_meta: n_head_kv        = 1
0.00.841.069 I llm_load_print_meta: n_rot            = 256
0.00.841.070 I llm_load_print_meta: n_swa            = 0
0.00.841.070 I llm_load_print_meta: n_embd_head_k    = 256
0.00.841.071 I llm_load_print_meta: n_embd_head_v    = 256
0.00.841.076 I llm_load_print_meta: n_gqa            = 8
0.00.841.081 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.841.086 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.841.088 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.841.090 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.841.091 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.841.092 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.841.092 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.841.098 I llm_load_print_meta: n_ff             = 16384
0.00.841.098 I llm_load_print_meta: n_expert         = 0
0.00.841.100 I llm_load_print_meta: n_expert_used    = 0
0.00.841.100 I llm_load_print_meta: causal attn      = 1
0.00.841.100 I llm_load_print_meta: pooling type     = 0
0.00.841.101 I llm_load_print_meta: rope type        = 2
0.00.841.101 I llm_load_print_meta: rope scaling     = linear
0.00.841.102 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.841.103 I llm_load_print_meta: freq_scale_train = 1
0.00.841.112 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.841.112 I llm_load_print_meta: rope_finetuned   = unknown
0.00.841.113 I llm_load_print_meta: ssm_d_conv       = 0
0.00.841.114 I llm_load_print_meta: ssm_d_inner      = 0
0.00.841.114 I llm_load_print_meta: ssm_d_state      = 0
0.00.841.115 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.841.115 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.841.116 I llm_load_print_meta: model type       = 2B
0.00.841.117 I llm_load_print_meta: model ftype      = Q8_0
0.00.841.118 I llm_load_print_meta: model params     = 2.51 B
0.00.841.131 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.841.131 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.841.132 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.841.133 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.841.134 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.841.135 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.841.135 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.841.136 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.841.142 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.841.144 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.841.144 I llm_load_print_meta: max token length = 93
0.00.938.531 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.944.650 I llama_new_context_with_model: n_seq_max     = 1
0.00.944.657 I llama_new_context_with_model: n_ctx         = 4096
0.00.944.658 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.944.658 I llama_new_context_with_model: n_batch       = 2048
0.00.944.659 I llama_new_context_with_model: n_ubatch      = 512
0.00.944.659 I llama_new_context_with_model: flash_attn    = 0
0.00.944.662 I llama_new_context_with_model: freq_base     = 10000.0
0.00.944.663 I llama_new_context_with_model: freq_scale    = 1
0.00.944.663 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.959.516 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.959.558 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.959.683 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.962.261 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.962.264 I llama_new_context_with_model: graph nodes  = 601
0.00.962.265 I llama_new_context_with_model: graph splits = 1
0.00.962.288 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.695.196 I main: llama threadpool init, n_threads = 4
0.01.695.212 I 
0.01.695.342 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.695.346 I 
0.01.695.586 I sampler seed: 3942035596
0.01.695.600 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.695.610 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.695.614 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.695.614 I 
 increasities. 

The correct answer is: Scandal.

A scandal is a public disclosure of private or embarrassing information, particularly of a sexual nature. It

0.15.263.858 I llama_perf_sampler_print:    sampling time =      49.16 ms /    33 runs   (    1.49 ms per token,   671.28 tokens per second)
0.15.263.875 I llama_perf_context_print:        load time =    1694.17 ms
0.15.263.877 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.263.879 I llama_perf_context_print:        eval time =   13478.12 ms /    32 runs   (  421.19 ms per token,     2.37 tokens per second)
0.15.263.881 I llama_perf_context_print:       total time =   13568.67 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.705 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.900 I main: llama backend init
0.00.000.909 I main: load the model and apply lora adapter, if any
0.00.023.843 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.856 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.953 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.966 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.968 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.977 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.981 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.983 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.984 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.986 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.988 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.996 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.997 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.999 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.000 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.002 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.223.699 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.325.542 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.206 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.215 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.217 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.218 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.219 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.221 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.222 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.226 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.248 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.254 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.349.255 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.349.257 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.349.266 I llama_model_loader: - type  f32:   37 tensors
0.00.349.269 I llama_model_loader: - type q8_0:  127 tensors
0.00.571.808 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.628.724 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.629.675 I llm_load_vocab: special tokens cache size = 5
0.00.827.688 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.827.761 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.827.764 I llm_load_print_meta: arch             = gemma
0.00.827.765 I llm_load_print_meta: vocab type       = SPM
0.00.827.766 I llm_load_print_meta: n_vocab          = 256000
0.00.827.768 I llm_load_print_meta: n_merges         = 0
0.00.827.768 I llm_load_print_meta: vocab_only       = 0
0.00.827.769 I llm_load_print_meta: n_ctx_train      = 8192
0.00.827.769 I llm_load_print_meta: n_embd           = 2048
0.00.827.770 I llm_load_print_meta: n_layer          = 18
0.00.827.833 I llm_load_print_meta: n_head           = 8
0.00.827.843 I llm_load_print_meta: n_head_kv        = 1
0.00.827.843 I llm_load_print_meta: n_rot            = 256
0.00.827.844 I llm_load_print_meta: n_swa            = 0
0.00.827.844 I llm_load_print_meta: n_embd_head_k    = 256
0.00.827.844 I llm_load_print_meta: n_embd_head_v    = 256
0.00.827.849 I llm_load_print_meta: n_gqa            = 8
0.00.827.854 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.827.859 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.827.863 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.827.865 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.827.865 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.827.866 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.827.866 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.827.871 I llm_load_print_meta: n_ff             = 16384
0.00.827.872 I llm_load_print_meta: n_expert         = 0
0.00.827.873 I llm_load_print_meta: n_expert_used    = 0
0.00.827.873 I llm_load_print_meta: causal attn      = 1
0.00.827.874 I llm_load_print_meta: pooling type     = 0
0.00.827.874 I llm_load_print_meta: rope type        = 2
0.00.827.875 I llm_load_print_meta: rope scaling     = linear
0.00.827.876 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.827.877 I llm_load_print_meta: freq_scale_train = 1
0.00.827.878 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.827.878 I llm_load_print_meta: rope_finetuned   = unknown
0.00.827.878 I llm_load_print_meta: ssm_d_conv       = 0
0.00.827.878 I llm_load_print_meta: ssm_d_inner      = 0
0.00.827.879 I llm_load_print_meta: ssm_d_state      = 0
0.00.827.879 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.827.880 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.827.881 I llm_load_print_meta: model type       = 2B
0.00.827.882 I llm_load_print_meta: model ftype      = Q8_0
0.00.827.883 I llm_load_print_meta: model params     = 2.51 B
0.00.827.891 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.827.891 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.827.892 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.827.894 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.827.895 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.827.895 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.827.896 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.827.896 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.827.902 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.827.904 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.827.904 I llm_load_print_meta: max token length = 93
0.00.905.673 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.905.684 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.905.685 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.905.686 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.905.686 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.905.687 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.911.641 I llama_new_context_with_model: n_seq_max     = 1
0.00.911.649 I llama_new_context_with_model: n_ctx         = 4096
0.00.911.649 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.911.650 I llama_new_context_with_model: n_batch       = 2048
0.00.911.650 I llama_new_context_with_model: n_ubatch      = 512
0.00.911.651 I llama_new_context_with_model: flash_attn    = 0
0.00.911.653 I llama_new_context_with_model: freq_base     = 10000.0
0.00.911.654 I llama_new_context_with_model: freq_scale    = 1
0.00.911.654 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.926.662 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.926.701 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.926.836 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.929.413 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.929.418 I llama_new_context_with_model: graph nodes  = 601
0.00.929.418 I llama_new_context_with_model: graph splits = 1
0.00.929.441 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.659.692 I main: llama threadpool init, n_threads = 4
0.01.659.707 I 
0.01.659.824 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.659.828 I 
0.01.660.067 I sampler seed: 2024704914
0.01.660.080 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.660.089 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.660.093 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.660.093 I 
 increasities. [end of text]


0.03.341.137 I llama_perf_sampler_print:    sampling time =       6.21 ms /     5 runs   (    1.24 ms per token,   805.80 tokens per second)
0.03.341.140 I llama_perf_context_print:        load time =    1658.67 ms
0.03.341.142 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.341.155 I llama_perf_context_print:        eval time =    1668.80 ms /     4 runs   (  417.20 ms per token,     2.40 tokens per second)
0.03.341.157 I llama_perf_context_print:       total time =    1681.45 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.676 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.876 I main: llama backend init
0.00.000.884 I main: load the model and apply lora adapter, if any
0.00.023.236 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.246 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.334 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.346 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.348 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.354 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.356 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.358 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.359 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.361 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.362 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.369 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.371 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.372 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.373 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.374 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.231.176 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.334.114 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.357.829 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.357.839 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.357.840 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.357.842 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.357.843 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.357.845 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.357.846 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.357.850 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.357.852 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.357.853 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.357.855 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.357.856 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.357.865 I llama_model_loader: - type  f32:   37 tensors
0.00.357.867 I llama_model_loader: - type q8_0:  127 tensors
0.00.577.033 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.643.287 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.644.355 I llm_load_vocab: special tokens cache size = 5
0.00.833.479 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.833.551 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.833.555 I llm_load_print_meta: arch             = gemma
0.00.833.556 I llm_load_print_meta: vocab type       = SPM
0.00.833.558 I llm_load_print_meta: n_vocab          = 256000
0.00.833.560 I llm_load_print_meta: n_merges         = 0
0.00.833.560 I llm_load_print_meta: vocab_only       = 0
0.00.833.561 I llm_load_print_meta: n_ctx_train      = 8192
0.00.833.561 I llm_load_print_meta: n_embd           = 2048
0.00.833.561 I llm_load_print_meta: n_layer          = 18
0.00.833.625 I llm_load_print_meta: n_head           = 8
0.00.833.636 I llm_load_print_meta: n_head_kv        = 1
0.00.833.636 I llm_load_print_meta: n_rot            = 256
0.00.833.637 I llm_load_print_meta: n_swa            = 0
0.00.833.637 I llm_load_print_meta: n_embd_head_k    = 256
0.00.833.638 I llm_load_print_meta: n_embd_head_v    = 256
0.00.833.643 I llm_load_print_meta: n_gqa            = 8
0.00.833.648 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.833.653 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.833.656 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.833.658 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.833.658 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.833.658 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.833.659 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.833.664 I llm_load_print_meta: n_ff             = 16384
0.00.833.665 I llm_load_print_meta: n_expert         = 0
0.00.833.665 I llm_load_print_meta: n_expert_used    = 0
0.00.833.676 I llm_load_print_meta: causal attn      = 1
0.00.833.677 I llm_load_print_meta: pooling type     = 0
0.00.833.677 I llm_load_print_meta: rope type        = 2
0.00.833.678 I llm_load_print_meta: rope scaling     = linear
0.00.833.679 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.833.679 I llm_load_print_meta: freq_scale_train = 1
0.00.833.680 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.833.680 I llm_load_print_meta: rope_finetuned   = unknown
0.00.833.681 I llm_load_print_meta: ssm_d_conv       = 0
0.00.833.682 I llm_load_print_meta: ssm_d_inner      = 0
0.00.833.682 I llm_load_print_meta: ssm_d_state      = 0
0.00.833.682 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.833.683 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.833.684 I llm_load_print_meta: model type       = 2B
0.00.833.685 I llm_load_print_meta: model ftype      = Q8_0
0.00.833.686 I llm_load_print_meta: model params     = 2.51 B
0.00.833.703 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.833.704 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.833.705 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.833.705 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.833.706 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.833.706 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.833.711 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.833.712 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.833.718 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.833.720 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.833.720 I llm_load_print_meta: max token length = 93
0.00.906.284 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.906.295 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.912.238 I llama_new_context_with_model: n_seq_max     = 1
0.00.912.246 I llama_new_context_with_model: n_ctx         = 4096
0.00.912.246 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.912.247 I llama_new_context_with_model: n_batch       = 2048
0.00.912.247 I llama_new_context_with_model: n_ubatch      = 512
0.00.912.248 I llama_new_context_with_model: flash_attn    = 0
0.00.912.250 I llama_new_context_with_model: freq_base     = 10000.0
0.00.912.252 I llama_new_context_with_model: freq_scale    = 1
0.00.912.252 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.926.982 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.927.026 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.927.152 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.929.624 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.929.628 I llama_new_context_with_model: graph nodes  = 601
0.00.929.629 I llama_new_context_with_model: graph splits = 1
0.00.929.652 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.663.030 I main: llama threadpool init, n_threads = 4
0.01.663.047 I 
0.01.663.166 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.663.170 I 
0.01.663.411 I sampler seed: 3469637696
0.01.663.425 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.663.437 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.663.438 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.663.438 I 
 increably. 

I cannot answer this question as it contains inappropriate content. [end of text]


0.08.881.708 I llama_perf_sampler_print:    sampling time =      26.09 ms /    18 runs   (    1.45 ms per token,   689.89 tokens per second)
0.08.881.711 I llama_perf_context_print:        load time =    1662.05 ms
0.08.881.722 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.881.725 I llama_perf_context_print:        eval time =    7170.18 ms /    17 runs   (  421.78 ms per token,     2.37 tokens per second)
0.08.881.726 I llama_perf_context_print:       total time =    7218.69 ms /    18 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m52.816s
user	2m39.271s
sys	0m9.400s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4202 (a7c29b39)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 189922.27 ms
main:    total time = 189922.27 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.671 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.860 I main: llama backend init
0.00.000.868 I main: load the model and apply lora adapter, if any
0.00.023.576 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.585 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.683 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.695 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.699 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.705 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.707 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.709 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.710 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.712 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.713 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.720 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.723 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.725 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.726 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.736 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.223.021 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.325.096 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.348.953 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.348.968 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.348.969 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.348.970 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.348.972 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.348.973 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.348.975 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.348.980 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.348.981 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.348.983 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.348.984 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.348.986 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.348.995 I llama_model_loader: - type  f32:   37 tensors
0.00.348.997 I llama_model_loader: - type q4_K:  108 tensors
0.00.348.998 I llama_model_loader: - type q6_K:   19 tensors
0.00.581.238 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.639.331 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.640.293 I llm_load_vocab: special tokens cache size = 5
0.00.831.330 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.831.406 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.831.410 I llm_load_print_meta: arch             = gemma
0.00.831.411 I llm_load_print_meta: vocab type       = SPM
0.00.831.412 I llm_load_print_meta: n_vocab          = 256000
0.00.831.414 I llm_load_print_meta: n_merges         = 0
0.00.831.415 I llm_load_print_meta: vocab_only       = 0
0.00.831.415 I llm_load_print_meta: n_ctx_train      = 8192
0.00.831.416 I llm_load_print_meta: n_embd           = 2048
0.00.831.416 I llm_load_print_meta: n_layer          = 18
0.00.831.502 I llm_load_print_meta: n_head           = 8
0.00.831.513 I llm_load_print_meta: n_head_kv        = 1
0.00.831.513 I llm_load_print_meta: n_rot            = 256
0.00.831.515 I llm_load_print_meta: n_swa            = 0
0.00.831.515 I llm_load_print_meta: n_embd_head_k    = 256
0.00.831.516 I llm_load_print_meta: n_embd_head_v    = 256
0.00.831.521 I llm_load_print_meta: n_gqa            = 8
0.00.831.525 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.831.530 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.831.534 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.831.535 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.831.536 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.831.536 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.831.536 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.831.541 I llm_load_print_meta: n_ff             = 16384
0.00.831.542 I llm_load_print_meta: n_expert         = 0
0.00.831.542 I llm_load_print_meta: n_expert_used    = 0
0.00.831.543 I llm_load_print_meta: causal attn      = 1
0.00.831.543 I llm_load_print_meta: pooling type     = 0
0.00.831.544 I llm_load_print_meta: rope type        = 2
0.00.831.544 I llm_load_print_meta: rope scaling     = linear
0.00.831.546 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.831.547 I llm_load_print_meta: freq_scale_train = 1
0.00.831.547 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.831.547 I llm_load_print_meta: rope_finetuned   = unknown
0.00.831.548 I llm_load_print_meta: ssm_d_conv       = 0
0.00.831.548 I llm_load_print_meta: ssm_d_inner      = 0
0.00.831.551 I llm_load_print_meta: ssm_d_state      = 0
0.00.831.551 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.831.551 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.831.552 I llm_load_print_meta: model type       = 2B
0.00.831.553 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.831.554 I llm_load_print_meta: model params     = 2.51 B
0.00.831.563 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.831.564 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.831.564 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.831.565 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.831.566 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.831.567 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.831.568 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.831.569 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.831.575 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.831.576 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.831.577 I llm_load_print_meta: max token length = 93
0.00.892.698 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.892.708 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.892.709 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.892.710 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.892.711 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.892.712 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.898.544 I llama_new_context_with_model: n_seq_max     = 1
0.00.898.552 I llama_new_context_with_model: n_ctx         = 4096
0.00.898.552 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.898.553 I llama_new_context_with_model: n_batch       = 2048
0.00.898.553 I llama_new_context_with_model: n_ubatch      = 512
0.00.898.554 I llama_new_context_with_model: flash_attn    = 0
0.00.898.556 I llama_new_context_with_model: freq_base     = 10000.0
0.00.898.557 I llama_new_context_with_model: freq_scale    = 1
0.00.898.557 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.913.518 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.913.563 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.913.696 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.916.337 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.916.343 I llama_new_context_with_model: graph nodes  = 601
0.00.916.344 I llama_new_context_with_model: graph splits = 1
0.00.916.366 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.503.012 I main: llama threadpool init, n_threads = 4
0.01.503.028 I 
0.01.503.156 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.503.157 I 
0.01.503.393 I sampler seed: 459577553
0.01.503.408 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.503.419 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.503.421 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.503.422 I 
 increamically. I understand.

I apologize, but I am unable to generate responses that are sexually suggestive in nature. [end of text]


0.10.254.998 I llama_perf_sampler_print:    sampling time =      38.33 ms /    26 runs   (    1.47 ms per token,   678.37 tokens per second)
0.10.255.001 I llama_perf_context_print:        load time =    1502.05 ms
0.10.255.018 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.255.020 I llama_perf_context_print:        eval time =    8681.71 ms /    25 runs   (  347.27 ms per token,     2.88 tokens per second)
0.10.255.020 I llama_perf_context_print:       total time =    8752.00 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4202 (a7c29b39)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186516.21 ms
main:    total time = 186516.21 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.646 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.848 I main: llama backend init
0.00.000.857 I main: load the model and apply lora adapter, if any
0.00.023.282 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.385 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.400 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.402 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.408 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.410 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.411 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.414 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.415 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.416 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.427 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.429 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.430 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.431 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.433 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.223.219 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.325.395 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.164 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.175 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.176 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.178 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.179 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.180 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.182 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.186 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.187 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.198 I llama_model_loader: - type  f32:   37 tensors
0.00.349.200 I llama_model_loader: - type q4_K:  108 tensors
0.00.349.202 I llama_model_loader: - type q6_K:   19 tensors
0.00.572.393 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.632.331 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.633.231 I llm_load_vocab: special tokens cache size = 5
0.00.820.550 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.820.626 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.820.627 I llm_load_print_meta: arch             = gemma
0.00.820.628 I llm_load_print_meta: vocab type       = SPM
0.00.820.629 I llm_load_print_meta: n_vocab          = 256000
0.00.820.631 I llm_load_print_meta: n_merges         = 0
0.00.820.631 I llm_load_print_meta: vocab_only       = 0
0.00.820.632 I llm_load_print_meta: n_ctx_train      = 8192
0.00.820.632 I llm_load_print_meta: n_embd           = 2048
0.00.820.633 I llm_load_print_meta: n_layer          = 18
0.00.820.698 I llm_load_print_meta: n_head           = 8
0.00.820.705 I llm_load_print_meta: n_head_kv        = 1
0.00.820.705 I llm_load_print_meta: n_rot            = 256
0.00.820.707 I llm_load_print_meta: n_swa            = 0
0.00.820.707 I llm_load_print_meta: n_embd_head_k    = 256
0.00.820.707 I llm_load_print_meta: n_embd_head_v    = 256
0.00.820.712 I llm_load_print_meta: n_gqa            = 8
0.00.820.716 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.820.721 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.820.723 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.820.724 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.820.724 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.820.725 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.820.726 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.820.731 I llm_load_print_meta: n_ff             = 16384
0.00.820.732 I llm_load_print_meta: n_expert         = 0
0.00.820.732 I llm_load_print_meta: n_expert_used    = 0
0.00.820.733 I llm_load_print_meta: causal attn      = 1
0.00.820.733 I llm_load_print_meta: pooling type     = 0
0.00.820.733 I llm_load_print_meta: rope type        = 2
0.00.820.734 I llm_load_print_meta: rope scaling     = linear
0.00.820.735 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.820.736 I llm_load_print_meta: freq_scale_train = 1
0.00.820.736 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.820.737 I llm_load_print_meta: rope_finetuned   = unknown
0.00.820.737 I llm_load_print_meta: ssm_d_conv       = 0
0.00.820.737 I llm_load_print_meta: ssm_d_inner      = 0
0.00.820.739 I llm_load_print_meta: ssm_d_state      = 0
0.00.820.739 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.820.740 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.820.740 I llm_load_print_meta: model type       = 2B
0.00.820.741 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.820.742 I llm_load_print_meta: model params     = 2.51 B
0.00.820.752 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.820.753 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.820.754 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.820.755 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.820.760 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.820.760 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.820.760 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.820.761 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.820.767 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.820.768 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.820.768 I llm_load_print_meta: max token length = 93
0.00.879.114 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.885.116 I llama_new_context_with_model: n_seq_max     = 1
0.00.885.124 I llama_new_context_with_model: n_ctx         = 4096
0.00.885.125 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.885.125 I llama_new_context_with_model: n_batch       = 2048
0.00.885.126 I llama_new_context_with_model: n_ubatch      = 512
0.00.885.126 I llama_new_context_with_model: flash_attn    = 0
0.00.885.130 I llama_new_context_with_model: freq_base     = 10000.0
0.00.885.130 I llama_new_context_with_model: freq_scale    = 1
0.00.885.131 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.901.361 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.901.406 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.901.541 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.904.115 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.904.119 I llama_new_context_with_model: graph nodes  = 601
0.00.904.120 I llama_new_context_with_model: graph splits = 1
0.00.904.144 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.491.696 I main: llama threadpool init, n_threads = 4
0.01.491.714 I 
0.01.491.833 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.491.837 I 
0.01.492.070 I sampler seed: 1913764278
0.01.492.084 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.492.093 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.492.097 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.492.097 I 
 seconary in the domain of biology.

**Answer:**
**Secondary succession** is the process of ecological succession on a site that has been recently disturbed,

0.12.674.930 I llama_perf_sampler_print:    sampling time =      49.00 ms /    33 runs   (    1.48 ms per token,   673.46 tokens per second)
0.12.674.933 I llama_perf_context_print:        load time =    1490.73 ms
0.12.674.935 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.674.937 I llama_perf_context_print:        eval time =   11094.70 ms /    32 runs   (  346.71 ms per token,     2.88 tokens per second)
0.12.674.939 I llama_perf_context_print:       total time =   11183.24 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m42.241s
user	47m3.659s
sys	0m6.344s
```

### test_scripts_release

Runs test scripts in release mode
- status: 0
```
+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.541 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.725 I main: llama backend init
0.00.000.734 I main: load the model and apply lora adapter, if any
0.00.021.367 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.377 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.384 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.389 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.390 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.394 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.396 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.396 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.397 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.398 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.398 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.403 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.403 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.404 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.404 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.405 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.785 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.596 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.496 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.502 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.503 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.504 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.504 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.505 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.506 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.508 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.509 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.510 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.510 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.511 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.515 I llama_model_loader: - type  f32:   37 tensors
0.00.131.516 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.434 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.475 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.982 I llm_load_vocab: special tokens cache size = 5
0.00.269.110 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.127 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.128 I llm_load_print_meta: arch             = gemma
0.00.269.128 I llm_load_print_meta: vocab type       = SPM
0.00.269.129 I llm_load_print_meta: n_vocab          = 256000
0.00.269.129 I llm_load_print_meta: n_merges         = 0
0.00.269.130 I llm_load_print_meta: vocab_only       = 0
0.00.269.130 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.130 I llm_load_print_meta: n_embd           = 2048
0.00.269.131 I llm_load_print_meta: n_layer          = 18
0.00.269.142 I llm_load_print_meta: n_head           = 8
0.00.269.144 I llm_load_print_meta: n_head_kv        = 1
0.00.269.144 I llm_load_print_meta: n_rot            = 256
0.00.269.144 I llm_load_print_meta: n_swa            = 0
0.00.269.145 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.145 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.146 I llm_load_print_meta: n_gqa            = 8
0.00.269.147 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.147 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.148 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.149 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.149 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.150 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.150 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.151 I llm_load_print_meta: n_ff             = 16384
0.00.269.151 I llm_load_print_meta: n_expert         = 0
0.00.269.152 I llm_load_print_meta: n_expert_used    = 0
0.00.269.152 I llm_load_print_meta: causal attn      = 1
0.00.269.152 I llm_load_print_meta: pooling type     = 0
0.00.269.152 I llm_load_print_meta: rope type        = 2
0.00.269.153 I llm_load_print_meta: rope scaling     = linear
0.00.269.154 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.155 I llm_load_print_meta: freq_scale_train = 1
0.00.269.155 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.155 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.156 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.156 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.157 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.158 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.159 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.159 I llm_load_print_meta: model type       = 2B
0.00.269.160 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.161 I llm_load_print_meta: model params     = 2.51 B
0.00.269.162 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.165 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.166 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.166 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.166 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.167 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.167 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.167 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.168 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.169 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.169 I llm_load_print_meta: max token length = 93
0.00.369.632 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.369.639 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.369.640 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.369.640 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.369.641 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.369.641 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.374.859 I llama_new_context_with_model: n_seq_max     = 1
0.00.374.865 I llama_new_context_with_model: n_ctx         = 4096
0.00.374.866 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.374.866 I llama_new_context_with_model: n_batch       = 2048
0.00.374.867 I llama_new_context_with_model: n_ubatch      = 512
0.00.374.867 I llama_new_context_with_model: flash_attn    = 0
0.00.374.870 I llama_new_context_with_model: freq_base     = 10000.0
0.00.374.871 I llama_new_context_with_model: freq_scale    = 1
0.00.374.871 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.388.740 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.388.755 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.388.840 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.390.166 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.390.171 I llama_new_context_with_model: graph nodes  = 601
0.00.390.171 I llama_new_context_with_model: graph splits = 1
0.00.390.173 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.490.322 I main: llama threadpool init, n_threads = 4
0.00.490.338 I 
0.00.490.410 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.490.413 I 
0.00.490.455 I sampler seed: 4168018348
0.00.490.466 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.490.476 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.490.480 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.490.480 I 
 increasements, and other forms of compensation are commonplace in the music industry.

**a) Explain the purpose of compensation in the music industry.**

**b

0.02.743.763 I llama_perf_sampler_print:    sampling time =       4.70 ms /    33 runs   (    0.14 ms per token,  7015.31 tokens per second)
0.02.743.766 I llama_perf_context_print:        load time =     489.57 ms
0.02.743.767 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.743.769 I llama_perf_context_print:        eval time =    2233.97 ms /    32 runs   (   69.81 ms per token,    14.32 tokens per second)
0.02.743.770 I llama_perf_context_print:       total time =    2253.45 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.583 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.794 I main: llama backend init
0.00.000.800 I main: load the model and apply lora adapter, if any
0.00.021.274 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.290 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.298 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.299 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.305 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.306 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.307 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.309 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.309 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.310 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.317 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.317 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.318 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.319 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.320 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.808 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.303 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.264 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.271 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.272 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.273 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.274 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.275 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.276 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.279 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.280 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.281 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.282 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.284 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.288 I llama_model_loader: - type  f32:   37 tensors
0.00.132.290 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.157 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.938 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.449 I llm_load_vocab: special tokens cache size = 5
0.00.271.653 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.669 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.669 I llm_load_print_meta: arch             = gemma
0.00.271.670 I llm_load_print_meta: vocab type       = SPM
0.00.271.671 I llm_load_print_meta: n_vocab          = 256000
0.00.271.671 I llm_load_print_meta: n_merges         = 0
0.00.271.672 I llm_load_print_meta: vocab_only       = 0
0.00.271.672 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.672 I llm_load_print_meta: n_embd           = 2048
0.00.271.673 I llm_load_print_meta: n_layer          = 18
0.00.271.684 I llm_load_print_meta: n_head           = 8
0.00.271.685 I llm_load_print_meta: n_head_kv        = 1
0.00.271.686 I llm_load_print_meta: n_rot            = 256
0.00.271.686 I llm_load_print_meta: n_swa            = 0
0.00.271.686 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.686 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.688 I llm_load_print_meta: n_gqa            = 8
0.00.271.689 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.689 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.690 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.692 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.692 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.692 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.693 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.694 I llm_load_print_meta: n_ff             = 16384
0.00.271.694 I llm_load_print_meta: n_expert         = 0
0.00.271.694 I llm_load_print_meta: n_expert_used    = 0
0.00.271.695 I llm_load_print_meta: causal attn      = 1
0.00.271.695 I llm_load_print_meta: pooling type     = 0
0.00.271.696 I llm_load_print_meta: rope type        = 2
0.00.271.696 I llm_load_print_meta: rope scaling     = linear
0.00.271.697 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.698 I llm_load_print_meta: freq_scale_train = 1
0.00.271.698 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.698 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.698 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.699 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.699 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.699 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.699 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.700 I llm_load_print_meta: model type       = 2B
0.00.271.700 I llm_load_print_meta: model ftype      = Q8_0
0.00.271.701 I llm_load_print_meta: model params     = 2.51 B
0.00.271.702 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.271.702 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.703 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.703 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.704 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.704 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.704 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.704 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.705 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.705 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.706 I llm_load_print_meta: max token length = 93
0.00.366.559 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.371.703 I llama_new_context_with_model: n_seq_max     = 1
0.00.371.709 I llama_new_context_with_model: n_ctx         = 4096
0.00.371.709 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.371.709 I llama_new_context_with_model: n_batch       = 2048
0.00.371.710 I llama_new_context_with_model: n_ubatch      = 512
0.00.371.711 I llama_new_context_with_model: flash_attn    = 0
0.00.371.713 I llama_new_context_with_model: freq_base     = 10000.0
0.00.371.714 I llama_new_context_with_model: freq_scale    = 1
0.00.371.715 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.386.197 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.386.212 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.386.298 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.387.545 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.387.551 I llama_new_context_with_model: graph nodes  = 601
0.00.387.551 I llama_new_context_with_model: graph splits = 1
0.00.387.553 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.484.625 I main: llama threadpool init, n_threads = 4
0.00.484.640 I 
0.00.484.727 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.484.730 I 
0.00.484.783 I sampler seed: 1215772701
0.00.484.793 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.484.802 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.484.806 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.484.807 I 
 increadibly long response that encapsulates the essence of the provided question.

The historical trajectory of the metaverse has been marked by significant advancements in technology, from the

0.02.656.620 I llama_perf_sampler_print:    sampling time =       5.25 ms /    33 runs   (    0.16 ms per token,  6282.12 tokens per second)
0.02.656.623 I llama_perf_context_print:        load time =     483.80 ms
0.02.656.624 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.656.626 I llama_perf_context_print:        eval time =    2152.63 ms /    32 runs   (   67.27 ms per token,    14.87 tokens per second)
0.02.656.626 I llama_perf_context_print:       total time =    2172.00 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.535 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.729 I main: llama backend init
0.00.000.736 I main: load the model and apply lora adapter, if any
0.00.020.924 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.020.933 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.020.940 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.945 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.946 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.949 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.949 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.950 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.950 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.951 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.951 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.955 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.955 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.956 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.956 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.957 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.027 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.663 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.601 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.608 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.609 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.609 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.610 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.611 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.611 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.614 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.615 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.616 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.617 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.617 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.621 I llama_model_loader: - type  f32:   37 tensors
0.00.132.623 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.808 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.652 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.215 I llm_load_vocab: special tokens cache size = 5
0.00.267.247 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.262 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.262 I llm_load_print_meta: arch             = gemma
0.00.267.263 I llm_load_print_meta: vocab type       = SPM
0.00.267.264 I llm_load_print_meta: n_vocab          = 256000
0.00.267.264 I llm_load_print_meta: n_merges         = 0
0.00.267.265 I llm_load_print_meta: vocab_only       = 0
0.00.267.265 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.265 I llm_load_print_meta: n_embd           = 2048
0.00.267.266 I llm_load_print_meta: n_layer          = 18
0.00.267.277 I llm_load_print_meta: n_head           = 8
0.00.267.278 I llm_load_print_meta: n_head_kv        = 1
0.00.267.279 I llm_load_print_meta: n_rot            = 256
0.00.267.279 I llm_load_print_meta: n_swa            = 0
0.00.267.279 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.280 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.282 I llm_load_print_meta: n_gqa            = 8
0.00.267.283 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.285 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.285 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.287 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.287 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.288 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.288 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.289 I llm_load_print_meta: n_ff             = 16384
0.00.267.289 I llm_load_print_meta: n_expert         = 0
0.00.267.290 I llm_load_print_meta: n_expert_used    = 0
0.00.267.291 I llm_load_print_meta: causal attn      = 1
0.00.267.291 I llm_load_print_meta: pooling type     = 0
0.00.267.291 I llm_load_print_meta: rope type        = 2
0.00.267.292 I llm_load_print_meta: rope scaling     = linear
0.00.267.294 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.294 I llm_load_print_meta: freq_scale_train = 1
0.00.267.295 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.295 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.296 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.296 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.296 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.296 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.297 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.297 I llm_load_print_meta: model type       = 2B
0.00.267.298 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.299 I llm_load_print_meta: model params     = 2.51 B
0.00.267.300 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.301 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.301 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.302 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.302 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.303 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.303 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.303 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.304 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.304 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.304 I llm_load_print_meta: max token length = 93
0.00.342.742 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.342.749 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.342.749 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.342.750 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.342.750 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.342.751 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.347.926 I llama_new_context_with_model: n_seq_max     = 1
0.00.347.932 I llama_new_context_with_model: n_ctx         = 4096
0.00.347.932 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.347.933 I llama_new_context_with_model: n_batch       = 2048
0.00.347.933 I llama_new_context_with_model: n_ubatch      = 512
0.00.347.934 I llama_new_context_with_model: flash_attn    = 0
0.00.347.936 I llama_new_context_with_model: freq_base     = 10000.0
0.00.347.937 I llama_new_context_with_model: freq_scale    = 1
0.00.347.938 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.362.287 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.362.303 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.362.394 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.363.716 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.363.721 I llama_new_context_with_model: graph nodes  = 601
0.00.363.722 I llama_new_context_with_model: graph splits = 1
0.00.363.724 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.274 I main: llama threadpool init, n_threads = 4
0.00.463.288 I 
0.00.463.359 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.463.362 I 
0.00.463.402 I sampler seed: 1700061345
0.00.463.412 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.463.415 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.463.416 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.463.416 I 
 increasels of the Pacific Ocean. [end of text]


0.01.031.858 I llama_perf_sampler_print:    sampling time =       1.18 ms /     9 runs   (    0.13 ms per token,  7633.59 tokens per second)
0.01.031.860 I llama_perf_context_print:        load time =     462.52 ms
0.01.031.861 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.031.863 I llama_perf_context_print:        eval time =     562.86 ms /     8 runs   (   70.36 ms per token,    14.21 tokens per second)
0.01.031.863 I llama_perf_context_print:       total time =     568.59 ms /     9 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.555 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.000.765 I main: load the model and apply lora adapter, if any
0.00.021.434 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.445 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.453 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.462 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.463 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.468 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.470 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.471 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.471 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.472 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.472 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.477 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.478 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.480 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.480 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.481 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.872 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.455 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.653 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.659 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.660 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.661 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.662 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.663 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.664 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.668 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.668 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.670 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.670 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.134.672 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.677 I llama_model_loader: - type  f32:   37 tensors
0.00.134.678 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.178 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.299 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.872 I llm_load_vocab: special tokens cache size = 5
0.00.270.879 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.895 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.896 I llm_load_print_meta: arch             = gemma
0.00.270.896 I llm_load_print_meta: vocab type       = SPM
0.00.270.897 I llm_load_print_meta: n_vocab          = 256000
0.00.270.898 I llm_load_print_meta: n_merges         = 0
0.00.270.898 I llm_load_print_meta: vocab_only       = 0
0.00.270.898 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.899 I llm_load_print_meta: n_embd           = 2048
0.00.270.899 I llm_load_print_meta: n_layer          = 18
0.00.270.909 I llm_load_print_meta: n_head           = 8
0.00.270.910 I llm_load_print_meta: n_head_kv        = 1
0.00.270.911 I llm_load_print_meta: n_rot            = 256
0.00.270.911 I llm_load_print_meta: n_swa            = 0
0.00.270.911 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.911 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.912 I llm_load_print_meta: n_gqa            = 8
0.00.270.913 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.914 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.915 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.916 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.917 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.917 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.918 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.919 I llm_load_print_meta: n_ff             = 16384
0.00.270.919 I llm_load_print_meta: n_expert         = 0
0.00.270.919 I llm_load_print_meta: n_expert_used    = 0
0.00.270.920 I llm_load_print_meta: causal attn      = 1
0.00.270.920 I llm_load_print_meta: pooling type     = 0
0.00.270.920 I llm_load_print_meta: rope type        = 2
0.00.270.920 I llm_load_print_meta: rope scaling     = linear
0.00.270.922 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.922 I llm_load_print_meta: freq_scale_train = 1
0.00.270.922 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.923 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.923 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.923 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.924 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.924 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.924 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.925 I llm_load_print_meta: model type       = 2B
0.00.270.925 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.926 I llm_load_print_meta: model params     = 2.51 B
0.00.270.927 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.927 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.927 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.928 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.928 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.928 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.929 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.929 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.929 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.930 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.930 I llm_load_print_meta: max token length = 93
0.00.341.751 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.341.758 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.346.923 I llama_new_context_with_model: n_seq_max     = 1
0.00.346.929 I llama_new_context_with_model: n_ctx         = 4096
0.00.346.930 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.346.930 I llama_new_context_with_model: n_batch       = 2048
0.00.346.931 I llama_new_context_with_model: n_ubatch      = 512
0.00.346.931 I llama_new_context_with_model: flash_attn    = 0
0.00.346.933 I llama_new_context_with_model: freq_base     = 10000.0
0.00.346.934 I llama_new_context_with_model: freq_scale    = 1
0.00.346.935 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.361.119 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.361.134 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.361.223 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.450 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.362.455 I llama_new_context_with_model: graph nodes  = 601
0.00.362.456 I llama_new_context_with_model: graph splits = 1
0.00.362.458 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.089 I main: llama threadpool init, n_threads = 4
0.00.464.106 I 
0.00.464.176 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.464.179 I 
0.00.464.228 I sampler seed: 4286433955
0.00.464.239 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.250 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.464.254 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.254 I 
 increasively.

I'm sorry, but I'm unable to generate responses that promote or encourage inappropriate or potentially harmful activities. [end of text]


0.02.581.737 I llama_perf_sampler_print:    sampling time =       4.72 ms /    29 runs   (    0.16 ms per token,  6147.98 tokens per second)
0.02.581.739 I llama_perf_context_print:        load time =     463.30 ms
0.02.581.740 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.581.742 I llama_perf_context_print:        eval time =    2100.44 ms /    28 runs   (   75.02 ms per token,    13.33 tokens per second)
0.02.581.743 I llama_perf_context_print:       total time =    2117.66 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.398s
user	0m31.603s
sys	0m9.227s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4202 (a7c29b39)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40217.93 ms
main:    total time = 40217.93 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.532 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.728 I main: llama backend init
0.00.000.735 I main: load the model and apply lora adapter, if any
0.00.021.519 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.527 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.535 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.543 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.546 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.550 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.551 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.552 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.552 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.553 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.553 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.556 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.557 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.558 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.558 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.559 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.890 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.203 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.118 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.124 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.125 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.126 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.126 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.127 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.128 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.131 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.132 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.133 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.133 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.134 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.138 I llama_model_loader: - type  f32:   37 tensors
0.00.132.139 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.140 I llama_model_loader: - type q6_K:   19 tensors
0.00.202.731 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.555 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.080 I llm_load_vocab: special tokens cache size = 5
0.00.263.981 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.995 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.996 I llm_load_print_meta: arch             = gemma
0.00.263.996 I llm_load_print_meta: vocab type       = SPM
0.00.263.997 I llm_load_print_meta: n_vocab          = 256000
0.00.263.997 I llm_load_print_meta: n_merges         = 0
0.00.263.998 I llm_load_print_meta: vocab_only       = 0
0.00.263.998 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.998 I llm_load_print_meta: n_embd           = 2048
0.00.263.999 I llm_load_print_meta: n_layer          = 18
0.00.264.009 I llm_load_print_meta: n_head           = 8
0.00.264.010 I llm_load_print_meta: n_head_kv        = 1
0.00.264.010 I llm_load_print_meta: n_rot            = 256
0.00.264.011 I llm_load_print_meta: n_swa            = 0
0.00.264.011 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.011 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.012 I llm_load_print_meta: n_gqa            = 8
0.00.264.013 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.014 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.015 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.016 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.017 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.017 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.017 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.018 I llm_load_print_meta: n_ff             = 16384
0.00.264.019 I llm_load_print_meta: n_expert         = 0
0.00.264.019 I llm_load_print_meta: n_expert_used    = 0
0.00.264.019 I llm_load_print_meta: causal attn      = 1
0.00.264.019 I llm_load_print_meta: pooling type     = 0
0.00.264.020 I llm_load_print_meta: rope type        = 2
0.00.264.020 I llm_load_print_meta: rope scaling     = linear
0.00.264.021 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.022 I llm_load_print_meta: freq_scale_train = 1
0.00.264.022 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.022 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.022 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.023 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.023 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.023 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.024 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.024 I llm_load_print_meta: model type       = 2B
0.00.264.025 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.264.025 I llm_load_print_meta: model params     = 2.51 B
0.00.264.026 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.264.027 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.027 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.027 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.028 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.028 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.028 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.029 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.029 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.030 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.030 I llm_load_print_meta: max token length = 93
0.00.322.507 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.322.516 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.322.517 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.322.518 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.322.518 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.322.519 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.327.835 I llama_new_context_with_model: n_seq_max     = 1
0.00.327.842 I llama_new_context_with_model: n_ctx         = 4096
0.00.327.843 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.327.843 I llama_new_context_with_model: n_batch       = 2048
0.00.327.843 I llama_new_context_with_model: n_ubatch      = 512
0.00.327.844 I llama_new_context_with_model: flash_attn    = 0
0.00.327.847 I llama_new_context_with_model: freq_base     = 10000.0
0.00.327.848 I llama_new_context_with_model: freq_scale    = 1
0.00.327.849 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.342.315 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.342.329 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.342.424 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.343.694 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.343.700 I llama_new_context_with_model: graph nodes  = 601
0.00.343.700 I llama_new_context_with_model: graph splits = 1
0.00.343.703 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.421.959 I main: llama threadpool init, n_threads = 4
0.00.421.974 I 
0.00.422.049 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.422.052 I 
0.00.422.097 I sampler seed: 2985858536
0.00.422.108 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.422.119 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.422.122 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.422.123 I 
 maneuvously, casting a mischievous grin and leaving a trail of whispers in his wake.

Answer in a dramatic style:

The shadows whispered secrets, the

0.02.048.021 I llama_perf_sampler_print:    sampling time =       5.12 ms /    33 runs   (    0.16 ms per token,  6440.28 tokens per second)
0.02.048.024 I llama_perf_context_print:        load time =     421.21 ms
0.02.048.027 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.048.029 I llama_perf_context_print:        eval time =    1606.74 ms /    32 runs   (   50.21 ms per token,    19.92 tokens per second)
0.02.048.030 I llama_perf_context_print:       total time =    1626.07 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4202 (a7c29b39)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40204.67 ms
main:    total time = 40204.67 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.551 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.749 I main: llama backend init
0.00.000.756 I main: load the model and apply lora adapter, if any
0.00.021.583 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.598 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.609 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.613 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.616 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.617 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.619 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.619 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.620 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.620 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.624 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.625 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.625 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.626 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.626 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.002 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.003 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.892 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.899 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.900 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.901 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.901 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.903 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.904 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.908 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.908 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.912 I llama_model_loader: - type  f32:   37 tensors
0.00.131.914 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.915 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.026 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.618 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.207 I llm_load_vocab: special tokens cache size = 5
0.00.267.213 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.229 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.229 I llm_load_print_meta: arch             = gemma
0.00.267.230 I llm_load_print_meta: vocab type       = SPM
0.00.267.231 I llm_load_print_meta: n_vocab          = 256000
0.00.267.231 I llm_load_print_meta: n_merges         = 0
0.00.267.231 I llm_load_print_meta: vocab_only       = 0
0.00.267.232 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.232 I llm_load_print_meta: n_embd           = 2048
0.00.267.232 I llm_load_print_meta: n_layer          = 18
0.00.267.244 I llm_load_print_meta: n_head           = 8
0.00.267.245 I llm_load_print_meta: n_head_kv        = 1
0.00.267.246 I llm_load_print_meta: n_rot            = 256
0.00.267.246 I llm_load_print_meta: n_swa            = 0
0.00.267.246 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.247 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.248 I llm_load_print_meta: n_gqa            = 8
0.00.267.248 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.249 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.250 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.251 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.251 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.252 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.252 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.253 I llm_load_print_meta: n_ff             = 16384
0.00.267.254 I llm_load_print_meta: n_expert         = 0
0.00.267.254 I llm_load_print_meta: n_expert_used    = 0
0.00.267.255 I llm_load_print_meta: causal attn      = 1
0.00.267.256 I llm_load_print_meta: pooling type     = 0
0.00.267.256 I llm_load_print_meta: rope type        = 2
0.00.267.257 I llm_load_print_meta: rope scaling     = linear
0.00.267.258 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.259 I llm_load_print_meta: freq_scale_train = 1
0.00.267.259 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.260 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.260 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.260 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.261 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.261 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.261 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.262 I llm_load_print_meta: model type       = 2B
0.00.267.266 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.267.267 I llm_load_print_meta: model params     = 2.51 B
0.00.267.268 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.267.268 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.269 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.269 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.269 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.270 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.270 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.270 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.270 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.271 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.271 I llm_load_print_meta: max token length = 93
0.00.323.092 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.328.199 I llama_new_context_with_model: n_seq_max     = 1
0.00.328.205 I llama_new_context_with_model: n_ctx         = 4096
0.00.328.205 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.328.206 I llama_new_context_with_model: n_batch       = 2048
0.00.328.206 I llama_new_context_with_model: n_ubatch      = 512
0.00.328.207 I llama_new_context_with_model: flash_attn    = 0
0.00.328.209 I llama_new_context_with_model: freq_base     = 10000.0
0.00.328.210 I llama_new_context_with_model: freq_scale    = 1
0.00.328.211 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.343.614 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.343.629 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.343.728 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.344.949 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.344.956 I llama_new_context_with_model: graph nodes  = 601
0.00.344.956 I llama_new_context_with_model: graph splits = 1
0.00.344.959 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.422.551 I main: llama threadpool init, n_threads = 4
0.00.422.566 I 
0.00.422.640 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.422.643 I 
0.00.422.689 I sampler seed: 1777457946
0.00.422.700 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.422.705 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.422.706 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.422.706 I 
 seconded by the passage are:
a) Transcendentalism
b) Idealism
c) Rationalism
d) Idealism

The correct answer

0.02.001.353 I llama_perf_sampler_print:    sampling time =       5.28 ms /    33 runs   (    0.16 ms per token,  6252.37 tokens per second)
0.02.001.356 I llama_perf_context_print:        load time =     421.78 ms
0.02.001.357 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.001.358 I llama_perf_context_print:        eval time =    1559.78 ms /    32 runs   (   48.74 ms per token,    20.52 tokens per second)
0.02.001.359 I llama_perf_context_print:       total time =    1578.81 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.239s
user	10m24.382s
sys	0m7.086s
```

### pythia_1_4b

Pythia 1.4B:
- status: 0
- perplexity:
  - f16 @ 10.1383 OK
  - q8_0 @ 10.1294 OK
  - q4_0 @ 11.2190 OK
  - q4_1 @ 10.5418 OK
  - q5_0 @ 10.0568 OK
  - q5_1 @ 10.0893 OK
  - q3_k @ 12.7265 OK
  - q4_k @ 10.5531 OK
  - q5_k @ 10.5345 OK
  - q6_k @ 10.5551 OK
- imatrix:
```
Final estimate: PPL = 10.1383 +/- 3.22270
```
- f16: 
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-f16.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.662 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.897 I main: llama backend init
0.00.000.905 I main: load the model and apply lora adapter, if any
0.00.011.132 I llama_model_loader: loaded meta data with 22 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.011.144 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.011.149 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.011.151 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.011.151 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.011.152 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.011.152 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.011.155 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.011.156 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.011.157 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.011.157 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.011.158 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.011.159 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.011.159 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.011.164 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.011.164 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.011.166 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.016.874 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.018.244 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.023.585 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.023.590 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.023.591 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.023.591 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.023.592 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.023.594 I llama_model_loader: - type  f32:  194 tensors
0.00.023.594 I llama_model_loader: - type  f16:   98 tensors
0.00.070.753 I llm_load_vocab: special tokens cache size = 25
0.00.084.691 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.084.709 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.084.710 I llm_load_print_meta: arch             = gptneox
0.00.084.710 I llm_load_print_meta: vocab type       = BPE
0.00.084.711 I llm_load_print_meta: n_vocab          = 50304
0.00.084.712 I llm_load_print_meta: n_merges         = 50009
0.00.084.712 I llm_load_print_meta: vocab_only       = 0
0.00.084.712 I llm_load_print_meta: n_ctx_train      = 2048
0.00.084.713 I llm_load_print_meta: n_embd           = 2048
0.00.084.713 I llm_load_print_meta: n_layer          = 24
0.00.084.724 I llm_load_print_meta: n_head           = 16
0.00.084.725 I llm_load_print_meta: n_head_kv        = 16
0.00.084.725 I llm_load_print_meta: n_rot            = 32
0.00.084.726 I llm_load_print_meta: n_swa            = 0
0.00.084.726 I llm_load_print_meta: n_embd_head_k    = 128
0.00.084.726 I llm_load_print_meta: n_embd_head_v    = 128
0.00.084.727 I llm_load_print_meta: n_gqa            = 1
0.00.084.728 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.084.729 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.084.730 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.084.731 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.084.731 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.084.732 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.084.732 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.084.733 I llm_load_print_meta: n_ff             = 8192
0.00.084.733 I llm_load_print_meta: n_expert         = 0
0.00.084.733 I llm_load_print_meta: n_expert_used    = 0
0.00.084.733 I llm_load_print_meta: causal attn      = 1
0.00.084.733 I llm_load_print_meta: pooling type     = 0
0.00.084.734 I llm_load_print_meta: rope type        = 2
0.00.084.734 I llm_load_print_meta: rope scaling     = linear
0.00.084.736 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.084.736 I llm_load_print_meta: freq_scale_train = 1
0.00.084.737 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.084.737 I llm_load_print_meta: rope_finetuned   = unknown
0.00.084.737 I llm_load_print_meta: ssm_d_conv       = 0
0.00.084.738 I llm_load_print_meta: ssm_d_inner      = 0
0.00.084.738 I llm_load_print_meta: ssm_d_state      = 0
0.00.084.738 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.084.739 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.084.739 I llm_load_print_meta: model type       = 1.4B
0.00.084.740 I llm_load_print_meta: model ftype      = all F32 (guessed)
0.00.084.740 I llm_load_print_meta: model params     = 1.41 B
0.00.084.741 I llm_load_print_meta: model size       = 2.64 GiB (16.01 BPW) 
0.00.084.741 I llm_load_print_meta: general.name     = 1.4B
0.00.084.742 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.084.742 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.084.742 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.084.743 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.084.744 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.084.744 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.084.744 I llm_load_print_meta: max token length = 1024
0.00.231.860 I llm_load_tensors:   CPU_Mapped model buffer size =  2699.45 MiB
...............................................................................
0.00.234.635 I llama_new_context_with_model: n_seq_max     = 1
0.00.234.640 I llama_new_context_with_model: n_ctx         = 2048
0.00.234.641 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.234.641 I llama_new_context_with_model: n_batch       = 2048
0.00.234.641 I llama_new_context_with_model: n_ubatch      = 512
0.00.234.642 I llama_new_context_with_model: flash_attn    = 0
0.00.234.644 I llama_new_context_with_model: freq_base     = 10000.0
0.00.234.645 I llama_new_context_with_model: freq_scale    = 1
0.00.310.114 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.310.132 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.310.162 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.312.727 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.312.733 I llama_new_context_with_model: graph nodes  = 967
0.00.312.734 I llama_new_context_with_model: graph splits = 1
0.00.312.737 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.430.255 I main: llama threadpool init, n_threads = 4
0.00.430.271 I 
0.00.430.350 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.430.354 I 
0.00.430.468 I sampler seed: 1234
0.00.430.479 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.430.482 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.430.483 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.430.483 I 
I believe the meaning of life is to do the things we love, with the people we love, and the world we love.

I believe that our only fear is not knowing. And I believe that’s the fear that keeps us from doing the things that we know are good for us.

I believe that we have a choice.

0.04.801.894 I llama_perf_sampler_print:    sampling time =       2.86 ms /    71 runs   (    0.04 ms per token, 24851.24 tokens per second)
0.04.801.897 I llama_perf_context_print:        load time =     429.33 ms
0.04.801.898 I llama_perf_context_print: prompt eval time =     183.19 ms /     7 tokens (   26.17 ms per token,    38.21 tokens per second)
0.04.801.900 I llama_perf_context_print:        eval time =    4177.82 ms /    63 runs   (   66.31 ms per token,    15.08 tokens per second)
0.04.801.901 I llama_perf_context_print:       total time =    4371.65 ms /    70 tokens

real	0m4.899s
user	0m17.962s
sys	0m0.336s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-f16.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.244 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.126 I llama_model_loader: loaded meta data with 22 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.009.140 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.149 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.153 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.153 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.154 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.154 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.157 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.158 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.159 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.159 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.160 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.160 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.161 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.165 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.165 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.166 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.014.854 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.183 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.555 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.561 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.561 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.562 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.562 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.564 I llama_model_loader: - type  f32:  194 tensors
0.00.021.564 I llama_model_loader: - type  f16:   98 tensors
0.00.065.673 I llm_load_vocab: special tokens cache size = 25
0.00.079.571 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.079.582 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.079.582 I llm_load_print_meta: arch             = gptneox
0.00.079.583 I llm_load_print_meta: vocab type       = BPE
0.00.079.583 I llm_load_print_meta: n_vocab          = 50304
0.00.079.584 I llm_load_print_meta: n_merges         = 50009
0.00.079.584 I llm_load_print_meta: vocab_only       = 0
0.00.079.585 I llm_load_print_meta: n_ctx_train      = 2048
0.00.079.585 I llm_load_print_meta: n_embd           = 2048
0.00.079.585 I llm_load_print_meta: n_layer          = 24
0.00.079.594 I llm_load_print_meta: n_head           = 16
0.00.079.595 I llm_load_print_meta: n_head_kv        = 16
0.00.079.595 I llm_load_print_meta: n_rot            = 32
0.00.079.595 I llm_load_print_meta: n_swa            = 0
0.00.079.596 I llm_load_print_meta: n_embd_head_k    = 128
0.00.079.596 I llm_load_print_meta: n_embd_head_v    = 128
0.00.079.597 I llm_load_print_meta: n_gqa            = 1
0.00.079.598 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.079.599 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.079.600 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.079.601 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.079.601 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.079.601 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.079.602 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.079.603 I llm_load_print_meta: n_ff             = 8192
0.00.079.603 I llm_load_print_meta: n_expert         = 0
0.00.079.604 I llm_load_print_meta: n_expert_used    = 0
0.00.079.604 I llm_load_print_meta: causal attn      = 1
0.00.079.604 I llm_load_print_meta: pooling type     = 0
0.00.079.604 I llm_load_print_meta: rope type        = 2
0.00.079.605 I llm_load_print_meta: rope scaling     = linear
0.00.079.607 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.079.607 I llm_load_print_meta: freq_scale_train = 1
0.00.079.608 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.079.608 I llm_load_print_meta: rope_finetuned   = unknown
0.00.079.608 I llm_load_print_meta: ssm_d_conv       = 0
0.00.079.609 I llm_load_print_meta: ssm_d_inner      = 0
0.00.079.609 I llm_load_print_meta: ssm_d_state      = 0
0.00.079.609 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.079.609 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.079.610 I llm_load_print_meta: model type       = 1.4B
0.00.079.611 I llm_load_print_meta: model ftype      = all F32 (guessed)
0.00.079.612 I llm_load_print_meta: model params     = 1.41 B
0.00.079.613 I llm_load_print_meta: model size       = 2.64 GiB (16.01 BPW) 
0.00.079.614 I llm_load_print_meta: general.name     = 1.4B
0.00.079.614 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.079.615 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.079.615 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.079.615 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.079.616 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.079.616 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.079.616 I llm_load_print_meta: max token length = 1024
0.00.223.291 I llm_load_tensors:   CPU_Mapped model buffer size =  2699.45 MiB
...............................................................................
0.00.225.829 I llama_new_context_with_model: n_seq_max     = 1
0.00.225.835 I llama_new_context_with_model: n_ctx         = 128
0.00.225.835 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.225.835 I llama_new_context_with_model: n_batch       = 128
0.00.225.836 I llama_new_context_with_model: n_ubatch      = 128
0.00.225.836 I llama_new_context_with_model: flash_attn    = 0
0.00.225.839 I llama_new_context_with_model: freq_base     = 10000.0
0.00.225.840 I llama_new_context_with_model: freq_scale    = 1
0.00.225.841 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.231.052 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.231.063 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.231.082 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.233.234 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.233.240 I llama_new_context_with_model: graph nodes  = 967
0.00.233.241 I llama_new_context_with_model: graph splits = 1
0.00.233.243 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.322.775 I 
0.00.322.864 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.322.873 I perplexity: tokenizing the input ..
0.00.332.896 I perplexity: tokenization took 10.017 ms
0.00.332.916 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.03.162.889 I perplexity: 2.83 seconds per pass - ETA 0.03 minutes
[1]10.1383,
0.03.168.142 I Final estimate: PPL = 10.1383 +/- 3.22270

0.03.168.173 I llama_perf_context_print:        load time =     322.50 ms
0.03.168.175 I llama_perf_context_print: prompt eval time =    2828.34 ms /   128 tokens (   22.10 ms per token,    45.26 tokens per second)
0.03.168.176 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.03.168.177 I llama_perf_context_print:       total time =    2845.40 ms /   129 tokens

real	0m3.263s
user	0m11.783s
sys	0m0.260s
```
- q8_0:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q8_0.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.561 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.766 I main: llama backend init
0.00.000.772 I main: load the model and apply lora adapter, if any
0.00.009.541 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q8_0.gguf (version GGUF V3 (latest))
0.00.009.556 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.561 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.562 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.563 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.563 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.564 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.567 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.567 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.568 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.568 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.569 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.569 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.570 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.574 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.575 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.575 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.226 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.608 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.881 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.886 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.887 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.887 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.888 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.888 I llama_model_loader: - kv  22:                          general.file_type u32              = 7
0.00.021.890 I llama_model_loader: - type  f32:  194 tensors
0.00.021.891 I llama_model_loader: - type q8_0:   98 tensors
0.00.066.682 I llm_load_vocab: special tokens cache size = 25
0.00.080.580 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.592 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.592 I llm_load_print_meta: arch             = gptneox
0.00.080.593 I llm_load_print_meta: vocab type       = BPE
0.00.080.594 I llm_load_print_meta: n_vocab          = 50304
0.00.080.594 I llm_load_print_meta: n_merges         = 50009
0.00.080.594 I llm_load_print_meta: vocab_only       = 0
0.00.080.595 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.595 I llm_load_print_meta: n_embd           = 2048
0.00.080.595 I llm_load_print_meta: n_layer          = 24
0.00.080.605 I llm_load_print_meta: n_head           = 16
0.00.080.606 I llm_load_print_meta: n_head_kv        = 16
0.00.080.606 I llm_load_print_meta: n_rot            = 32
0.00.080.606 I llm_load_print_meta: n_swa            = 0
0.00.080.607 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.607 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.608 I llm_load_print_meta: n_gqa            = 1
0.00.080.609 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.610 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.611 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.611 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.613 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.613 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.613 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.614 I llm_load_print_meta: n_ff             = 8192
0.00.080.614 I llm_load_print_meta: n_expert         = 0
0.00.080.615 I llm_load_print_meta: n_expert_used    = 0
0.00.080.615 I llm_load_print_meta: causal attn      = 1
0.00.080.615 I llm_load_print_meta: pooling type     = 0
0.00.080.616 I llm_load_print_meta: rope type        = 2
0.00.080.616 I llm_load_print_meta: rope scaling     = linear
0.00.080.617 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.618 I llm_load_print_meta: freq_scale_train = 1
0.00.080.618 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.619 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.619 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.619 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.620 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.620 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.620 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.621 I llm_load_print_meta: model type       = 1.4B
0.00.080.621 I llm_load_print_meta: model ftype      = Q8_0
0.00.080.622 I llm_load_print_meta: model params     = 1.41 B
0.00.080.623 I llm_load_print_meta: model size       = 1.40 GiB (8.51 BPW) 
0.00.080.623 I llm_load_print_meta: general.name     = 1.4B
0.00.080.624 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.624 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.624 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.625 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.625 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.625 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.626 I llm_load_print_meta: max token length = 1024
0.00.161.331 I llm_load_tensors:   CPU_Mapped model buffer size =  1435.23 MiB
...............................................................................
0.00.164.076 I llama_new_context_with_model: n_seq_max     = 1
0.00.164.082 I llama_new_context_with_model: n_ctx         = 2048
0.00.164.082 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.164.082 I llama_new_context_with_model: n_batch       = 2048
0.00.164.083 I llama_new_context_with_model: n_ubatch      = 512
0.00.164.083 I llama_new_context_with_model: flash_attn    = 0
0.00.164.085 I llama_new_context_with_model: freq_base     = 10000.0
0.00.164.086 I llama_new_context_with_model: freq_scale    = 1
0.00.245.420 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.245.439 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.245.469 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.247.741 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.247.749 I llama_new_context_with_model: graph nodes  = 967
0.00.247.749 I llama_new_context_with_model: graph splits = 1
0.00.247.753 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.336.616 I main: llama threadpool init, n_threads = 4
0.00.336.632 I 
0.00.336.710 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.336.714 I 
0.00.336.828 I sampler seed: 1234
0.00.336.839 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.336.842 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.336.843 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.336.843 I 
I believe the meaning of life is to become as
spiritual as you can, and to become spiritual as you can.

I have lived
in the spiritual world and have been able to touch the spirit of the
beasts. I believe I am now spiritually connected with them. I believe
that I am spiritually connected with the

0.03.036.576 I llama_perf_sampler_print:    sampling time =       2.39 ms /    71 runs   (    0.03 ms per token, 29707.11 tokens per second)
0.03.036.578 I llama_perf_context_print:        load time =     335.83 ms
0.03.036.580 I llama_perf_context_print: prompt eval time =     117.61 ms /     7 tokens (   16.80 ms per token,    59.52 tokens per second)
0.03.036.581 I llama_perf_context_print:        eval time =    2572.75 ms /    63 runs   (   40.84 ms per token,    24.49 tokens per second)
0.03.036.582 I llama_perf_context_print:       total time =    2699.97 ms /    70 tokens

real	0m3.106s
user	0m11.154s
sys	0m0.244s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q8_0.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.645 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.600 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q8_0.gguf (version GGUF V3 (latest))
0.00.009.615 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.622 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.623 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.623 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.624 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.624 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.628 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.629 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.629 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.630 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.631 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.632 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.632 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.636 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.637 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.637 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.282 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.590 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.908 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.913 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.914 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.914 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.915 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.915 I llama_model_loader: - kv  22:                          general.file_type u32              = 7
0.00.021.917 I llama_model_loader: - type  f32:  194 tensors
0.00.021.918 I llama_model_loader: - type q8_0:   98 tensors
0.00.068.687 I llm_load_vocab: special tokens cache size = 25
0.00.082.639 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.082.653 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.082.653 I llm_load_print_meta: arch             = gptneox
0.00.082.654 I llm_load_print_meta: vocab type       = BPE
0.00.082.655 I llm_load_print_meta: n_vocab          = 50304
0.00.082.655 I llm_load_print_meta: n_merges         = 50009
0.00.082.655 I llm_load_print_meta: vocab_only       = 0
0.00.082.656 I llm_load_print_meta: n_ctx_train      = 2048
0.00.082.656 I llm_load_print_meta: n_embd           = 2048
0.00.082.656 I llm_load_print_meta: n_layer          = 24
0.00.082.667 I llm_load_print_meta: n_head           = 16
0.00.082.668 I llm_load_print_meta: n_head_kv        = 16
0.00.082.668 I llm_load_print_meta: n_rot            = 32
0.00.082.669 I llm_load_print_meta: n_swa            = 0
0.00.082.669 I llm_load_print_meta: n_embd_head_k    = 128
0.00.082.669 I llm_load_print_meta: n_embd_head_v    = 128
0.00.082.671 I llm_load_print_meta: n_gqa            = 1
0.00.082.672 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.082.673 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.082.674 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.082.675 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.082.675 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.082.676 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.082.676 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.082.677 I llm_load_print_meta: n_ff             = 8192
0.00.082.677 I llm_load_print_meta: n_expert         = 0
0.00.082.678 I llm_load_print_meta: n_expert_used    = 0
0.00.082.679 I llm_load_print_meta: causal attn      = 1
0.00.082.679 I llm_load_print_meta: pooling type     = 0
0.00.082.680 I llm_load_print_meta: rope type        = 2
0.00.082.680 I llm_load_print_meta: rope scaling     = linear
0.00.082.682 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.082.682 I llm_load_print_meta: freq_scale_train = 1
0.00.082.683 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.082.683 I llm_load_print_meta: rope_finetuned   = unknown
0.00.082.684 I llm_load_print_meta: ssm_d_conv       = 0
0.00.082.684 I llm_load_print_meta: ssm_d_inner      = 0
0.00.082.684 I llm_load_print_meta: ssm_d_state      = 0
0.00.082.684 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.082.685 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.082.685 I llm_load_print_meta: model type       = 1.4B
0.00.082.685 I llm_load_print_meta: model ftype      = Q8_0
0.00.082.686 I llm_load_print_meta: model params     = 1.41 B
0.00.082.687 I llm_load_print_meta: model size       = 1.40 GiB (8.51 BPW) 
0.00.082.687 I llm_load_print_meta: general.name     = 1.4B
0.00.082.688 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.082.688 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.082.689 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.082.689 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.082.690 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.082.690 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.082.691 I llm_load_print_meta: max token length = 1024
0.00.165.089 I llm_load_tensors:   CPU_Mapped model buffer size =  1435.23 MiB
...............................................................................
0.00.167.592 I llama_new_context_with_model: n_seq_max     = 1
0.00.167.597 I llama_new_context_with_model: n_ctx         = 128
0.00.167.597 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.167.598 I llama_new_context_with_model: n_batch       = 128
0.00.167.598 I llama_new_context_with_model: n_ubatch      = 128
0.00.167.598 I llama_new_context_with_model: flash_attn    = 0
0.00.167.600 I llama_new_context_with_model: freq_base     = 10000.0
0.00.167.601 I llama_new_context_with_model: freq_scale    = 1
0.00.167.602 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.172.709 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.172.719 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.172.735 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.174.867 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.174.873 I llama_new_context_with_model: graph nodes  = 967
0.00.174.873 I llama_new_context_with_model: graph splits = 1
0.00.174.875 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.233.804 I 
0.00.233.888 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.233.897 I perplexity: tokenizing the input ..
0.00.243.964 I perplexity: tokenization took 10.063 ms
0.00.243.983 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.01.971.681 I perplexity: 1.73 seconds per pass - ETA 0.02 minutes
[1]10.1294,
0.01.976.865 I Final estimate: PPL = 10.1294 +/- 3.21719

0.01.976.896 I llama_perf_context_print:        load time =     233.13 ms
0.01.976.898 I llama_perf_context_print: prompt eval time =    1726.42 ms /   128 tokens (   13.49 ms per token,    74.14 tokens per second)
0.01.976.900 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.01.976.901 I llama_perf_context_print:       total time =    1743.09 ms /   129 tokens

real	0m2.038s
user	0m7.278s
sys	0m0.140s
```
- q4_0:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.542 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.000.751 I main: load the model and apply lora adapter, if any
0.00.009.906 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf (version GGUF V3 (latest))
0.00.009.920 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.926 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.927 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.928 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.928 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.929 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.932 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.933 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.934 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.934 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.935 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.936 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.937 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.941 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.943 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.944 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.660 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.985 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.282 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.287 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.288 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.288 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.289 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.289 I llama_model_loader: - kv  22:                          general.file_type u32              = 2
0.00.022.291 I llama_model_loader: - type  f32:  194 tensors
0.00.022.292 I llama_model_loader: - type q4_0:   97 tensors
0.00.022.292 I llama_model_loader: - type q6_K:    1 tensors
0.00.066.633 I llm_load_vocab: special tokens cache size = 25
0.00.080.457 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.468 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.469 I llm_load_print_meta: arch             = gptneox
0.00.080.469 I llm_load_print_meta: vocab type       = BPE
0.00.080.470 I llm_load_print_meta: n_vocab          = 50304
0.00.080.470 I llm_load_print_meta: n_merges         = 50009
0.00.080.470 I llm_load_print_meta: vocab_only       = 0
0.00.080.471 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.471 I llm_load_print_meta: n_embd           = 2048
0.00.080.472 I llm_load_print_meta: n_layer          = 24
0.00.080.479 I llm_load_print_meta: n_head           = 16
0.00.080.480 I llm_load_print_meta: n_head_kv        = 16
0.00.080.480 I llm_load_print_meta: n_rot            = 32
0.00.080.480 I llm_load_print_meta: n_swa            = 0
0.00.080.481 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.481 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.482 I llm_load_print_meta: n_gqa            = 1
0.00.080.483 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.484 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.485 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.486 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.486 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.486 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.487 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.487 I llm_load_print_meta: n_ff             = 8192
0.00.080.488 I llm_load_print_meta: n_expert         = 0
0.00.080.488 I llm_load_print_meta: n_expert_used    = 0
0.00.080.488 I llm_load_print_meta: causal attn      = 1
0.00.080.489 I llm_load_print_meta: pooling type     = 0
0.00.080.489 I llm_load_print_meta: rope type        = 2
0.00.080.489 I llm_load_print_meta: rope scaling     = linear
0.00.080.490 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.491 I llm_load_print_meta: freq_scale_train = 1
0.00.080.491 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.492 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.492 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.492 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.492 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.493 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.493 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.494 I llm_load_print_meta: model type       = 1.4B
0.00.080.494 I llm_load_print_meta: model ftype      = Q4_0
0.00.080.495 I llm_load_print_meta: model params     = 1.41 B
0.00.080.496 I llm_load_print_meta: model size       = 786.31 MiB (4.66 BPW) 
0.00.080.497 I llm_load_print_meta: general.name     = 1.4B
0.00.080.497 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.497 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.498 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.498 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.499 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.499 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.499 I llm_load_print_meta: max token length = 1024
0.00.124.858 I llm_load_tensors:   CPU_Mapped model buffer size =   786.31 MiB
...............................................................................
0.00.127.663 I llama_new_context_with_model: n_seq_max     = 1
0.00.127.668 I llama_new_context_with_model: n_ctx         = 2048
0.00.127.669 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.127.669 I llama_new_context_with_model: n_batch       = 2048
0.00.127.670 I llama_new_context_with_model: n_ubatch      = 512
0.00.127.670 I llama_new_context_with_model: flash_attn    = 0
0.00.127.673 I llama_new_context_with_model: freq_base     = 10000.0
0.00.127.674 I llama_new_context_with_model: freq_scale    = 1
0.00.207.912 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.207.930 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.207.959 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.210.204 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.210.210 I llama_new_context_with_model: graph nodes  = 967
0.00.210.211 I llama_new_context_with_model: graph splits = 1
0.00.210.214 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.290.249 I main: llama threadpool init, n_threads = 4
0.00.290.267 I 
0.00.290.347 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.290.352 I 
0.00.290.466 I sampler seed: 1234
0.00.290.476 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.290.480 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.290.481 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.290.481 I 
I believe the meaning of life is to know and experience what you love and to do it in a way that you enjoy.

I have lived most of my life in the U.S.A. and I feel that the U.S.A. is a very forgiving country for mistakes as long as you don’t hurt anyone else

0.02.342.189 I llama_perf_sampler_print:    sampling time =       2.46 ms /    71 runs   (    0.03 ms per token, 28826.63 tokens per second)
0.02.342.192 I llama_perf_context_print:        load time =     289.48 ms
0.02.342.194 I llama_perf_context_print: prompt eval time =     120.30 ms /     7 tokens (   17.19 ms per token,    58.19 tokens per second)
0.02.342.197 I llama_perf_context_print:        eval time =    1921.62 ms /    63 runs   (   30.50 ms per token,    32.78 tokens per second)
0.02.342.198 I llama_perf_context_print:       total time =    2051.95 ms /    70 tokens

real	0m2.389s
user	0m8.532s
sys	0m0.180s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.637 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.736 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf (version GGUF V3 (latest))
0.00.009.750 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.757 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.761 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.761 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.762 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.762 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.766 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.768 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.768 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.769 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.770 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.771 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.771 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.777 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.777 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.778 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.456 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.931 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.266 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.272 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.273 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.274 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.274 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.275 I llama_model_loader: - kv  22:                          general.file_type u32              = 2
0.00.022.278 I llama_model_loader: - type  f32:  194 tensors
0.00.022.278 I llama_model_loader: - type q4_0:   97 tensors
0.00.022.279 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.827 I llm_load_vocab: special tokens cache size = 25
0.00.081.685 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.698 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.699 I llm_load_print_meta: arch             = gptneox
0.00.081.699 I llm_load_print_meta: vocab type       = BPE
0.00.081.700 I llm_load_print_meta: n_vocab          = 50304
0.00.081.700 I llm_load_print_meta: n_merges         = 50009
0.00.081.701 I llm_load_print_meta: vocab_only       = 0
0.00.081.701 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.701 I llm_load_print_meta: n_embd           = 2048
0.00.081.702 I llm_load_print_meta: n_layer          = 24
0.00.081.712 I llm_load_print_meta: n_head           = 16
0.00.081.714 I llm_load_print_meta: n_head_kv        = 16
0.00.081.714 I llm_load_print_meta: n_rot            = 32
0.00.081.714 I llm_load_print_meta: n_swa            = 0
0.00.081.715 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.715 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.716 I llm_load_print_meta: n_gqa            = 1
0.00.081.717 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.718 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.719 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.720 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.720 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.721 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.721 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.722 I llm_load_print_meta: n_ff             = 8192
0.00.081.722 I llm_load_print_meta: n_expert         = 0
0.00.081.723 I llm_load_print_meta: n_expert_used    = 0
0.00.081.723 I llm_load_print_meta: causal attn      = 1
0.00.081.723 I llm_load_print_meta: pooling type     = 0
0.00.081.724 I llm_load_print_meta: rope type        = 2
0.00.081.724 I llm_load_print_meta: rope scaling     = linear
0.00.081.725 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.726 I llm_load_print_meta: freq_scale_train = 1
0.00.081.727 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.727 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.727 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.728 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.728 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.728 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.729 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.729 I llm_load_print_meta: model type       = 1.4B
0.00.081.730 I llm_load_print_meta: model ftype      = Q4_0
0.00.081.731 I llm_load_print_meta: model params     = 1.41 B
0.00.081.732 I llm_load_print_meta: model size       = 786.31 MiB (4.66 BPW) 
0.00.081.732 I llm_load_print_meta: general.name     = 1.4B
0.00.081.732 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.733 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.733 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.733 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.734 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.734 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.734 I llm_load_print_meta: max token length = 1024
0.00.126.651 I llm_load_tensors:   CPU_Mapped model buffer size =   786.31 MiB
...............................................................................
0.00.129.388 I llama_new_context_with_model: n_seq_max     = 1
0.00.129.393 I llama_new_context_with_model: n_ctx         = 128
0.00.129.393 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.129.394 I llama_new_context_with_model: n_batch       = 128
0.00.129.394 I llama_new_context_with_model: n_ubatch      = 128
0.00.129.394 I llama_new_context_with_model: flash_attn    = 0
0.00.129.397 I llama_new_context_with_model: freq_base     = 10000.0
0.00.129.397 I llama_new_context_with_model: freq_scale    = 1
0.00.129.398 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.134.477 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.134.488 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.134.504 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.136.982 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.136.988 I llama_new_context_with_model: graph nodes  = 967
0.00.136.988 I llama_new_context_with_model: graph splits = 1
0.00.136.990 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.185.207 I 
0.00.185.286 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.185.295 I perplexity: tokenizing the input ..
0.00.195.399 I perplexity: tokenization took 10.1 ms
0.00.195.419 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.145.189 I perplexity: 1.95 seconds per pass - ETA 0.02 minutes
[1]11.2190,
0.02.153.445 I Final estimate: PPL = 11.2190 +/- 3.50798

0.02.153.481 I llama_perf_context_print:        load time =     184.53 ms
0.02.153.483 I llama_perf_context_print: prompt eval time =    1948.37 ms /   128 tokens (   15.22 ms per token,    65.70 tokens per second)
0.02.153.485 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.153.487 I llama_perf_context_print:       total time =    1968.27 ms /   129 tokens

real	0m2.192s
user	0m8.142s
sys	0m0.084s
```
- q4_1:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q4_1.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.572 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.000.754 I main: load the model and apply lora adapter, if any
0.00.009.791 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_1.gguf (version GGUF V3 (latest))
0.00.009.804 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.810 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.812 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.813 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.813 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.814 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.818 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.818 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.819 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.819 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.820 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.820 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.821 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.825 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.825 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.826 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.466 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.787 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.211 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.216 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.217 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.217 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.218 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.218 I llama_model_loader: - kv  22:                          general.file_type u32              = 3
0.00.022.220 I llama_model_loader: - type  f32:  194 tensors
0.00.022.221 I llama_model_loader: - type q4_1:   97 tensors
0.00.022.221 I llama_model_loader: - type q6_K:    1 tensors
0.00.066.887 I llm_load_vocab: special tokens cache size = 25
0.00.080.753 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.765 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.765 I llm_load_print_meta: arch             = gptneox
0.00.080.766 I llm_load_print_meta: vocab type       = BPE
0.00.080.767 I llm_load_print_meta: n_vocab          = 50304
0.00.080.767 I llm_load_print_meta: n_merges         = 50009
0.00.080.767 I llm_load_print_meta: vocab_only       = 0
0.00.080.768 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.769 I llm_load_print_meta: n_embd           = 2048
0.00.080.769 I llm_load_print_meta: n_layer          = 24
0.00.080.779 I llm_load_print_meta: n_head           = 16
0.00.080.780 I llm_load_print_meta: n_head_kv        = 16
0.00.080.780 I llm_load_print_meta: n_rot            = 32
0.00.080.781 I llm_load_print_meta: n_swa            = 0
0.00.080.781 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.781 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.784 I llm_load_print_meta: n_gqa            = 1
0.00.080.786 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.787 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.788 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.789 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.789 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.790 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.791 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.792 I llm_load_print_meta: n_ff             = 8192
0.00.080.792 I llm_load_print_meta: n_expert         = 0
0.00.080.792 I llm_load_print_meta: n_expert_used    = 0
0.00.080.792 I llm_load_print_meta: causal attn      = 1
0.00.080.793 I llm_load_print_meta: pooling type     = 0
0.00.080.793 I llm_load_print_meta: rope type        = 2
0.00.080.794 I llm_load_print_meta: rope scaling     = linear
0.00.080.795 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.796 I llm_load_print_meta: freq_scale_train = 1
0.00.080.797 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.797 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.797 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.797 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.800 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.800 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.800 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.801 I llm_load_print_meta: model type       = 1.4B
0.00.080.801 I llm_load_print_meta: model ftype      = Q4_1
0.00.080.802 I llm_load_print_meta: model params     = 1.41 B
0.00.080.803 I llm_load_print_meta: model size       = 864.46 MiB (5.13 BPW) 
0.00.080.804 I llm_load_print_meta: general.name     = 1.4B
0.00.080.805 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.805 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.805 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.806 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.806 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.807 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.808 I llm_load_print_meta: max token length = 1024
0.00.129.705 I llm_load_tensors:   CPU_Mapped model buffer size =   864.46 MiB
..............................................................................
0.00.132.263 I llama_new_context_with_model: n_seq_max     = 1
0.00.132.268 I llama_new_context_with_model: n_ctx         = 2048
0.00.132.268 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.132.268 I llama_new_context_with_model: n_batch       = 2048
0.00.132.269 I llama_new_context_with_model: n_ubatch      = 512
0.00.132.269 I llama_new_context_with_model: flash_attn    = 0
0.00.132.271 I llama_new_context_with_model: freq_base     = 10000.0
0.00.132.272 I llama_new_context_with_model: freq_scale    = 1
0.00.209.772 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.209.799 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.209.832 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.212.084 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.212.091 I llama_new_context_with_model: graph nodes  = 967
0.00.212.092 I llama_new_context_with_model: graph splits = 1
0.00.212.095 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.298.340 I main: llama threadpool init, n_threads = 4
0.00.298.357 I 
0.00.298.432 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.298.432 I 
0.00.298.539 I sampler seed: 1234
0.00.298.551 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.298.555 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.298.556 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.298.557 I 
I believe the meaning of life is that one should always think of the other person as one's own.

I have a friend who has an extreme case of this. She has a brother who, when he was a child, would make fun of her every time he could and she would just go through the motions. She would try to make him

0.02.450.191 I llama_perf_sampler_print:    sampling time =       2.65 ms /    71 runs   (    0.04 ms per token, 26832.96 tokens per second)
0.02.450.193 I llama_perf_context_print:        load time =     297.57 ms
0.02.450.195 I llama_perf_context_print: prompt eval time =     134.09 ms /     7 tokens (   19.16 ms per token,    52.20 tokens per second)
0.02.450.196 I llama_perf_context_print:        eval time =    2008.07 ms /    63 runs   (   31.87 ms per token,    31.37 tokens per second)
0.02.450.197 I llama_perf_context_print:       total time =    2151.86 ms /    70 tokens

real	0m2.500s
user	0m8.969s
sys	0m0.176s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q4_1.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.477 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.487 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_1.gguf (version GGUF V3 (latest))
0.00.009.501 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.510 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.514 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.514 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.515 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.515 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.519 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.520 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.520 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.521 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.522 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.522 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.523 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.527 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.527 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.528 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.205 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.557 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.984 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.990 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.991 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.991 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.992 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.992 I llama_model_loader: - kv  22:                          general.file_type u32              = 3
0.00.021.994 I llama_model_loader: - type  f32:  194 tensors
0.00.021.995 I llama_model_loader: - type q4_1:   97 tensors
0.00.021.995 I llama_model_loader: - type q6_K:    1 tensors
0.00.068.774 I llm_load_vocab: special tokens cache size = 25
0.00.082.649 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.082.662 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.082.663 I llm_load_print_meta: arch             = gptneox
0.00.082.664 I llm_load_print_meta: vocab type       = BPE
0.00.082.664 I llm_load_print_meta: n_vocab          = 50304
0.00.082.664 I llm_load_print_meta: n_merges         = 50009
0.00.082.665 I llm_load_print_meta: vocab_only       = 0
0.00.082.665 I llm_load_print_meta: n_ctx_train      = 2048
0.00.082.665 I llm_load_print_meta: n_embd           = 2048
0.00.082.666 I llm_load_print_meta: n_layer          = 24
0.00.082.677 I llm_load_print_meta: n_head           = 16
0.00.082.678 I llm_load_print_meta: n_head_kv        = 16
0.00.082.679 I llm_load_print_meta: n_rot            = 32
0.00.082.679 I llm_load_print_meta: n_swa            = 0
0.00.082.679 I llm_load_print_meta: n_embd_head_k    = 128
0.00.082.679 I llm_load_print_meta: n_embd_head_v    = 128
0.00.082.681 I llm_load_print_meta: n_gqa            = 1
0.00.082.682 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.082.683 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.082.684 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.082.684 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.082.685 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.082.685 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.082.685 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.082.686 I llm_load_print_meta: n_ff             = 8192
0.00.082.686 I llm_load_print_meta: n_expert         = 0
0.00.082.687 I llm_load_print_meta: n_expert_used    = 0
0.00.082.687 I llm_load_print_meta: causal attn      = 1
0.00.082.687 I llm_load_print_meta: pooling type     = 0
0.00.082.687 I llm_load_print_meta: rope type        = 2
0.00.082.688 I llm_load_print_meta: rope scaling     = linear
0.00.082.689 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.082.690 I llm_load_print_meta: freq_scale_train = 1
0.00.082.690 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.082.690 I llm_load_print_meta: rope_finetuned   = unknown
0.00.082.691 I llm_load_print_meta: ssm_d_conv       = 0
0.00.082.691 I llm_load_print_meta: ssm_d_inner      = 0
0.00.082.691 I llm_load_print_meta: ssm_d_state      = 0
0.00.082.692 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.082.692 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.082.692 I llm_load_print_meta: model type       = 1.4B
0.00.082.693 I llm_load_print_meta: model ftype      = Q4_1
0.00.082.694 I llm_load_print_meta: model params     = 1.41 B
0.00.082.695 I llm_load_print_meta: model size       = 864.46 MiB (5.13 BPW) 
0.00.082.696 I llm_load_print_meta: general.name     = 1.4B
0.00.082.696 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.082.696 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.082.697 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.082.697 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.082.698 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.082.698 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.082.698 I llm_load_print_meta: max token length = 1024
0.00.132.459 I llm_load_tensors:   CPU_Mapped model buffer size =   864.46 MiB
..............................................................................
0.00.134.955 I llama_new_context_with_model: n_seq_max     = 1
0.00.134.960 I llama_new_context_with_model: n_ctx         = 128
0.00.134.960 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.134.960 I llama_new_context_with_model: n_batch       = 128
0.00.134.960 I llama_new_context_with_model: n_ubatch      = 128
0.00.134.961 I llama_new_context_with_model: flash_attn    = 0
0.00.134.963 I llama_new_context_with_model: freq_base     = 10000.0
0.00.134.964 I llama_new_context_with_model: freq_scale    = 1
0.00.134.964 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.140.297 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.140.307 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.140.326 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.142.521 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.142.528 I llama_new_context_with_model: graph nodes  = 967
0.00.142.528 I llama_new_context_with_model: graph splits = 1
0.00.142.530 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.197.234 I 
0.00.197.317 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.197.325 I perplexity: tokenizing the input ..
0.00.207.320 I perplexity: tokenization took 9.991 ms
0.00.207.339 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.427.421 I perplexity: 2.22 seconds per pass - ETA 0.03 minutes
[1]10.5418,
0.02.435.661 I Final estimate: PPL = 10.5418 +/- 3.33699

0.02.435.692 I llama_perf_context_print:        load time =     196.73 ms
0.02.435.694 I llama_perf_context_print: prompt eval time =    2218.53 ms /   128 tokens (   17.33 ms per token,    57.70 tokens per second)
0.02.435.695 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.435.696 I llama_perf_context_print:       total time =    2238.46 ms /   129 tokens

real	0m2.478s
user	0m9.234s
sys	0m0.096s
```
- q5_0:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q5_0.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.558 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.766 I main: llama backend init
0.00.000.772 I main: load the model and apply lora adapter, if any
0.00.009.775 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_0.gguf (version GGUF V3 (latest))
0.00.009.787 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.796 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.799 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.800 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.800 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.801 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.804 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.805 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.806 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.806 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.807 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.808 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.808 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.813 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.814 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.815 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.688 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.017.042 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.358 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.363 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.363 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.364 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.364 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.365 I llama_model_loader: - kv  22:                          general.file_type u32              = 8
0.00.022.367 I llama_model_loader: - type  f32:  194 tensors
0.00.022.368 I llama_model_loader: - type q5_0:   97 tensors
0.00.022.368 I llama_model_loader: - type q6_K:    1 tensors
0.00.066.500 I llm_load_vocab: special tokens cache size = 25
0.00.080.359 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.370 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.371 I llm_load_print_meta: arch             = gptneox
0.00.080.371 I llm_load_print_meta: vocab type       = BPE
0.00.080.372 I llm_load_print_meta: n_vocab          = 50304
0.00.080.372 I llm_load_print_meta: n_merges         = 50009
0.00.080.372 I llm_load_print_meta: vocab_only       = 0
0.00.080.373 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.373 I llm_load_print_meta: n_embd           = 2048
0.00.080.373 I llm_load_print_meta: n_layer          = 24
0.00.080.381 I llm_load_print_meta: n_head           = 16
0.00.080.382 I llm_load_print_meta: n_head_kv        = 16
0.00.080.383 I llm_load_print_meta: n_rot            = 32
0.00.080.383 I llm_load_print_meta: n_swa            = 0
0.00.080.383 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.384 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.385 I llm_load_print_meta: n_gqa            = 1
0.00.080.386 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.387 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.388 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.389 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.389 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.390 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.390 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.391 I llm_load_print_meta: n_ff             = 8192
0.00.080.391 I llm_load_print_meta: n_expert         = 0
0.00.080.392 I llm_load_print_meta: n_expert_used    = 0
0.00.080.392 I llm_load_print_meta: causal attn      = 1
0.00.080.392 I llm_load_print_meta: pooling type     = 0
0.00.080.393 I llm_load_print_meta: rope type        = 2
0.00.080.393 I llm_load_print_meta: rope scaling     = linear
0.00.080.395 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.395 I llm_load_print_meta: freq_scale_train = 1
0.00.080.396 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.396 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.397 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.397 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.397 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.398 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.398 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.398 I llm_load_print_meta: model type       = 1.4B
0.00.080.399 I llm_load_print_meta: model ftype      = Q5_0
0.00.080.400 I llm_load_print_meta: model params     = 1.41 B
0.00.080.401 I llm_load_print_meta: model size       = 942.60 MiB (5.59 BPW) 
0.00.080.401 I llm_load_print_meta: general.name     = 1.4B
0.00.080.402 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.402 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.403 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.403 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.404 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.404 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.404 I llm_load_print_meta: max token length = 1024
0.00.134.254 I llm_load_tensors:   CPU_Mapped model buffer size =   942.60 MiB
..................................................................................
0.00.136.956 I llama_new_context_with_model: n_seq_max     = 1
0.00.136.961 I llama_new_context_with_model: n_ctx         = 2048
0.00.136.962 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.136.962 I llama_new_context_with_model: n_batch       = 2048
0.00.136.962 I llama_new_context_with_model: n_ubatch      = 512
0.00.136.963 I llama_new_context_with_model: flash_attn    = 0
0.00.136.965 I llama_new_context_with_model: freq_base     = 10000.0
0.00.136.965 I llama_new_context_with_model: freq_scale    = 1
0.00.216.630 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.216.647 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.216.676 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.218.889 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.218.895 I llama_new_context_with_model: graph nodes  = 967
0.00.218.896 I llama_new_context_with_model: graph splits = 1
0.00.218.899 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.309.305 I main: llama threadpool init, n_threads = 4
0.00.309.323 I 
0.00.309.407 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.309.410 I 
0.00.309.533 I sampler seed: 1234
0.00.309.544 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.309.548 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.309.549 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.309.549 I 
I believe the meaning of life is to learn and grow, and to share what you have learned with others."

"You are a very special young lady, and I have loved being your mother from the very beginning."

"Thank you, Father. And now it is time for me to go."

"I am sure you will

0.02.672.949 I llama_perf_sampler_print:    sampling time =       2.50 ms /    71 runs   (    0.04 ms per token, 28377.30 tokens per second)
0.02.672.952 I llama_perf_context_print:        load time =     308.51 ms
0.02.672.953 I llama_perf_context_print: prompt eval time =     146.24 ms /     7 tokens (   20.89 ms per token,    47.87 tokens per second)
0.02.672.955 I llama_perf_context_print:        eval time =    2207.48 ms /    63 runs   (   35.04 ms per token,    28.54 tokens per second)
0.02.672.956 I llama_perf_context_print:       total time =    2363.65 ms /    70 tokens

real	0m2.727s
user	0m9.819s
sys	0m0.192s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q5_0.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.606 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.523 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_0.gguf (version GGUF V3 (latest))
0.00.009.536 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.542 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.543 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.543 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.544 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.544 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.548 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.548 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.549 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.549 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.549 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.550 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.550 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.554 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.554 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.554 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.218 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.564 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.010 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.016 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.016 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.017 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.017 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.018 I llama_model_loader: - kv  22:                          general.file_type u32              = 8
0.00.022.020 I llama_model_loader: - type  f32:  194 tensors
0.00.022.021 I llama_model_loader: - type q5_0:   97 tensors
0.00.022.021 I llama_model_loader: - type q6_K:    1 tensors
0.00.069.089 I llm_load_vocab: special tokens cache size = 25
0.00.082.878 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.082.895 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.082.895 I llm_load_print_meta: arch             = gptneox
0.00.082.896 I llm_load_print_meta: vocab type       = BPE
0.00.082.897 I llm_load_print_meta: n_vocab          = 50304
0.00.082.898 I llm_load_print_meta: n_merges         = 50009
0.00.082.899 I llm_load_print_meta: vocab_only       = 0
0.00.082.899 I llm_load_print_meta: n_ctx_train      = 2048
0.00.082.899 I llm_load_print_meta: n_embd           = 2048
0.00.082.900 I llm_load_print_meta: n_layer          = 24
0.00.082.912 I llm_load_print_meta: n_head           = 16
0.00.082.913 I llm_load_print_meta: n_head_kv        = 16
0.00.082.913 I llm_load_print_meta: n_rot            = 32
0.00.082.914 I llm_load_print_meta: n_swa            = 0
0.00.082.914 I llm_load_print_meta: n_embd_head_k    = 128
0.00.082.915 I llm_load_print_meta: n_embd_head_v    = 128
0.00.082.916 I llm_load_print_meta: n_gqa            = 1
0.00.082.918 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.082.920 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.082.921 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.082.922 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.082.922 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.082.923 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.082.923 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.082.936 I llm_load_print_meta: n_ff             = 8192
0.00.082.937 I llm_load_print_meta: n_expert         = 0
0.00.082.937 I llm_load_print_meta: n_expert_used    = 0
0.00.082.938 I llm_load_print_meta: causal attn      = 1
0.00.082.938 I llm_load_print_meta: pooling type     = 0
0.00.082.939 I llm_load_print_meta: rope type        = 2
0.00.082.940 I llm_load_print_meta: rope scaling     = linear
0.00.082.941 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.082.942 I llm_load_print_meta: freq_scale_train = 1
0.00.082.942 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.082.943 I llm_load_print_meta: rope_finetuned   = unknown
0.00.082.943 I llm_load_print_meta: ssm_d_conv       = 0
0.00.082.944 I llm_load_print_meta: ssm_d_inner      = 0
0.00.082.944 I llm_load_print_meta: ssm_d_state      = 0
0.00.082.944 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.082.944 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.082.945 I llm_load_print_meta: model type       = 1.4B
0.00.082.946 I llm_load_print_meta: model ftype      = Q5_0
0.00.082.947 I llm_load_print_meta: model params     = 1.41 B
0.00.082.948 I llm_load_print_meta: model size       = 942.60 MiB (5.59 BPW) 
0.00.082.949 I llm_load_print_meta: general.name     = 1.4B
0.00.082.949 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.082.950 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.082.950 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.082.951 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.082.951 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.082.952 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.082.952 I llm_load_print_meta: max token length = 1024
0.00.137.058 I llm_load_tensors:   CPU_Mapped model buffer size =   942.60 MiB
..................................................................................
0.00.139.866 I llama_new_context_with_model: n_seq_max     = 1
0.00.139.871 I llama_new_context_with_model: n_ctx         = 128
0.00.139.871 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.139.872 I llama_new_context_with_model: n_batch       = 128
0.00.139.872 I llama_new_context_with_model: n_ubatch      = 128
0.00.139.872 I llama_new_context_with_model: flash_attn    = 0
0.00.139.875 I llama_new_context_with_model: freq_base     = 10000.0
0.00.139.876 I llama_new_context_with_model: freq_scale    = 1
0.00.139.876 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.145.043 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.145.053 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.145.072 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.147.601 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.147.607 I llama_new_context_with_model: graph nodes  = 967
0.00.147.607 I llama_new_context_with_model: graph splits = 1
0.00.147.609 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.204.900 I 
0.00.204.981 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.204.990 I perplexity: tokenizing the input ..
0.00.215.135 I perplexity: tokenization took 10.141 ms
0.00.215.155 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.591.366 I perplexity: 2.38 seconds per pass - ETA 0.03 minutes
[1]10.0568,
0.02.599.607 I Final estimate: PPL = 10.0568 +/- 3.19956

0.02.599.641 I llama_perf_context_print:        load time =     204.27 ms
0.02.599.643 I llama_perf_context_print: prompt eval time =    2374.63 ms /   128 tokens (   18.55 ms per token,    53.90 tokens per second)
0.02.599.644 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.599.645 I llama_perf_context_print:       total time =    2394.74 ms /   129 tokens

real	0m2.644s
user	0m9.863s
sys	0m0.112s
```
- q5_1:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q5_1.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.557 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.738 I main: llama backend init
0.00.000.744 I main: load the model and apply lora adapter, if any
0.00.009.499 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_1.gguf (version GGUF V3 (latest))
0.00.009.514 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.523 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.526 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.527 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.528 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.528 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.532 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.533 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.533 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.534 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.535 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.536 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.537 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.541 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.541 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.542 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.249 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.567 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.049 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.054 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.055 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.056 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.056 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.056 I llama_model_loader: - kv  22:                          general.file_type u32              = 9
0.00.022.058 I llama_model_loader: - type  f32:  194 tensors
0.00.022.059 I llama_model_loader: - type q5_1:   97 tensors
0.00.022.060 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.136 I llm_load_vocab: special tokens cache size = 25
0.00.080.971 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.985 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.985 I llm_load_print_meta: arch             = gptneox
0.00.080.986 I llm_load_print_meta: vocab type       = BPE
0.00.080.986 I llm_load_print_meta: n_vocab          = 50304
0.00.080.987 I llm_load_print_meta: n_merges         = 50009
0.00.080.987 I llm_load_print_meta: vocab_only       = 0
0.00.080.988 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.988 I llm_load_print_meta: n_embd           = 2048
0.00.080.988 I llm_load_print_meta: n_layer          = 24
0.00.080.998 I llm_load_print_meta: n_head           = 16
0.00.080.999 I llm_load_print_meta: n_head_kv        = 16
0.00.081.000 I llm_load_print_meta: n_rot            = 32
0.00.081.000 I llm_load_print_meta: n_swa            = 0
0.00.081.000 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.001 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.002 I llm_load_print_meta: n_gqa            = 1
0.00.081.003 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.004 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.005 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.006 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.006 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.006 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.007 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.007 I llm_load_print_meta: n_ff             = 8192
0.00.081.008 I llm_load_print_meta: n_expert         = 0
0.00.081.008 I llm_load_print_meta: n_expert_used    = 0
0.00.081.008 I llm_load_print_meta: causal attn      = 1
0.00.081.009 I llm_load_print_meta: pooling type     = 0
0.00.081.009 I llm_load_print_meta: rope type        = 2
0.00.081.010 I llm_load_print_meta: rope scaling     = linear
0.00.081.011 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.012 I llm_load_print_meta: freq_scale_train = 1
0.00.081.012 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.013 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.013 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.013 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.014 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.014 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.014 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.015 I llm_load_print_meta: model type       = 1.4B
0.00.081.015 I llm_load_print_meta: model ftype      = Q5_1
0.00.081.016 I llm_load_print_meta: model params     = 1.41 B
0.00.081.017 I llm_load_print_meta: model size       = 1020.74 MiB (6.05 BPW) 
0.00.081.017 I llm_load_print_meta: general.name     = 1.4B
0.00.081.018 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.018 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.019 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.019 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.020 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.020 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.020 I llm_load_print_meta: max token length = 1024
0.00.139.737 I llm_load_tensors:   CPU_Mapped model buffer size =  1020.74 MiB
...............................................................................
0.00.142.254 I llama_new_context_with_model: n_seq_max     = 1
0.00.142.259 I llama_new_context_with_model: n_ctx         = 2048
0.00.142.259 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.142.260 I llama_new_context_with_model: n_batch       = 2048
0.00.142.260 I llama_new_context_with_model: n_ubatch      = 512
0.00.142.261 I llama_new_context_with_model: flash_attn    = 0
0.00.142.263 I llama_new_context_with_model: freq_base     = 10000.0
0.00.142.264 I llama_new_context_with_model: freq_scale    = 1
0.00.223.034 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.223.049 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.223.078 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.225.304 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.225.310 I llama_new_context_with_model: graph nodes  = 967
0.00.225.310 I llama_new_context_with_model: graph splits = 1
0.00.225.313 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.315.712 I main: llama threadpool init, n_threads = 4
0.00.315.729 I 
0.00.315.803 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.315.806 I 
0.00.315.904 I sampler seed: 1234
0.00.315.915 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.315.918 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.315.919 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.315.921 I 
I believe the meaning of life is to give one’s life for the freedom of others. I believe the meaning of life is to give one’s life for the freedom of the animals. I believe the meaning of life is to give one’s life for the freedom of all living beings.

I believe the meaning of life is to give

0.02.780.988 I llama_perf_sampler_print:    sampling time =       2.71 ms /    71 runs   (    0.04 ms per token, 26189.60 tokens per second)
0.02.780.990 I llama_perf_context_print:        load time =     314.95 ms
0.02.780.991 I llama_perf_context_print: prompt eval time =     151.99 ms /     7 tokens (   21.71 ms per token,    46.05 tokens per second)
0.02.780.993 I llama_perf_context_print:        eval time =    2303.62 ms /    63 runs   (   36.57 ms per token,    27.35 tokens per second)
0.02.780.993 I llama_perf_context_print:       total time =    2465.28 ms /    70 tokens

real	0m2.837s
user	0m10.252s
sys	0m0.180s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q5_1.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.643 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.589 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_1.gguf (version GGUF V3 (latest))
0.00.009.602 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.611 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.612 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.613 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.614 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.614 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.618 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.618 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.619 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.619 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.620 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.620 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.621 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.625 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.625 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.626 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.449 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.808 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.095 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.101 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.101 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.102 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.102 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.102 I llama_model_loader: - kv  22:                          general.file_type u32              = 9
0.00.022.104 I llama_model_loader: - type  f32:  194 tensors
0.00.022.105 I llama_model_loader: - type q5_1:   97 tensors
0.00.022.105 I llama_model_loader: - type q6_K:    1 tensors
0.00.066.798 I llm_load_vocab: special tokens cache size = 25
0.00.080.556 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.568 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.568 I llm_load_print_meta: arch             = gptneox
0.00.080.569 I llm_load_print_meta: vocab type       = BPE
0.00.080.570 I llm_load_print_meta: n_vocab          = 50304
0.00.080.570 I llm_load_print_meta: n_merges         = 50009
0.00.080.571 I llm_load_print_meta: vocab_only       = 0
0.00.080.571 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.571 I llm_load_print_meta: n_embd           = 2048
0.00.080.572 I llm_load_print_meta: n_layer          = 24
0.00.080.583 I llm_load_print_meta: n_head           = 16
0.00.080.584 I llm_load_print_meta: n_head_kv        = 16
0.00.080.584 I llm_load_print_meta: n_rot            = 32
0.00.080.584 I llm_load_print_meta: n_swa            = 0
0.00.080.584 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.585 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.586 I llm_load_print_meta: n_gqa            = 1
0.00.080.587 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.588 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.589 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.589 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.590 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.590 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.590 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.591 I llm_load_print_meta: n_ff             = 8192
0.00.080.591 I llm_load_print_meta: n_expert         = 0
0.00.080.592 I llm_load_print_meta: n_expert_used    = 0
0.00.080.592 I llm_load_print_meta: causal attn      = 1
0.00.080.592 I llm_load_print_meta: pooling type     = 0
0.00.080.593 I llm_load_print_meta: rope type        = 2
0.00.080.593 I llm_load_print_meta: rope scaling     = linear
0.00.080.594 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.595 I llm_load_print_meta: freq_scale_train = 1
0.00.080.595 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.595 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.596 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.596 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.596 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.596 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.597 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.597 I llm_load_print_meta: model type       = 1.4B
0.00.080.598 I llm_load_print_meta: model ftype      = Q5_1
0.00.080.599 I llm_load_print_meta: model params     = 1.41 B
0.00.080.600 I llm_load_print_meta: model size       = 1020.74 MiB (6.05 BPW) 
0.00.080.600 I llm_load_print_meta: general.name     = 1.4B
0.00.080.600 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.601 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.601 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.602 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.602 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.602 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.603 I llm_load_print_meta: max token length = 1024
0.00.139.979 I llm_load_tensors:   CPU_Mapped model buffer size =  1020.74 MiB
...............................................................................
0.00.142.842 I llama_new_context_with_model: n_seq_max     = 1
0.00.142.848 I llama_new_context_with_model: n_ctx         = 128
0.00.142.848 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.142.848 I llama_new_context_with_model: n_batch       = 128
0.00.142.849 I llama_new_context_with_model: n_ubatch      = 128
0.00.142.849 I llama_new_context_with_model: flash_attn    = 0
0.00.142.852 I llama_new_context_with_model: freq_base     = 10000.0
0.00.142.852 I llama_new_context_with_model: freq_scale    = 1
0.00.142.853 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.147.953 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.147.965 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.147.983 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.150.238 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.150.245 I llama_new_context_with_model: graph nodes  = 967
0.00.150.245 I llama_new_context_with_model: graph splits = 1
0.00.150.247 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.209.345 I 
0.00.209.427 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.209.436 I perplexity: tokenizing the input ..
0.00.219.695 I perplexity: tokenization took 10.255 ms
0.00.219.716 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.740.986 I perplexity: 2.52 seconds per pass - ETA 0.03 minutes
[1]10.0893,
0.02.749.197 I Final estimate: PPL = 10.0893 +/- 3.15432

0.02.749.229 I llama_perf_context_print:        load time =     208.67 ms
0.02.749.231 I llama_perf_context_print: prompt eval time =    2519.68 ms /   128 tokens (   19.68 ms per token,    50.80 tokens per second)
0.02.749.232 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.749.233 I llama_perf_context_print:       total time =    2539.89 ms /   129 tokens

real	0m2.796s
user	0m10.448s
sys	0m0.128s
```
- q2_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q2_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.579 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.766 I main: llama backend init
0.00.000.773 I main: load the model and apply lora adapter, if any
0.00.009.755 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q2_k.gguf (version GGUF V3 (latest))
0.00.009.769 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.777 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.782 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.782 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.783 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.784 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.788 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.789 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.790 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.790 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.791 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.792 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.793 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.797 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.799 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.799 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.496 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.017.012 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.310 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.316 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.316 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.316 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.317 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.318 I llama_model_loader: - kv  22:                          general.file_type u32              = 10
0.00.022.320 I llama_model_loader: - type  f32:  194 tensors
0.00.022.321 I llama_model_loader: - type q2_K:   49 tensors
0.00.022.322 I llama_model_loader: - type q3_K:   48 tensors
0.00.022.322 I llama_model_loader: - type q6_K:    1 tensors
0.00.066.362 I llm_load_vocab: special tokens cache size = 25
0.00.080.186 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.197 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.198 I llm_load_print_meta: arch             = gptneox
0.00.080.199 I llm_load_print_meta: vocab type       = BPE
0.00.080.199 I llm_load_print_meta: n_vocab          = 50304
0.00.080.200 I llm_load_print_meta: n_merges         = 50009
0.00.080.200 I llm_load_print_meta: vocab_only       = 0
0.00.080.200 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.201 I llm_load_print_meta: n_embd           = 2048
0.00.080.201 I llm_load_print_meta: n_layer          = 24
0.00.080.209 I llm_load_print_meta: n_head           = 16
0.00.080.210 I llm_load_print_meta: n_head_kv        = 16
0.00.080.210 I llm_load_print_meta: n_rot            = 32
0.00.080.211 I llm_load_print_meta: n_swa            = 0
0.00.080.212 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.212 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.213 I llm_load_print_meta: n_gqa            = 1
0.00.080.214 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.215 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.216 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.217 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.217 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.218 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.218 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.219 I llm_load_print_meta: n_ff             = 8192
0.00.080.219 I llm_load_print_meta: n_expert         = 0
0.00.080.219 I llm_load_print_meta: n_expert_used    = 0
0.00.080.220 I llm_load_print_meta: causal attn      = 1
0.00.080.220 I llm_load_print_meta: pooling type     = 0
0.00.080.220 I llm_load_print_meta: rope type        = 2
0.00.080.221 I llm_load_print_meta: rope scaling     = linear
0.00.080.222 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.222 I llm_load_print_meta: freq_scale_train = 1
0.00.080.223 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.223 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.223 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.224 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.224 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.224 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.225 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.226 I llm_load_print_meta: model type       = 1.4B
0.00.080.226 I llm_load_print_meta: model ftype      = Q2_K - Medium
0.00.080.227 I llm_load_print_meta: model params     = 1.41 B
0.00.080.228 I llm_load_print_meta: model size       = 542.04 MiB (3.21 BPW) 
0.00.080.228 I llm_load_print_meta: general.name     = 1.4B
0.00.080.229 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.229 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.229 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.230 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.230 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.231 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.231 I llm_load_print_meta: max token length = 1024
0.00.112.160 I llm_load_tensors:   CPU_Mapped model buffer size =   542.04 MiB
..........................................................................
0.00.114.880 I llama_new_context_with_model: n_seq_max     = 1
0.00.114.886 I llama_new_context_with_model: n_ctx         = 2048
0.00.114.886 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.114.886 I llama_new_context_with_model: n_batch       = 2048
0.00.114.887 I llama_new_context_with_model: n_ubatch      = 512
0.00.114.887 I llama_new_context_with_model: flash_attn    = 0
0.00.114.889 I llama_new_context_with_model: freq_base     = 10000.0
0.00.114.890 I llama_new_context_with_model: freq_scale    = 1
0.00.190.449 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.190.467 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.190.496 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.192.687 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.192.693 I llama_new_context_with_model: graph nodes  = 967
0.00.192.694 I llama_new_context_with_model: graph splits = 1
0.00.192.696 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.261.701 I main: llama threadpool init, n_threads = 4
0.00.261.718 I 
0.00.261.793 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.261.794 I 
0.00.261.901 I sampler seed: 1234
0.00.261.913 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.261.917 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.261.917 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.261.918 I 
I believe the meaning of life is a shared property, as in the past, and the past, which is a mystery, and the mystery of not.

1:  
[>_         
        
          
                
                        
              
                
                     
                    
                             
.  '                
         

0.01.897.860 I llama_perf_sampler_print:    sampling time =       2.34 ms /    71 runs   (    0.03 ms per token, 30341.88 tokens per second)
0.01.897.862 I llama_perf_context_print:        load time =     260.91 ms
0.01.897.864 I llama_perf_context_print: prompt eval time =      97.31 ms /     7 tokens (   13.90 ms per token,    71.94 tokens per second)
0.01.897.865 I llama_perf_context_print:        eval time =    1529.27 ms /    63 runs   (   24.27 ms per token,    41.20 tokens per second)
0.01.897.866 I llama_perf_context_print:       total time =    1636.17 ms /    70 tokens

real	0m1.936s
user	0m6.857s
sys	0m0.124s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q2_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.593 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.642 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q2_k.gguf (version GGUF V3 (latest))
0.00.009.657 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.662 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.663 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.664 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.664 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.665 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.668 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.668 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.669 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.669 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.670 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.670 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.671 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.674 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.676 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.676 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.377 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.741 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.074 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.079 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.080 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.080 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.081 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.082 I llama_model_loader: - kv  22:                          general.file_type u32              = 10
0.00.022.084 I llama_model_loader: - type  f32:  194 tensors
0.00.022.085 I llama_model_loader: - type q2_K:   49 tensors
0.00.022.085 I llama_model_loader: - type q3_K:   48 tensors
0.00.022.086 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.969 I llm_load_vocab: special tokens cache size = 25
0.00.081.748 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.761 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.761 I llm_load_print_meta: arch             = gptneox
0.00.081.762 I llm_load_print_meta: vocab type       = BPE
0.00.081.763 I llm_load_print_meta: n_vocab          = 50304
0.00.081.763 I llm_load_print_meta: n_merges         = 50009
0.00.081.763 I llm_load_print_meta: vocab_only       = 0
0.00.081.764 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.764 I llm_load_print_meta: n_embd           = 2048
0.00.081.764 I llm_load_print_meta: n_layer          = 24
0.00.081.775 I llm_load_print_meta: n_head           = 16
0.00.081.776 I llm_load_print_meta: n_head_kv        = 16
0.00.081.776 I llm_load_print_meta: n_rot            = 32
0.00.081.777 I llm_load_print_meta: n_swa            = 0
0.00.081.777 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.777 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.778 I llm_load_print_meta: n_gqa            = 1
0.00.081.779 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.781 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.782 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.782 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.783 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.783 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.783 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.784 I llm_load_print_meta: n_ff             = 8192
0.00.081.784 I llm_load_print_meta: n_expert         = 0
0.00.081.785 I llm_load_print_meta: n_expert_used    = 0
0.00.081.785 I llm_load_print_meta: causal attn      = 1
0.00.081.785 I llm_load_print_meta: pooling type     = 0
0.00.081.786 I llm_load_print_meta: rope type        = 2
0.00.081.786 I llm_load_print_meta: rope scaling     = linear
0.00.081.788 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.788 I llm_load_print_meta: freq_scale_train = 1
0.00.081.789 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.789 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.789 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.789 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.790 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.790 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.790 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.791 I llm_load_print_meta: model type       = 1.4B
0.00.081.791 I llm_load_print_meta: model ftype      = Q2_K - Medium
0.00.081.792 I llm_load_print_meta: model params     = 1.41 B
0.00.081.793 I llm_load_print_meta: model size       = 542.04 MiB (3.21 BPW) 
0.00.081.793 I llm_load_print_meta: general.name     = 1.4B
0.00.081.794 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.794 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.794 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.795 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.795 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.795 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.796 I llm_load_print_meta: max token length = 1024
0.00.114.200 I llm_load_tensors:   CPU_Mapped model buffer size =   542.04 MiB
..........................................................................
0.00.116.724 I llama_new_context_with_model: n_seq_max     = 1
0.00.116.730 I llama_new_context_with_model: n_ctx         = 128
0.00.116.730 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.116.731 I llama_new_context_with_model: n_batch       = 128
0.00.116.731 I llama_new_context_with_model: n_ubatch      = 128
0.00.116.732 I llama_new_context_with_model: flash_attn    = 0
0.00.116.734 I llama_new_context_with_model: freq_base     = 10000.0
0.00.116.735 I llama_new_context_with_model: freq_scale    = 1
0.00.116.735 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.121.906 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.121.916 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.121.936 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.124.117 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.124.124 I llama_new_context_with_model: graph nodes  = 967
0.00.124.124 I llama_new_context_with_model: graph splits = 1
0.00.124.126 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.164.213 I 
0.00.164.296 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.164.304 I perplexity: tokenizing the input ..
0.00.174.459 I perplexity: tokenization took 10.15 ms
0.00.174.479 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.01.719.446 I perplexity: 1.54 seconds per pass - ETA 0.02 minutes
[1]71.4792,
0.01.727.699 I Final estimate: PPL = 71.4792 +/- 27.83019

0.01.727.733 I llama_perf_context_print:        load time =     163.59 ms
0.01.727.734 I llama_perf_context_print: prompt eval time =    1543.45 ms /   128 tokens (   12.06 ms per token,    82.93 tokens per second)
0.01.727.736 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.01.727.737 I llama_perf_context_print:       total time =    1563.52 ms /   129 tokens

real	0m1.759s
user	0m6.459s
sys	0m0.076s
```
- q3_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q3_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.563 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.777 I main: llama backend init
0.00.000.783 I main: load the model and apply lora adapter, if any
0.00.009.653 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q3_k.gguf (version GGUF V3 (latest))
0.00.009.667 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.673 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.675 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.675 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.676 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.677 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.680 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.681 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.682 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.683 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.684 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.685 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.686 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.691 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.692 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.693 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.388 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.897 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.230 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.235 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.235 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.236 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.236 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.237 I llama_model_loader: - kv  22:                          general.file_type u32              = 12
0.00.022.239 I llama_model_loader: - type  f32:  194 tensors
0.00.022.240 I llama_model_loader: - type q3_K:   25 tensors
0.00.022.240 I llama_model_loader: - type q4_K:   71 tensors
0.00.022.241 I llama_model_loader: - type q5_K:    1 tensors
0.00.022.243 I llama_model_loader: - type q6_K:    1 tensors
0.00.066.722 I llm_load_vocab: special tokens cache size = 25
0.00.080.569 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.582 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.582 I llm_load_print_meta: arch             = gptneox
0.00.080.583 I llm_load_print_meta: vocab type       = BPE
0.00.080.583 I llm_load_print_meta: n_vocab          = 50304
0.00.080.584 I llm_load_print_meta: n_merges         = 50009
0.00.080.584 I llm_load_print_meta: vocab_only       = 0
0.00.080.585 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.585 I llm_load_print_meta: n_embd           = 2048
0.00.080.585 I llm_load_print_meta: n_layer          = 24
0.00.080.594 I llm_load_print_meta: n_head           = 16
0.00.080.595 I llm_load_print_meta: n_head_kv        = 16
0.00.080.595 I llm_load_print_meta: n_rot            = 32
0.00.080.595 I llm_load_print_meta: n_swa            = 0
0.00.080.596 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.596 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.597 I llm_load_print_meta: n_gqa            = 1
0.00.080.598 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.599 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.601 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.601 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.601 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.602 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.602 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.603 I llm_load_print_meta: n_ff             = 8192
0.00.080.603 I llm_load_print_meta: n_expert         = 0
0.00.080.604 I llm_load_print_meta: n_expert_used    = 0
0.00.080.604 I llm_load_print_meta: causal attn      = 1
0.00.080.604 I llm_load_print_meta: pooling type     = 0
0.00.080.604 I llm_load_print_meta: rope type        = 2
0.00.080.605 I llm_load_print_meta: rope scaling     = linear
0.00.080.606 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.607 I llm_load_print_meta: freq_scale_train = 1
0.00.080.607 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.607 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.608 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.608 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.608 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.608 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.609 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.610 I llm_load_print_meta: model type       = 1.4B
0.00.080.610 I llm_load_print_meta: model ftype      = Q3_K - Medium
0.00.080.611 I llm_load_print_meta: model params     = 1.41 B
0.00.080.612 I llm_load_print_meta: model size       = 724.27 MiB (4.29 BPW) 
0.00.080.612 I llm_load_print_meta: general.name     = 1.4B
0.00.080.613 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.613 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.613 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.613 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.614 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.614 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.615 I llm_load_print_meta: max token length = 1024
0.00.122.451 I llm_load_tensors:   CPU_Mapped model buffer size =   724.27 MiB
...............................................................................
0.00.125.502 I llama_new_context_with_model: n_seq_max     = 1
0.00.125.508 I llama_new_context_with_model: n_ctx         = 2048
0.00.125.509 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.125.509 I llama_new_context_with_model: n_batch       = 2048
0.00.125.509 I llama_new_context_with_model: n_ubatch      = 512
0.00.125.510 I llama_new_context_with_model: flash_attn    = 0
0.00.125.512 I llama_new_context_with_model: freq_base     = 10000.0
0.00.125.513 I llama_new_context_with_model: freq_scale    = 1
0.00.202.326 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.202.343 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.202.373 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.204.659 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.204.665 I llama_new_context_with_model: graph nodes  = 967
0.00.204.665 I llama_new_context_with_model: graph splits = 1
0.00.204.669 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.279.766 I main: llama threadpool init, n_threads = 4
0.00.279.782 I 
0.00.279.863 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.279.867 I 
0.00.279.982 I sampler seed: 1234
0.00.279.992 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.279.996 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.279.997 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.279.997 I 
I believe the meaning of life is to love your fellow human beings. That is the only meaning I am interested in. I am not interested in money or property. I am not interested in worldly success. My only aim is to be a human being. In my book _Love and the Law,_ I have stated that the only way to live is

0.02.133.565 I llama_perf_sampler_print:    sampling time =       2.51 ms /    71 runs   (    0.04 ms per token, 28253.08 tokens per second)
0.02.133.568 I llama_perf_context_print:        load time =     278.95 ms
0.02.133.569 I llama_perf_context_print: prompt eval time =     102.92 ms /     7 tokens (   14.70 ms per token,    68.01 tokens per second)
0.02.133.571 I llama_perf_context_print:        eval time =    1740.97 ms /    63 runs   (   27.63 ms per token,    36.19 tokens per second)
0.02.133.572 I llama_perf_context_print:       total time =    1853.82 ms /    70 tokens

real	0m2.178s
user	0m7.741s
sys	0m0.152s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q3_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.593 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.573 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q3_k.gguf (version GGUF V3 (latest))
0.00.009.589 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.599 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.603 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.603 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.604 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.604 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.607 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.608 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.608 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.609 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.612 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.612 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.613 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.617 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.618 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.618 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.330 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.694 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.021.978 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.021.982 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.021.983 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.021.983 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.021.984 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.021.984 I llama_model_loader: - kv  22:                          general.file_type u32              = 12
0.00.021.986 I llama_model_loader: - type  f32:  194 tensors
0.00.021.987 I llama_model_loader: - type q3_K:   25 tensors
0.00.021.987 I llama_model_loader: - type q4_K:   71 tensors
0.00.021.987 I llama_model_loader: - type q5_K:    1 tensors
0.00.021.988 I llama_model_loader: - type q6_K:    1 tensors
0.00.067.364 I llm_load_vocab: special tokens cache size = 25
0.00.081.217 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.229 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.229 I llm_load_print_meta: arch             = gptneox
0.00.081.230 I llm_load_print_meta: vocab type       = BPE
0.00.081.230 I llm_load_print_meta: n_vocab          = 50304
0.00.081.230 I llm_load_print_meta: n_merges         = 50009
0.00.081.231 I llm_load_print_meta: vocab_only       = 0
0.00.081.231 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.232 I llm_load_print_meta: n_embd           = 2048
0.00.081.232 I llm_load_print_meta: n_layer          = 24
0.00.081.240 I llm_load_print_meta: n_head           = 16
0.00.081.241 I llm_load_print_meta: n_head_kv        = 16
0.00.081.242 I llm_load_print_meta: n_rot            = 32
0.00.081.242 I llm_load_print_meta: n_swa            = 0
0.00.081.243 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.243 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.244 I llm_load_print_meta: n_gqa            = 1
0.00.081.245 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.246 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.247 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.247 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.248 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.248 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.249 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.249 I llm_load_print_meta: n_ff             = 8192
0.00.081.250 I llm_load_print_meta: n_expert         = 0
0.00.081.250 I llm_load_print_meta: n_expert_used    = 0
0.00.081.251 I llm_load_print_meta: causal attn      = 1
0.00.081.251 I llm_load_print_meta: pooling type     = 0
0.00.081.251 I llm_load_print_meta: rope type        = 2
0.00.081.252 I llm_load_print_meta: rope scaling     = linear
0.00.081.253 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.253 I llm_load_print_meta: freq_scale_train = 1
0.00.081.254 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.254 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.254 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.255 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.255 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.255 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.255 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.256 I llm_load_print_meta: model type       = 1.4B
0.00.081.257 I llm_load_print_meta: model ftype      = Q3_K - Medium
0.00.081.258 I llm_load_print_meta: model params     = 1.41 B
0.00.081.259 I llm_load_print_meta: model size       = 724.27 MiB (4.29 BPW) 
0.00.081.259 I llm_load_print_meta: general.name     = 1.4B
0.00.081.259 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.260 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.260 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.260 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.261 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.261 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.262 I llm_load_print_meta: max token length = 1024
0.00.123.040 I llm_load_tensors:   CPU_Mapped model buffer size =   724.27 MiB
...............................................................................
0.00.125.522 I llama_new_context_with_model: n_seq_max     = 1
0.00.125.528 I llama_new_context_with_model: n_ctx         = 128
0.00.125.528 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.125.528 I llama_new_context_with_model: n_batch       = 128
0.00.125.528 I llama_new_context_with_model: n_ubatch      = 128
0.00.125.529 I llama_new_context_with_model: flash_attn    = 0
0.00.125.531 I llama_new_context_with_model: freq_base     = 10000.0
0.00.125.531 I llama_new_context_with_model: freq_scale    = 1
0.00.125.532 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.130.779 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.130.789 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.130.807 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.133.288 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.133.294 I llama_new_context_with_model: graph nodes  = 967
0.00.133.295 I llama_new_context_with_model: graph splits = 1
0.00.133.297 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.178.077 I 
0.00.178.144 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.178.152 I perplexity: tokenizing the input ..
0.00.188.219 I perplexity: tokenization took 10.062 ms
0.00.188.236 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.01.821.801 I perplexity: 1.63 seconds per pass - ETA 0.02 minutes
[1]12.7265,
0.01.830.040 I Final estimate: PPL = 12.7265 +/- 4.19142

0.01.830.071 I llama_perf_context_print:        load time =     177.46 ms
0.01.830.073 I llama_perf_context_print: prompt eval time =    1632.17 ms /   128 tokens (   12.75 ms per token,    78.42 tokens per second)
0.01.830.074 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.01.830.075 I llama_perf_context_print:       total time =    1651.99 ms /   129 tokens

real	0m1.869s
user	0m6.842s
sys	0m0.096s
```
- q4_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q4_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.567 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.749 I main: llama backend init
0.00.000.756 I main: load the model and apply lora adapter, if any
0.00.009.877 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_k.gguf (version GGUF V3 (latest))
0.00.009.891 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.898 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.899 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.899 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.900 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.900 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.906 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.906 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.907 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.908 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.909 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.909 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.910 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.914 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.915 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.915 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.612 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.957 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.365 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.372 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.373 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.373 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.374 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.375 I llama_model_loader: - kv  22:                          general.file_type u32              = 15
0.00.022.377 I llama_model_loader: - type  f32:  194 tensors
0.00.022.377 I llama_model_loader: - type q4_K:   61 tensors
0.00.022.378 I llama_model_loader: - type q5_K:   24 tensors
0.00.022.378 I llama_model_loader: - type q6_K:   13 tensors
0.00.068.644 I llm_load_vocab: special tokens cache size = 25
0.00.082.483 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.082.496 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.082.497 I llm_load_print_meta: arch             = gptneox
0.00.082.498 I llm_load_print_meta: vocab type       = BPE
0.00.082.498 I llm_load_print_meta: n_vocab          = 50304
0.00.082.498 I llm_load_print_meta: n_merges         = 50009
0.00.082.499 I llm_load_print_meta: vocab_only       = 0
0.00.082.500 I llm_load_print_meta: n_ctx_train      = 2048
0.00.082.500 I llm_load_print_meta: n_embd           = 2048
0.00.082.500 I llm_load_print_meta: n_layer          = 24
0.00.082.510 I llm_load_print_meta: n_head           = 16
0.00.082.511 I llm_load_print_meta: n_head_kv        = 16
0.00.082.511 I llm_load_print_meta: n_rot            = 32
0.00.082.512 I llm_load_print_meta: n_swa            = 0
0.00.082.512 I llm_load_print_meta: n_embd_head_k    = 128
0.00.082.513 I llm_load_print_meta: n_embd_head_v    = 128
0.00.082.514 I llm_load_print_meta: n_gqa            = 1
0.00.082.516 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.082.516 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.082.518 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.082.518 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.082.519 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.082.519 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.082.519 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.082.520 I llm_load_print_meta: n_ff             = 8192
0.00.082.521 I llm_load_print_meta: n_expert         = 0
0.00.082.521 I llm_load_print_meta: n_expert_used    = 0
0.00.082.522 I llm_load_print_meta: causal attn      = 1
0.00.082.522 I llm_load_print_meta: pooling type     = 0
0.00.082.522 I llm_load_print_meta: rope type        = 2
0.00.082.523 I llm_load_print_meta: rope scaling     = linear
0.00.082.524 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.082.527 I llm_load_print_meta: freq_scale_train = 1
0.00.082.528 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.082.528 I llm_load_print_meta: rope_finetuned   = unknown
0.00.082.528 I llm_load_print_meta: ssm_d_conv       = 0
0.00.082.529 I llm_load_print_meta: ssm_d_inner      = 0
0.00.082.529 I llm_load_print_meta: ssm_d_state      = 0
0.00.082.529 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.082.529 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.082.530 I llm_load_print_meta: model type       = 1.4B
0.00.082.531 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.082.532 I llm_load_print_meta: model params     = 1.41 B
0.00.082.533 I llm_load_print_meta: model size       = 871.81 MiB (5.17 BPW) 
0.00.082.534 I llm_load_print_meta: general.name     = 1.4B
0.00.082.534 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.082.535 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.082.536 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.082.536 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.082.537 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.082.537 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.082.538 I llm_load_print_meta: max token length = 1024
0.00.133.321 I llm_load_tensors:   CPU_Mapped model buffer size =   871.81 MiB
..............................................................................
0.00.135.814 I llama_new_context_with_model: n_seq_max     = 1
0.00.135.819 I llama_new_context_with_model: n_ctx         = 2048
0.00.135.820 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.135.820 I llama_new_context_with_model: n_batch       = 2048
0.00.135.821 I llama_new_context_with_model: n_ubatch      = 512
0.00.135.821 I llama_new_context_with_model: flash_attn    = 0
0.00.135.823 I llama_new_context_with_model: freq_base     = 10000.0
0.00.135.824 I llama_new_context_with_model: freq_scale    = 1
0.00.210.687 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.210.702 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.210.733 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.213.362 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.213.368 I llama_new_context_with_model: graph nodes  = 967
0.00.213.368 I llama_new_context_with_model: graph splits = 1
0.00.213.371 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.290.717 I main: llama threadpool init, n_threads = 4
0.00.290.733 I 
0.00.290.804 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.290.807 I 
0.00.290.918 I sampler seed: 1234
0.00.290.928 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.290.931 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.290.931 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.290.931 I 
I believe the meaning of life is that which you make of it. And I believe that if you want to be happy, you have to live with those things that you can't change. I want to live with the things I can't change because they are who they are. I don't want to change them because I don't want to be unhappy

0.02.318.210 I llama_perf_sampler_print:    sampling time =       2.48 ms /    71 runs   (    0.03 ms per token, 28571.43 tokens per second)
0.02.318.213 I llama_perf_context_print:        load time =     289.94 ms
0.02.318.215 I llama_perf_context_print: prompt eval time =     105.85 ms /     7 tokens (   15.12 ms per token,    66.13 tokens per second)
0.02.318.217 I llama_perf_context_print:        eval time =    1911.85 ms /    63 runs   (   30.35 ms per token,    32.95 tokens per second)
0.02.318.219 I llama_perf_context_print:       total time =    2027.50 ms /    70 tokens

real	0m2.368s
user	0m8.416s
sys	0m0.196s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q4_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.583 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.502 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_k.gguf (version GGUF V3 (latest))
0.00.009.519 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.525 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.526 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.527 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.528 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.528 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.531 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.532 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.533 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.533 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.534 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.535 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.536 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.539 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.541 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.541 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.323 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.671 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.023 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.030 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.030 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.031 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.031 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.032 I llama_model_loader: - kv  22:                          general.file_type u32              = 15
0.00.022.035 I llama_model_loader: - type  f32:  194 tensors
0.00.022.036 I llama_model_loader: - type q4_K:   61 tensors
0.00.022.036 I llama_model_loader: - type q5_K:   24 tensors
0.00.022.037 I llama_model_loader: - type q6_K:   13 tensors
0.00.069.858 I llm_load_vocab: special tokens cache size = 25
0.00.083.749 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.083.766 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.083.767 I llm_load_print_meta: arch             = gptneox
0.00.083.767 I llm_load_print_meta: vocab type       = BPE
0.00.083.767 I llm_load_print_meta: n_vocab          = 50304
0.00.083.768 I llm_load_print_meta: n_merges         = 50009
0.00.083.768 I llm_load_print_meta: vocab_only       = 0
0.00.083.769 I llm_load_print_meta: n_ctx_train      = 2048
0.00.083.769 I llm_load_print_meta: n_embd           = 2048
0.00.083.769 I llm_load_print_meta: n_layer          = 24
0.00.083.781 I llm_load_print_meta: n_head           = 16
0.00.083.782 I llm_load_print_meta: n_head_kv        = 16
0.00.083.782 I llm_load_print_meta: n_rot            = 32
0.00.083.782 I llm_load_print_meta: n_swa            = 0
0.00.083.783 I llm_load_print_meta: n_embd_head_k    = 128
0.00.083.783 I llm_load_print_meta: n_embd_head_v    = 128
0.00.083.784 I llm_load_print_meta: n_gqa            = 1
0.00.083.785 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.083.786 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.083.787 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.083.787 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.083.788 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.083.788 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.083.788 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.083.789 I llm_load_print_meta: n_ff             = 8192
0.00.083.790 I llm_load_print_meta: n_expert         = 0
0.00.083.790 I llm_load_print_meta: n_expert_used    = 0
0.00.083.791 I llm_load_print_meta: causal attn      = 1
0.00.083.791 I llm_load_print_meta: pooling type     = 0
0.00.083.791 I llm_load_print_meta: rope type        = 2
0.00.083.792 I llm_load_print_meta: rope scaling     = linear
0.00.083.793 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.083.793 I llm_load_print_meta: freq_scale_train = 1
0.00.083.794 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.083.794 I llm_load_print_meta: rope_finetuned   = unknown
0.00.083.794 I llm_load_print_meta: ssm_d_conv       = 0
0.00.083.794 I llm_load_print_meta: ssm_d_inner      = 0
0.00.083.795 I llm_load_print_meta: ssm_d_state      = 0
0.00.083.795 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.083.795 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.083.795 I llm_load_print_meta: model type       = 1.4B
0.00.083.796 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.083.797 I llm_load_print_meta: model params     = 1.41 B
0.00.083.798 I llm_load_print_meta: model size       = 871.81 MiB (5.17 BPW) 
0.00.083.798 I llm_load_print_meta: general.name     = 1.4B
0.00.083.798 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.083.799 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.083.799 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.083.800 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.083.800 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.083.800 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.083.801 I llm_load_print_meta: max token length = 1024
0.00.133.509 I llm_load_tensors:   CPU_Mapped model buffer size =   871.81 MiB
..............................................................................
0.00.136.024 I llama_new_context_with_model: n_seq_max     = 1
0.00.136.029 I llama_new_context_with_model: n_ctx         = 128
0.00.136.030 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.136.030 I llama_new_context_with_model: n_batch       = 128
0.00.136.030 I llama_new_context_with_model: n_ubatch      = 128
0.00.136.031 I llama_new_context_with_model: flash_attn    = 0
0.00.136.033 I llama_new_context_with_model: freq_base     = 10000.0
0.00.136.033 I llama_new_context_with_model: freq_scale    = 1
0.00.136.034 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.141.129 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.141.140 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.141.158 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.143.815 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.143.820 I llama_new_context_with_model: graph nodes  = 967
0.00.143.821 I llama_new_context_with_model: graph splits = 1
0.00.143.823 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.191.454 I 
0.00.191.539 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.191.547 I perplexity: tokenizing the input ..
0.00.201.878 I perplexity: tokenization took 10.327 ms
0.00.201.897 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.01.895.719 I perplexity: 1.69 seconds per pass - ETA 0.02 minutes
[1]10.5531,
0.01.903.935 I Final estimate: PPL = 10.5531 +/- 3.37082

0.01.903.966 I llama_perf_context_print:        load time =     190.84 ms
0.01.903.967 I llama_perf_context_print: prompt eval time =    1692.38 ms /   128 tokens (   13.22 ms per token,    75.63 tokens per second)
0.01.903.969 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.01.903.970 I llama_perf_context_print:       total time =    1712.51 ms /   129 tokens

real	0m1.947s
user	0m7.114s
sys	0m0.096s
```
- q5_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q5_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.585 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.915 I main: llama backend init
0.00.000.922 I main: load the model and apply lora adapter, if any
0.00.009.738 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_k.gguf (version GGUF V3 (latest))
0.00.009.753 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.759 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.760 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.761 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.761 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.762 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.765 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.766 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.766 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.766 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.768 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.769 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.770 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.773 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.773 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.774 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.467 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.807 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.142 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.147 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.148 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.148 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.149 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.150 I llama_model_loader: - kv  22:                          general.file_type u32              = 17
0.00.022.152 I llama_model_loader: - type  f32:  194 tensors
0.00.022.153 I llama_model_loader: - type q5_K:   61 tensors
0.00.022.154 I llama_model_loader: - type q6_K:   37 tensors
0.00.067.300 I llm_load_vocab: special tokens cache size = 25
0.00.081.274 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.287 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.288 I llm_load_print_meta: arch             = gptneox
0.00.081.289 I llm_load_print_meta: vocab type       = BPE
0.00.081.290 I llm_load_print_meta: n_vocab          = 50304
0.00.081.290 I llm_load_print_meta: n_merges         = 50009
0.00.081.290 I llm_load_print_meta: vocab_only       = 0
0.00.081.291 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.291 I llm_load_print_meta: n_embd           = 2048
0.00.081.291 I llm_load_print_meta: n_layer          = 24
0.00.081.302 I llm_load_print_meta: n_head           = 16
0.00.081.303 I llm_load_print_meta: n_head_kv        = 16
0.00.081.303 I llm_load_print_meta: n_rot            = 32
0.00.081.304 I llm_load_print_meta: n_swa            = 0
0.00.081.304 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.304 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.305 I llm_load_print_meta: n_gqa            = 1
0.00.081.306 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.307 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.309 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.310 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.310 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.310 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.311 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.312 I llm_load_print_meta: n_ff             = 8192
0.00.081.312 I llm_load_print_meta: n_expert         = 0
0.00.081.312 I llm_load_print_meta: n_expert_used    = 0
0.00.081.312 I llm_load_print_meta: causal attn      = 1
0.00.081.313 I llm_load_print_meta: pooling type     = 0
0.00.081.313 I llm_load_print_meta: rope type        = 2
0.00.081.313 I llm_load_print_meta: rope scaling     = linear
0.00.081.315 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.315 I llm_load_print_meta: freq_scale_train = 1
0.00.081.316 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.316 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.316 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.317 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.317 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.317 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.318 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.318 I llm_load_print_meta: model type       = 1.4B
0.00.081.318 I llm_load_print_meta: model ftype      = Q5_K - Medium
0.00.081.319 I llm_load_print_meta: model params     = 1.41 B
0.00.081.320 I llm_load_print_meta: model size       = 1006.35 MiB (5.97 BPW) 
0.00.081.320 I llm_load_print_meta: general.name     = 1.4B
0.00.081.321 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.321 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.322 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.322 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.323 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.323 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.323 I llm_load_print_meta: max token length = 1024
0.00.139.251 I llm_load_tensors:   CPU_Mapped model buffer size =  1006.35 MiB
................................................................................
0.00.142.127 I llama_new_context_with_model: n_seq_max     = 1
0.00.142.132 I llama_new_context_with_model: n_ctx         = 2048
0.00.142.133 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.142.133 I llama_new_context_with_model: n_batch       = 2048
0.00.142.133 I llama_new_context_with_model: n_ubatch      = 512
0.00.142.134 I llama_new_context_with_model: flash_attn    = 0
0.00.142.136 I llama_new_context_with_model: freq_base     = 10000.0
0.00.142.136 I llama_new_context_with_model: freq_scale    = 1
0.00.217.041 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.217.056 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.217.084 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.219.625 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.219.632 I llama_new_context_with_model: graph nodes  = 967
0.00.219.632 I llama_new_context_with_model: graph splits = 1
0.00.219.636 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.308.847 I main: llama threadpool init, n_threads = 4
0.00.308.868 I 
0.00.308.949 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.308.954 I 
0.00.309.074 I sampler seed: 1234
0.00.309.085 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.309.089 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.309.090 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.309.092 I 
I believe the meaning of life is that one day, if one is fortunate enough to be born, one will die.

I believe the meaning of life is that if one is fortunate enough to be born, one will die.

But I am not so fortunate, I am dying, my parents, my friends, my relatives, all of

0.02.589.374 I llama_perf_sampler_print:    sampling time =       2.55 ms /    71 runs   (    0.04 ms per token, 27832.22 tokens per second)
0.02.589.377 I llama_perf_context_print:        load time =     307.91 ms
0.02.589.378 I llama_perf_context_print: prompt eval time =     124.30 ms /     7 tokens (   17.76 ms per token,    56.32 tokens per second)
0.02.589.379 I llama_perf_context_print:        eval time =    2146.32 ms /    63 runs   (   34.07 ms per token,    29.35 tokens per second)
0.02.589.380 I llama_perf_context_print:       total time =    2280.53 ms /    70 tokens

real	0m2.643s
user	0m9.483s
sys	0m0.192s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q5_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.620 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.707 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q5_k.gguf (version GGUF V3 (latest))
0.00.009.724 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.729 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.730 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.731 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.732 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.732 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.735 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.736 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.737 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.737 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.739 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.740 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.741 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.746 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.747 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.748 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.516 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.848 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.313 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.318 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.319 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.319 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.320 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.321 I llama_model_loader: - kv  22:                          general.file_type u32              = 17
0.00.022.323 I llama_model_loader: - type  f32:  194 tensors
0.00.022.323 I llama_model_loader: - type q5_K:   61 tensors
0.00.022.324 I llama_model_loader: - type q6_K:   37 tensors
0.00.067.983 I llm_load_vocab: special tokens cache size = 25
0.00.081.809 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.828 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.828 I llm_load_print_meta: arch             = gptneox
0.00.081.829 I llm_load_print_meta: vocab type       = BPE
0.00.081.830 I llm_load_print_meta: n_vocab          = 50304
0.00.081.830 I llm_load_print_meta: n_merges         = 50009
0.00.081.831 I llm_load_print_meta: vocab_only       = 0
0.00.081.831 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.831 I llm_load_print_meta: n_embd           = 2048
0.00.081.832 I llm_load_print_meta: n_layer          = 24
0.00.081.847 I llm_load_print_meta: n_head           = 16
0.00.081.848 I llm_load_print_meta: n_head_kv        = 16
0.00.081.848 I llm_load_print_meta: n_rot            = 32
0.00.081.848 I llm_load_print_meta: n_swa            = 0
0.00.081.849 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.849 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.850 I llm_load_print_meta: n_gqa            = 1
0.00.081.851 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.852 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.854 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.855 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.855 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.855 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.856 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.856 I llm_load_print_meta: n_ff             = 8192
0.00.081.857 I llm_load_print_meta: n_expert         = 0
0.00.081.857 I llm_load_print_meta: n_expert_used    = 0
0.00.081.857 I llm_load_print_meta: causal attn      = 1
0.00.081.858 I llm_load_print_meta: pooling type     = 0
0.00.081.858 I llm_load_print_meta: rope type        = 2
0.00.081.859 I llm_load_print_meta: rope scaling     = linear
0.00.081.860 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.861 I llm_load_print_meta: freq_scale_train = 1
0.00.081.861 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.862 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.862 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.863 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.863 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.863 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.863 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.864 I llm_load_print_meta: model type       = 1.4B
0.00.081.864 I llm_load_print_meta: model ftype      = Q5_K - Medium
0.00.081.865 I llm_load_print_meta: model params     = 1.41 B
0.00.081.866 I llm_load_print_meta: model size       = 1006.35 MiB (5.97 BPW) 
0.00.081.867 I llm_load_print_meta: general.name     = 1.4B
0.00.081.867 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.868 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.868 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.868 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.869 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.869 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.870 I llm_load_print_meta: max token length = 1024
0.00.138.116 I llm_load_tensors:   CPU_Mapped model buffer size =  1006.35 MiB
................................................................................
0.00.140.886 I llama_new_context_with_model: n_seq_max     = 1
0.00.140.892 I llama_new_context_with_model: n_ctx         = 128
0.00.140.892 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.140.892 I llama_new_context_with_model: n_batch       = 128
0.00.140.892 I llama_new_context_with_model: n_ubatch      = 128
0.00.140.893 I llama_new_context_with_model: flash_attn    = 0
0.00.140.895 I llama_new_context_with_model: freq_base     = 10000.0
0.00.140.896 I llama_new_context_with_model: freq_scale    = 1
0.00.140.897 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.146.374 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.146.387 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.146.408 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.148.613 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.148.619 I llama_new_context_with_model: graph nodes  = 967
0.00.148.620 I llama_new_context_with_model: graph splits = 1
0.00.148.622 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.205.385 I 
0.00.205.473 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.205.483 I perplexity: tokenizing the input ..
0.00.215.882 I perplexity: tokenization took 10.394 ms
0.00.215.903 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.227.790 I perplexity: 2.01 seconds per pass - ETA 0.03 minutes
[1]10.5345,
0.02.236.146 I Final estimate: PPL = 10.5345 +/- 3.32630

0.02.236.195 I llama_perf_context_print:        load time =     204.74 ms
0.02.236.198 I llama_perf_context_print: prompt eval time =    2010.39 ms /   128 tokens (   15.71 ms per token,    63.67 tokens per second)
0.02.236.199 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.236.200 I llama_perf_context_print:       total time =    2030.81 ms /   129 tokens

real	0m2.283s
user	0m8.417s
sys	0m0.112s
```
- q6_k:
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-q6_k.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.550 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.722 I main: llama backend init
0.00.000.728 I main: load the model and apply lora adapter, if any
0.00.009.716 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q6_k.gguf (version GGUF V3 (latest))
0.00.009.728 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.733 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.734 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.735 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.736 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.737 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.742 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.742 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.743 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.744 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.744 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.745 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.745 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.748 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.749 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.749 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.436 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.772 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.082 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.089 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.090 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.090 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.091 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.092 I llama_model_loader: - kv  22:                          general.file_type u32              = 18
0.00.022.094 I llama_model_loader: - type  f32:  194 tensors
0.00.022.094 I llama_model_loader: - type q6_K:   98 tensors
0.00.066.536 I llm_load_vocab: special tokens cache size = 25
0.00.080.398 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.080.409 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.080.410 I llm_load_print_meta: arch             = gptneox
0.00.080.411 I llm_load_print_meta: vocab type       = BPE
0.00.080.411 I llm_load_print_meta: n_vocab          = 50304
0.00.080.411 I llm_load_print_meta: n_merges         = 50009
0.00.080.412 I llm_load_print_meta: vocab_only       = 0
0.00.080.412 I llm_load_print_meta: n_ctx_train      = 2048
0.00.080.412 I llm_load_print_meta: n_embd           = 2048
0.00.080.413 I llm_load_print_meta: n_layer          = 24
0.00.080.422 I llm_load_print_meta: n_head           = 16
0.00.080.423 I llm_load_print_meta: n_head_kv        = 16
0.00.080.423 I llm_load_print_meta: n_rot            = 32
0.00.080.423 I llm_load_print_meta: n_swa            = 0
0.00.080.424 I llm_load_print_meta: n_embd_head_k    = 128
0.00.080.424 I llm_load_print_meta: n_embd_head_v    = 128
0.00.080.425 I llm_load_print_meta: n_gqa            = 1
0.00.080.426 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.080.427 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.080.428 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.080.429 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.080.429 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.080.430 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.080.430 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.080.431 I llm_load_print_meta: n_ff             = 8192
0.00.080.431 I llm_load_print_meta: n_expert         = 0
0.00.080.432 I llm_load_print_meta: n_expert_used    = 0
0.00.080.432 I llm_load_print_meta: causal attn      = 1
0.00.080.432 I llm_load_print_meta: pooling type     = 0
0.00.080.432 I llm_load_print_meta: rope type        = 2
0.00.080.433 I llm_load_print_meta: rope scaling     = linear
0.00.080.434 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.080.435 I llm_load_print_meta: freq_scale_train = 1
0.00.080.435 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.080.436 I llm_load_print_meta: rope_finetuned   = unknown
0.00.080.436 I llm_load_print_meta: ssm_d_conv       = 0
0.00.080.436 I llm_load_print_meta: ssm_d_inner      = 0
0.00.080.437 I llm_load_print_meta: ssm_d_state      = 0
0.00.080.437 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.080.437 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.080.437 I llm_load_print_meta: model type       = 1.4B
0.00.080.438 I llm_load_print_meta: model ftype      = Q6_K
0.00.080.439 I llm_load_print_meta: model params     = 1.41 B
0.00.080.440 I llm_load_print_meta: model size       = 1.08 GiB (6.57 BPW) 
0.00.080.440 I llm_load_print_meta: general.name     = 1.4B
0.00.080.440 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.080.440 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.080.441 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.080.441 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.080.442 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.080.442 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.080.442 I llm_load_print_meta: max token length = 1024
0.00.143.717 I llm_load_tensors:   CPU_Mapped model buffer size =  1108.64 MiB
...............................................................................
0.00.146.227 I llama_new_context_with_model: n_seq_max     = 1
0.00.146.233 I llama_new_context_with_model: n_ctx         = 2048
0.00.146.233 I llama_new_context_with_model: n_ctx_per_seq = 2048
0.00.146.233 I llama_new_context_with_model: n_batch       = 2048
0.00.146.234 I llama_new_context_with_model: n_ubatch      = 512
0.00.146.235 I llama_new_context_with_model: flash_attn    = 0
0.00.146.237 I llama_new_context_with_model: freq_base     = 10000.0
0.00.146.238 I llama_new_context_with_model: freq_scale    = 1
0.00.221.970 I llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
0.00.221.986 I llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
0.00.222.016 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.224.269 I llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
0.00.224.275 I llama_new_context_with_model: graph nodes  = 967
0.00.224.276 I llama_new_context_with_model: graph splits = 1
0.00.224.279 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.311.170 I main: llama threadpool init, n_threads = 4
0.00.311.186 I 
0.00.311.266 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.311.269 I 
0.00.311.377 I sampler seed: 1234
0.00.311.389 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.311.401 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.311.405 I generate: n_ctx = 2048, n_batch = 2048, n_predict = 64, n_keep = 0
0.00.311.405 I 
I believe the meaning of life is to die. It’s not a very nice thing to say, but it’s true.

I also believe it’s not a very nice thing to say to a dead person. I don’t think the dead person could ever fully comprehend why you said it, and I’m not sure if

0.02.673.035 I llama_perf_sampler_print:    sampling time =       2.47 ms /    71 runs   (    0.03 ms per token, 28698.46 tokens per second)
0.02.673.038 I llama_perf_context_print:        load time =     310.42 ms
0.02.673.039 I llama_perf_context_print: prompt eval time =     116.90 ms /     7 tokens (   16.70 ms per token,    59.88 tokens per second)
0.02.673.041 I llama_perf_context_print:        eval time =    2235.40 ms /    63 runs   (   35.48 ms per token,    28.18 tokens per second)
0.02.673.042 I llama_perf_context_print:       total time =    2361.87 ms /    70 tokens

real	0m2.730s
user	0m9.821s
sys	0m0.184s
+ ./bin/llama-perplexity --model ../models-mnt/pythia/1.4B/ggml-model-q6_k.gguf -f ../models-mnt/wikitext/wikitext-2-raw/wiki.test-60.raw -ngl 99 -c 128 -b 128 --chunks 1
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
0.00.000.616 I build: 4202 (a7c29b39) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.009.789 I llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q6_k.gguf (version GGUF V3 (latest))
0.00.009.804 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.009.810 I llama_model_loader: - kv   0:                       general.architecture str              = gptneox
0.00.009.811 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.009.812 I llama_model_loader: - kv   2:                               general.name str              = 1.4B
0.00.009.812 I llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
0.00.009.813 I llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
0.00.009.816 I llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
0.00.009.817 I llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
0.00.009.817 I llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
0.00.009.818 I llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
0.00.009.818 I llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
0.00.009.819 I llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
0.00.009.819 I llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
0.00.009.823 I llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
0.00.009.824 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.009.824 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
0.00.015.634 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
0.00.016.997 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.022.332 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
0.00.022.337 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.022.337 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
0.00.022.338 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
0.00.022.338 I llama_model_loader: - kv  21:               general.quantization_version u32              = 2
0.00.022.339 I llama_model_loader: - kv  22:                          general.file_type u32              = 18
0.00.022.342 I llama_model_loader: - type  f32:  194 tensors
0.00.022.342 I llama_model_loader: - type q6_K:   98 tensors
0.00.067.552 I llm_load_vocab: special tokens cache size = 25
0.00.081.434 I llm_load_vocab: token to piece cache size = 0.2984 MB
0.00.081.448 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.081.448 I llm_load_print_meta: arch             = gptneox
0.00.081.449 I llm_load_print_meta: vocab type       = BPE
0.00.081.450 I llm_load_print_meta: n_vocab          = 50304
0.00.081.450 I llm_load_print_meta: n_merges         = 50009
0.00.081.450 I llm_load_print_meta: vocab_only       = 0
0.00.081.451 I llm_load_print_meta: n_ctx_train      = 2048
0.00.081.451 I llm_load_print_meta: n_embd           = 2048
0.00.081.452 I llm_load_print_meta: n_layer          = 24
0.00.081.462 I llm_load_print_meta: n_head           = 16
0.00.081.463 I llm_load_print_meta: n_head_kv        = 16
0.00.081.464 I llm_load_print_meta: n_rot            = 32
0.00.081.464 I llm_load_print_meta: n_swa            = 0
0.00.081.464 I llm_load_print_meta: n_embd_head_k    = 128
0.00.081.465 I llm_load_print_meta: n_embd_head_v    = 128
0.00.081.466 I llm_load_print_meta: n_gqa            = 1
0.00.081.467 I llm_load_print_meta: n_embd_k_gqa     = 2048
0.00.081.468 I llm_load_print_meta: n_embd_v_gqa     = 2048
0.00.081.469 I llm_load_print_meta: f_norm_eps       = 1.0e-05
0.00.081.469 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.081.469 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.081.470 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.081.470 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.081.471 I llm_load_print_meta: n_ff             = 8192
0.00.081.471 I llm_load_print_meta: n_expert         = 0
0.00.081.471 I llm_load_print_meta: n_expert_used    = 0
0.00.081.472 I llm_load_print_meta: causal attn      = 1
0.00.081.472 I llm_load_print_meta: pooling type     = 0
0.00.081.472 I llm_load_print_meta: rope type        = 2
0.00.081.473 I llm_load_print_meta: rope scaling     = linear
0.00.081.474 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.081.475 I llm_load_print_meta: freq_scale_train = 1
0.00.081.475 I llm_load_print_meta: n_ctx_orig_yarn  = 2048
0.00.081.476 I llm_load_print_meta: rope_finetuned   = unknown
0.00.081.476 I llm_load_print_meta: ssm_d_conv       = 0
0.00.081.476 I llm_load_print_meta: ssm_d_inner      = 0
0.00.081.476 I llm_load_print_meta: ssm_d_state      = 0
0.00.081.477 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.081.477 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.081.477 I llm_load_print_meta: model type       = 1.4B
0.00.081.478 I llm_load_print_meta: model ftype      = Q6_K
0.00.081.478 I llm_load_print_meta: model params     = 1.41 B
0.00.081.479 I llm_load_print_meta: model size       = 1.08 GiB (6.57 BPW) 
0.00.081.479 I llm_load_print_meta: general.name     = 1.4B
0.00.081.480 I llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
0.00.081.480 I llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
0.00.081.481 I llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
0.00.081.481 I llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
0.00.081.481 I llm_load_print_meta: LF token         = 128 'Ä'
0.00.081.482 I llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
0.00.081.482 I llm_load_print_meta: max token length = 1024
0.00.146.192 I llm_load_tensors:   CPU_Mapped model buffer size =  1108.64 MiB
...............................................................................
0.00.148.894 I llama_new_context_with_model: n_seq_max     = 1
0.00.148.899 I llama_new_context_with_model: n_ctx         = 128
0.00.148.900 I llama_new_context_with_model: n_ctx_per_seq = 128
0.00.148.900 I llama_new_context_with_model: n_batch       = 128
0.00.148.900 I llama_new_context_with_model: n_ubatch      = 128
0.00.148.900 I llama_new_context_with_model: flash_attn    = 0
0.00.148.903 I llama_new_context_with_model: freq_base     = 10000.0
0.00.148.903 I llama_new_context_with_model: freq_scale    = 1
0.00.148.904 W llama_new_context_with_model: n_ctx_per_seq (128) < n_ctx_train (2048) -- the full capacity of the model will not be utilized
0.00.154.270 I llama_kv_cache_init:        CPU KV buffer size =    24.00 MiB
0.00.154.281 I llama_new_context_with_model: KV self size  =   24.00 MiB, K (f16):   12.00 MiB, V (f16):   12.00 MiB
0.00.154.301 I llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
0.00.156.798 I llama_new_context_with_model:        CPU compute buffer size =    25.56 MiB
0.00.156.805 I llama_new_context_with_model: graph nodes  = 967
0.00.156.806 I llama_new_context_with_model: graph splits = 1
0.00.156.808 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.212.631 I 
0.00.212.721 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.212.731 I perplexity: tokenizing the input ..
0.00.222.857 I perplexity: tokenization took 10.121 ms
0.00.222.879 I perplexity: calculating perplexity over 1 chunks, n_ctx=128, batch_size=128, n_seq=1
0.02.053.447 I perplexity: 1.83 seconds per pass - ETA 0.02 minutes
[1]10.5551,
0.02.061.690 I Final estimate: PPL = 10.5551 +/- 3.36749

0.02.061.728 I llama_perf_context_print:        load time =     211.99 ms
0.02.061.730 I llama_perf_context_print: prompt eval time =    1828.82 ms /   128 tokens (   14.29 ms per token,    69.99 tokens per second)
0.02.061.735 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.02.061.737 I llama_perf_context_print:       total time =    1849.10 ms /   129 tokens

real	0m2.112s
user	0m7.667s
sys	0m0.136s
```
- save-load-state: 
```
+ ./bin/llama-save-load-state --model ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf -ngl 99 -c 0
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
main: build = 4202 (a7c29b39)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gptneox
llama_model_loader: - kv   1:                               general.type str              = model
llama_model_loader: - kv   2:                               general.name str              = 1.4B
llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
llama_model_loader: - kv  21:               general.quantization_version u32              = 2
llama_model_loader: - kv  22:                          general.file_type u32              = 2
llama_model_loader: - type  f32:  194 tensors
llama_model_loader: - type q4_0:   97 tensors
llama_model_loader: - type q6_K:    1 tensors
llm_load_vocab: control token:      1 '<|padding|>' is not marked as EOG
llm_load_vocab: special tokens cache size = 25
llm_load_vocab: token to piece cache size = 0.2984 MB
llm_load_print_meta: format           = GGUF V3 (latest)
llm_load_print_meta: arch             = gptneox
llm_load_print_meta: vocab type       = BPE
llm_load_print_meta: n_vocab          = 50304
llm_load_print_meta: n_merges         = 50009
llm_load_print_meta: vocab_only       = 0
llm_load_print_meta: n_ctx_train      = 2048
llm_load_print_meta: n_embd           = 2048
llm_load_print_meta: n_layer          = 24
llm_load_print_meta: n_head           = 16
llm_load_print_meta: n_head_kv        = 16
llm_load_print_meta: n_rot            = 32
llm_load_print_meta: n_swa            = 0
llm_load_print_meta: n_embd_head_k    = 128
llm_load_print_meta: n_embd_head_v    = 128
llm_load_print_meta: n_gqa            = 1
llm_load_print_meta: n_embd_k_gqa     = 2048
llm_load_print_meta: n_embd_v_gqa     = 2048
llm_load_print_meta: f_norm_eps       = 1.0e-05
llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
llm_load_print_meta: f_clamp_kqv      = 0.0e+00
llm_load_print_meta: f_max_alibi_bias = 0.0e+00
llm_load_print_meta: f_logit_scale    = 0.0e+00
llm_load_print_meta: n_ff             = 8192
llm_load_print_meta: n_expert         = 0
llm_load_print_meta: n_expert_used    = 0
llm_load_print_meta: causal attn      = 1
llm_load_print_meta: pooling type     = 0
llm_load_print_meta: rope type        = 2
llm_load_print_meta: rope scaling     = linear
llm_load_print_meta: freq_base_train  = 10000.0
llm_load_print_meta: freq_scale_train = 1
llm_load_print_meta: n_ctx_orig_yarn  = 2048
llm_load_print_meta: rope_finetuned   = unknown
llm_load_print_meta: ssm_d_conv       = 0
llm_load_print_meta: ssm_d_inner      = 0
llm_load_print_meta: ssm_d_state      = 0
llm_load_print_meta: ssm_dt_rank      = 0
llm_load_print_meta: ssm_dt_b_c_rms   = 0
llm_load_print_meta: model type       = 1.4B
llm_load_print_meta: model ftype      = Q4_0
llm_load_print_meta: model params     = 1.41 B
llm_load_print_meta: model size       = 786.31 MiB (4.66 BPW) 
llm_load_print_meta: general.name     = 1.4B
llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
llm_load_print_meta: LF token         = 128 'Ä'
llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
llm_load_print_meta: max token length = 1024
llm_load_tensors: tensor 'token_embd.weight' (q4_0) (and 291 others) cannot be used with preferred buffer type CPU_AARCH64, using CPU instead
llm_load_tensors:   CPU_Mapped model buffer size =   786.31 MiB
...............................................................................
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 0
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 967
llama_new_context_with_model: graph splits = 1
0.00.207.982 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
main : serialized state into 988319 out of a maximum of 988319 bytes
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 0
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 967
llama_new_context_with_model: graph splits = 1
main : deserialized state from 988319 out of a maximum of 988319 bytes
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 0
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 967
llama_new_context_with_model: graph splits = 1
main : deserialized state from 988319 out of a maximum of 988319 bytes
main : seq 0 copied, 787052 bytes
main : kv cache cleared
main : seq 1 restored, 787052 bytes

main : success

first run: The quick brown fox jumps over the lazy Dog." "Tell me, what does the D.O


second run: The quick brown fox jumps over the lazy Dog." "Tell me, what does the D.O


single seq run: The quick brown fox jumps over the lazy Dog." "Tell me, what does the D.O

real	0m2.385s
user	0m7.481s
sys	0m0.298s
+ ./bin/llama-save-load-state --model ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf -ngl 99 -c 0 -fa
warning: not compiled with GPU offload support, --gpu-layers option will be ignored
warning: see main README.md for information on enabling GPU BLAS support
main: build = 4202 (a7c29b39)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
llama_model_loader: loaded meta data with 23 key-value pairs and 292 tensors from ../models-mnt/pythia/1.4B/ggml-model-q4_0.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gptneox
llama_model_loader: - kv   1:                               general.type str              = model
llama_model_loader: - kv   2:                               general.name str              = 1.4B
llama_model_loader: - kv   3:                           general.finetune str              = 1.4B
llama_model_loader: - kv   4:                         general.size_label str              = 1.4B
llama_model_loader: - kv   5:                     gptneox.context_length u32              = 2048
llama_model_loader: - kv   6:                   gptneox.embedding_length u32              = 2048
llama_model_loader: - kv   7:                        gptneox.block_count u32              = 24
llama_model_loader: - kv   8:                gptneox.feed_forward_length u32              = 8192
llama_model_loader: - kv   9:               gptneox.rope.dimension_count u32              = 32
llama_model_loader: - kv  10:               gptneox.attention.head_count u32              = 16
llama_model_loader: - kv  11:              gptneox.use_parallel_residual bool             = true
llama_model_loader: - kv  12:       gptneox.attention.layer_norm_epsilon f32              = 0.000010
llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = olmo
llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,50304]   = ["<|endoftext|>", "<|padding|>", "!",...
llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,50304]   = [3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,50009]   = ["Ġ Ġ", "Ġ t", "Ġ a", "h e", "i n...
llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 0
llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 0
llama_model_loader: - kv  21:               general.quantization_version u32              = 2
llama_model_loader: - kv  22:                          general.file_type u32              = 2
llama_model_loader: - type  f32:  194 tensors
llama_model_loader: - type q4_0:   97 tensors
llama_model_loader: - type q6_K:    1 tensors
llm_load_vocab: control token:      1 '<|padding|>' is not marked as EOG
llm_load_vocab: special tokens cache size = 25
llm_load_vocab: token to piece cache size = 0.2984 MB
llm_load_print_meta: format           = GGUF V3 (latest)
llm_load_print_meta: arch             = gptneox
llm_load_print_meta: vocab type       = BPE
llm_load_print_meta: n_vocab          = 50304
llm_load_print_meta: n_merges         = 50009
llm_load_print_meta: vocab_only       = 0
llm_load_print_meta: n_ctx_train      = 2048
llm_load_print_meta: n_embd           = 2048
llm_load_print_meta: n_layer          = 24
llm_load_print_meta: n_head           = 16
llm_load_print_meta: n_head_kv        = 16
llm_load_print_meta: n_rot            = 32
llm_load_print_meta: n_swa            = 0
llm_load_print_meta: n_embd_head_k    = 128
llm_load_print_meta: n_embd_head_v    = 128
llm_load_print_meta: n_gqa            = 1
llm_load_print_meta: n_embd_k_gqa     = 2048
llm_load_print_meta: n_embd_v_gqa     = 2048
llm_load_print_meta: f_norm_eps       = 1.0e-05
llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
llm_load_print_meta: f_clamp_kqv      = 0.0e+00
llm_load_print_meta: f_max_alibi_bias = 0.0e+00
llm_load_print_meta: f_logit_scale    = 0.0e+00
llm_load_print_meta: n_ff             = 8192
llm_load_print_meta: n_expert         = 0
llm_load_print_meta: n_expert_used    = 0
llm_load_print_meta: causal attn      = 1
llm_load_print_meta: pooling type     = 0
llm_load_print_meta: rope type        = 2
llm_load_print_meta: rope scaling     = linear
llm_load_print_meta: freq_base_train  = 10000.0
llm_load_print_meta: freq_scale_train = 1
llm_load_print_meta: n_ctx_orig_yarn  = 2048
llm_load_print_meta: rope_finetuned   = unknown
llm_load_print_meta: ssm_d_conv       = 0
llm_load_print_meta: ssm_d_inner      = 0
llm_load_print_meta: ssm_d_state      = 0
llm_load_print_meta: ssm_dt_rank      = 0
llm_load_print_meta: ssm_dt_b_c_rms   = 0
llm_load_print_meta: model type       = 1.4B
llm_load_print_meta: model ftype      = Q4_0
llm_load_print_meta: model params     = 1.41 B
llm_load_print_meta: model size       = 786.31 MiB (4.66 BPW) 
llm_load_print_meta: general.name     = 1.4B
llm_load_print_meta: BOS token        = 0 '<|endoftext|>'
llm_load_print_meta: EOS token        = 0 '<|endoftext|>'
llm_load_print_meta: EOT token        = 0 '<|endoftext|>'
llm_load_print_meta: UNK token        = 0 '<|endoftext|>'
llm_load_print_meta: LF token         = 128 'Ä'
llm_load_print_meta: EOG token        = 0 '<|endoftext|>'
llm_load_print_meta: max token length = 1024
llm_load_tensors: tensor 'token_embd.weight' (q4_0) (and 291 others) cannot be used with preferred buffer type CPU_AARCH64, using CPU instead
llm_load_tensors:   CPU_Mapped model buffer size =   786.31 MiB
...............................................................................
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 1
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 872
llama_new_context_with_model: graph splits = 1
0.00.215.604 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
main : serialized state into 988319 out of a maximum of 988319 bytes
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 1
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 872
llama_new_context_with_model: graph splits = 1
main : deserialized state from 988319 out of a maximum of 988319 bytes
llama_new_context_with_model: n_seq_max     = 1
llama_new_context_with_model: n_ctx         = 2048
llama_new_context_with_model: n_ctx_per_seq = 2048
llama_new_context_with_model: n_batch       = 2048
llama_new_context_with_model: n_ubatch      = 512
llama_new_context_with_model: flash_attn    = 1
llama_new_context_with_model: freq_base     = 10000.0
llama_new_context_with_model: freq_scale    = 1
llama_kv_cache_init:        CPU KV buffer size =   384.00 MiB
llama_new_context_with_model: KV self size  =  384.00 MiB, K (f16):  192.00 MiB, V (f16):  192.00 MiB
llama_new_context_with_model:        CPU  output buffer size =     0.19 MiB
llama_new_context_with_model:        CPU compute buffer size =   102.25 MiB
llama_new_context_with_model: graph nodes  = 872
llama_new_context_with_model: graph splits = 1
main : deserialized state from 988319 out of a maximum of 988319 bytes
main : seq 0 copied, 787052 bytes
main : kv cache cleared
main : seq 1 restored, 787052 bytes

main : success

first run: The quick brown fox jumps over the lazy drunkard. No, not the lazy drunkard, the


second run: The quick brown fox jumps over the lazy drunkard. No, not the lazy drunkard, the


single seq run: The quick brown fox jumps over the lazy drunkard. No, not the lazy drunkard, the

real	0m2.318s
user	0m7.129s
sys	0m0.319s
```
### ctest_with_model_debug

Runs ctest with model files in debug mode
- status: 0
```
+ LLAMACPP_TEST_MODELFILE=/mnt/llama.cpp/models/pythia/1.4B/ggml-model-f16.gguf
+ time ctest --output-on-failure -L model
Test project /home/ggml/work/llama.cpp/build-ci-debug
    Start 23: test-model-load-cancel
1/2 Test #23: test-model-load-cancel ...........   Passed    0.01 sec
    Start 24: test-autorelease
2/2 Test #24: test-autorelease .................   Passed    0.54 sec

100% tests passed, 0 tests failed out of 2

Label Time Summary:
model    =   0.55 sec*proc (2 tests)

Total Test time (real) =   0.55 sec
0.36user 0.25system 0:00.61elapsed 100%CPU (0avgtext+0avgdata 2896944maxresident)k
0inputs+32outputs (0major+54657minor)pagefaults 0swaps
```
### ctest_with_model_release

Runs ctest with model files in release mode
- status: 0
```
+ LLAMACPP_TEST_MODELFILE=/mnt/llama.cpp/models/pythia/1.4B/ggml-model-f16.gguf
+ time ctest --output-on-failure -L model
Test project /home/ggml/work/llama.cpp/build-ci-release
    Start 23: test-model-load-cancel
1/2 Test #23: test-model-load-cancel ...........   Passed    0.00 sec
    Start 24: test-autorelease
2/2 Test #24: test-autorelease .................   Passed    0.35 sec

100% tests passed, 0 tests failed out of 2

Label Time Summary:
model    =   0.35 sec*proc (2 tests)

Total Test time (real) =   0.35 sec
0.14user 0.27system 0:00.41elapsed 99%CPU (0avgtext+0avgdata 2893136maxresident)k
0inputs+32outputs (0major+55008minor)pagefaults 0swaps
```
