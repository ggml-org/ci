+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.567 I build: 3873 (a7ad5535) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.767 I main: llama backend init
0.00.001.859 I main: load the model and apply lora adapter, if any
0.00.022.207 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.255 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.266 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.272 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.276 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.280 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.280 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.281 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.281 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.282 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.282 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.287 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.288 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.289 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.289 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.290 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.199 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.908 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.738 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.745 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.746 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.747 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.748 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.749 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.750 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.754 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.755 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.756 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.757 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.758 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.762 I llama_model_loader: - type  f32:   37 tensors
0.00.132.766 I llama_model_loader: - type q8_0:  127 tensors
0.00.193.515 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.751 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.543 I llm_load_vocab: special tokens cache size = 5
0.00.234.759 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.234.775 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.234.775 I llm_load_print_meta: arch             = gemma
0.00.234.776 I llm_load_print_meta: vocab type       = SPM
0.00.234.777 I llm_load_print_meta: n_vocab          = 256000
0.00.234.777 I llm_load_print_meta: n_merges         = 0
0.00.234.777 I llm_load_print_meta: vocab_only       = 0
0.00.234.778 I llm_load_print_meta: n_ctx_train      = 8192
0.00.234.779 I llm_load_print_meta: n_embd           = 2048
0.00.234.780 I llm_load_print_meta: n_layer          = 18
0.00.234.795 I llm_load_print_meta: n_head           = 8
0.00.234.796 I llm_load_print_meta: n_head_kv        = 1
0.00.234.797 I llm_load_print_meta: n_rot            = 256
0.00.234.797 I llm_load_print_meta: n_swa            = 0
0.00.234.798 I llm_load_print_meta: n_embd_head_k    = 256
0.00.234.798 I llm_load_print_meta: n_embd_head_v    = 256
0.00.234.799 I llm_load_print_meta: n_gqa            = 8
0.00.234.800 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.234.801 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.234.802 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.234.803 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.234.803 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.234.804 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.234.805 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.234.806 I llm_load_print_meta: n_ff             = 16384
0.00.234.806 I llm_load_print_meta: n_expert         = 0
0.00.234.806 I llm_load_print_meta: n_expert_used    = 0
0.00.234.807 I llm_load_print_meta: causal attn      = 1
0.00.234.807 I llm_load_print_meta: pooling type     = 0
0.00.234.807 I llm_load_print_meta: rope type        = 2
0.00.234.808 I llm_load_print_meta: rope scaling     = linear
0.00.234.809 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.234.809 I llm_load_print_meta: freq_scale_train = 1
0.00.234.810 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.234.811 I llm_load_print_meta: rope_finetuned   = unknown
0.00.234.811 I llm_load_print_meta: ssm_d_conv       = 0
0.00.234.812 I llm_load_print_meta: ssm_d_inner      = 0
0.00.234.812 I llm_load_print_meta: ssm_d_state      = 0
0.00.234.812 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.234.812 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.234.813 I llm_load_print_meta: model type       = 2B
0.00.234.814 I llm_load_print_meta: model ftype      = Q8_0
0.00.234.815 I llm_load_print_meta: model params     = 2.51 B
0.00.234.816 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.234.816 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.234.817 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.234.817 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.234.818 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.234.818 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.234.819 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.234.819 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.234.820 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.234.820 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.234.821 I llm_load_print_meta: max token length = 93
0.00.234.851 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.333.636 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.333.646 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.333.646 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.333.647 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.333.648 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.333.648 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.338.886 I llama_new_context_with_model: n_ctx      = 8192
0.00.338.893 I llama_new_context_with_model: n_batch    = 2048
0.00.338.893 I llama_new_context_with_model: n_ubatch   = 512
0.00.338.894 I llama_new_context_with_model: flash_attn = 0
0.00.338.896 I llama_new_context_with_model: freq_base  = 10000.0
0.00.338.897 I llama_new_context_with_model: freq_scale = 1
0.00.368.509 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.368.526 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.368.618 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.369.511 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.369.519 I llama_new_context_with_model: graph nodes  = 601
0.00.369.519 I llama_new_context_with_model: graph splits = 1
0.00.369.521 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.751 I main: llama threadpool init, n_threads = 4
0.00.461.762 I 
0.00.461.835 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.461.839 I 
0.00.461.873 I sampler seed: 4165915673
0.00.461.882 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.461.890 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.461.890 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.461.891 I 
 increasities that have caused harm or distress to many people.

I cannot answer the question as it contains personally identifiable information. [end of text]


0.02.312.484 I llama_perf_sampler_print:    sampling time =       4.51 ms /    27 runs   (    0.17 ms per token,  5992.01 tokens per second)
0.02.312.487 I llama_perf_context_print:        load time =     459.82 ms
0.02.312.488 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.312.489 I llama_perf_context_print:        eval time =    1834.38 ms /    26 runs   (   70.55 ms per token,    14.17 tokens per second)
0.02.312.490 I llama_perf_context_print:       total time =    1850.74 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.562 I build: 3873 (a7ad5535) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.756 I main: llama backend init
0.00.001.864 I main: load the model and apply lora adapter, if any
0.00.022.211 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.227 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.235 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.236 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.240 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.240 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.242 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.243 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.244 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.244 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.251 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.252 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.253 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.253 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.254 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.387 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.550 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.385 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.391 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.391 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.392 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.393 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.394 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.394 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.398 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.399 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.400 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.401 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.402 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.406 I llama_model_loader: - type  f32:   37 tensors
0.00.133.408 I llama_model_loader: - type q8_0:  127 tensors
0.00.192.285 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.225 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.021 I llm_load_vocab: special tokens cache size = 5
0.00.231.979 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.231.992 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.231.993 I llm_load_print_meta: arch             = gemma
0.00.231.994 I llm_load_print_meta: vocab type       = SPM
0.00.231.994 I llm_load_print_meta: n_vocab          = 256000
0.00.231.995 I llm_load_print_meta: n_merges         = 0
0.00.231.995 I llm_load_print_meta: vocab_only       = 0
0.00.231.995 I llm_load_print_meta: n_ctx_train      = 8192
0.00.231.996 I llm_load_print_meta: n_embd           = 2048
0.00.231.996 I llm_load_print_meta: n_layer          = 18
0.00.232.008 I llm_load_print_meta: n_head           = 8
0.00.232.009 I llm_load_print_meta: n_head_kv        = 1
0.00.232.010 I llm_load_print_meta: n_rot            = 256
0.00.232.010 I llm_load_print_meta: n_swa            = 0
0.00.232.010 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.010 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.011 I llm_load_print_meta: n_gqa            = 8
0.00.232.012 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.013 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.014 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.015 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.015 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.016 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.016 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.018 I llm_load_print_meta: n_ff             = 16384
0.00.232.018 I llm_load_print_meta: n_expert         = 0
0.00.232.019 I llm_load_print_meta: n_expert_used    = 0
0.00.232.019 I llm_load_print_meta: causal attn      = 1
0.00.232.019 I llm_load_print_meta: pooling type     = 0
0.00.232.019 I llm_load_print_meta: rope type        = 2
0.00.232.020 I llm_load_print_meta: rope scaling     = linear
0.00.232.021 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.021 I llm_load_print_meta: freq_scale_train = 1
0.00.232.022 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.022 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.022 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.023 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.023 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.023 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.024 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.024 I llm_load_print_meta: model type       = 2B
0.00.232.025 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.026 I llm_load_print_meta: model params     = 2.51 B
0.00.232.027 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.027 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.027 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.028 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.028 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.028 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.029 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.029 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.029 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.030 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.030 I llm_load_print_meta: max token length = 93
0.00.232.059 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.325.925 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.331.692 I llama_new_context_with_model: n_ctx      = 8192
0.00.331.699 I llama_new_context_with_model: n_batch    = 2048
0.00.331.699 I llama_new_context_with_model: n_ubatch   = 512
0.00.331.700 I llama_new_context_with_model: flash_attn = 0
0.00.331.702 I llama_new_context_with_model: freq_base  = 10000.0
0.00.331.703 I llama_new_context_with_model: freq_scale = 1
0.00.361.198 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.361.213 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.361.305 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.169 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.362.177 I llama_new_context_with_model: graph nodes  = 601
0.00.362.178 I llama_new_context_with_model: graph splits = 1
0.00.362.179 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.449.709 I main: llama threadpool init, n_threads = 4
0.00.449.721 I 
0.00.449.798 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.449.801 I 
0.00.449.838 I sampler seed: 3860000010
0.00.449.847 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.449.851 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.449.852 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.449.852 I 
 increasities, and anxieties in a student's mind during the final exam season.

**Stress Management Strategies for Final Exam Season**

**1. Self

0.02.641.357 I llama_perf_sampler_print:    sampling time =       5.43 ms /    33 runs   (    0.16 ms per token,  6073.99 tokens per second)
0.02.641.360 I llama_perf_context_print:        load time =     447.78 ms
0.02.641.361 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.641.364 I llama_perf_context_print:        eval time =    2171.96 ms /    32 runs   (   67.87 ms per token,    14.73 tokens per second)
0.02.641.365 I llama_perf_context_print:       total time =    2191.66 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.652 I build: 3873 (a7ad5535) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.897 I main: llama backend init
0.00.002.637 I main: load the model and apply lora adapter, if any
0.00.026.768 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.026.816 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.026.822 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.026.828 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.026.829 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.026.832 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.026.832 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.026.833 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.026.834 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.026.834 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.026.835 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.026.840 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.026.841 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.026.842 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.026.842 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.026.843 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.054.325 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.136.597 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.143.418 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.143.425 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.143.425 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.143.426 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.143.427 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.143.428 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.143.428 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.143.431 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.143.432 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.143.432 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.143.433 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.143.434 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.143.437 I llama_model_loader: - type  f32:   37 tensors
0.00.143.440 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.366 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.216.543 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.217.260 I llm_load_vocab: special tokens cache size = 5
0.00.238.512 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.238.527 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.238.528 I llm_load_print_meta: arch             = gemma
0.00.238.528 I llm_load_print_meta: vocab type       = SPM
0.00.238.529 I llm_load_print_meta: n_vocab          = 256000
0.00.238.529 I llm_load_print_meta: n_merges         = 0
0.00.238.530 I llm_load_print_meta: vocab_only       = 0
0.00.238.530 I llm_load_print_meta: n_ctx_train      = 8192
0.00.238.530 I llm_load_print_meta: n_embd           = 2048
0.00.238.531 I llm_load_print_meta: n_layer          = 18
0.00.238.545 I llm_load_print_meta: n_head           = 8
0.00.238.546 I llm_load_print_meta: n_head_kv        = 1
0.00.238.546 I llm_load_print_meta: n_rot            = 256
0.00.238.547 I llm_load_print_meta: n_swa            = 0
0.00.238.547 I llm_load_print_meta: n_embd_head_k    = 256
0.00.238.547 I llm_load_print_meta: n_embd_head_v    = 256
0.00.238.548 I llm_load_print_meta: n_gqa            = 8
0.00.238.549 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.238.550 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.238.551 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.238.552 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.238.553 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.238.553 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.238.553 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.238.554 I llm_load_print_meta: n_ff             = 16384
0.00.238.555 I llm_load_print_meta: n_expert         = 0
0.00.238.555 I llm_load_print_meta: n_expert_used    = 0
0.00.238.555 I llm_load_print_meta: causal attn      = 1
0.00.238.556 I llm_load_print_meta: pooling type     = 0
0.00.238.556 I llm_load_print_meta: rope type        = 2
0.00.238.556 I llm_load_print_meta: rope scaling     = linear
0.00.238.558 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.238.559 I llm_load_print_meta: freq_scale_train = 1
0.00.238.559 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.238.560 I llm_load_print_meta: rope_finetuned   = unknown
0.00.238.561 I llm_load_print_meta: ssm_d_conv       = 0
0.00.238.561 I llm_load_print_meta: ssm_d_inner      = 0
0.00.238.561 I llm_load_print_meta: ssm_d_state      = 0
0.00.238.562 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.238.563 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.238.564 I llm_load_print_meta: model type       = 2B
0.00.238.564 I llm_load_print_meta: model ftype      = Q8_0
0.00.238.566 I llm_load_print_meta: model params     = 2.51 B
0.00.238.566 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.238.567 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.238.567 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.238.568 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.238.571 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.238.572 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.238.572 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.238.573 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.238.573 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.238.574 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.238.574 I llm_load_print_meta: max token length = 93
0.00.238.594 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.320.172 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.320.180 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.320.181 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.320.182 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.320.183 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.320.183 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.325.194 I llama_new_context_with_model: n_ctx      = 8192
0.00.325.201 I llama_new_context_with_model: n_batch    = 2048
0.00.325.202 I llama_new_context_with_model: n_ubatch   = 512
0.00.325.203 I llama_new_context_with_model: flash_attn = 0
0.00.325.205 I llama_new_context_with_model: freq_base  = 10000.0
0.00.325.207 I llama_new_context_with_model: freq_scale = 1
0.00.355.485 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.355.501 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.355.592 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.356.438 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.356.445 I llama_new_context_with_model: graph nodes  = 601
0.00.356.446 I llama_new_context_with_model: graph splits = 1
0.00.356.447 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.449.495 I main: llama threadpool init, n_threads = 4
0.00.449.508 I 
0.00.449.587 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.449.590 I 
0.00.449.627 I sampler seed: 471292688
0.00.449.636 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.449.639 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.449.640 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.449.640 I 
 increasities. [end of text]


0.00.739.424 I llama_perf_sampler_print:    sampling time =       0.69 ms /     5 runs   (    0.14 ms per token,  7225.43 tokens per second)
0.00.739.427 I llama_perf_context_print:        load time =     446.76 ms
0.00.739.428 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.739.429 I llama_perf_context_print:        eval time =     286.40 ms /     4 runs   (   71.60 ms per token,    13.97 tokens per second)
0.00.739.430 I llama_perf_context_print:       total time =     289.94 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.544 I build: 3873 (a7ad5535) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.823 I main: load the model and apply lora adapter, if any
0.00.021.743 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.789 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.796 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.801 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.802 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.806 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.809 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.809 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.810 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.811 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.811 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.815 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.816 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.816 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.817 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.817 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.612 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.128 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.395 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.402 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.403 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.403 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.404 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.405 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.406 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.409 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.409 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.410 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.410 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.411 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.415 I llama_model_loader: - type  f32:   37 tensors
0.00.133.418 I llama_model_loader: - type q8_0:  127 tensors
0.00.193.192 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.629 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.361 I llm_load_vocab: special tokens cache size = 5
0.00.232.396 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.410 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.410 I llm_load_print_meta: arch             = gemma
0.00.232.411 I llm_load_print_meta: vocab type       = SPM
0.00.232.412 I llm_load_print_meta: n_vocab          = 256000
0.00.232.412 I llm_load_print_meta: n_merges         = 0
0.00.232.413 I llm_load_print_meta: vocab_only       = 0
0.00.232.413 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.413 I llm_load_print_meta: n_embd           = 2048
0.00.232.413 I llm_load_print_meta: n_layer          = 18
0.00.232.426 I llm_load_print_meta: n_head           = 8
0.00.232.427 I llm_load_print_meta: n_head_kv        = 1
0.00.232.427 I llm_load_print_meta: n_rot            = 256
0.00.232.428 I llm_load_print_meta: n_swa            = 0
0.00.232.428 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.428 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.429 I llm_load_print_meta: n_gqa            = 8
0.00.232.430 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.431 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.432 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.433 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.433 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.434 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.434 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.435 I llm_load_print_meta: n_ff             = 16384
0.00.232.436 I llm_load_print_meta: n_expert         = 0
0.00.232.436 I llm_load_print_meta: n_expert_used    = 0
0.00.232.436 I llm_load_print_meta: causal attn      = 1
0.00.232.436 I llm_load_print_meta: pooling type     = 0
0.00.232.437 I llm_load_print_meta: rope type        = 2
0.00.232.437 I llm_load_print_meta: rope scaling     = linear
0.00.232.439 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.439 I llm_load_print_meta: freq_scale_train = 1
0.00.232.440 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.440 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.440 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.441 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.441 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.441 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.442 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.442 I llm_load_print_meta: model type       = 2B
0.00.232.443 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.444 I llm_load_print_meta: model params     = 2.51 B
0.00.232.444 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.445 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.445 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.445 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.446 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.446 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.446 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.447 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.447 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.448 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.448 I llm_load_print_meta: max token length = 93
0.00.232.468 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.304.034 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.304.042 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.309.086 I llama_new_context_with_model: n_ctx      = 8192
0.00.309.092 I llama_new_context_with_model: n_batch    = 2048
0.00.309.093 I llama_new_context_with_model: n_ubatch   = 512
0.00.309.093 I llama_new_context_with_model: flash_attn = 0
0.00.309.097 I llama_new_context_with_model: freq_base  = 10000.0
0.00.309.098 I llama_new_context_with_model: freq_scale = 1
0.00.338.970 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.338.986 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.339.074 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.339.929 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.339.937 I llama_new_context_with_model: graph nodes  = 601
0.00.339.937 I llama_new_context_with_model: graph splits = 1
0.00.339.939 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.435.197 I main: llama threadpool init, n_threads = 4
0.00.435.211 I 
0.00.435.289 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.435.292 I 
0.00.435.330 I sampler seed: 475145404
0.00.435.339 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.435.341 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.435.342 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.435.342 I 
 increasities. [end of text]


0.00.743.922 I llama_perf_sampler_print:    sampling time =       0.70 ms /     5 runs   (    0.14 ms per token,  7153.08 tokens per second)
0.00.743.925 I llama_perf_context_print:        load time =     433.29 ms
0.00.743.926 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.743.928 I llama_perf_context_print:        eval time =     305.19 ms /     4 runs   (   76.30 ms per token,    13.11 tokens per second)
0.00.743.928 I llama_perf_context_print:       total time =     308.73 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.697s
user	0m21.286s
sys	0m9.531s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3873 (a7ad5535)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32085.65 ms
main:    total time = 32085.65 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.536 I build: 3873 (a7ad5535) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.734 I main: llama backend init
0.00.001.875 I main: load the model and apply lora adapter, if any
0.00.021.882 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.929 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.940 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.945 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.949 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.954 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.954 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.955 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.956 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.957 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.957 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.960 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.961 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.961 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.962 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.962 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.379 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.202 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.027 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.033 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.034 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.035 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.035 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.036 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.037 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.040 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.042 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.042 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.043 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.043 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.048 I llama_model_loader: - type  f32:   37 tensors
0.00.132.050 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.051 I llama_model_loader: - type q6_K:   19 tensors
0.00.186.510 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.758 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.430 I llm_load_vocab: special tokens cache size = 5
0.00.221.252 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.264 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.265 I llm_load_print_meta: arch             = gemma
0.00.221.266 I llm_load_print_meta: vocab type       = SPM
0.00.221.267 I llm_load_print_meta: n_vocab          = 256000
0.00.221.267 I llm_load_print_meta: n_merges         = 0
0.00.221.267 I llm_load_print_meta: vocab_only       = 0
0.00.221.268 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.268 I llm_load_print_meta: n_embd           = 2048
0.00.221.268 I llm_load_print_meta: n_layer          = 18
0.00.221.279 I llm_load_print_meta: n_head           = 8
0.00.221.280 I llm_load_print_meta: n_head_kv        = 1
0.00.221.280 I llm_load_print_meta: n_rot            = 256
0.00.221.280 I llm_load_print_meta: n_swa            = 0
0.00.221.281 I llm_load_print_meta: n_embd_head_k    = 256
0.00.221.281 I llm_load_print_meta: n_embd_head_v    = 256
0.00.221.282 I llm_load_print_meta: n_gqa            = 8
0.00.221.283 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.221.284 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.221.285 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.221.286 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.221.287 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.221.287 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.221.287 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.221.288 I llm_load_print_meta: n_ff             = 16384
0.00.221.289 I llm_load_print_meta: n_expert         = 0
0.00.221.289 I llm_load_print_meta: n_expert_used    = 0
0.00.221.289 I llm_load_print_meta: causal attn      = 1
0.00.221.289 I llm_load_print_meta: pooling type     = 0
0.00.221.290 I llm_load_print_meta: rope type        = 2
0.00.221.290 I llm_load_print_meta: rope scaling     = linear
0.00.221.291 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.292 I llm_load_print_meta: freq_scale_train = 1
0.00.221.292 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.293 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.293 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.293 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.293 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.294 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.294 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.294 I llm_load_print_meta: model type       = 2B
0.00.221.295 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.221.296 I llm_load_print_meta: model params     = 2.51 B
0.00.221.297 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.221.297 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.297 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.298 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.298 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.298 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.299 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.299 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.300 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.300 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.300 I llm_load_print_meta: max token length = 93
0.00.221.323 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.280.998 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.281.003 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.281.004 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.281.005 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.281.005 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.281.006 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.285.997 I llama_new_context_with_model: n_ctx      = 8192
0.00.286.003 I llama_new_context_with_model: n_batch    = 2048
0.00.286.003 I llama_new_context_with_model: n_ubatch   = 512
0.00.286.004 I llama_new_context_with_model: flash_attn = 0
0.00.286.006 I llama_new_context_with_model: freq_base  = 10000.0
0.00.286.007 I llama_new_context_with_model: freq_scale = 1
0.00.314.604 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.314.617 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.314.706 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.315.587 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.315.594 I llama_new_context_with_model: graph nodes  = 601
0.00.315.594 I llama_new_context_with_model: graph splits = 1
0.00.315.596 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.397.483 I main: llama threadpool init, n_threads = 4
0.00.397.494 I 
0.00.397.568 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.397.571 I 
0.00.397.609 I sampler seed: 3868882950
0.00.397.618 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.397.621 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.397.622 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.397.622 I 
 encompasses, but they lack the understanding of the situation and the ability to respond appropriately.

**What is the solution?**

**A.** Provide them

0.02.035.059 I llama_perf_sampler_print:    sampling time =       5.47 ms /    33 runs   (    0.17 ms per token,  6032.91 tokens per second)
0.02.035.061 I llama_perf_context_print:        load time =     395.55 ms
0.02.035.062 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.035.063 I llama_perf_context_print:        eval time =    1618.38 ms /    32 runs   (   50.57 ms per token,    19.77 tokens per second)
0.02.035.064 I llama_perf_context_print:       total time =    1637.58 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3873 (a7ad5535)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32024.92 ms
main:    total time = 32024.92 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.464 I build: 3873 (a7ad5535) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.658 I main: llama backend init
0.00.001.781 I main: load the model and apply lora adapter, if any
0.00.022.099 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.112 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.119 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.120 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.124 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.125 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.126 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.127 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.128 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.128 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.133 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.133 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.134 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.134 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.135 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.496 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.602 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.575 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.581 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.582 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.582 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.583 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.584 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.585 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.587 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.588 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.592 I llama_model_loader: - type  f32:   37 tensors
0.00.134.595 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.595 I llama_model_loader: - type q6_K:   19 tensors
0.00.190.200 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.203.772 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.204.484 I llm_load_vocab: special tokens cache size = 5
0.00.225.408 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.225.422 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.225.422 I llm_load_print_meta: arch             = gemma
0.00.225.423 I llm_load_print_meta: vocab type       = SPM
0.00.225.423 I llm_load_print_meta: n_vocab          = 256000
0.00.225.424 I llm_load_print_meta: n_merges         = 0
0.00.225.424 I llm_load_print_meta: vocab_only       = 0
0.00.225.424 I llm_load_print_meta: n_ctx_train      = 8192
0.00.225.425 I llm_load_print_meta: n_embd           = 2048
0.00.225.425 I llm_load_print_meta: n_layer          = 18
0.00.225.437 I llm_load_print_meta: n_head           = 8
0.00.225.438 I llm_load_print_meta: n_head_kv        = 1
0.00.225.439 I llm_load_print_meta: n_rot            = 256
0.00.225.439 I llm_load_print_meta: n_swa            = 0
0.00.225.439 I llm_load_print_meta: n_embd_head_k    = 256
0.00.225.440 I llm_load_print_meta: n_embd_head_v    = 256
0.00.225.441 I llm_load_print_meta: n_gqa            = 8
0.00.225.442 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.225.443 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.225.443 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.225.445 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.225.445 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.225.446 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.225.446 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.225.447 I llm_load_print_meta: n_ff             = 16384
0.00.225.447 I llm_load_print_meta: n_expert         = 0
0.00.225.448 I llm_load_print_meta: n_expert_used    = 0
0.00.225.448 I llm_load_print_meta: causal attn      = 1
0.00.225.448 I llm_load_print_meta: pooling type     = 0
0.00.225.449 I llm_load_print_meta: rope type        = 2
0.00.225.449 I llm_load_print_meta: rope scaling     = linear
0.00.225.451 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.225.451 I llm_load_print_meta: freq_scale_train = 1
0.00.225.451 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.225.452 I llm_load_print_meta: rope_finetuned   = unknown
0.00.225.452 I llm_load_print_meta: ssm_d_conv       = 0
0.00.225.452 I llm_load_print_meta: ssm_d_inner      = 0
0.00.225.452 I llm_load_print_meta: ssm_d_state      = 0
0.00.225.453 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.225.453 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.225.454 I llm_load_print_meta: model type       = 2B
0.00.225.454 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.225.455 I llm_load_print_meta: model params     = 2.51 B
0.00.225.456 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.225.456 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.225.457 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.225.457 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.225.457 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.225.458 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.225.458 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.225.458 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.225.459 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.225.459 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.225.460 I llm_load_print_meta: max token length = 93
0.00.225.478 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.283.327 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.288.223 I llama_new_context_with_model: n_ctx      = 8192
0.00.288.229 I llama_new_context_with_model: n_batch    = 2048
0.00.288.229 I llama_new_context_with_model: n_ubatch   = 512
0.00.288.229 I llama_new_context_with_model: flash_attn = 0
0.00.288.231 I llama_new_context_with_model: freq_base  = 10000.0
0.00.288.233 I llama_new_context_with_model: freq_scale = 1
0.00.317.731 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.317.748 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.317.842 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.318.683 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.318.690 I llama_new_context_with_model: graph nodes  = 601
0.00.318.690 I llama_new_context_with_model: graph splits = 1
0.00.318.692 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.399.007 I main: llama threadpool init, n_threads = 4
0.00.399.020 I 
0.00.399.098 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.399.101 I 
0.00.399.139 I sampler seed: 342878171
0.00.399.149 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.399.152 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.399.152 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.399.153 I 
 seconally, then parry.

This is a battle cry for a group of soldiers.

**Analysis:**

The battle cry is a call to action,

0.02.019.747 I llama_perf_sampler_print:    sampling time =       5.52 ms /    33 runs   (    0.17 ms per token,  5982.60 tokens per second)
0.02.019.750 I llama_perf_context_print:        load time =     397.16 ms
0.02.019.751 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.019.752 I llama_perf_context_print:        eval time =    1602.17 ms /    32 runs   (   50.07 ms per token,    19.97 tokens per second)
0.02.019.754 I llama_perf_context_print:       total time =    1620.75 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.213s
user	8m14.864s
sys	0m7.048s
