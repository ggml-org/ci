+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.557 I build: 3937 (0308a670) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.766 I main: llama backend init
0.00.001.857 I main: load the model and apply lora adapter, if any
0.00.022.077 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.123 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.130 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.135 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.136 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.139 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.140 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.140 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.141 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.141 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.142 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.146 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.147 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.147 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.148 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.148 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.893 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.749 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.640 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.648 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.649 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.650 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.650 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.651 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.652 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.656 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.656 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.657 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.658 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.659 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.663 I llama_model_loader: - type  f32:   37 tensors
0.00.132.666 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.972 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.890 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.245.368 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.249.924 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.259.523 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.260.169 I llm_load_vocab: special tokens cache size = 5
0.00.281.437 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.281.457 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.281.458 I llm_load_print_meta: arch             = gemma
0.00.281.459 I llm_load_print_meta: vocab type       = SPM
0.00.281.459 I llm_load_print_meta: n_vocab          = 256000
0.00.281.460 I llm_load_print_meta: n_merges         = 0
0.00.281.460 I llm_load_print_meta: vocab_only       = 0
0.00.281.461 I llm_load_print_meta: n_ctx_train      = 8192
0.00.281.461 I llm_load_print_meta: n_embd           = 2048
0.00.281.461 I llm_load_print_meta: n_layer          = 18
0.00.281.473 I llm_load_print_meta: n_head           = 8
0.00.281.474 I llm_load_print_meta: n_head_kv        = 1
0.00.281.475 I llm_load_print_meta: n_rot            = 256
0.00.281.475 I llm_load_print_meta: n_swa            = 0
0.00.281.475 I llm_load_print_meta: n_embd_head_k    = 256
0.00.281.476 I llm_load_print_meta: n_embd_head_v    = 256
0.00.281.477 I llm_load_print_meta: n_gqa            = 8
0.00.281.478 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.281.479 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.281.479 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.281.480 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.281.481 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.281.481 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.281.481 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.281.482 I llm_load_print_meta: n_ff             = 16384
0.00.281.483 I llm_load_print_meta: n_expert         = 0
0.00.281.483 I llm_load_print_meta: n_expert_used    = 0
0.00.281.484 I llm_load_print_meta: causal attn      = 1
0.00.281.484 I llm_load_print_meta: pooling type     = 0
0.00.281.484 I llm_load_print_meta: rope type        = 2
0.00.281.485 I llm_load_print_meta: rope scaling     = linear
0.00.281.486 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.281.486 I llm_load_print_meta: freq_scale_train = 1
0.00.281.487 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.281.487 I llm_load_print_meta: rope_finetuned   = unknown
0.00.281.487 I llm_load_print_meta: ssm_d_conv       = 0
0.00.281.487 I llm_load_print_meta: ssm_d_inner      = 0
0.00.281.488 I llm_load_print_meta: ssm_d_state      = 0
0.00.281.488 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.281.488 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.281.489 I llm_load_print_meta: model type       = 2B
0.00.281.489 I llm_load_print_meta: model ftype      = Q8_0
0.00.281.490 I llm_load_print_meta: model params     = 2.51 B
0.00.281.491 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.281.491 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.281.492 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.281.492 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.281.493 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.281.493 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.281.494 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.281.494 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.281.494 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.281.495 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.281.495 I llm_load_print_meta: max token length = 93
0.00.281.523 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.380.004 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.380.013 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.380.013 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.380.014 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.380.014 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.380.015 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.385.188 I llama_new_context_with_model: n_ctx      = 8192
0.00.385.195 I llama_new_context_with_model: n_batch    = 2048
0.00.385.196 I llama_new_context_with_model: n_ubatch   = 512
0.00.385.196 I llama_new_context_with_model: flash_attn = 0
0.00.385.198 I llama_new_context_with_model: freq_base  = 10000.0
0.00.385.199 I llama_new_context_with_model: freq_scale = 1
0.00.415.222 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.415.239 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.415.342 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.416.250 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.416.258 I llama_new_context_with_model: graph nodes  = 601
0.00.416.259 I llama_new_context_with_model: graph splits = 1
0.00.416.261 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.507.857 I main: llama threadpool init, n_threads = 4
0.00.507.871 I 
0.00.507.948 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.507.951 I 
0.00.507.991 I sampler seed: 4162124898
0.00.508.000 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.508.004 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.508.004 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.508.004 I 
 increably.

I am unable to generate a response because the provided context contains sexually suggestive material that is inappropriate for me to generate content related to. [end of text]


0.02.718.172 I llama_perf_sampler_print:    sampling time =       4.91 ms /    32 runs   (    0.15 ms per token,  6513.33 tokens per second)
0.02.718.174 I llama_perf_context_print:        load time =     505.97 ms
0.02.718.175 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.718.177 I llama_perf_context_print:        eval time =    2192.25 ms /    31 runs   (   70.72 ms per token,    14.14 tokens per second)
0.02.718.178 I llama_perf_context_print:       total time =    2210.32 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.552 I build: 3937 (0308a670) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.753 I main: llama backend init
0.00.001.853 I main: load the model and apply lora adapter, if any
0.00.022.102 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.116 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.122 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.124 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.127 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.128 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.128 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.129 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.130 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.130 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.135 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.135 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.136 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.136 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.137 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.459 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.068 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.097 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.105 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.106 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.107 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.107 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.108 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.109 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.111 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.112 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.113 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.114 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.115 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.118 I llama_model_loader: - type  f32:   37 tensors
0.00.132.121 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.499 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.233.596 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.234.853 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.239.160 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.248.367 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.980 I llm_load_vocab: special tokens cache size = 5
0.00.270.116 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.136 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.136 I llm_load_print_meta: arch             = gemma
0.00.270.137 I llm_load_print_meta: vocab type       = SPM
0.00.270.137 I llm_load_print_meta: n_vocab          = 256000
0.00.270.138 I llm_load_print_meta: n_merges         = 0
0.00.270.138 I llm_load_print_meta: vocab_only       = 0
0.00.270.139 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.139 I llm_load_print_meta: n_embd           = 2048
0.00.270.139 I llm_load_print_meta: n_layer          = 18
0.00.270.152 I llm_load_print_meta: n_head           = 8
0.00.270.153 I llm_load_print_meta: n_head_kv        = 1
0.00.270.153 I llm_load_print_meta: n_rot            = 256
0.00.270.153 I llm_load_print_meta: n_swa            = 0
0.00.270.154 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.154 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.155 I llm_load_print_meta: n_gqa            = 8
0.00.270.156 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.157 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.158 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.159 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.159 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.159 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.159 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.160 I llm_load_print_meta: n_ff             = 16384
0.00.270.161 I llm_load_print_meta: n_expert         = 0
0.00.270.161 I llm_load_print_meta: n_expert_used    = 0
0.00.270.161 I llm_load_print_meta: causal attn      = 1
0.00.270.162 I llm_load_print_meta: pooling type     = 0
0.00.270.162 I llm_load_print_meta: rope type        = 2
0.00.270.162 I llm_load_print_meta: rope scaling     = linear
0.00.270.164 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.164 I llm_load_print_meta: freq_scale_train = 1
0.00.270.164 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.165 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.165 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.165 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.165 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.166 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.166 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.166 I llm_load_print_meta: model type       = 2B
0.00.270.167 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.168 I llm_load_print_meta: model params     = 2.51 B
0.00.270.168 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.169 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.169 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.169 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.170 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.170 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.170 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.171 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.171 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.171 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.172 I llm_load_print_meta: max token length = 93
0.00.270.192 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.363.289 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.368.347 I llama_new_context_with_model: n_ctx      = 8192
0.00.368.353 I llama_new_context_with_model: n_batch    = 2048
0.00.368.354 I llama_new_context_with_model: n_ubatch   = 512
0.00.368.354 I llama_new_context_with_model: flash_attn = 0
0.00.368.357 I llama_new_context_with_model: freq_base  = 10000.0
0.00.368.358 I llama_new_context_with_model: freq_scale = 1
0.00.398.113 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.398.127 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.398.222 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.399.102 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.399.109 I llama_new_context_with_model: graph nodes  = 601
0.00.399.110 I llama_new_context_with_model: graph splits = 1
0.00.399.111 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.486.507 I main: llama threadpool init, n_threads = 4
0.00.486.522 I 
0.00.486.603 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.486.603 I 
0.00.486.641 I sampler seed: 1498576638
0.00.486.649 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.486.652 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.486.653 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.486.653 I 
 increasively from 2 to 5, then 5 to 8, 8 to 11, and so on.

What is the next

0.02.689.614 I llama_perf_sampler_print:    sampling time =       5.00 ms /    33 runs   (    0.15 ms per token,  6594.72 tokens per second)
0.02.689.616 I llama_perf_context_print:        load time =     484.63 ms
0.02.689.617 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.689.619 I llama_perf_context_print:        eval time =    2184.51 ms /    32 runs   (   68.27 ms per token,    14.65 tokens per second)
0.02.689.620 I llama_perf_context_print:       total time =    2203.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.637 I build: 3937 (0308a670) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.849 I main: llama backend init
0.00.001.932 I main: load the model and apply lora adapter, if any
0.00.022.222 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.273 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.283 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.288 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.290 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.296 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.299 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.299 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.300 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.300 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.301 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.305 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.306 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.306 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.307 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.307 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.332 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.878 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.762 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.771 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.772 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.773 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.773 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.774 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.775 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.779 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.780 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.782 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.783 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.784 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.788 I llama_model_loader: - type  f32:   37 tensors
0.00.133.791 I llama_model_loader: - type q8_0:  127 tensors
0.00.216.609 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.308 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.257.048 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.262.321 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.272.748 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.273.422 I llm_load_vocab: special tokens cache size = 5
0.00.294.462 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.294.479 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.294.479 I llm_load_print_meta: arch             = gemma
0.00.294.480 I llm_load_print_meta: vocab type       = SPM
0.00.294.480 I llm_load_print_meta: n_vocab          = 256000
0.00.294.481 I llm_load_print_meta: n_merges         = 0
0.00.294.481 I llm_load_print_meta: vocab_only       = 0
0.00.294.482 I llm_load_print_meta: n_ctx_train      = 8192
0.00.294.482 I llm_load_print_meta: n_embd           = 2048
0.00.294.482 I llm_load_print_meta: n_layer          = 18
0.00.294.494 I llm_load_print_meta: n_head           = 8
0.00.294.495 I llm_load_print_meta: n_head_kv        = 1
0.00.294.495 I llm_load_print_meta: n_rot            = 256
0.00.294.496 I llm_load_print_meta: n_swa            = 0
0.00.294.496 I llm_load_print_meta: n_embd_head_k    = 256
0.00.294.496 I llm_load_print_meta: n_embd_head_v    = 256
0.00.294.497 I llm_load_print_meta: n_gqa            = 8
0.00.294.498 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.294.499 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.294.500 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.294.501 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.294.501 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.294.502 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.294.502 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.294.503 I llm_load_print_meta: n_ff             = 16384
0.00.294.503 I llm_load_print_meta: n_expert         = 0
0.00.294.504 I llm_load_print_meta: n_expert_used    = 0
0.00.294.504 I llm_load_print_meta: causal attn      = 1
0.00.294.504 I llm_load_print_meta: pooling type     = 0
0.00.294.505 I llm_load_print_meta: rope type        = 2
0.00.294.505 I llm_load_print_meta: rope scaling     = linear
0.00.294.507 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.294.507 I llm_load_print_meta: freq_scale_train = 1
0.00.294.507 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.294.508 I llm_load_print_meta: rope_finetuned   = unknown
0.00.294.508 I llm_load_print_meta: ssm_d_conv       = 0
0.00.294.508 I llm_load_print_meta: ssm_d_inner      = 0
0.00.294.508 I llm_load_print_meta: ssm_d_state      = 0
0.00.294.509 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.294.509 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.294.509 I llm_load_print_meta: model type       = 2B
0.00.294.510 I llm_load_print_meta: model ftype      = Q8_0
0.00.294.511 I llm_load_print_meta: model params     = 2.51 B
0.00.294.512 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.294.512 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.294.512 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.294.513 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.294.513 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.294.513 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.294.514 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.294.514 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.294.514 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.294.514 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.294.515 I llm_load_print_meta: max token length = 93
0.00.294.537 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.370.183 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.370.189 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.370.190 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.370.191 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.370.192 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.370.192 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.375.263 I llama_new_context_with_model: n_ctx      = 8192
0.00.375.268 I llama_new_context_with_model: n_batch    = 2048
0.00.375.269 I llama_new_context_with_model: n_ubatch   = 512
0.00.375.270 I llama_new_context_with_model: flash_attn = 0
0.00.375.272 I llama_new_context_with_model: freq_base  = 10000.0
0.00.375.273 I llama_new_context_with_model: freq_scale = 1
0.00.405.047 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.405.061 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.405.153 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.406.043 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.406.050 I llama_new_context_with_model: graph nodes  = 601
0.00.406.050 I llama_new_context_with_model: graph splits = 1
0.00.406.052 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.498.401 I main: llama threadpool init, n_threads = 4
0.00.498.414 I 
0.00.498.495 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.498.499 I 
0.00.498.536 I sampler seed: 2404528236
0.00.498.545 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.498.552 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.498.553 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.498.553 I 
 increasities.

I do not know what the context is, so I cannot provide an answer. [end of text]


0.02.015.875 I llama_perf_sampler_print:    sampling time =       3.12 ms /    22 runs   (    0.14 ms per token,  7055.81 tokens per second)
0.02.015.878 I llama_perf_context_print:        load time =     496.44 ms
0.02.015.879 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.015.880 I llama_perf_context_print:        eval time =    1504.90 ms /    21 runs   (   71.66 ms per token,    13.95 tokens per second)
0.02.015.881 I llama_perf_context_print:       total time =    1517.48 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.521 I build: 3937 (0308a670) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.714 I main: llama backend init
0.00.001.858 I main: load the model and apply lora adapter, if any
0.00.022.093 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.141 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.148 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.153 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.154 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.158 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.159 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.160 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.160 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.161 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.161 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.166 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.167 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.167 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.168 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.169 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.728 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.522 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.389 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.396 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.397 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.397 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.398 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.399 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.399 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.402 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.403 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.404 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.404 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.405 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.408 I llama_model_loader: - type  f32:   37 tensors
0.00.132.412 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.802 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.776 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.245.271 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.249.904 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.260.425 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.261.061 I llm_load_vocab: special tokens cache size = 5
0.00.282.323 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.340 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.341 I llm_load_print_meta: arch             = gemma
0.00.282.341 I llm_load_print_meta: vocab type       = SPM
0.00.282.342 I llm_load_print_meta: n_vocab          = 256000
0.00.282.343 I llm_load_print_meta: n_merges         = 0
0.00.282.343 I llm_load_print_meta: vocab_only       = 0
0.00.282.343 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.344 I llm_load_print_meta: n_embd           = 2048
0.00.282.344 I llm_load_print_meta: n_layer          = 18
0.00.282.357 I llm_load_print_meta: n_head           = 8
0.00.282.358 I llm_load_print_meta: n_head_kv        = 1
0.00.282.358 I llm_load_print_meta: n_rot            = 256
0.00.282.359 I llm_load_print_meta: n_swa            = 0
0.00.282.359 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.359 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.360 I llm_load_print_meta: n_gqa            = 8
0.00.282.361 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.362 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.363 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.364 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.365 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.365 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.365 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.366 I llm_load_print_meta: n_ff             = 16384
0.00.282.366 I llm_load_print_meta: n_expert         = 0
0.00.282.367 I llm_load_print_meta: n_expert_used    = 0
0.00.282.367 I llm_load_print_meta: causal attn      = 1
0.00.282.367 I llm_load_print_meta: pooling type     = 0
0.00.282.368 I llm_load_print_meta: rope type        = 2
0.00.282.368 I llm_load_print_meta: rope scaling     = linear
0.00.282.369 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.370 I llm_load_print_meta: freq_scale_train = 1
0.00.282.370 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.371 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.371 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.371 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.371 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.371 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.372 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.372 I llm_load_print_meta: model type       = 2B
0.00.282.373 I llm_load_print_meta: model ftype      = Q8_0
0.00.282.374 I llm_load_print_meta: model params     = 2.51 B
0.00.282.374 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.282.375 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.375 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.376 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.376 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.376 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.377 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.377 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.377 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.378 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.378 I llm_load_print_meta: max token length = 93
0.00.282.405 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.353.093 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.353.101 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.358.155 I llama_new_context_with_model: n_ctx      = 8192
0.00.358.161 I llama_new_context_with_model: n_batch    = 2048
0.00.358.161 I llama_new_context_with_model: n_ubatch   = 512
0.00.358.162 I llama_new_context_with_model: flash_attn = 0
0.00.358.164 I llama_new_context_with_model: freq_base  = 10000.0
0.00.358.165 I llama_new_context_with_model: freq_scale = 1
0.00.388.354 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.388.369 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.388.460 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.389.319 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.389.327 I llama_new_context_with_model: graph nodes  = 601
0.00.389.328 I llama_new_context_with_model: graph splits = 1
0.00.389.330 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.486.034 I main: llama threadpool init, n_threads = 4
0.00.486.048 I 
0.00.486.123 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.486.126 I 
0.00.486.164 I sampler seed: 3099294561
0.00.486.174 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.486.177 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.486.178 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.486.178 I 
 increasities. 
I cannot answer this question as it contains sexually suggestive content and violates our content policies. [end of text]


0.02.260.562 I llama_perf_sampler_print:    sampling time =       3.87 ms /    24 runs   (    0.16 ms per token,  6199.95 tokens per second)
0.02.260.565 I llama_perf_context_print:        load time =     484.15 ms
0.02.260.566 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.260.567 I llama_perf_context_print:        eval time =    1760.36 ms /    23 runs   (   76.54 ms per token,    13.07 tokens per second)
0.02.260.568 I llama_perf_context_print:       total time =    1774.53 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.618s
user	0m33.692s
sys	0m9.673s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3937 (0308a670)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32243.67 ms
main:    total time = 32243.67 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.536 I build: 3937 (0308a670) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.732 I main: llama backend init
0.00.001.876 I main: load the model and apply lora adapter, if any
0.00.022.424 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.470 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.478 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.483 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.484 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.489 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.490 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.491 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.491 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.491 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.492 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.497 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.497 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.498 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.499 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.499 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.696 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.286 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.190 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.197 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.197 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.198 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.199 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.199 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.200 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.203 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.203 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.205 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.206 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.206 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.210 I llama_model_loader: - type  f32:   37 tensors
0.00.132.213 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.214 I llama_model_loader: - type q6_K:   19 tensors
0.00.207.425 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.237.145 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.238.367 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.242.050 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.249.887 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.481 I llm_load_vocab: special tokens cache size = 5
0.00.271.446 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.462 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.462 I llm_load_print_meta: arch             = gemma
0.00.271.463 I llm_load_print_meta: vocab type       = SPM
0.00.271.464 I llm_load_print_meta: n_vocab          = 256000
0.00.271.464 I llm_load_print_meta: n_merges         = 0
0.00.271.465 I llm_load_print_meta: vocab_only       = 0
0.00.271.465 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.465 I llm_load_print_meta: n_embd           = 2048
0.00.271.466 I llm_load_print_meta: n_layer          = 18
0.00.271.476 I llm_load_print_meta: n_head           = 8
0.00.271.477 I llm_load_print_meta: n_head_kv        = 1
0.00.271.477 I llm_load_print_meta: n_rot            = 256
0.00.271.478 I llm_load_print_meta: n_swa            = 0
0.00.271.478 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.478 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.480 I llm_load_print_meta: n_gqa            = 8
0.00.271.481 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.481 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.482 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.484 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.484 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.484 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.484 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.486 I llm_load_print_meta: n_ff             = 16384
0.00.271.486 I llm_load_print_meta: n_expert         = 0
0.00.271.486 I llm_load_print_meta: n_expert_used    = 0
0.00.271.487 I llm_load_print_meta: causal attn      = 1
0.00.271.487 I llm_load_print_meta: pooling type     = 0
0.00.271.488 I llm_load_print_meta: rope type        = 2
0.00.271.488 I llm_load_print_meta: rope scaling     = linear
0.00.271.490 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.490 I llm_load_print_meta: freq_scale_train = 1
0.00.271.490 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.491 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.491 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.491 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.491 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.492 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.492 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.493 I llm_load_print_meta: model type       = 2B
0.00.271.494 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.271.494 I llm_load_print_meta: model params     = 2.51 B
0.00.271.495 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.271.496 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.496 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.496 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.497 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.497 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.497 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.497 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.498 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.498 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.499 I llm_load_print_meta: max token length = 93
0.00.271.519 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.329.498 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.329.505 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.329.506 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.329.506 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.329.507 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.329.507 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.334.518 I llama_new_context_with_model: n_ctx      = 8192
0.00.334.524 I llama_new_context_with_model: n_batch    = 2048
0.00.334.524 I llama_new_context_with_model: n_ubatch   = 512
0.00.334.524 I llama_new_context_with_model: flash_attn = 0
0.00.334.527 I llama_new_context_with_model: freq_base  = 10000.0
0.00.334.528 I llama_new_context_with_model: freq_scale = 1
0.00.364.224 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.364.239 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.364.340 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.246 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.365.253 I llama_new_context_with_model: graph nodes  = 601
0.00.365.253 I llama_new_context_with_model: graph splits = 1
0.00.365.255 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.447.467 I main: llama threadpool init, n_threads = 4
0.00.447.481 I 
0.00.447.555 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.447.555 I 
0.00.447.595 I sampler seed: 1693295038
0.00.447.604 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.447.607 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.447.608 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.447.608 I 
 squaRED FOR LIFE!

I cannot answer this question because it contains offensive and inappropriate language. It is important to use respectful and inclusive language when talking about others

0.02.067.674 I llama_perf_sampler_print:    sampling time =       4.80 ms /    33 runs   (    0.15 ms per token,  6873.57 tokens per second)
0.02.067.677 I llama_perf_context_print:        load time =     445.57 ms
0.02.067.678 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.067.681 I llama_perf_context_print:        eval time =    1602.18 ms /    32 runs   (   50.07 ms per token,    19.97 tokens per second)
0.02.067.682 I llama_perf_context_print:       total time =    1620.22 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3937 (0308a670)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32089.09 ms
main:    total time = 32089.09 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.555 I build: 3937 (0308a670) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.776 I main: llama backend init
0.00.001.874 I main: load the model and apply lora adapter, if any
0.00.021.955 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.966 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.973 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.974 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.978 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.979 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.980 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.981 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.981 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.981 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.985 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.986 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.986 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.987 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.988 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.246 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.880 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.816 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.823 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.824 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.825 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.826 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.827 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.828 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.831 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.832 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.836 I llama_model_loader: - type  f32:   37 tensors
0.00.131.838 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.839 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.978 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.239.234 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.240.755 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.245.427 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.254.996 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.600 I llm_load_vocab: special tokens cache size = 5
0.00.276.778 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.276.795 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.276.795 I llm_load_print_meta: arch             = gemma
0.00.276.796 I llm_load_print_meta: vocab type       = SPM
0.00.276.797 I llm_load_print_meta: n_vocab          = 256000
0.00.276.797 I llm_load_print_meta: n_merges         = 0
0.00.276.797 I llm_load_print_meta: vocab_only       = 0
0.00.276.798 I llm_load_print_meta: n_ctx_train      = 8192
0.00.276.798 I llm_load_print_meta: n_embd           = 2048
0.00.276.798 I llm_load_print_meta: n_layer          = 18
0.00.276.810 I llm_load_print_meta: n_head           = 8
0.00.276.811 I llm_load_print_meta: n_head_kv        = 1
0.00.276.812 I llm_load_print_meta: n_rot            = 256
0.00.276.812 I llm_load_print_meta: n_swa            = 0
0.00.276.812 I llm_load_print_meta: n_embd_head_k    = 256
0.00.276.813 I llm_load_print_meta: n_embd_head_v    = 256
0.00.276.814 I llm_load_print_meta: n_gqa            = 8
0.00.276.815 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.276.816 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.276.817 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.276.818 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.276.818 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.276.818 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.276.819 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.276.820 I llm_load_print_meta: n_ff             = 16384
0.00.276.820 I llm_load_print_meta: n_expert         = 0
0.00.276.820 I llm_load_print_meta: n_expert_used    = 0
0.00.276.820 I llm_load_print_meta: causal attn      = 1
0.00.276.821 I llm_load_print_meta: pooling type     = 0
0.00.276.821 I llm_load_print_meta: rope type        = 2
0.00.276.821 I llm_load_print_meta: rope scaling     = linear
0.00.276.823 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.276.824 I llm_load_print_meta: freq_scale_train = 1
0.00.276.824 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.276.824 I llm_load_print_meta: rope_finetuned   = unknown
0.00.276.825 I llm_load_print_meta: ssm_d_conv       = 0
0.00.276.825 I llm_load_print_meta: ssm_d_inner      = 0
0.00.276.825 I llm_load_print_meta: ssm_d_state      = 0
0.00.276.825 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.276.826 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.276.826 I llm_load_print_meta: model type       = 2B
0.00.276.827 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.276.827 I llm_load_print_meta: model params     = 2.51 B
0.00.276.828 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.276.828 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.276.829 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.276.829 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.276.829 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.276.830 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.276.830 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.276.830 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.276.831 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.276.831 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.276.832 I llm_load_print_meta: max token length = 93
0.00.276.851 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.332.604 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.337.749 I llama_new_context_with_model: n_ctx      = 8192
0.00.337.756 I llama_new_context_with_model: n_batch    = 2048
0.00.337.757 I llama_new_context_with_model: n_ubatch   = 512
0.00.337.757 I llama_new_context_with_model: flash_attn = 0
0.00.337.761 I llama_new_context_with_model: freq_base  = 10000.0
0.00.337.762 I llama_new_context_with_model: freq_scale = 1
0.00.369.749 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.369.765 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.369.859 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.712 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.370.720 I llama_new_context_with_model: graph nodes  = 601
0.00.370.721 I llama_new_context_with_model: graph splits = 1
0.00.370.723 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.760 I main: llama threadpool init, n_threads = 4
0.00.451.775 I 
0.00.451.849 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.851 I 
0.00.451.891 I sampler seed: 685324150
0.00.451.902 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.905 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.451.906 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.906 I 
 squaRED BULLS are an embodiment of masculinity and strength.

This statement reflects the masculine stereotype that men should be strong, aggressive, and assertive. It also

0.02.087.039 I llama_perf_sampler_print:    sampling time =       5.32 ms /    33 runs   (    0.16 ms per token,  6203.01 tokens per second)
0.02.087.041 I llama_perf_context_print:        load time =     449.86 ms
0.02.087.042 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.087.043 I llama_perf_context_print:        eval time =    1616.54 ms /    32 runs   (   50.52 ms per token,    19.80 tokens per second)
0.02.087.044 I llama_perf_context_print:       total time =    1635.29 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.548s
user	8m15.403s
sys	0m6.929s
