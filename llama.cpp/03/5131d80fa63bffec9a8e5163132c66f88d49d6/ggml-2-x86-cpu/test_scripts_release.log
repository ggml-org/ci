+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.536 I build: 3976 (035131d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.729 I main: llama backend init
0.00.001.836 I main: load the model and apply lora adapter, if any
0.00.022.048 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.097 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.104 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.114 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.115 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.118 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.121 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.122 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.123 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.124 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.124 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.135 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.137 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.138 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.142 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.143 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.418 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.434 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.163 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.170 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.171 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.171 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.172 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.173 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.174 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.177 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.178 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.179 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.180 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.181 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.185 I llama_model_loader: - type  f32:   37 tensors
0.00.132.187 I llama_model_loader: - type q8_0:  127 tensors
0.00.219.612 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.266.453 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.267.051 I llm_load_vocab: special tokens cache size = 5
0.00.288.151 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.288.170 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.288.170 I llm_load_print_meta: arch             = gemma
0.00.288.171 I llm_load_print_meta: vocab type       = SPM
0.00.288.171 I llm_load_print_meta: n_vocab          = 256000
0.00.288.172 I llm_load_print_meta: n_merges         = 0
0.00.288.172 I llm_load_print_meta: vocab_only       = 0
0.00.288.173 I llm_load_print_meta: n_ctx_train      = 8192
0.00.288.173 I llm_load_print_meta: n_embd           = 2048
0.00.288.173 I llm_load_print_meta: n_layer          = 18
0.00.288.185 I llm_load_print_meta: n_head           = 8
0.00.288.186 I llm_load_print_meta: n_head_kv        = 1
0.00.288.186 I llm_load_print_meta: n_rot            = 256
0.00.288.187 I llm_load_print_meta: n_swa            = 0
0.00.288.187 I llm_load_print_meta: n_embd_head_k    = 256
0.00.288.187 I llm_load_print_meta: n_embd_head_v    = 256
0.00.288.188 I llm_load_print_meta: n_gqa            = 8
0.00.288.189 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.288.190 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.288.191 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.288.192 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.288.192 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.288.193 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.288.193 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.288.194 I llm_load_print_meta: n_ff             = 16384
0.00.288.194 I llm_load_print_meta: n_expert         = 0
0.00.288.195 I llm_load_print_meta: n_expert_used    = 0
0.00.288.195 I llm_load_print_meta: causal attn      = 1
0.00.288.195 I llm_load_print_meta: pooling type     = 0
0.00.288.196 I llm_load_print_meta: rope type        = 2
0.00.288.196 I llm_load_print_meta: rope scaling     = linear
0.00.288.197 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.288.198 I llm_load_print_meta: freq_scale_train = 1
0.00.288.198 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.288.198 I llm_load_print_meta: rope_finetuned   = unknown
0.00.288.198 I llm_load_print_meta: ssm_d_conv       = 0
0.00.288.199 I llm_load_print_meta: ssm_d_inner      = 0
0.00.288.199 I llm_load_print_meta: ssm_d_state      = 0
0.00.288.199 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.288.199 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.288.200 I llm_load_print_meta: model type       = 2B
0.00.288.200 I llm_load_print_meta: model ftype      = Q8_0
0.00.288.201 I llm_load_print_meta: model params     = 2.51 B
0.00.288.202 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.288.203 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.288.203 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.288.203 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.288.204 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.288.204 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.288.204 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.288.205 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.288.205 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.288.205 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.288.206 I llm_load_print_meta: max token length = 93
0.00.288.227 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.386.886 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.386.895 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.386.895 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.386.896 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.386.896 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.386.897 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.392.022 I llama_new_context_with_model: n_ctx      = 8192
0.00.392.029 I llama_new_context_with_model: n_batch    = 2048
0.00.392.029 I llama_new_context_with_model: n_ubatch   = 512
0.00.392.030 I llama_new_context_with_model: flash_attn = 0
0.00.392.032 I llama_new_context_with_model: freq_base  = 10000.0
0.00.392.033 I llama_new_context_with_model: freq_scale = 1
0.00.422.077 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.422.093 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.422.179 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.423.095 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.423.104 I llama_new_context_with_model: graph nodes  = 601
0.00.423.104 I llama_new_context_with_model: graph splits = 1
0.00.423.105 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.513.985 I main: llama threadpool init, n_threads = 4
0.00.514.000 I 
0.00.514.087 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.514.093 I 
0.00.514.144 I sampler seed: 3229211138
0.00.514.157 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.514.159 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.514.160 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.514.163 I 
 increadibly. [end of text]


0.00.794.127 I llama_perf_sampler_print:    sampling time =       0.60 ms /     5 runs   (    0.12 ms per token,  8305.65 tokens per second)
0.00.794.129 I llama_perf_context_print:        load time =     512.13 ms
0.00.794.130 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.794.131 I llama_perf_context_print:        eval time =     276.98 ms /     4 runs   (   69.25 ms per token,    14.44 tokens per second)
0.00.794.132 I llama_perf_context_print:       total time =     280.15 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.522 I build: 3976 (035131d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.718 I main: llama backend init
0.00.001.832 I main: load the model and apply lora adapter, if any
0.00.022.111 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.125 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.132 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.133 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.139 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.140 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.141 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.141 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.142 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.142 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.147 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.147 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.148 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.148 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.149 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.972 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.803 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.572 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.578 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.579 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.580 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.581 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.582 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.583 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.587 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.587 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.588 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.589 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.590 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.594 I llama_model_loader: - type  f32:   37 tensors
0.00.132.597 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.927 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.197 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.654 I llm_load_vocab: special tokens cache size = 5
0.00.263.591 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.611 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.612 I llm_load_print_meta: arch             = gemma
0.00.263.612 I llm_load_print_meta: vocab type       = SPM
0.00.263.613 I llm_load_print_meta: n_vocab          = 256000
0.00.263.613 I llm_load_print_meta: n_merges         = 0
0.00.263.614 I llm_load_print_meta: vocab_only       = 0
0.00.263.614 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.614 I llm_load_print_meta: n_embd           = 2048
0.00.263.615 I llm_load_print_meta: n_layer          = 18
0.00.263.626 I llm_load_print_meta: n_head           = 8
0.00.263.626 I llm_load_print_meta: n_head_kv        = 1
0.00.263.627 I llm_load_print_meta: n_rot            = 256
0.00.263.627 I llm_load_print_meta: n_swa            = 0
0.00.263.628 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.628 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.629 I llm_load_print_meta: n_gqa            = 8
0.00.263.630 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.631 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.632 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.633 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.633 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.633 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.634 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.635 I llm_load_print_meta: n_ff             = 16384
0.00.263.635 I llm_load_print_meta: n_expert         = 0
0.00.263.635 I llm_load_print_meta: n_expert_used    = 0
0.00.263.635 I llm_load_print_meta: causal attn      = 1
0.00.263.636 I llm_load_print_meta: pooling type     = 0
0.00.263.636 I llm_load_print_meta: rope type        = 2
0.00.263.637 I llm_load_print_meta: rope scaling     = linear
0.00.263.638 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.639 I llm_load_print_meta: freq_scale_train = 1
0.00.263.639 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.639 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.639 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.640 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.640 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.640 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.640 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.641 I llm_load_print_meta: model type       = 2B
0.00.263.641 I llm_load_print_meta: model ftype      = Q8_0
0.00.263.642 I llm_load_print_meta: model params     = 2.51 B
0.00.263.643 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.263.643 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.644 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.644 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.645 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.645 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.645 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.646 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.646 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.647 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.647 I llm_load_print_meta: max token length = 93
0.00.263.670 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.357.262 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.362.342 I llama_new_context_with_model: n_ctx      = 8192
0.00.362.347 I llama_new_context_with_model: n_batch    = 2048
0.00.362.348 I llama_new_context_with_model: n_ubatch   = 512
0.00.362.348 I llama_new_context_with_model: flash_attn = 0
0.00.362.351 I llama_new_context_with_model: freq_base  = 10000.0
0.00.362.351 I llama_new_context_with_model: freq_scale = 1
0.00.391.409 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.391.424 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.391.517 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.392.353 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.392.361 I llama_new_context_with_model: graph nodes  = 601
0.00.392.362 I llama_new_context_with_model: graph splits = 1
0.00.392.363 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.479.917 I main: llama threadpool init, n_threads = 4
0.00.479.931 I 
0.00.480.006 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.480.010 I 
0.00.480.049 I sampler seed: 2583601766
0.00.480.060 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.480.068 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.480.069 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.480.069 I 
 seconary clauses

**Definitions of Secondary Clauses**

Secondary clauses are clauses that provide additional information or explanation about the main clause. They are usually dependent clauses,

0.02.664.819 I llama_perf_sampler_print:    sampling time =       4.95 ms /    33 runs   (    0.15 ms per token,  6669.36 tokens per second)
0.02.664.822 I llama_perf_context_print:        load time =     478.06 ms
0.02.664.823 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.664.824 I llama_perf_context_print:        eval time =    2165.03 ms /    32 runs   (   67.66 ms per token,    14.78 tokens per second)
0.02.664.825 I llama_perf_context_print:       total time =    2184.91 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.549 I build: 3976 (035131d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.785 I main: llama backend init
0.00.001.898 I main: load the model and apply lora adapter, if any
0.00.021.892 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.955 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.962 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.967 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.968 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.972 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.973 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.974 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.975 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.976 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.977 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.981 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.982 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.983 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.984 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.985 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.672 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.172 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.979 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.985 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.986 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.986 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.987 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.988 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.988 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.991 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.992 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.992 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.993 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.993 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.998 I llama_model_loader: - type  f32:   37 tensors
0.00.132.000 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.520 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.251.738 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.252.307 I llm_load_vocab: special tokens cache size = 5
0.00.273.344 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.273.361 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.273.361 I llm_load_print_meta: arch             = gemma
0.00.273.362 I llm_load_print_meta: vocab type       = SPM
0.00.273.362 I llm_load_print_meta: n_vocab          = 256000
0.00.273.363 I llm_load_print_meta: n_merges         = 0
0.00.273.363 I llm_load_print_meta: vocab_only       = 0
0.00.273.363 I llm_load_print_meta: n_ctx_train      = 8192
0.00.273.364 I llm_load_print_meta: n_embd           = 2048
0.00.273.364 I llm_load_print_meta: n_layer          = 18
0.00.273.376 I llm_load_print_meta: n_head           = 8
0.00.273.377 I llm_load_print_meta: n_head_kv        = 1
0.00.273.378 I llm_load_print_meta: n_rot            = 256
0.00.273.378 I llm_load_print_meta: n_swa            = 0
0.00.273.378 I llm_load_print_meta: n_embd_head_k    = 256
0.00.273.379 I llm_load_print_meta: n_embd_head_v    = 256
0.00.273.380 I llm_load_print_meta: n_gqa            = 8
0.00.273.381 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.273.383 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.273.384 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.273.386 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.273.387 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.273.391 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.273.392 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.273.394 I llm_load_print_meta: n_ff             = 16384
0.00.273.394 I llm_load_print_meta: n_expert         = 0
0.00.273.394 I llm_load_print_meta: n_expert_used    = 0
0.00.273.395 I llm_load_print_meta: causal attn      = 1
0.00.273.396 I llm_load_print_meta: pooling type     = 0
0.00.273.396 I llm_load_print_meta: rope type        = 2
0.00.273.396 I llm_load_print_meta: rope scaling     = linear
0.00.273.398 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.399 I llm_load_print_meta: freq_scale_train = 1
0.00.273.400 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.401 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.401 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.402 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.403 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.403 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.404 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.405 I llm_load_print_meta: model type       = 2B
0.00.273.405 I llm_load_print_meta: model ftype      = Q8_0
0.00.273.406 I llm_load_print_meta: model params     = 2.51 B
0.00.273.408 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.273.410 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.411 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.411 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.412 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.412 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.413 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.413 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.414 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.414 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.415 I llm_load_print_meta: max token length = 93
0.00.273.442 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.349.965 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.349.976 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.349.977 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.349.977 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.349.978 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.349.979 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.355.118 I llama_new_context_with_model: n_ctx      = 8192
0.00.355.127 I llama_new_context_with_model: n_batch    = 2048
0.00.355.127 I llama_new_context_with_model: n_ubatch   = 512
0.00.355.128 I llama_new_context_with_model: flash_attn = 0
0.00.355.131 I llama_new_context_with_model: freq_base  = 10000.0
0.00.355.132 I llama_new_context_with_model: freq_scale = 1
0.00.384.658 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.384.675 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.384.765 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.385.658 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.385.666 I llama_new_context_with_model: graph nodes  = 601
0.00.385.666 I llama_new_context_with_model: graph splits = 1
0.00.385.668 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.477.005 I main: llama threadpool init, n_threads = 4
0.00.477.019 I 
0.00.477.114 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.477.117 I 
0.00.477.162 I sampler seed: 860622637
0.00.477.173 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.477.175 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.477.176 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.477.176 I 
 increasities in the workplace.

**Workplace Harassment**

Harassment is defined as any conduct that is hostile or offensive towards an individual or group based on protected

0.02.762.265 I llama_perf_sampler_print:    sampling time =       5.14 ms /    33 runs   (    0.16 ms per token,  6415.24 tokens per second)
0.02.762.268 I llama_perf_context_print:        load time =     475.08 ms
0.02.762.269 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.762.270 I llama_perf_context_print:        eval time =    2264.75 ms /    32 runs   (   70.77 ms per token,    14.13 tokens per second)
0.02.762.271 I llama_perf_context_print:       total time =    2285.27 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.447 I build: 3976 (035131d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.654 I main: llama backend init
0.00.001.831 I main: load the model and apply lora adapter, if any
0.00.022.142 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.207 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.215 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.224 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.229 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.233 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.234 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.235 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.236 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.237 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.238 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.244 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.244 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.245 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.246 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.247 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.073 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.035 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.838 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.844 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.845 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.845 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.846 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.847 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.847 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.850 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.850 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.851 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.852 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.853 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.857 I llama_model_loader: - type  f32:   37 tensors
0.00.132.860 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.624 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.338 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.261.032 I llm_load_vocab: special tokens cache size = 5
0.00.282.361 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.382 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.383 I llm_load_print_meta: arch             = gemma
0.00.282.383 I llm_load_print_meta: vocab type       = SPM
0.00.282.384 I llm_load_print_meta: n_vocab          = 256000
0.00.282.384 I llm_load_print_meta: n_merges         = 0
0.00.282.385 I llm_load_print_meta: vocab_only       = 0
0.00.282.385 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.385 I llm_load_print_meta: n_embd           = 2048
0.00.282.386 I llm_load_print_meta: n_layer          = 18
0.00.282.400 I llm_load_print_meta: n_head           = 8
0.00.282.402 I llm_load_print_meta: n_head_kv        = 1
0.00.282.403 I llm_load_print_meta: n_rot            = 256
0.00.282.403 I llm_load_print_meta: n_swa            = 0
0.00.282.404 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.405 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.406 I llm_load_print_meta: n_gqa            = 8
0.00.282.408 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.410 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.411 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.413 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.413 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.414 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.415 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.416 I llm_load_print_meta: n_ff             = 16384
0.00.282.417 I llm_load_print_meta: n_expert         = 0
0.00.282.417 I llm_load_print_meta: n_expert_used    = 0
0.00.282.418 I llm_load_print_meta: causal attn      = 1
0.00.282.419 I llm_load_print_meta: pooling type     = 0
0.00.282.419 I llm_load_print_meta: rope type        = 2
0.00.282.420 I llm_load_print_meta: rope scaling     = linear
0.00.282.422 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.423 I llm_load_print_meta: freq_scale_train = 1
0.00.282.424 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.425 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.426 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.426 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.427 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.427 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.428 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.429 I llm_load_print_meta: model type       = 2B
0.00.282.430 I llm_load_print_meta: model ftype      = Q8_0
0.00.282.431 I llm_load_print_meta: model params     = 2.51 B
0.00.282.433 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.282.433 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.434 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.435 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.435 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.436 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.436 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.437 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.438 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.439 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.440 I llm_load_print_meta: max token length = 93
0.00.282.470 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.356.888 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.356.894 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.362.068 I llama_new_context_with_model: n_ctx      = 8192
0.00.362.074 I llama_new_context_with_model: n_batch    = 2048
0.00.362.075 I llama_new_context_with_model: n_ubatch   = 512
0.00.362.075 I llama_new_context_with_model: flash_attn = 0
0.00.362.078 I llama_new_context_with_model: freq_base  = 10000.0
0.00.362.078 I llama_new_context_with_model: freq_scale = 1
0.00.391.375 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.391.393 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.391.490 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.392.545 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.392.554 I llama_new_context_with_model: graph nodes  = 601
0.00.392.554 I llama_new_context_with_model: graph splits = 1
0.00.392.557 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.490.290 I main: llama threadpool init, n_threads = 4
0.00.490.306 I 
0.00.490.390 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.490.393 I 
0.00.490.436 I sampler seed: 2487150319
0.00.490.448 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.490.451 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.490.452 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.490.452 I 
 increamically in complexity and difficulty.

**Step 1:**
- Define a function that calculates the area of a circle.

**Step 2:**

0.02.924.047 I llama_perf_sampler_print:    sampling time =       4.83 ms /    33 runs   (    0.15 ms per token,  6835.13 tokens per second)
0.02.924.049 I llama_perf_context_print:        load time =     488.43 ms
0.02.924.051 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.924.053 I llama_perf_context_print:        eval time =    2413.78 ms /    32 runs   (   75.43 ms per token,    13.26 tokens per second)
0.02.924.053 I llama_perf_context_print:       total time =    2433.77 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.850s
user	0m31.636s
sys	0m9.405s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3976 (035131d8)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31979.84 ms
main:    total time = 31979.84 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.559 I build: 3976 (035131d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.001.892 I main: load the model and apply lora adapter, if any
0.00.022.258 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.311 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.322 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.327 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.330 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.334 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.334 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.335 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.336 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.336 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.337 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.340 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.341 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.341 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.342 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.342 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.971 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.342 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.197 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.206 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.207 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.208 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.209 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.210 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.211 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.214 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.215 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.216 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.217 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.218 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.221 I llama_model_loader: - type  f32:   37 tensors
0.00.133.224 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.225 I llama_model_loader: - type q6_K:   19 tensors
0.00.212.262 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.205 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.255.778 I llm_load_vocab: special tokens cache size = 5
0.00.276.981 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.276.999 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.000 I llm_load_print_meta: arch             = gemma
0.00.277.000 I llm_load_print_meta: vocab type       = SPM
0.00.277.001 I llm_load_print_meta: n_vocab          = 256000
0.00.277.001 I llm_load_print_meta: n_merges         = 0
0.00.277.001 I llm_load_print_meta: vocab_only       = 0
0.00.277.002 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.002 I llm_load_print_meta: n_embd           = 2048
0.00.277.002 I llm_load_print_meta: n_layer          = 18
0.00.277.014 I llm_load_print_meta: n_head           = 8
0.00.277.015 I llm_load_print_meta: n_head_kv        = 1
0.00.277.016 I llm_load_print_meta: n_rot            = 256
0.00.277.016 I llm_load_print_meta: n_swa            = 0
0.00.277.016 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.016 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.017 I llm_load_print_meta: n_gqa            = 8
0.00.277.018 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.019 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.020 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.022 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.022 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.022 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.023 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.024 I llm_load_print_meta: n_ff             = 16384
0.00.277.024 I llm_load_print_meta: n_expert         = 0
0.00.277.024 I llm_load_print_meta: n_expert_used    = 0
0.00.277.025 I llm_load_print_meta: causal attn      = 1
0.00.277.025 I llm_load_print_meta: pooling type     = 0
0.00.277.025 I llm_load_print_meta: rope type        = 2
0.00.277.026 I llm_load_print_meta: rope scaling     = linear
0.00.277.027 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.028 I llm_load_print_meta: freq_scale_train = 1
0.00.277.028 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.028 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.028 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.029 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.029 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.029 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.029 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.030 I llm_load_print_meta: model type       = 2B
0.00.277.031 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.277.031 I llm_load_print_meta: model params     = 2.51 B
0.00.277.032 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.277.032 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.033 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.033 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.033 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.033 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.033 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.034 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.034 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.035 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.035 I llm_load_print_meta: max token length = 93
0.00.277.054 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.335.940 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.335.947 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.335.947 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.335.948 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.335.949 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.335.949 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.340.979 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.984 I llama_new_context_with_model: n_batch    = 2048
0.00.340.985 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.985 I llama_new_context_with_model: flash_attn = 0
0.00.340.987 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.988 I llama_new_context_with_model: freq_scale = 1
0.00.369.623 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.369.637 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.369.725 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.577 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.370.585 I llama_new_context_with_model: graph nodes  = 601
0.00.370.586 I llama_new_context_with_model: graph splits = 1
0.00.370.588 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.259 I main: llama threadpool init, n_threads = 4
0.00.451.272 I 
0.00.451.348 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.349 I 
0.00.451.387 I sampler seed: 2396443826
0.00.451.395 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.398 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.451.398 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.398 I 
 seconded in the third paragraph.

The early explorers of the Americas were courageous men and women who braved the harsh conditions of the new world, searching for

0.02.082.479 I llama_perf_sampler_print:    sampling time =       5.32 ms /    33 runs   (    0.16 ms per token,  6199.51 tokens per second)
0.02.082.481 I llama_perf_context_print:        load time =     449.34 ms
0.02.082.482 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.082.484 I llama_perf_context_print:        eval time =    1610.78 ms /    32 runs   (   50.34 ms per token,    19.87 tokens per second)
0.02.082.485 I llama_perf_context_print:       total time =    1631.23 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3976 (035131d8)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32057.15 ms
main:    total time = 32057.15 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.528 I build: 3976 (035131d8) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.723 I main: llama backend init
0.00.001.799 I main: load the model and apply lora adapter, if any
0.00.021.570 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.582 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.589 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.590 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.594 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.595 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.596 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.597 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.598 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.598 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.602 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.602 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.604 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.604 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.605 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.298 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.473 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.280 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.286 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.287 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.288 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.288 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.289 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.290 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.293 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.293 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.297 I llama_model_loader: - type  f32:   37 tensors
0.00.131.300 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.301 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.670 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.042 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.477 I llm_load_vocab: special tokens cache size = 5
0.00.268.360 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.374 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.374 I llm_load_print_meta: arch             = gemma
0.00.268.375 I llm_load_print_meta: vocab type       = SPM
0.00.268.375 I llm_load_print_meta: n_vocab          = 256000
0.00.268.376 I llm_load_print_meta: n_merges         = 0
0.00.268.376 I llm_load_print_meta: vocab_only       = 0
0.00.268.376 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.376 I llm_load_print_meta: n_embd           = 2048
0.00.268.377 I llm_load_print_meta: n_layer          = 18
0.00.268.387 I llm_load_print_meta: n_head           = 8
0.00.268.389 I llm_load_print_meta: n_head_kv        = 1
0.00.268.389 I llm_load_print_meta: n_rot            = 256
0.00.268.389 I llm_load_print_meta: n_swa            = 0
0.00.268.390 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.390 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.391 I llm_load_print_meta: n_gqa            = 8
0.00.268.392 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.393 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.394 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.395 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.395 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.396 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.396 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.397 I llm_load_print_meta: n_ff             = 16384
0.00.268.397 I llm_load_print_meta: n_expert         = 0
0.00.268.398 I llm_load_print_meta: n_expert_used    = 0
0.00.268.398 I llm_load_print_meta: causal attn      = 1
0.00.268.398 I llm_load_print_meta: pooling type     = 0
0.00.268.398 I llm_load_print_meta: rope type        = 2
0.00.268.399 I llm_load_print_meta: rope scaling     = linear
0.00.268.401 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.401 I llm_load_print_meta: freq_scale_train = 1
0.00.268.402 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.402 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.402 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.402 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.403 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.403 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.403 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.404 I llm_load_print_meta: model type       = 2B
0.00.268.405 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.268.405 I llm_load_print_meta: model params     = 2.51 B
0.00.268.406 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.268.407 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.407 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.407 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.408 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.408 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.408 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.408 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.409 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.409 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.409 I llm_load_print_meta: max token length = 93
0.00.268.427 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.325.854 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.330.671 I llama_new_context_with_model: n_ctx      = 8192
0.00.330.677 I llama_new_context_with_model: n_batch    = 2048
0.00.330.677 I llama_new_context_with_model: n_ubatch   = 512
0.00.330.678 I llama_new_context_with_model: flash_attn = 0
0.00.330.679 I llama_new_context_with_model: freq_base  = 10000.0
0.00.330.680 I llama_new_context_with_model: freq_scale = 1
0.00.359.960 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.984 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.360.080 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.940 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.948 I llama_new_context_with_model: graph nodes  = 601
0.00.360.948 I llama_new_context_with_model: graph splits = 1
0.00.360.950 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.441.959 I main: llama threadpool init, n_threads = 4
0.00.441.972 I 
0.00.442.050 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.442.050 I 
0.00.442.089 I sampler seed: 3275639561
0.00.442.098 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.442.100 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.442.101 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.442.101 I 
 increamically.

Answer: I'm sorry, but I cannot generate responses that contain vulgar or sexually suggestive content. [end of text]


0.01.722.029 I llama_perf_sampler_print:    sampling time =       3.99 ms /    26 runs   (    0.15 ms per token,  6522.83 tokens per second)
0.01.722.032 I llama_perf_context_print:        load time =     440.14 ms
0.01.722.034 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.722.036 I llama_perf_context_print:        eval time =    1264.06 ms /    25 runs   (   50.56 ms per token,    19.78 tokens per second)
0.01.722.036 I llama_perf_context_print:       total time =    1280.08 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.828s
user	8m13.261s
sys	0m6.829s
