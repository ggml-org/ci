+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.574 I build: 3910 (f6dd38c2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.777 I main: llama backend init
0.00.001.867 I main: load the model and apply lora adapter, if any
0.00.022.196 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.245 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.256 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.260 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.261 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.264 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.265 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.266 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.267 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.268 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.269 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.273 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.274 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.274 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.275 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.275 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.985 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.325 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.182 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.188 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.189 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.189 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.190 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.190 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.191 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.194 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.194 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.195 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.196 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.197 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.200 I llama_model_loader: - type  f32:   37 tensors
0.00.132.203 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.315 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.442 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.132 I llm_load_vocab: special tokens cache size = 5
0.00.263.851 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.866 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.866 I llm_load_print_meta: arch             = gemma
0.00.263.867 I llm_load_print_meta: vocab type       = SPM
0.00.263.868 I llm_load_print_meta: n_vocab          = 256000
0.00.263.868 I llm_load_print_meta: n_merges         = 0
0.00.263.868 I llm_load_print_meta: vocab_only       = 0
0.00.263.869 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.869 I llm_load_print_meta: n_embd           = 2048
0.00.263.869 I llm_load_print_meta: n_layer          = 18
0.00.263.881 I llm_load_print_meta: n_head           = 8
0.00.263.882 I llm_load_print_meta: n_head_kv        = 1
0.00.263.883 I llm_load_print_meta: n_rot            = 256
0.00.263.883 I llm_load_print_meta: n_swa            = 0
0.00.263.883 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.884 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.884 I llm_load_print_meta: n_gqa            = 8
0.00.263.885 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.887 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.887 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.889 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.889 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.890 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.890 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.891 I llm_load_print_meta: n_ff             = 16384
0.00.263.891 I llm_load_print_meta: n_expert         = 0
0.00.263.892 I llm_load_print_meta: n_expert_used    = 0
0.00.263.892 I llm_load_print_meta: causal attn      = 1
0.00.263.892 I llm_load_print_meta: pooling type     = 0
0.00.263.892 I llm_load_print_meta: rope type        = 2
0.00.263.893 I llm_load_print_meta: rope scaling     = linear
0.00.263.894 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.895 I llm_load_print_meta: freq_scale_train = 1
0.00.263.895 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.896 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.896 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.896 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.897 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.897 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.897 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.898 I llm_load_print_meta: model type       = 2B
0.00.263.898 I llm_load_print_meta: model ftype      = Q8_0
0.00.263.899 I llm_load_print_meta: model params     = 2.51 B
0.00.263.900 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.263.900 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.901 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.901 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.901 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.902 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.902 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.903 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.903 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.903 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.904 I llm_load_print_meta: max token length = 93
0.00.263.921 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.363.389 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.363.398 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.363.399 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.363.399 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.363.400 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.363.400 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.368.608 I llama_new_context_with_model: n_ctx      = 8192
0.00.368.614 I llama_new_context_with_model: n_batch    = 2048
0.00.368.615 I llama_new_context_with_model: n_ubatch   = 512
0.00.368.615 I llama_new_context_with_model: flash_attn = 0
0.00.368.617 I llama_new_context_with_model: freq_base  = 10000.0
0.00.368.618 I llama_new_context_with_model: freq_scale = 1
0.00.397.699 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.397.712 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.397.804 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.398.675 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.398.683 I llama_new_context_with_model: graph nodes  = 601
0.00.398.684 I llama_new_context_with_model: graph splits = 1
0.00.398.685 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.489.025 I main: llama threadpool init, n_threads = 4
0.00.489.037 I 
0.00.489.112 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.489.115 I 
0.00.489.150 I sampler seed: 442443617
0.00.489.159 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.489.166 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.489.166 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.489.166 I 
 increasities with the following information:

**Information:**

- The age range of the participants was 20-50 years.
- The study

0.02.728.114 I llama_perf_sampler_print:    sampling time =       4.91 ms /    33 runs   (    0.15 ms per token,  6722.35 tokens per second)
0.02.728.117 I llama_perf_context_print:        load time =     487.13 ms
0.02.728.118 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.728.119 I llama_perf_context_print:        eval time =    2221.40 ms /    32 runs   (   69.42 ms per token,    14.41 tokens per second)
0.02.728.120 I llama_perf_context_print:       total time =    2239.10 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.607 I build: 3910 (f6dd38c2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.831 I main: llama backend init
0.00.001.964 I main: load the model and apply lora adapter, if any
0.00.022.270 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.281 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.287 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.288 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.292 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.292 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.293 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.294 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.294 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.295 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.299 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.300 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.301 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.301 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.302 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.950 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.241 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.044 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.049 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.050 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.051 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.051 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.052 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.053 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.055 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.056 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.058 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.058 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.059 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.061 I llama_model_loader: - type  f32:   37 tensors
0.00.132.064 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.376 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.941 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.661 I llm_load_vocab: special tokens cache size = 5
0.00.264.559 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.577 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.578 I llm_load_print_meta: arch             = gemma
0.00.264.579 I llm_load_print_meta: vocab type       = SPM
0.00.264.580 I llm_load_print_meta: n_vocab          = 256000
0.00.264.580 I llm_load_print_meta: n_merges         = 0
0.00.264.580 I llm_load_print_meta: vocab_only       = 0
0.00.264.581 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.581 I llm_load_print_meta: n_embd           = 2048
0.00.264.581 I llm_load_print_meta: n_layer          = 18
0.00.264.601 I llm_load_print_meta: n_head           = 8
0.00.264.602 I llm_load_print_meta: n_head_kv        = 1
0.00.264.603 I llm_load_print_meta: n_rot            = 256
0.00.264.603 I llm_load_print_meta: n_swa            = 0
0.00.264.603 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.603 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.604 I llm_load_print_meta: n_gqa            = 8
0.00.264.605 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.606 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.607 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.609 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.609 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.610 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.610 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.611 I llm_load_print_meta: n_ff             = 16384
0.00.264.611 I llm_load_print_meta: n_expert         = 0
0.00.264.612 I llm_load_print_meta: n_expert_used    = 0
0.00.264.612 I llm_load_print_meta: causal attn      = 1
0.00.264.612 I llm_load_print_meta: pooling type     = 0
0.00.264.612 I llm_load_print_meta: rope type        = 2
0.00.264.613 I llm_load_print_meta: rope scaling     = linear
0.00.264.614 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.615 I llm_load_print_meta: freq_scale_train = 1
0.00.264.615 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.615 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.616 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.616 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.616 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.616 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.617 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.617 I llm_load_print_meta: model type       = 2B
0.00.264.618 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.619 I llm_load_print_meta: model params     = 2.51 B
0.00.264.619 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.620 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.620 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.621 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.621 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.622 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.622 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.623 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.623 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.624 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.624 I llm_load_print_meta: max token length = 93
0.00.264.645 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.361.029 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.366.085 I llama_new_context_with_model: n_ctx      = 8192
0.00.366.091 I llama_new_context_with_model: n_batch    = 2048
0.00.366.091 I llama_new_context_with_model: n_ubatch   = 512
0.00.366.092 I llama_new_context_with_model: flash_attn = 0
0.00.366.094 I llama_new_context_with_model: freq_base  = 10000.0
0.00.366.095 I llama_new_context_with_model: freq_scale = 1
0.00.394.780 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.394.796 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.394.888 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.395.768 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.395.776 I llama_new_context_with_model: graph nodes  = 601
0.00.395.777 I llama_new_context_with_model: graph splits = 1
0.00.395.778 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.483.673 I main: llama threadpool init, n_threads = 4
0.00.483.687 I 
0.00.483.765 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.483.768 I 
0.00.483.804 I sampler seed: 831302149
0.00.483.814 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.483.816 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.483.817 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.483.817 I 
 increably. [end of text]


0.00.756.710 I llama_perf_sampler_print:    sampling time =       0.62 ms /     5 runs   (    0.12 ms per token,  8090.61 tokens per second)
0.00.756.712 I llama_perf_context_print:        load time =     481.68 ms
0.00.756.713 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.756.715 I llama_perf_context_print:        eval time =     269.95 ms /     4 runs   (   67.49 ms per token,    14.82 tokens per second)
0.00.756.716 I llama_perf_context_print:       total time =     273.05 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.568 I build: 3910 (f6dd38c2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.785 I main: llama backend init
0.00.001.926 I main: load the model and apply lora adapter, if any
0.00.022.139 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.194 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.209 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.226 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.227 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.231 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.233 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.234 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.235 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.236 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.236 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.241 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.242 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.244 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.244 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.245 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.386 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.725 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.628 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.635 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.636 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.637 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.637 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.638 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.639 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.641 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.642 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.643 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.643 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.644 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.648 I llama_model_loader: - type  f32:   37 tensors
0.00.132.651 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.624 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.316 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.046 I llm_load_vocab: special tokens cache size = 5
0.00.264.819 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.835 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.836 I llm_load_print_meta: arch             = gemma
0.00.264.838 I llm_load_print_meta: vocab type       = SPM
0.00.264.839 I llm_load_print_meta: n_vocab          = 256000
0.00.264.839 I llm_load_print_meta: n_merges         = 0
0.00.264.840 I llm_load_print_meta: vocab_only       = 0
0.00.264.840 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.840 I llm_load_print_meta: n_embd           = 2048
0.00.264.841 I llm_load_print_meta: n_layer          = 18
0.00.264.853 I llm_load_print_meta: n_head           = 8
0.00.264.854 I llm_load_print_meta: n_head_kv        = 1
0.00.264.854 I llm_load_print_meta: n_rot            = 256
0.00.264.854 I llm_load_print_meta: n_swa            = 0
0.00.264.855 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.855 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.856 I llm_load_print_meta: n_gqa            = 8
0.00.264.858 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.859 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.860 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.862 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.862 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.863 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.863 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.865 I llm_load_print_meta: n_ff             = 16384
0.00.264.866 I llm_load_print_meta: n_expert         = 0
0.00.264.866 I llm_load_print_meta: n_expert_used    = 0
0.00.264.867 I llm_load_print_meta: causal attn      = 1
0.00.264.867 I llm_load_print_meta: pooling type     = 0
0.00.264.868 I llm_load_print_meta: rope type        = 2
0.00.264.869 I llm_load_print_meta: rope scaling     = linear
0.00.264.871 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.872 I llm_load_print_meta: freq_scale_train = 1
0.00.264.873 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.873 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.874 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.874 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.875 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.876 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.877 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.877 I llm_load_print_meta: model type       = 2B
0.00.264.878 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.880 I llm_load_print_meta: model params     = 2.51 B
0.00.264.881 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.881 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.882 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.883 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.883 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.884 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.885 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.886 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.887 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.887 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.888 I llm_load_print_meta: max token length = 93
0.00.264.917 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.341.865 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.341.874 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.341.875 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.341.876 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.341.876 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.341.877 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.346.981 I llama_new_context_with_model: n_ctx      = 8192
0.00.346.988 I llama_new_context_with_model: n_batch    = 2048
0.00.346.988 I llama_new_context_with_model: n_ubatch   = 512
0.00.346.989 I llama_new_context_with_model: flash_attn = 0
0.00.346.991 I llama_new_context_with_model: freq_base  = 10000.0
0.00.346.991 I llama_new_context_with_model: freq_scale = 1
0.00.375.281 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.375.296 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.375.394 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.376.297 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.376.304 I llama_new_context_with_model: graph nodes  = 601
0.00.376.305 I llama_new_context_with_model: graph splits = 1
0.00.376.307 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.466.545 I main: llama threadpool init, n_threads = 4
0.00.466.556 I 
0.00.466.635 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.466.640 I 
0.00.466.683 I sampler seed: 2626004442
0.00.466.695 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.466.698 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.466.698 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.466.699 I 
 increasities and puns to describe the following situation:

The situation is a group of friends going on a trip together. They are excited to explore new places,

0.02.719.147 I llama_perf_sampler_print:    sampling time =       4.88 ms /    33 runs   (    0.15 ms per token,  6763.68 tokens per second)
0.02.719.150 I llama_perf_context_print:        load time =     464.59 ms
0.02.719.151 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.719.153 I llama_perf_context_print:        eval time =    2233.91 ms /    32 runs   (   69.81 ms per token,    14.32 tokens per second)
0.02.719.154 I llama_perf_context_print:       total time =    2252.61 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.565 I build: 3910 (f6dd38c2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.771 I main: llama backend init
0.00.001.912 I main: load the model and apply lora adapter, if any
0.00.022.185 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.234 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.244 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.250 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.251 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.256 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.257 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.258 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.258 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.259 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.260 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.266 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.267 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.268 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.269 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.270 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.921 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.804 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.718 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.725 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.726 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.727 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.727 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.728 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.729 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.731 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.732 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.732 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.733 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.734 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.737 I llama_model_loader: - type  f32:   37 tensors
0.00.133.739 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.918 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.529 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.277 I llm_load_vocab: special tokens cache size = 5
0.00.267.436 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.452 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.453 I llm_load_print_meta: arch             = gemma
0.00.267.453 I llm_load_print_meta: vocab type       = SPM
0.00.267.454 I llm_load_print_meta: n_vocab          = 256000
0.00.267.454 I llm_load_print_meta: n_merges         = 0
0.00.267.455 I llm_load_print_meta: vocab_only       = 0
0.00.267.455 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.455 I llm_load_print_meta: n_embd           = 2048
0.00.267.455 I llm_load_print_meta: n_layer          = 18
0.00.267.468 I llm_load_print_meta: n_head           = 8
0.00.267.469 I llm_load_print_meta: n_head_kv        = 1
0.00.267.469 I llm_load_print_meta: n_rot            = 256
0.00.267.470 I llm_load_print_meta: n_swa            = 0
0.00.267.470 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.471 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.472 I llm_load_print_meta: n_gqa            = 8
0.00.267.474 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.476 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.477 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.478 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.480 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.481 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.482 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.484 I llm_load_print_meta: n_ff             = 16384
0.00.267.485 I llm_load_print_meta: n_expert         = 0
0.00.267.485 I llm_load_print_meta: n_expert_used    = 0
0.00.267.485 I llm_load_print_meta: causal attn      = 1
0.00.267.486 I llm_load_print_meta: pooling type     = 0
0.00.267.487 I llm_load_print_meta: rope type        = 2
0.00.267.488 I llm_load_print_meta: rope scaling     = linear
0.00.267.490 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.491 I llm_load_print_meta: freq_scale_train = 1
0.00.267.491 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.492 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.493 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.493 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.494 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.494 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.495 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.496 I llm_load_print_meta: model type       = 2B
0.00.267.497 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.498 I llm_load_print_meta: model params     = 2.51 B
0.00.267.499 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.499 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.500 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.501 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.501 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.502 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.502 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.503 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.503 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.505 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.505 I llm_load_print_meta: max token length = 93
0.00.267.529 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.337.666 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.337.673 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.342.719 I llama_new_context_with_model: n_ctx      = 8192
0.00.342.726 I llama_new_context_with_model: n_batch    = 2048
0.00.342.726 I llama_new_context_with_model: n_ubatch   = 512
0.00.342.727 I llama_new_context_with_model: flash_attn = 0
0.00.342.729 I llama_new_context_with_model: freq_base  = 10000.0
0.00.342.730 I llama_new_context_with_model: freq_scale = 1
0.00.371.234 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.371.251 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.371.364 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.372.265 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.372.274 I llama_new_context_with_model: graph nodes  = 601
0.00.372.274 I llama_new_context_with_model: graph splits = 1
0.00.372.276 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.466.449 I main: llama threadpool init, n_threads = 4
0.00.466.460 I 
0.00.466.546 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.466.550 I 
0.00.466.592 I sampler seed: 634689872
0.00.466.606 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.466.619 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.466.623 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.466.623 I 
 increasities with a seductive whisper,
"Come with me, my darling, to a realm where shadows dance and secrets untold."

**Answer:** I am

0.02.880.096 I llama_perf_sampler_print:    sampling time =       5.10 ms /    33 runs   (    0.15 ms per token,  6465.52 tokens per second)
0.02.880.099 I llama_perf_context_print:        load time =     464.51 ms
0.02.880.101 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.880.102 I llama_perf_context_print:        eval time =    2395.51 ms /    32 runs   (   74.86 ms per token,    13.36 tokens per second)
0.02.880.103 I llama_perf_context_print:       total time =    2413.65 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.457s
user	0m31.511s
sys	0m9.385s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3910 (f6dd38c2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32000.48 ms
main:    total time = 32000.48 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.550 I build: 3910 (f6dd38c2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.750 I main: llama backend init
0.00.001.862 I main: load the model and apply lora adapter, if any
0.00.021.880 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.928 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.936 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.941 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.942 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.946 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.947 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.948 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.948 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.949 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.949 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.953 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.954 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.954 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.955 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.955 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.645 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.159 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.036 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.042 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.043 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.044 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.045 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.046 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.047 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.050 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.051 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.052 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.053 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.054 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.058 I llama_model_loader: - type  f32:   37 tensors
0.00.132.060 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.061 I llama_model_loader: - type q6_K:   19 tensors
0.00.210.175 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.587 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.374 I llm_load_vocab: special tokens cache size = 5
0.00.277.460 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.478 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.478 I llm_load_print_meta: arch             = gemma
0.00.277.479 I llm_load_print_meta: vocab type       = SPM
0.00.277.480 I llm_load_print_meta: n_vocab          = 256000
0.00.277.481 I llm_load_print_meta: n_merges         = 0
0.00.277.481 I llm_load_print_meta: vocab_only       = 0
0.00.277.481 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.482 I llm_load_print_meta: n_embd           = 2048
0.00.277.482 I llm_load_print_meta: n_layer          = 18
0.00.277.494 I llm_load_print_meta: n_head           = 8
0.00.277.495 I llm_load_print_meta: n_head_kv        = 1
0.00.277.495 I llm_load_print_meta: n_rot            = 256
0.00.277.495 I llm_load_print_meta: n_swa            = 0
0.00.277.496 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.496 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.497 I llm_load_print_meta: n_gqa            = 8
0.00.277.498 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.499 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.500 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.501 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.501 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.502 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.502 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.503 I llm_load_print_meta: n_ff             = 16384
0.00.277.503 I llm_load_print_meta: n_expert         = 0
0.00.277.503 I llm_load_print_meta: n_expert_used    = 0
0.00.277.503 I llm_load_print_meta: causal attn      = 1
0.00.277.504 I llm_load_print_meta: pooling type     = 0
0.00.277.504 I llm_load_print_meta: rope type        = 2
0.00.277.505 I llm_load_print_meta: rope scaling     = linear
0.00.277.506 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.507 I llm_load_print_meta: freq_scale_train = 1
0.00.277.507 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.507 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.508 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.508 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.508 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.508 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.508 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.509 I llm_load_print_meta: model type       = 2B
0.00.277.509 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.277.510 I llm_load_print_meta: model params     = 2.51 B
0.00.277.511 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.277.511 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.512 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.512 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.513 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.513 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.513 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.514 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.514 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.514 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.515 I llm_load_print_meta: max token length = 93
0.00.277.540 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.335.707 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.335.715 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.335.715 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.335.716 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.335.716 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.335.717 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.340.733 I llama_new_context_with_model: n_ctx      = 8192
0.00.340.741 I llama_new_context_with_model: n_batch    = 2048
0.00.340.741 I llama_new_context_with_model: n_ubatch   = 512
0.00.340.742 I llama_new_context_with_model: flash_attn = 0
0.00.340.744 I llama_new_context_with_model: freq_base  = 10000.0
0.00.340.745 I llama_new_context_with_model: freq_scale = 1
0.00.370.393 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.410 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.508 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.439 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.447 I llama_new_context_with_model: graph nodes  = 601
0.00.371.448 I llama_new_context_with_model: graph splits = 1
0.00.371.449 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.546 I main: llama threadpool init, n_threads = 4
0.00.452.558 I 
0.00.452.633 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.452.637 I 
0.00.452.674 I sampler seed: 3522488834
0.00.452.684 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.688 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.452.688 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.688 I 
 maneuvorous bacteria, capable of engulfing and digesting other bacteria while maintaining a symbiotic relationship with the host bacterium.

These bacteria are unique in that they can

0.02.054.120 I llama_perf_sampler_print:    sampling time =       4.85 ms /    33 runs   (    0.15 ms per token,  6808.34 tokens per second)
0.02.054.123 I llama_perf_context_print:        load time =     450.66 ms
0.02.054.124 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.054.126 I llama_perf_context_print:        eval time =    1583.94 ms /    32 runs   (   49.50 ms per token,    20.20 tokens per second)
0.02.054.127 I llama_perf_context_print:       total time =    1601.58 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3910 (f6dd38c2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32074.74 ms
main:    total time = 32074.74 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.527 I build: 3910 (f6dd38c2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.717 I main: llama backend init
0.00.001.831 I main: load the model and apply lora adapter, if any
0.00.021.882 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.896 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.902 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.903 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.908 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.908 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.910 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.910 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.912 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.912 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.915 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.916 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.916 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.917 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.917 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.509 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.221 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.028 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.034 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.034 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.035 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.036 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.037 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.037 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.040 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.041 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.043 I llama_model_loader: - type  f32:   37 tensors
0.00.132.045 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.046 I llama_model_loader: - type q6_K:   19 tensors
0.00.211.517 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.968 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.683 I llm_load_vocab: special tokens cache size = 5
0.00.266.606 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.625 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.625 I llm_load_print_meta: arch             = gemma
0.00.266.626 I llm_load_print_meta: vocab type       = SPM
0.00.266.638 I llm_load_print_meta: n_vocab          = 256000
0.00.266.639 I llm_load_print_meta: n_merges         = 0
0.00.266.639 I llm_load_print_meta: vocab_only       = 0
0.00.266.640 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.640 I llm_load_print_meta: n_embd           = 2048
0.00.266.640 I llm_load_print_meta: n_layer          = 18
0.00.266.653 I llm_load_print_meta: n_head           = 8
0.00.266.654 I llm_load_print_meta: n_head_kv        = 1
0.00.266.657 I llm_load_print_meta: n_rot            = 256
0.00.266.657 I llm_load_print_meta: n_swa            = 0
0.00.266.658 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.658 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.659 I llm_load_print_meta: n_gqa            = 8
0.00.266.660 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.661 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.662 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.664 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.664 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.667 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.667 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.668 I llm_load_print_meta: n_ff             = 16384
0.00.266.669 I llm_load_print_meta: n_expert         = 0
0.00.266.669 I llm_load_print_meta: n_expert_used    = 0
0.00.266.669 I llm_load_print_meta: causal attn      = 1
0.00.266.669 I llm_load_print_meta: pooling type     = 0
0.00.266.670 I llm_load_print_meta: rope type        = 2
0.00.266.670 I llm_load_print_meta: rope scaling     = linear
0.00.266.671 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.672 I llm_load_print_meta: freq_scale_train = 1
0.00.266.672 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.673 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.673 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.674 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.676 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.676 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.677 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.677 I llm_load_print_meta: model type       = 2B
0.00.266.677 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.266.678 I llm_load_print_meta: model params     = 2.51 B
0.00.266.679 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.266.679 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.680 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.680 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.681 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.681 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.681 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.682 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.682 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.683 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.683 I llm_load_print_meta: max token length = 93
0.00.266.708 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.323.208 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.328.181 I llama_new_context_with_model: n_ctx      = 8192
0.00.328.186 I llama_new_context_with_model: n_batch    = 2048
0.00.328.187 I llama_new_context_with_model: n_ubatch   = 512
0.00.328.187 I llama_new_context_with_model: flash_attn = 0
0.00.328.189 I llama_new_context_with_model: freq_base  = 10000.0
0.00.328.190 I llama_new_context_with_model: freq_scale = 1
0.00.356.443 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.356.459 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.356.549 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.357.421 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.357.426 I llama_new_context_with_model: graph nodes  = 601
0.00.357.427 I llama_new_context_with_model: graph splits = 1
0.00.357.429 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.437.495 I main: llama threadpool init, n_threads = 4
0.00.437.508 I 
0.00.437.583 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.437.587 I 
0.00.437.623 I sampler seed: 3085565641
0.00.437.633 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.437.635 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.437.636 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.437.636 I 
 maneupherially. 

**Answer:**

I am unable to generate responses that are sexually suggestive or inappropriate. My purpose is to assist with tasks and provide

0.02.027.324 I llama_perf_sampler_print:    sampling time =       5.38 ms /    33 runs   (    0.16 ms per token,  6129.27 tokens per second)
0.02.027.326 I llama_perf_context_print:        load time =     435.64 ms
0.02.027.327 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.027.329 I llama_perf_context_print:        eval time =    1570.81 ms /    32 runs   (   49.09 ms per token,    20.37 tokens per second)
0.02.027.330 I llama_perf_context_print:       total time =    1589.84 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.174s
user	8m15.066s
sys	0m6.834s
