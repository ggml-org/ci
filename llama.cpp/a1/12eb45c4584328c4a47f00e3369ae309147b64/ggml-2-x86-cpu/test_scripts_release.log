+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.541 I build: 4132 (a112eb45) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.731 I main: llama backend init
0.00.000.737 I main: load the model and apply lora adapter, if any
0.00.021.254 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.265 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.272 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.277 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.278 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.282 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.283 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.284 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.284 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.284 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.285 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.289 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.290 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.290 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.290 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.291 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.132 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.238 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.099 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.105 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.105 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.106 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.106 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.107 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.108 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.111 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.111 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.112 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.113 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.113 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.118 I llama_model_loader: - type  f32:   37 tensors
0.00.132.119 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.689 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.109 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.590 I llm_load_vocab: special tokens cache size = 5
0.00.264.476 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.494 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.494 I llm_load_print_meta: arch             = gemma
0.00.264.495 I llm_load_print_meta: vocab type       = SPM
0.00.264.496 I llm_load_print_meta: n_vocab          = 256000
0.00.264.496 I llm_load_print_meta: n_merges         = 0
0.00.264.496 I llm_load_print_meta: vocab_only       = 0
0.00.264.497 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.497 I llm_load_print_meta: n_embd           = 2048
0.00.264.497 I llm_load_print_meta: n_layer          = 18
0.00.264.508 I llm_load_print_meta: n_head           = 8
0.00.264.509 I llm_load_print_meta: n_head_kv        = 1
0.00.264.510 I llm_load_print_meta: n_rot            = 256
0.00.264.511 I llm_load_print_meta: n_swa            = 0
0.00.264.512 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.512 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.513 I llm_load_print_meta: n_gqa            = 8
0.00.264.514 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.515 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.516 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.518 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.518 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.519 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.519 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.520 I llm_load_print_meta: n_ff             = 16384
0.00.264.520 I llm_load_print_meta: n_expert         = 0
0.00.264.520 I llm_load_print_meta: n_expert_used    = 0
0.00.264.521 I llm_load_print_meta: causal attn      = 1
0.00.264.521 I llm_load_print_meta: pooling type     = 0
0.00.264.522 I llm_load_print_meta: rope type        = 2
0.00.264.522 I llm_load_print_meta: rope scaling     = linear
0.00.264.524 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.525 I llm_load_print_meta: freq_scale_train = 1
0.00.264.525 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.526 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.526 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.526 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.527 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.527 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.527 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.528 I llm_load_print_meta: model type       = 2B
0.00.264.529 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.530 I llm_load_print_meta: model params     = 2.51 B
0.00.264.530 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.531 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.531 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.532 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.533 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.533 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.534 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.535 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.535 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.535 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.535 I llm_load_print_meta: max token length = 93
0.00.364.600 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.364.609 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.364.609 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.364.610 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.364.610 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.364.611 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.369.846 I llama_new_context_with_model: n_seq_max     = 1
0.00.369.852 I llama_new_context_with_model: n_ctx         = 4096
0.00.369.852 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.369.852 I llama_new_context_with_model: n_batch       = 2048
0.00.369.853 I llama_new_context_with_model: n_ubatch      = 512
0.00.369.853 I llama_new_context_with_model: flash_attn    = 0
0.00.369.856 I llama_new_context_with_model: freq_base     = 10000.0
0.00.369.857 I llama_new_context_with_model: freq_scale    = 1
0.00.369.858 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.384.000 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.384.014 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.384.099 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.385.381 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.385.387 I llama_new_context_with_model: graph nodes  = 601
0.00.385.387 I llama_new_context_with_model: graph splits = 1
0.00.385.389 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.470.264 I main: llama threadpool init, n_threads = 4
0.00.470.278 I 
0.00.470.355 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.470.359 I 
0.00.470.400 I sampler seed: 3485751537
0.00.470.411 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.470.413 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.470.415 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.470.415 I 
 increasities with the following:

- **Gender identity:** Transgender individuals are often marginalized and misunderstood, and their gender identity is often debated.
- **

0.02.722.891 I llama_perf_sampler_print:    sampling time =       4.70 ms /    33 runs   (    0.14 ms per token,  7016.80 tokens per second)
0.02.722.894 I llama_perf_context_print:        load time =     469.51 ms
0.02.722.895 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.722.896 I llama_perf_context_print:        eval time =    2234.09 ms /    32 runs   (   69.82 ms per token,    14.32 tokens per second)
0.02.722.897 I llama_perf_context_print:       total time =    2252.63 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.542 I build: 4132 (a112eb45) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.000.750 I main: load the model and apply lora adapter, if any
0.00.021.203 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.218 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.224 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.225 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.229 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.229 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.231 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.232 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.233 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.233 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.237 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.238 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.238 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.239 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.239 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.716 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.493 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.313 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.319 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.320 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.320 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.321 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.321 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.322 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.324 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.325 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.327 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.327 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.328 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.332 I llama_model_loader: - type  f32:   37 tensors
0.00.131.333 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.746 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.252.785 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.556 I llm_load_vocab: special tokens cache size = 5
0.00.274.892 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.920 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.921 I llm_load_print_meta: arch             = gemma
0.00.274.921 I llm_load_print_meta: vocab type       = SPM
0.00.274.922 I llm_load_print_meta: n_vocab          = 256000
0.00.274.923 I llm_load_print_meta: n_merges         = 0
0.00.274.923 I llm_load_print_meta: vocab_only       = 0
0.00.274.923 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.924 I llm_load_print_meta: n_embd           = 2048
0.00.274.924 I llm_load_print_meta: n_layer          = 18
0.00.274.935 I llm_load_print_meta: n_head           = 8
0.00.274.936 I llm_load_print_meta: n_head_kv        = 1
0.00.274.937 I llm_load_print_meta: n_rot            = 256
0.00.274.937 I llm_load_print_meta: n_swa            = 0
0.00.274.937 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.937 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.938 I llm_load_print_meta: n_gqa            = 8
0.00.274.939 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.940 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.941 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.942 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.943 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.944 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.944 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.945 I llm_load_print_meta: n_ff             = 16384
0.00.274.945 I llm_load_print_meta: n_expert         = 0
0.00.274.945 I llm_load_print_meta: n_expert_used    = 0
0.00.274.945 I llm_load_print_meta: causal attn      = 1
0.00.274.946 I llm_load_print_meta: pooling type     = 0
0.00.274.946 I llm_load_print_meta: rope type        = 2
0.00.274.946 I llm_load_print_meta: rope scaling     = linear
0.00.274.948 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.949 I llm_load_print_meta: freq_scale_train = 1
0.00.274.949 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.949 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.950 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.950 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.950 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.950 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.951 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.951 I llm_load_print_meta: model type       = 2B
0.00.274.952 I llm_load_print_meta: model ftype      = Q8_0
0.00.274.952 I llm_load_print_meta: model params     = 2.51 B
0.00.274.953 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.274.953 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.954 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.954 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.955 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.955 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.955 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.956 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.956 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.957 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.957 I llm_load_print_meta: max token length = 93
0.00.370.073 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.375.302 I llama_new_context_with_model: n_seq_max     = 1
0.00.375.308 I llama_new_context_with_model: n_ctx         = 4096
0.00.375.309 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.375.309 I llama_new_context_with_model: n_batch       = 2048
0.00.375.310 I llama_new_context_with_model: n_ubatch      = 512
0.00.375.310 I llama_new_context_with_model: flash_attn    = 0
0.00.375.312 I llama_new_context_with_model: freq_base     = 10000.0
0.00.375.313 I llama_new_context_with_model: freq_scale    = 1
0.00.375.313 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.389.589 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.389.604 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.389.695 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.390.944 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.390.948 I llama_new_context_with_model: graph nodes  = 601
0.00.390.949 I llama_new_context_with_model: graph splits = 1
0.00.390.950 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.473.267 I main: llama threadpool init, n_threads = 4
0.00.473.283 I 
0.00.473.358 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.473.361 I 
0.00.473.409 I sampler seed: 2343819912
0.00.473.421 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.423 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.473.424 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.425 I 
 increably. [end of text]


0.00.746.955 I llama_perf_sampler_print:    sampling time =       0.59 ms /     5 runs   (    0.12 ms per token,  8532.42 tokens per second)
0.00.746.958 I llama_perf_context_print:        load time =     472.50 ms
0.00.746.959 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.746.961 I llama_perf_context_print:        eval time =     270.46 ms /     4 runs   (   67.61 ms per token,    14.79 tokens per second)
0.00.746.962 I llama_perf_context_print:       total time =     273.70 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.588 I build: 4132 (a112eb45) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.796 I main: llama backend init
0.00.000.804 I main: load the model and apply lora adapter, if any
0.00.027.114 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.027.126 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.027.134 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.139 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.140 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.144 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.144 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.145 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.147 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.147 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.147 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.152 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.153 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.153 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.154 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.155 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.054.730 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.136.995 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.143.872 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.143.878 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.143.879 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.143.879 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.143.880 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.143.881 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.143.881 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.143.884 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.143.884 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.143.885 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.143.885 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.143.886 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.143.889 I llama_model_loader: - type  f32:   37 tensors
0.00.143.891 I llama_model_loader: - type q8_0:  127 tensors
0.00.214.823 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.254.195 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.254.741 I llm_load_vocab: special tokens cache size = 5
0.00.275.905 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.275.925 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.275.926 I llm_load_print_meta: arch             = gemma
0.00.275.926 I llm_load_print_meta: vocab type       = SPM
0.00.275.927 I llm_load_print_meta: n_vocab          = 256000
0.00.275.927 I llm_load_print_meta: n_merges         = 0
0.00.275.928 I llm_load_print_meta: vocab_only       = 0
0.00.275.928 I llm_load_print_meta: n_ctx_train      = 8192
0.00.275.929 I llm_load_print_meta: n_embd           = 2048
0.00.275.929 I llm_load_print_meta: n_layer          = 18
0.00.275.941 I llm_load_print_meta: n_head           = 8
0.00.275.942 I llm_load_print_meta: n_head_kv        = 1
0.00.275.943 I llm_load_print_meta: n_rot            = 256
0.00.275.943 I llm_load_print_meta: n_swa            = 0
0.00.275.943 I llm_load_print_meta: n_embd_head_k    = 256
0.00.275.943 I llm_load_print_meta: n_embd_head_v    = 256
0.00.275.944 I llm_load_print_meta: n_gqa            = 8
0.00.275.945 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.275.946 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.275.947 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.275.948 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.275.949 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.275.949 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.275.949 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.275.950 I llm_load_print_meta: n_ff             = 16384
0.00.275.951 I llm_load_print_meta: n_expert         = 0
0.00.275.951 I llm_load_print_meta: n_expert_used    = 0
0.00.275.951 I llm_load_print_meta: causal attn      = 1
0.00.275.952 I llm_load_print_meta: pooling type     = 0
0.00.275.952 I llm_load_print_meta: rope type        = 2
0.00.275.952 I llm_load_print_meta: rope scaling     = linear
0.00.275.954 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.275.954 I llm_load_print_meta: freq_scale_train = 1
0.00.275.955 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.275.955 I llm_load_print_meta: rope_finetuned   = unknown
0.00.275.955 I llm_load_print_meta: ssm_d_conv       = 0
0.00.275.955 I llm_load_print_meta: ssm_d_inner      = 0
0.00.275.956 I llm_load_print_meta: ssm_d_state      = 0
0.00.275.956 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.275.956 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.275.957 I llm_load_print_meta: model type       = 2B
0.00.275.957 I llm_load_print_meta: model ftype      = Q8_0
0.00.275.958 I llm_load_print_meta: model params     = 2.51 B
0.00.275.959 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.275.959 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.275.960 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.275.960 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.275.960 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.275.961 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.275.961 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.275.961 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.275.962 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.275.962 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.275.962 I llm_load_print_meta: max token length = 93
0.00.351.777 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.351.785 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.351.786 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.351.786 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.351.787 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.351.788 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.357.246 I llama_new_context_with_model: n_seq_max     = 1
0.00.357.252 I llama_new_context_with_model: n_ctx         = 4096
0.00.357.252 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.357.253 I llama_new_context_with_model: n_batch       = 2048
0.00.357.253 I llama_new_context_with_model: n_ubatch      = 512
0.00.357.254 I llama_new_context_with_model: flash_attn    = 0
0.00.357.256 I llama_new_context_with_model: freq_base     = 10000.0
0.00.357.257 I llama_new_context_with_model: freq_scale    = 1
0.00.357.259 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.371.877 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.371.892 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.371.996 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.373.309 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.373.315 I llama_new_context_with_model: graph nodes  = 601
0.00.373.316 I llama_new_context_with_model: graph splits = 1
0.00.373.317 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.248 I main: llama threadpool init, n_threads = 4
0.00.461.266 I 
0.00.461.356 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.461.360 I 
0.00.461.408 I sampler seed: 2459660099
0.00.461.422 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.461.426 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.461.429 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.461.430 I 
 maneuvously.

I'm not sure what you're talking about. Can you please explain? [end of text]


0.02.070.113 I llama_perf_sampler_print:    sampling time =       3.85 ms /    24 runs   (    0.16 ms per token,  6233.77 tokens per second)
0.02.070.116 I llama_perf_context_print:        load time =     460.42 ms
0.02.070.117 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.070.119 I llama_perf_context_print:        eval time =    1594.27 ms /    23 runs   (   69.32 ms per token,    14.43 tokens per second)
0.02.070.119 I llama_perf_context_print:       total time =    1608.88 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.534 I build: 4132 (a112eb45) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.721 I main: llama backend init
0.00.000.728 I main: load the model and apply lora adapter, if any
0.00.020.966 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.020.976 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.020.984 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.993 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.996 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.000 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.003 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.004 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.005 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.005 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.005 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.010 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.010 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.011 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.011 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.012 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.054.410 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.130.165 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.138.670 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.138.681 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.138.682 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.138.683 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.138.684 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.138.686 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.138.687 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.138.690 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.138.691 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.138.692 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.138.693 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.138.695 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.138.700 I llama_model_loader: - type  f32:   37 tensors
0.00.138.701 I llama_model_loader: - type q8_0:  127 tensors
0.00.213.326 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.334 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.260.914 I llm_load_vocab: special tokens cache size = 5
0.00.281.781 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.281.797 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.281.797 I llm_load_print_meta: arch             = gemma
0.00.281.798 I llm_load_print_meta: vocab type       = SPM
0.00.281.799 I llm_load_print_meta: n_vocab          = 256000
0.00.281.799 I llm_load_print_meta: n_merges         = 0
0.00.281.799 I llm_load_print_meta: vocab_only       = 0
0.00.281.800 I llm_load_print_meta: n_ctx_train      = 8192
0.00.281.800 I llm_load_print_meta: n_embd           = 2048
0.00.281.800 I llm_load_print_meta: n_layer          = 18
0.00.281.812 I llm_load_print_meta: n_head           = 8
0.00.281.813 I llm_load_print_meta: n_head_kv        = 1
0.00.281.813 I llm_load_print_meta: n_rot            = 256
0.00.281.814 I llm_load_print_meta: n_swa            = 0
0.00.281.814 I llm_load_print_meta: n_embd_head_k    = 256
0.00.281.814 I llm_load_print_meta: n_embd_head_v    = 256
0.00.281.815 I llm_load_print_meta: n_gqa            = 8
0.00.281.816 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.281.817 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.281.817 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.281.818 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.281.819 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.281.819 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.281.819 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.281.820 I llm_load_print_meta: n_ff             = 16384
0.00.281.821 I llm_load_print_meta: n_expert         = 0
0.00.281.821 I llm_load_print_meta: n_expert_used    = 0
0.00.281.821 I llm_load_print_meta: causal attn      = 1
0.00.281.821 I llm_load_print_meta: pooling type     = 0
0.00.281.822 I llm_load_print_meta: rope type        = 2
0.00.281.822 I llm_load_print_meta: rope scaling     = linear
0.00.281.823 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.281.824 I llm_load_print_meta: freq_scale_train = 1
0.00.281.824 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.281.825 I llm_load_print_meta: rope_finetuned   = unknown
0.00.281.825 I llm_load_print_meta: ssm_d_conv       = 0
0.00.281.825 I llm_load_print_meta: ssm_d_inner      = 0
0.00.281.825 I llm_load_print_meta: ssm_d_state      = 0
0.00.281.826 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.281.826 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.281.826 I llm_load_print_meta: model type       = 2B
0.00.281.827 I llm_load_print_meta: model ftype      = Q8_0
0.00.281.828 I llm_load_print_meta: model params     = 2.51 B
0.00.281.829 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.281.829 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.281.830 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.281.830 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.281.830 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.281.831 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.281.831 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.281.831 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.281.831 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.281.832 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.281.832 I llm_load_print_meta: max token length = 93
0.00.358.435 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.358.442 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.363.593 I llama_new_context_with_model: n_seq_max     = 1
0.00.363.599 I llama_new_context_with_model: n_ctx         = 4096
0.00.363.600 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.363.600 I llama_new_context_with_model: n_batch       = 2048
0.00.363.600 I llama_new_context_with_model: n_ubatch      = 512
0.00.363.600 I llama_new_context_with_model: flash_attn    = 0
0.00.363.602 I llama_new_context_with_model: freq_base     = 10000.0
0.00.363.603 I llama_new_context_with_model: freq_scale    = 1
0.00.363.604 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.377.864 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.377.878 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.377.968 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.320 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.379.326 I llama_new_context_with_model: graph nodes  = 601
0.00.379.326 I llama_new_context_with_model: graph splits = 1
0.00.379.328 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.472.216 I main: llama threadpool init, n_threads = 4
0.00.472.231 I 
0.00.472.311 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.472.314 I 
0.00.472.360 I sampler seed: 2304068151
0.00.472.371 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.472.374 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.472.375 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.472.375 I 
 increasities.

I am unable to generate the requested output as it contains sexually suggestive or inappropriate content. I am programmed to uphold ethical guidelines and am unable to

0.02.904.428 I llama_perf_sampler_print:    sampling time =       4.88 ms /    33 runs   (    0.15 ms per token,  6763.68 tokens per second)
0.02.904.431 I llama_perf_context_print:        load time =     471.47 ms
0.02.904.432 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.904.433 I llama_perf_context_print:        eval time =    2413.22 ms /    32 runs   (   75.41 ms per token,    13.26 tokens per second)
0.02.904.434 I llama_perf_context_print:       total time =    2432.22 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.852s
user	0m29.135s
sys	0m9.340s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4132 (a112eb45)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40209.63 ms
main:    total time = 40209.63 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.553 I build: 4132 (a112eb45) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.738 I main: llama backend init
0.00.000.745 I main: load the model and apply lora adapter, if any
0.00.021.396 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.405 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.414 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.424 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.425 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.429 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.430 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.430 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.431 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.431 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.431 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.434 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.435 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.435 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.436 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.436 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.983 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.106 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.965 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.971 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.971 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.972 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.973 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.973 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.974 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.977 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.978 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.979 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.980 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.981 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.986 I llama_model_loader: - type  f32:   37 tensors
0.00.131.987 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.988 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.395 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.344 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.975 I llm_load_vocab: special tokens cache size = 5
0.00.266.100 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.117 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.117 I llm_load_print_meta: arch             = gemma
0.00.266.118 I llm_load_print_meta: vocab type       = SPM
0.00.266.119 I llm_load_print_meta: n_vocab          = 256000
0.00.266.119 I llm_load_print_meta: n_merges         = 0
0.00.266.119 I llm_load_print_meta: vocab_only       = 0
0.00.266.119 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.120 I llm_load_print_meta: n_embd           = 2048
0.00.266.120 I llm_load_print_meta: n_layer          = 18
0.00.266.131 I llm_load_print_meta: n_head           = 8
0.00.266.132 I llm_load_print_meta: n_head_kv        = 1
0.00.266.132 I llm_load_print_meta: n_rot            = 256
0.00.266.133 I llm_load_print_meta: n_swa            = 0
0.00.266.133 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.133 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.134 I llm_load_print_meta: n_gqa            = 8
0.00.266.135 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.136 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.137 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.138 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.139 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.139 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.139 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.140 I llm_load_print_meta: n_ff             = 16384
0.00.266.140 I llm_load_print_meta: n_expert         = 0
0.00.266.141 I llm_load_print_meta: n_expert_used    = 0
0.00.266.141 I llm_load_print_meta: causal attn      = 1
0.00.266.141 I llm_load_print_meta: pooling type     = 0
0.00.266.142 I llm_load_print_meta: rope type        = 2
0.00.266.142 I llm_load_print_meta: rope scaling     = linear
0.00.266.143 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.144 I llm_load_print_meta: freq_scale_train = 1
0.00.266.144 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.145 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.145 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.145 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.145 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.146 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.146 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.146 I llm_load_print_meta: model type       = 2B
0.00.266.147 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.266.147 I llm_load_print_meta: model params     = 2.51 B
0.00.266.148 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.266.149 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.149 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.149 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.150 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.150 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.150 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.151 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.151 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.151 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.152 I llm_load_print_meta: max token length = 93
0.00.327.054 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.327.060 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.327.061 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.327.061 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.327.062 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.327.062 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.332.228 I llama_new_context_with_model: n_seq_max     = 1
0.00.332.234 I llama_new_context_with_model: n_ctx         = 4096
0.00.332.234 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.332.235 I llama_new_context_with_model: n_batch       = 2048
0.00.332.235 I llama_new_context_with_model: n_ubatch      = 512
0.00.332.236 I llama_new_context_with_model: flash_attn    = 0
0.00.332.238 I llama_new_context_with_model: freq_base     = 10000.0
0.00.332.240 I llama_new_context_with_model: freq_scale    = 1
0.00.332.241 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.346.856 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.346.870 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.346.964 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.348.261 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.348.267 I llama_new_context_with_model: graph nodes  = 601
0.00.348.267 I llama_new_context_with_model: graph splits = 1
0.00.348.270 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.423.133 I main: llama threadpool init, n_threads = 4
0.00.423.148 I 
0.00.423.222 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.423.225 I 
0.00.423.266 I sampler seed: 1956443206
0.00.423.277 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.423.280 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.423.281 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.423.283 I 
 susceptables of the following sentences:

a) The dog chased the ball.
b) The children are playing in the park.
c) The teacher

0.02.009.702 I llama_perf_sampler_print:    sampling time =       5.00 ms /    33 runs   (    0.15 ms per token,  6598.68 tokens per second)
0.02.009.705 I llama_perf_context_print:        load time =     422.37 ms
0.02.009.706 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.009.708 I llama_perf_context_print:        eval time =    1568.00 ms /    32 runs   (   49.00 ms per token,    20.41 tokens per second)
0.02.009.709 I llama_perf_context_print:       total time =    1586.58 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4132 (a112eb45)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40164.31 ms
main:    total time = 40164.31 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.585 I build: 4132 (a112eb45) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.817 I main: llama backend init
0.00.000.824 I main: load the model and apply lora adapter, if any
0.00.021.476 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.496 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.508 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.510 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.515 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.516 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.517 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.518 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.519 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.519 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.525 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.526 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.527 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.527 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.528 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.229 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.283 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.156 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.164 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.165 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.166 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.167 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.168 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.169 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.173 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.174 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.178 I llama_model_loader: - type  f32:   37 tensors
0.00.132.179 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.180 I llama_model_loader: - type q6_K:   19 tensors
0.00.212.854 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.261.833 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.400 I llm_load_vocab: special tokens cache size = 5
0.00.283.453 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.283.470 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.283.471 I llm_load_print_meta: arch             = gemma
0.00.283.471 I llm_load_print_meta: vocab type       = SPM
0.00.283.472 I llm_load_print_meta: n_vocab          = 256000
0.00.283.472 I llm_load_print_meta: n_merges         = 0
0.00.283.474 I llm_load_print_meta: vocab_only       = 0
0.00.283.474 I llm_load_print_meta: n_ctx_train      = 8192
0.00.283.475 I llm_load_print_meta: n_embd           = 2048
0.00.283.475 I llm_load_print_meta: n_layer          = 18
0.00.283.486 I llm_load_print_meta: n_head           = 8
0.00.283.487 I llm_load_print_meta: n_head_kv        = 1
0.00.283.487 I llm_load_print_meta: n_rot            = 256
0.00.283.487 I llm_load_print_meta: n_swa            = 0
0.00.283.488 I llm_load_print_meta: n_embd_head_k    = 256
0.00.283.488 I llm_load_print_meta: n_embd_head_v    = 256
0.00.283.489 I llm_load_print_meta: n_gqa            = 8
0.00.283.491 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.283.492 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.283.493 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.283.494 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.283.494 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.283.495 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.283.495 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.283.497 I llm_load_print_meta: n_ff             = 16384
0.00.283.497 I llm_load_print_meta: n_expert         = 0
0.00.283.497 I llm_load_print_meta: n_expert_used    = 0
0.00.283.497 I llm_load_print_meta: causal attn      = 1
0.00.283.498 I llm_load_print_meta: pooling type     = 0
0.00.283.498 I llm_load_print_meta: rope type        = 2
0.00.283.499 I llm_load_print_meta: rope scaling     = linear
0.00.283.500 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.283.501 I llm_load_print_meta: freq_scale_train = 1
0.00.283.501 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.283.502 I llm_load_print_meta: rope_finetuned   = unknown
0.00.283.502 I llm_load_print_meta: ssm_d_conv       = 0
0.00.283.502 I llm_load_print_meta: ssm_d_inner      = 0
0.00.283.503 I llm_load_print_meta: ssm_d_state      = 0
0.00.283.503 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.283.503 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.283.503 I llm_load_print_meta: model type       = 2B
0.00.283.504 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.283.505 I llm_load_print_meta: model params     = 2.51 B
0.00.283.505 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.283.506 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.283.506 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.283.507 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.283.507 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.283.508 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.283.508 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.283.508 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.283.509 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.283.509 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.283.510 I llm_load_print_meta: max token length = 93
0.00.341.006 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.346.167 I llama_new_context_with_model: n_seq_max     = 1
0.00.346.173 I llama_new_context_with_model: n_ctx         = 4096
0.00.346.173 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.346.174 I llama_new_context_with_model: n_batch       = 2048
0.00.346.174 I llama_new_context_with_model: n_ubatch      = 512
0.00.346.175 I llama_new_context_with_model: flash_attn    = 0
0.00.346.177 I llama_new_context_with_model: freq_base     = 10000.0
0.00.346.178 I llama_new_context_with_model: freq_scale    = 1
0.00.346.179 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.361.357 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.361.372 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.361.482 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.854 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.362.860 I llama_new_context_with_model: graph nodes  = 601
0.00.362.860 I llama_new_context_with_model: graph splits = 1
0.00.362.862 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.437.242 I main: llama threadpool init, n_threads = 4
0.00.437.255 I 
0.00.437.328 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.437.331 I 
0.00.437.372 I sampler seed: 2159334237
0.00.437.383 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.437.386 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.437.387 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.437.387 I 
 increasities, and other forms of inappropriate behavior toward students.

This behavior is unacceptable and violates the university's policies against sexual harassment and discrimination. It is

0.02.025.445 I llama_perf_sampler_print:    sampling time =       5.07 ms /    33 runs   (    0.15 ms per token,  6508.88 tokens per second)
0.02.025.449 I llama_perf_context_print:        load time =     436.40 ms
0.02.025.451 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.025.452 I llama_perf_context_print:        eval time =    1569.25 ms /    32 runs   (   49.04 ms per token,    20.39 tokens per second)
0.02.025.453 I llama_perf_context_print:       total time =    1588.21 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.207s
user	10m24.469s
sys	0m6.915s
