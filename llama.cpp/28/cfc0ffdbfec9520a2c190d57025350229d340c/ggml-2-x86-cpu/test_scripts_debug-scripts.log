+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.703 I build: 3837 (28cfc0ff) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.912 I main: llama backend init
0.00.002.864 I main: load the model and apply lora adapter, if any
0.00.025.184 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.364 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.454 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.466 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.467 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.472 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.474 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.475 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.476 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.476 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.477 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.484 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.486 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.487 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.487 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.489 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.940 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.459 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.675 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.682 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.683 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.684 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.685 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.686 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.687 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.689 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.690 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.691 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.197.692 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.197.693 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.197.701 I llama_model_loader: - type  f32:   37 tensors
0.00.197.704 I llama_model_loader: - type q8_0:  127 tensors
0.00.483.295 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.508.318 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.509.345 I llm_load_vocab: special tokens cache size = 5
0.00.569.703 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.569.761 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.569.762 I llm_load_print_meta: arch             = gemma
0.00.569.762 I llm_load_print_meta: vocab type       = SPM
0.00.569.763 I llm_load_print_meta: n_vocab          = 256000
0.00.569.765 I llm_load_print_meta: n_merges         = 0
0.00.569.766 I llm_load_print_meta: vocab_only       = 0
0.00.569.766 I llm_load_print_meta: n_ctx_train      = 8192
0.00.569.766 I llm_load_print_meta: n_embd           = 2048
0.00.569.767 I llm_load_print_meta: n_layer          = 18
0.00.569.800 I llm_load_print_meta: n_head           = 8
0.00.569.807 I llm_load_print_meta: n_head_kv        = 1
0.00.569.808 I llm_load_print_meta: n_rot            = 256
0.00.569.808 I llm_load_print_meta: n_swa            = 0
0.00.569.809 I llm_load_print_meta: n_embd_head_k    = 256
0.00.569.809 I llm_load_print_meta: n_embd_head_v    = 256
0.00.569.814 I llm_load_print_meta: n_gqa            = 8
0.00.569.818 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.569.823 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.569.824 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.569.826 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.569.827 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.569.844 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.569.845 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.569.849 I llm_load_print_meta: n_ff             = 16384
0.00.569.850 I llm_load_print_meta: n_expert         = 0
0.00.569.850 I llm_load_print_meta: n_expert_used    = 0
0.00.569.851 I llm_load_print_meta: causal attn      = 1
0.00.569.851 I llm_load_print_meta: pooling type     = 0
0.00.569.852 I llm_load_print_meta: rope type        = 2
0.00.569.852 I llm_load_print_meta: rope scaling     = linear
0.00.569.854 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.569.854 I llm_load_print_meta: freq_scale_train = 1
0.00.569.854 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.569.855 I llm_load_print_meta: rope_finetuned   = unknown
0.00.569.855 I llm_load_print_meta: ssm_d_conv       = 0
0.00.569.855 I llm_load_print_meta: ssm_d_inner      = 0
0.00.569.856 I llm_load_print_meta: ssm_d_state      = 0
0.00.569.874 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.569.875 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.569.876 I llm_load_print_meta: model type       = 2B
0.00.569.877 I llm_load_print_meta: model ftype      = Q8_0
0.00.569.878 I llm_load_print_meta: model params     = 2.51 B
0.00.569.882 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.569.883 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.569.883 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.569.891 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.569.892 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.569.892 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.569.894 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.569.894 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.569.900 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.569.901 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.569.902 I llm_load_print_meta: max token length = 93
0.00.570.083 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.671.914 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.671.925 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.671.926 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.671.927 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.671.927 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.671.928 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.677.704 I llama_new_context_with_model: n_ctx      = 8192
0.00.677.711 I llama_new_context_with_model: n_batch    = 2048
0.00.677.711 I llama_new_context_with_model: n_ubatch   = 512
0.00.677.712 I llama_new_context_with_model: flash_attn = 0
0.00.677.715 I llama_new_context_with_model: freq_base  = 10000.0
0.00.677.716 I llama_new_context_with_model: freq_scale = 1
0.00.706.569 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.706.612 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.706.723 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.708.094 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.708.101 I llama_new_context_with_model: graph nodes  = 601
0.00.708.101 I llama_new_context_with_model: graph splits = 1
0.00.708.117 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.319.996 I main: llama threadpool init, n_threads = 4
0.01.320.008 I 
0.01.320.101 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.320.104 I 
0.01.320.287 I sampler seed: 310315308
0.01.320.297 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.320.302 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.320.303 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.320.303 I 
 increadibly. 

The phrase "a lady scorned" means a woman who is angry and humiliated.

**What does the phrase "a lady scorn

0.14.870.199 I llama_perf_sampler_print:    sampling time =      47.51 ms /    33 runs   (    1.44 ms per token,   694.55 tokens per second)
0.14.870.203 I llama_perf_context_print:        load time =    1317.04 ms
0.14.870.205 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.870.219 I llama_perf_context_print:        eval time =   13469.56 ms /    32 runs   (  420.92 ms per token,     2.38 tokens per second)
0.14.870.220 I llama_perf_context_print:       total time =   13550.21 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.645 I build: 3837 (28cfc0ff) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.852 I main: llama backend init
0.00.002.797 I main: load the model and apply lora adapter, if any
0.00.024.951 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.043 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.058 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.062 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.066 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.067 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.069 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.069 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.070 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.071 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.077 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.078 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.078 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.079 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.080 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.565 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.662 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.850 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.857 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.858 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.859 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.860 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.861 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.862 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.865 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.866 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.867 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.868 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.198.869 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.878 I llama_model_loader: - type  f32:   37 tensors
0.00.198.884 I llama_model_loader: - type q8_0:  127 tensors
0.00.478.099 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.501.708 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.502.694 I llm_load_vocab: special tokens cache size = 5
0.00.562.100 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.562.158 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.562.162 I llm_load_print_meta: arch             = gemma
0.00.562.163 I llm_load_print_meta: vocab type       = SPM
0.00.562.163 I llm_load_print_meta: n_vocab          = 256000
0.00.562.166 I llm_load_print_meta: n_merges         = 0
0.00.562.166 I llm_load_print_meta: vocab_only       = 0
0.00.562.167 I llm_load_print_meta: n_ctx_train      = 8192
0.00.562.167 I llm_load_print_meta: n_embd           = 2048
0.00.562.167 I llm_load_print_meta: n_layer          = 18
0.00.562.201 I llm_load_print_meta: n_head           = 8
0.00.562.211 I llm_load_print_meta: n_head_kv        = 1
0.00.562.213 I llm_load_print_meta: n_rot            = 256
0.00.562.213 I llm_load_print_meta: n_swa            = 0
0.00.562.213 I llm_load_print_meta: n_embd_head_k    = 256
0.00.562.215 I llm_load_print_meta: n_embd_head_v    = 256
0.00.562.220 I llm_load_print_meta: n_gqa            = 8
0.00.562.225 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.562.231 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.562.232 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.562.233 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.562.233 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.562.234 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.562.234 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.562.241 I llm_load_print_meta: n_ff             = 16384
0.00.562.242 I llm_load_print_meta: n_expert         = 0
0.00.562.242 I llm_load_print_meta: n_expert_used    = 0
0.00.562.242 I llm_load_print_meta: causal attn      = 1
0.00.562.243 I llm_load_print_meta: pooling type     = 0
0.00.562.243 I llm_load_print_meta: rope type        = 2
0.00.562.244 I llm_load_print_meta: rope scaling     = linear
0.00.562.246 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.562.246 I llm_load_print_meta: freq_scale_train = 1
0.00.562.255 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.562.258 I llm_load_print_meta: rope_finetuned   = unknown
0.00.562.258 I llm_load_print_meta: ssm_d_conv       = 0
0.00.562.258 I llm_load_print_meta: ssm_d_inner      = 0
0.00.562.259 I llm_load_print_meta: ssm_d_state      = 0
0.00.562.259 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.562.259 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.562.260 I llm_load_print_meta: model type       = 2B
0.00.562.261 I llm_load_print_meta: model ftype      = Q8_0
0.00.562.262 I llm_load_print_meta: model params     = 2.51 B
0.00.562.275 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.562.276 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.562.285 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.562.293 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.562.294 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.562.294 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.562.294 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.562.295 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.562.301 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.562.303 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.562.303 I llm_load_print_meta: max token length = 93
0.00.562.487 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.659.428 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.665.138 I llama_new_context_with_model: n_ctx      = 8192
0.00.665.145 I llama_new_context_with_model: n_batch    = 2048
0.00.665.146 I llama_new_context_with_model: n_ubatch   = 512
0.00.665.146 I llama_new_context_with_model: flash_attn = 0
0.00.665.150 I llama_new_context_with_model: freq_base  = 10000.0
0.00.665.150 I llama_new_context_with_model: freq_scale = 1
0.00.695.542 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.695.588 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.695.698 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.697.051 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.697.057 I llama_new_context_with_model: graph nodes  = 601
0.00.697.058 I llama_new_context_with_model: graph splits = 1
0.00.697.072 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.308.944 I main: llama threadpool init, n_threads = 4
0.01.308.956 I 
0.01.309.050 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.309.054 I 
0.01.309.217 I sampler seed: 2874418566
0.01.309.227 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.309.232 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.309.232 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.309.233 I 
 increasities to provide an answer to the question. [end of text]


0.05.925.501 I llama_perf_sampler_print:    sampling time =      16.58 ms /    12 runs   (    1.38 ms per token,   723.81 tokens per second)
0.05.925.504 I llama_perf_context_print:        load time =    1306.06 ms
0.05.925.516 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.05.925.518 I llama_perf_context_print:        eval time =    4587.65 ms /    11 runs   (  417.06 ms per token,     2.40 tokens per second)
0.05.925.519 I llama_perf_context_print:       total time =    4616.57 ms /    12 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.618 I build: 3837 (28cfc0ff) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.815 I main: llama backend init
0.00.002.795 I main: load the model and apply lora adapter, if any
0.00.024.620 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.811 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.900 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.911 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.912 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.917 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.930 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.931 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.932 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.934 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.935 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.941 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.942 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.943 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.944 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.945 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.839 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.456 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.688 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.695 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.696 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.697 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.698 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.699 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.700 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.704 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.705 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.706 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.707 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.198.708 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.715 I llama_model_loader: - type  f32:   37 tensors
0.00.198.720 I llama_model_loader: - type q8_0:  127 tensors
0.00.485.943 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.512.273 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.513.436 I llm_load_vocab: special tokens cache size = 5
0.00.572.808 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.572.868 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.572.869 I llm_load_print_meta: arch             = gemma
0.00.572.870 I llm_load_print_meta: vocab type       = SPM
0.00.572.870 I llm_load_print_meta: n_vocab          = 256000
0.00.572.873 I llm_load_print_meta: n_merges         = 0
0.00.572.873 I llm_load_print_meta: vocab_only       = 0
0.00.572.874 I llm_load_print_meta: n_ctx_train      = 8192
0.00.572.874 I llm_load_print_meta: n_embd           = 2048
0.00.572.875 I llm_load_print_meta: n_layer          = 18
0.00.572.909 I llm_load_print_meta: n_head           = 8
0.00.572.916 I llm_load_print_meta: n_head_kv        = 1
0.00.572.916 I llm_load_print_meta: n_rot            = 256
0.00.572.917 I llm_load_print_meta: n_swa            = 0
0.00.572.917 I llm_load_print_meta: n_embd_head_k    = 256
0.00.572.917 I llm_load_print_meta: n_embd_head_v    = 256
0.00.572.922 I llm_load_print_meta: n_gqa            = 8
0.00.572.927 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.572.931 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.572.932 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.572.934 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.572.935 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.572.935 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.572.936 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.572.941 I llm_load_print_meta: n_ff             = 16384
0.00.572.941 I llm_load_print_meta: n_expert         = 0
0.00.572.941 I llm_load_print_meta: n_expert_used    = 0
0.00.572.942 I llm_load_print_meta: causal attn      = 1
0.00.572.942 I llm_load_print_meta: pooling type     = 0
0.00.572.963 I llm_load_print_meta: rope type        = 2
0.00.572.964 I llm_load_print_meta: rope scaling     = linear
0.00.572.966 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.572.967 I llm_load_print_meta: freq_scale_train = 1
0.00.572.967 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.572.968 I llm_load_print_meta: rope_finetuned   = unknown
0.00.572.968 I llm_load_print_meta: ssm_d_conv       = 0
0.00.572.968 I llm_load_print_meta: ssm_d_inner      = 0
0.00.572.969 I llm_load_print_meta: ssm_d_state      = 0
0.00.572.969 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.572.971 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.572.971 I llm_load_print_meta: model type       = 2B
0.00.572.972 I llm_load_print_meta: model ftype      = Q8_0
0.00.572.973 I llm_load_print_meta: model params     = 2.51 B
0.00.572.974 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.572.975 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.572.976 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.572.976 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.572.976 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.572.977 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.572.978 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.572.978 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.572.986 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.572.987 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.572.988 I llm_load_print_meta: max token length = 93
0.00.573.174 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.650.168 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.650.176 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.650.177 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.650.178 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.650.179 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.650.179 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.655.755 I llama_new_context_with_model: n_ctx      = 8192
0.00.655.763 I llama_new_context_with_model: n_batch    = 2048
0.00.655.764 I llama_new_context_with_model: n_ubatch   = 512
0.00.655.764 I llama_new_context_with_model: flash_attn = 0
0.00.655.767 I llama_new_context_with_model: freq_base  = 10000.0
0.00.655.768 I llama_new_context_with_model: freq_scale = 1
0.00.685.057 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.685.098 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.685.222 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.686.605 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.686.611 I llama_new_context_with_model: graph nodes  = 601
0.00.686.611 I llama_new_context_with_model: graph splits = 1
0.00.686.626 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.333.501 I main: llama threadpool init, n_threads = 4
0.01.333.512 I 
0.01.333.611 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.333.615 I 
0.01.333.795 I sampler seed: 2794553188
0.01.333.807 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.333.812 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.333.813 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.333.813 I 
 increabling.

The provided text contains a misspelling of the word "certifying". Please correct the misspelling and provide the correct definition.

**Correct

0.14.941.583 I llama_perf_sampler_print:    sampling time =      47.89 ms /    33 runs   (    1.45 ms per token,   689.04 tokens per second)
0.14.941.586 I llama_perf_context_print:        load time =    1330.62 ms
0.14.941.588 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.941.608 I llama_perf_context_print:        eval time =   13526.61 ms /    32 runs   (  422.71 ms per token,     2.37 tokens per second)
0.14.941.610 I llama_perf_context_print:       total time =   13608.09 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.550 I build: 3837 (28cfc0ff) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.743 I main: llama backend init
0.00.002.678 I main: load the model and apply lora adapter, if any
0.00.024.330 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.512 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.595 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.605 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.607 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.610 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.612 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.613 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.614 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.615 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.616 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.622 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.623 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.623 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.624 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.625 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.665 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.351 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.461 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.469 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.470 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.470 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.471 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.472 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.473 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.477 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.479 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.480 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.481 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.198.482 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.491 I llama_model_loader: - type  f32:   37 tensors
0.00.198.497 I llama_model_loader: - type q8_0:  127 tensors
0.00.476.091 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.500.684 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.501.672 I llm_load_vocab: special tokens cache size = 5
0.00.561.007 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.561.064 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.561.068 I llm_load_print_meta: arch             = gemma
0.00.561.069 I llm_load_print_meta: vocab type       = SPM
0.00.561.069 I llm_load_print_meta: n_vocab          = 256000
0.00.561.072 I llm_load_print_meta: n_merges         = 0
0.00.561.072 I llm_load_print_meta: vocab_only       = 0
0.00.561.072 I llm_load_print_meta: n_ctx_train      = 8192
0.00.561.073 I llm_load_print_meta: n_embd           = 2048
0.00.561.073 I llm_load_print_meta: n_layer          = 18
0.00.561.107 I llm_load_print_meta: n_head           = 8
0.00.561.117 I llm_load_print_meta: n_head_kv        = 1
0.00.561.117 I llm_load_print_meta: n_rot            = 256
0.00.561.119 I llm_load_print_meta: n_swa            = 0
0.00.561.119 I llm_load_print_meta: n_embd_head_k    = 256
0.00.561.119 I llm_load_print_meta: n_embd_head_v    = 256
0.00.561.125 I llm_load_print_meta: n_gqa            = 8
0.00.561.130 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.561.135 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.561.136 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.561.138 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.561.139 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.561.140 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.561.140 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.561.145 I llm_load_print_meta: n_ff             = 16384
0.00.561.146 I llm_load_print_meta: n_expert         = 0
0.00.561.146 I llm_load_print_meta: n_expert_used    = 0
0.00.561.147 I llm_load_print_meta: causal attn      = 1
0.00.561.147 I llm_load_print_meta: pooling type     = 0
0.00.561.147 I llm_load_print_meta: rope type        = 2
0.00.561.148 I llm_load_print_meta: rope scaling     = linear
0.00.561.150 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.561.151 I llm_load_print_meta: freq_scale_train = 1
0.00.561.151 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.561.151 I llm_load_print_meta: rope_finetuned   = unknown
0.00.561.151 I llm_load_print_meta: ssm_d_conv       = 0
0.00.561.152 I llm_load_print_meta: ssm_d_inner      = 0
0.00.561.155 I llm_load_print_meta: ssm_d_state      = 0
0.00.561.155 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.561.155 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.561.156 I llm_load_print_meta: model type       = 2B
0.00.561.157 I llm_load_print_meta: model ftype      = Q8_0
0.00.561.157 I llm_load_print_meta: model params     = 2.51 B
0.00.561.158 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.561.158 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.561.159 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.561.159 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.561.160 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.561.160 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.561.161 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.561.161 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.561.166 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.561.168 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.561.171 I llm_load_print_meta: max token length = 93
0.00.561.345 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.633.051 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.633.061 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.638.571 I llama_new_context_with_model: n_ctx      = 8192
0.00.638.578 I llama_new_context_with_model: n_batch    = 2048
0.00.638.579 I llama_new_context_with_model: n_ubatch   = 512
0.00.638.579 I llama_new_context_with_model: flash_attn = 0
0.00.638.582 I llama_new_context_with_model: freq_base  = 10000.0
0.00.638.582 I llama_new_context_with_model: freq_scale = 1
0.00.667.797 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.667.837 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.667.951 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.669.316 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.669.322 I llama_new_context_with_model: graph nodes  = 601
0.00.669.323 I llama_new_context_with_model: graph splits = 1
0.00.669.339 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.281.163 I main: llama threadpool init, n_threads = 4
0.01.281.175 I 
0.01.281.262 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.281.266 I 
0.01.281.425 I sampler seed: 821428916
0.01.281.435 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.281.439 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.281.440 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.281.440 I 
 increasities, it is crucial to take steps to prevent such incidents from occurring.

**a)** Implement strict regulations and oversight on financial institutions.
**b

0.14.852.633 I llama_perf_sampler_print:    sampling time =      47.78 ms /    33 runs   (    1.45 ms per token,   690.68 tokens per second)
0.14.852.637 I llama_perf_context_print:        load time =    1278.40 ms
0.14.852.639 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.852.642 I llama_perf_context_print:        eval time =   13490.51 ms /    32 runs   (  421.58 ms per token,     2.37 tokens per second)
0.14.852.643 I llama_perf_context_print:       total time =   13571.48 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m0.456s
user	3m13.987s
sys	0m9.379s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3837 (28cfc0ff)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199310.30 ms
main:    total time = 199310.30 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.548 I build: 3837 (28cfc0ff) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.806 I main: llama backend init
0.00.002.763 I main: load the model and apply lora adapter, if any
0.00.025.093 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.272 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.360 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.373 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.375 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.378 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.379 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.380 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.381 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.381 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.382 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.387 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.388 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.390 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.390 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.391 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.097.191 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.186.622 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.198.816 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.198.824 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.198.825 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.198.826 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.198.826 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.198.827 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.198.828 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.198.831 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.198.832 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.198.833 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.198.834 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.198.835 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.198.843 I llama_model_loader: - type  f32:   37 tensors
0.00.198.847 I llama_model_loader: - type q4_K:  108 tensors
0.00.198.848 I llama_model_loader: - type q6_K:   19 tensors
0.00.490.002 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.515.230 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.516.324 I llm_load_vocab: special tokens cache size = 5
0.00.575.926 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.575.987 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.575.991 I llm_load_print_meta: arch             = gemma
0.00.575.992 I llm_load_print_meta: vocab type       = SPM
0.00.575.993 I llm_load_print_meta: n_vocab          = 256000
0.00.575.996 I llm_load_print_meta: n_merges         = 0
0.00.575.996 I llm_load_print_meta: vocab_only       = 0
0.00.575.996 I llm_load_print_meta: n_ctx_train      = 8192
0.00.575.997 I llm_load_print_meta: n_embd           = 2048
0.00.575.997 I llm_load_print_meta: n_layer          = 18
0.00.576.032 I llm_load_print_meta: n_head           = 8
0.00.576.042 I llm_load_print_meta: n_head_kv        = 1
0.00.576.042 I llm_load_print_meta: n_rot            = 256
0.00.576.044 I llm_load_print_meta: n_swa            = 0
0.00.576.044 I llm_load_print_meta: n_embd_head_k    = 256
0.00.576.044 I llm_load_print_meta: n_embd_head_v    = 256
0.00.576.050 I llm_load_print_meta: n_gqa            = 8
0.00.576.055 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.576.061 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.576.063 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.576.065 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.576.065 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.576.076 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.576.079 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.576.084 I llm_load_print_meta: n_ff             = 16384
0.00.576.084 I llm_load_print_meta: n_expert         = 0
0.00.576.085 I llm_load_print_meta: n_expert_used    = 0
0.00.576.085 I llm_load_print_meta: causal attn      = 1
0.00.576.086 I llm_load_print_meta: pooling type     = 0
0.00.576.089 I llm_load_print_meta: rope type        = 2
0.00.576.089 I llm_load_print_meta: rope scaling     = linear
0.00.576.090 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.576.091 I llm_load_print_meta: freq_scale_train = 1
0.00.576.091 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.576.092 I llm_load_print_meta: rope_finetuned   = unknown
0.00.576.092 I llm_load_print_meta: ssm_d_conv       = 0
0.00.576.092 I llm_load_print_meta: ssm_d_inner      = 0
0.00.576.093 I llm_load_print_meta: ssm_d_state      = 0
0.00.576.093 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.576.093 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.576.094 I llm_load_print_meta: model type       = 2B
0.00.576.095 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.576.095 I llm_load_print_meta: model params     = 2.51 B
0.00.576.110 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.576.110 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.576.111 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.576.112 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.576.112 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.576.121 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.576.122 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.576.122 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.576.128 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.576.130 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.576.130 I llm_load_print_meta: max token length = 93
0.00.576.306 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.635.833 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.635.846 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.635.847 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.635.847 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.635.848 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.635.849 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.641.548 I llama_new_context_with_model: n_ctx      = 8192
0.00.641.556 I llama_new_context_with_model: n_batch    = 2048
0.00.641.557 I llama_new_context_with_model: n_ubatch   = 512
0.00.641.557 I llama_new_context_with_model: flash_attn = 0
0.00.641.560 I llama_new_context_with_model: freq_base  = 10000.0
0.00.641.561 I llama_new_context_with_model: freq_scale = 1
0.00.670.998 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.671.041 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.671.152 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.672.548 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.672.554 I llama_new_context_with_model: graph nodes  = 601
0.00.672.555 I llama_new_context_with_model: graph splits = 1
0.00.672.571 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.254.733 I main: llama threadpool init, n_threads = 4
0.01.254.746 I 
0.01.254.839 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.254.843 I 
0.01.255.006 I sampler seed: 21025702
0.01.255.016 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.255.023 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.255.024 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.255.024 I 
 seconded question 22.

I am unable to generate a response for question 22 as it requires access to personal information that I do not possess

0.12.217.450 I llama_perf_sampler_print:    sampling time =      47.73 ms /    33 runs   (    1.45 ms per token,   691.45 tokens per second)
0.12.217.453 I llama_perf_context_print:        load time =    1251.89 ms
0.12.217.478 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.217.480 I llama_perf_context_print:        eval time =   10882.34 ms /    32 runs   (  340.07 ms per token,     2.94 tokens per second)
0.12.217.481 I llama_perf_context_print:       total time =   10962.73 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3837 (28cfc0ff)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199292.36 ms
main:    total time = 199292.36 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.621 I build: 3837 (28cfc0ff) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.843 I main: llama backend init
0.00.002.811 I main: load the model and apply lora adapter, if any
0.00.024.357 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.453 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.467 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.472 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.478 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.479 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.481 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.482 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.484 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.486 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.493 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.498 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.499 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.505 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.507 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.096.187 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.185.556 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.197.823 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.197.830 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.197.831 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.197.832 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.197.833 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.197.834 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.197.835 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.197.838 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.197.839 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.197.849 I llama_model_loader: - type  f32:   37 tensors
0.00.197.853 I llama_model_loader: - type q4_K:  108 tensors
0.00.197.854 I llama_model_loader: - type q6_K:   19 tensors
0.00.467.094 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.489.974 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.490.956 I llm_load_vocab: special tokens cache size = 5
0.00.551.089 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.551.150 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.551.151 I llm_load_print_meta: arch             = gemma
0.00.551.151 I llm_load_print_meta: vocab type       = SPM
0.00.551.152 I llm_load_print_meta: n_vocab          = 256000
0.00.551.155 I llm_load_print_meta: n_merges         = 0
0.00.551.155 I llm_load_print_meta: vocab_only       = 0
0.00.551.156 I llm_load_print_meta: n_ctx_train      = 8192
0.00.551.156 I llm_load_print_meta: n_embd           = 2048
0.00.551.157 I llm_load_print_meta: n_layer          = 18
0.00.551.192 I llm_load_print_meta: n_head           = 8
0.00.551.199 I llm_load_print_meta: n_head_kv        = 1
0.00.551.200 I llm_load_print_meta: n_rot            = 256
0.00.551.200 I llm_load_print_meta: n_swa            = 0
0.00.551.201 I llm_load_print_meta: n_embd_head_k    = 256
0.00.551.202 I llm_load_print_meta: n_embd_head_v    = 256
0.00.551.207 I llm_load_print_meta: n_gqa            = 8
0.00.551.212 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.551.217 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.551.218 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.551.219 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.551.219 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.551.220 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.551.220 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.551.227 I llm_load_print_meta: n_ff             = 16384
0.00.551.228 I llm_load_print_meta: n_expert         = 0
0.00.551.229 I llm_load_print_meta: n_expert_used    = 0
0.00.551.230 I llm_load_print_meta: causal attn      = 1
0.00.551.231 I llm_load_print_meta: pooling type     = 0
0.00.551.232 I llm_load_print_meta: rope type        = 2
0.00.551.233 I llm_load_print_meta: rope scaling     = linear
0.00.551.235 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.551.236 I llm_load_print_meta: freq_scale_train = 1
0.00.551.237 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.551.238 I llm_load_print_meta: rope_finetuned   = unknown
0.00.551.239 I llm_load_print_meta: ssm_d_conv       = 0
0.00.551.240 I llm_load_print_meta: ssm_d_inner      = 0
0.00.551.240 I llm_load_print_meta: ssm_d_state      = 0
0.00.551.241 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.551.241 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.551.243 I llm_load_print_meta: model type       = 2B
0.00.551.244 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.551.244 I llm_load_print_meta: model params     = 2.51 B
0.00.551.246 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.551.246 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.551.248 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.551.249 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.551.250 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.551.251 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.551.252 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.551.253 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.551.259 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.551.261 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.551.262 I llm_load_print_meta: max token length = 93
0.00.551.460 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.609.404 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.615.023 I llama_new_context_with_model: n_ctx      = 8192
0.00.615.030 I llama_new_context_with_model: n_batch    = 2048
0.00.615.031 I llama_new_context_with_model: n_ubatch   = 512
0.00.615.031 I llama_new_context_with_model: flash_attn = 0
0.00.615.034 I llama_new_context_with_model: freq_base  = 10000.0
0.00.615.035 I llama_new_context_with_model: freq_scale = 1
0.00.644.782 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.644.831 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.644.938 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
ggml_gallocr_reserve_n: reallocating CPU buffer from size 0.00 MiB to 508.00 MiB
0.00.646.309 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.646.317 I llama_new_context_with_model: graph nodes  = 601
0.00.646.318 I llama_new_context_with_model: graph splits = 1
0.00.646.336 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.226.899 I main: llama threadpool init, n_threads = 4
0.01.226.911 I 
0.01.227.016 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.227.019 I 
0.01.227.194 I sampler seed: 2495425199
0.01.227.204 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.227.211 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.227.222 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.227.226 I 
 squaRED, a woman of mystery and intrigue, haunted the secluded mists of the Black Forest. Her reputation preceded her – whispers of a woman who could shapeshift

0.12.221.450 I llama_perf_sampler_print:    sampling time =      47.80 ms /    33 runs   (    1.45 ms per token,   690.35 tokens per second)
0.12.221.453 I llama_perf_context_print:        load time =    1224.00 ms
0.12.221.454 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.221.456 I llama_perf_context_print:        eval time =   10914.01 ms /    32 runs   (  341.06 ms per token,     2.93 tokens per second)
0.12.221.478 I llama_perf_context_print:       total time =   10994.56 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m5.896s
user	50m6.721s
sys	0m6.356s
