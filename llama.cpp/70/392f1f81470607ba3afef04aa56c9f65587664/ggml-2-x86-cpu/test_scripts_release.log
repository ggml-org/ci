+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.571 I build: 3821 (70392f1f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.788 I main: llama backend init
0.00.001.879 I main: load the model and apply lora adapter, if any
0.00.022.281 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.329 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.341 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.350 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.351 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.355 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.356 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.356 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.357 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.358 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.359 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.363 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.364 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.364 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.365 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.365 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.193 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.031 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.907 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.914 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.914 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.915 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.916 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.916 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.917 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.920 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.920 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.921 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.922 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.923 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.927 I llama_model_loader: - type  f32:   37 tensors
0.00.133.929 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.541 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.216.707 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.217.474 I llm_load_vocab: special tokens cache size = 5
0.00.235.806 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.235.818 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.235.818 I llm_load_print_meta: arch             = gemma
0.00.235.819 I llm_load_print_meta: vocab type       = SPM
0.00.235.820 I llm_load_print_meta: n_vocab          = 256000
0.00.235.820 I llm_load_print_meta: n_merges         = 0
0.00.235.820 I llm_load_print_meta: vocab_only       = 0
0.00.235.821 I llm_load_print_meta: n_ctx_train      = 8192
0.00.235.821 I llm_load_print_meta: n_embd           = 2048
0.00.235.821 I llm_load_print_meta: n_layer          = 18
0.00.235.832 I llm_load_print_meta: n_head           = 8
0.00.235.833 I llm_load_print_meta: n_head_kv        = 1
0.00.235.833 I llm_load_print_meta: n_rot            = 256
0.00.235.833 I llm_load_print_meta: n_swa            = 0
0.00.235.834 I llm_load_print_meta: n_embd_head_k    = 256
0.00.235.834 I llm_load_print_meta: n_embd_head_v    = 256
0.00.235.835 I llm_load_print_meta: n_gqa            = 8
0.00.235.836 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.235.837 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.235.837 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.235.839 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.235.839 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.235.839 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.235.840 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.235.841 I llm_load_print_meta: n_ff             = 16384
0.00.235.841 I llm_load_print_meta: n_expert         = 0
0.00.235.842 I llm_load_print_meta: n_expert_used    = 0
0.00.235.842 I llm_load_print_meta: causal attn      = 1
0.00.235.842 I llm_load_print_meta: pooling type     = 0
0.00.235.843 I llm_load_print_meta: rope type        = 2
0.00.235.843 I llm_load_print_meta: rope scaling     = linear
0.00.235.845 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.235.845 I llm_load_print_meta: freq_scale_train = 1
0.00.235.845 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.235.846 I llm_load_print_meta: rope_finetuned   = unknown
0.00.235.846 I llm_load_print_meta: ssm_d_conv       = 0
0.00.235.846 I llm_load_print_meta: ssm_d_inner      = 0
0.00.235.846 I llm_load_print_meta: ssm_d_state      = 0
0.00.235.847 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.235.847 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.235.848 I llm_load_print_meta: model type       = 2B
0.00.235.848 I llm_load_print_meta: model ftype      = Q8_0
0.00.235.849 I llm_load_print_meta: model params     = 2.51 B
0.00.235.850 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.235.850 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.235.851 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.235.851 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.235.851 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.235.851 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.235.852 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.235.852 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.235.852 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.235.853 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.235.853 I llm_load_print_meta: max token length = 93
0.00.235.871 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.334.457 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.334.465 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.334.466 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.334.466 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.334.467 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.334.467 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.339.613 I llama_new_context_with_model: n_ctx      = 8192
0.00.339.620 I llama_new_context_with_model: n_batch    = 2048
0.00.339.620 I llama_new_context_with_model: n_ubatch   = 512
0.00.339.621 I llama_new_context_with_model: flash_attn = 0
0.00.339.623 I llama_new_context_with_model: freq_base  = 10000.0
0.00.339.625 I llama_new_context_with_model: freq_scale = 1
0.00.369.620 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.369.636 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.369.728 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.604 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.370.612 I llama_new_context_with_model: graph nodes  = 601
0.00.370.612 I llama_new_context_with_model: graph splits = 1
0.00.370.614 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.476.202 I main: llama threadpool init, n_threads = 4
0.00.476.215 I 
0.00.476.304 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.476.308 I 
0.00.476.353 I sampler seed: 3869239873
0.00.476.363 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.476.368 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.476.369 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.476.369 I 
 increasively.

I am unable to generate the requested output as it contains potentially harmful or sensitive information. [end of text]


0.02.013.684 I llama_perf_sampler_print:    sampling time =       3.37 ms /    23 runs   (    0.15 ms per token,  6822.90 tokens per second)
0.02.013.687 I llama_perf_context_print:        load time =     474.31 ms
0.02.013.688 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.013.690 I llama_perf_context_print:        eval time =    1524.89 ms /    22 runs   (   69.31 ms per token,    14.43 tokens per second)
0.02.013.690 I llama_perf_context_print:       total time =    1537.49 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.546 I build: 3821 (70392f1f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.001.855 I main: load the model and apply lora adapter, if any
0.00.021.822 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.836 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.842 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.843 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.846 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.848 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.848 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.849 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.849 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.850 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.854 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.857 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.858 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.859 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.859 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.495 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.363 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.161 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.167 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.168 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.168 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.169 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.170 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.171 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.173 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.173 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.175 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.175 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.176 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.179 I llama_model_loader: - type  f32:   37 tensors
0.00.132.181 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.258 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.215.140 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.215.958 I llm_load_vocab: special tokens cache size = 5
0.00.234.609 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.234.624 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.234.625 I llm_load_print_meta: arch             = gemma
0.00.234.625 I llm_load_print_meta: vocab type       = SPM
0.00.234.626 I llm_load_print_meta: n_vocab          = 256000
0.00.234.626 I llm_load_print_meta: n_merges         = 0
0.00.234.626 I llm_load_print_meta: vocab_only       = 0
0.00.234.627 I llm_load_print_meta: n_ctx_train      = 8192
0.00.234.627 I llm_load_print_meta: n_embd           = 2048
0.00.234.627 I llm_load_print_meta: n_layer          = 18
0.00.234.640 I llm_load_print_meta: n_head           = 8
0.00.234.642 I llm_load_print_meta: n_head_kv        = 1
0.00.234.642 I llm_load_print_meta: n_rot            = 256
0.00.234.642 I llm_load_print_meta: n_swa            = 0
0.00.234.643 I llm_load_print_meta: n_embd_head_k    = 256
0.00.234.643 I llm_load_print_meta: n_embd_head_v    = 256
0.00.234.644 I llm_load_print_meta: n_gqa            = 8
0.00.234.645 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.234.646 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.234.647 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.234.648 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.234.648 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.234.649 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.234.649 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.234.650 I llm_load_print_meta: n_ff             = 16384
0.00.234.650 I llm_load_print_meta: n_expert         = 0
0.00.234.651 I llm_load_print_meta: n_expert_used    = 0
0.00.234.651 I llm_load_print_meta: causal attn      = 1
0.00.234.651 I llm_load_print_meta: pooling type     = 0
0.00.234.651 I llm_load_print_meta: rope type        = 2
0.00.234.652 I llm_load_print_meta: rope scaling     = linear
0.00.234.653 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.234.654 I llm_load_print_meta: freq_scale_train = 1
0.00.234.654 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.234.654 I llm_load_print_meta: rope_finetuned   = unknown
0.00.234.654 I llm_load_print_meta: ssm_d_conv       = 0
0.00.234.655 I llm_load_print_meta: ssm_d_inner      = 0
0.00.234.655 I llm_load_print_meta: ssm_d_state      = 0
0.00.234.655 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.234.656 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.234.656 I llm_load_print_meta: model type       = 2B
0.00.234.657 I llm_load_print_meta: model ftype      = Q8_0
0.00.234.657 I llm_load_print_meta: model params     = 2.51 B
0.00.234.658 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.234.659 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.234.659 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.234.660 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.234.660 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.234.660 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.234.661 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.234.661 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.234.661 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.234.662 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.234.662 I llm_load_print_meta: max token length = 93
0.00.234.682 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.327.968 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.333.050 I llama_new_context_with_model: n_ctx      = 8192
0.00.333.056 I llama_new_context_with_model: n_batch    = 2048
0.00.333.056 I llama_new_context_with_model: n_ubatch   = 512
0.00.333.057 I llama_new_context_with_model: flash_attn = 0
0.00.333.059 I llama_new_context_with_model: freq_base  = 10000.0
0.00.333.061 I llama_new_context_with_model: freq_scale = 1
0.00.363.482 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.363.498 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.363.590 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.428 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.364.436 I llama_new_context_with_model: graph nodes  = 601
0.00.364.436 I llama_new_context_with_model: graph splits = 1
0.00.364.438 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.457.825 I main: llama threadpool init, n_threads = 4
0.00.457.838 I 
0.00.457.916 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.457.920 I 
0.00.457.972 I sampler seed: 2763510702
0.00.457.983 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.457.986 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.457.987 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.457.987 I 
 increasities of the past into the present.

This is a dangerous and irresponsible use of historical analogies. It trivializes the complexity and nuance of historical events and

0.02.619.969 I llama_perf_sampler_print:    sampling time =       4.82 ms /    33 runs   (    0.15 ms per token,  6840.80 tokens per second)
0.02.619.972 I llama_perf_context_print:        load time =     455.95 ms
0.02.619.974 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.619.975 I llama_perf_context_print:        eval time =    2144.12 ms /    32 runs   (   67.00 ms per token,    14.92 tokens per second)
0.02.619.976 I llama_perf_context_print:       total time =    2162.15 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.555 I build: 3821 (70392f1f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.001.896 I main: load the model and apply lora adapter, if any
0.00.022.014 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.064 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.075 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.080 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.084 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.087 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.088 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.089 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.089 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.090 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.090 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.094 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.095 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.095 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.096 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.097 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.795 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.631 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.488 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.495 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.495 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.496 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.497 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.498 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.499 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.509 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.509 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.510 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.511 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.512 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.516 I llama_model_loader: - type  f32:   37 tensors
0.00.133.520 I llama_model_loader: - type q8_0:  127 tensors
0.00.197.298 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.534 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.172 I llm_load_vocab: special tokens cache size = 5
0.00.229.237 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.229.251 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.229.251 I llm_load_print_meta: arch             = gemma
0.00.229.252 I llm_load_print_meta: vocab type       = SPM
0.00.229.253 I llm_load_print_meta: n_vocab          = 256000
0.00.229.253 I llm_load_print_meta: n_merges         = 0
0.00.229.254 I llm_load_print_meta: vocab_only       = 0
0.00.229.254 I llm_load_print_meta: n_ctx_train      = 8192
0.00.229.254 I llm_load_print_meta: n_embd           = 2048
0.00.229.254 I llm_load_print_meta: n_layer          = 18
0.00.229.266 I llm_load_print_meta: n_head           = 8
0.00.229.267 I llm_load_print_meta: n_head_kv        = 1
0.00.229.267 I llm_load_print_meta: n_rot            = 256
0.00.229.268 I llm_load_print_meta: n_swa            = 0
0.00.229.268 I llm_load_print_meta: n_embd_head_k    = 256
0.00.229.268 I llm_load_print_meta: n_embd_head_v    = 256
0.00.229.269 I llm_load_print_meta: n_gqa            = 8
0.00.229.270 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.229.271 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.229.272 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.229.273 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.229.274 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.229.274 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.229.274 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.229.275 I llm_load_print_meta: n_ff             = 16384
0.00.229.276 I llm_load_print_meta: n_expert         = 0
0.00.229.276 I llm_load_print_meta: n_expert_used    = 0
0.00.229.276 I llm_load_print_meta: causal attn      = 1
0.00.229.277 I llm_load_print_meta: pooling type     = 0
0.00.229.277 I llm_load_print_meta: rope type        = 2
0.00.229.277 I llm_load_print_meta: rope scaling     = linear
0.00.229.279 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.229.279 I llm_load_print_meta: freq_scale_train = 1
0.00.229.280 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.229.280 I llm_load_print_meta: rope_finetuned   = unknown
0.00.229.280 I llm_load_print_meta: ssm_d_conv       = 0
0.00.229.281 I llm_load_print_meta: ssm_d_inner      = 0
0.00.229.281 I llm_load_print_meta: ssm_d_state      = 0
0.00.229.281 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.229.282 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.229.282 I llm_load_print_meta: model type       = 2B
0.00.229.283 I llm_load_print_meta: model ftype      = Q8_0
0.00.229.284 I llm_load_print_meta: model params     = 2.51 B
0.00.229.284 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.229.285 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.229.285 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.229.286 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.229.286 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.229.286 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.229.286 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.229.287 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.229.287 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.229.287 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.229.288 I llm_load_print_meta: max token length = 93
0.00.229.304 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.305.432 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.305.441 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.305.442 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.305.442 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.305.443 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.305.444 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.310.660 I llama_new_context_with_model: n_ctx      = 8192
0.00.310.666 I llama_new_context_with_model: n_batch    = 2048
0.00.310.667 I llama_new_context_with_model: n_ubatch   = 512
0.00.310.667 I llama_new_context_with_model: flash_attn = 0
0.00.310.670 I llama_new_context_with_model: freq_base  = 10000.0
0.00.310.671 I llama_new_context_with_model: freq_scale = 1
0.00.339.678 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.339.695 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.339.784 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.340.629 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.340.637 I llama_new_context_with_model: graph nodes  = 601
0.00.340.638 I llama_new_context_with_model: graph splits = 1
0.00.340.639 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.431.797 I main: llama threadpool init, n_threads = 4
0.00.431.809 I 
0.00.431.885 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.431.889 I 
0.00.431.925 I sampler seed: 3194424439
0.00.431.934 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.431.936 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.431.937 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.431.937 I 
 seconded.

The sentence is grammatically incorrect because the verb "seconded" is misspelled. The correct spelling is "seconded".

The sentence should

0.02.682.763 I llama_perf_sampler_print:    sampling time =       5.25 ms /    33 runs   (    0.16 ms per token,  6279.73 tokens per second)
0.02.682.766 I llama_perf_context_print:        load time =     429.88 ms
0.02.682.767 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.682.768 I llama_perf_context_print:        eval time =    2231.36 ms /    32 runs   (   69.73 ms per token,    14.34 tokens per second)
0.02.682.769 I llama_perf_context_print:       total time =    2250.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.561 I build: 3821 (70392f1f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.793 I main: llama backend init
0.00.001.914 I main: load the model and apply lora adapter, if any
0.00.021.765 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.832 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.844 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.850 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.854 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.858 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.860 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.861 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.862 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.863 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.863 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.869 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.870 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.871 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.872 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.873 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.813 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.943 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.852 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.858 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.859 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.859 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.860 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.861 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.861 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.864 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.865 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.866 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.867 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.868 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.871 I llama_model_loader: - type  f32:   37 tensors
0.00.132.874 I llama_model_loader: - type q8_0:  127 tensors
0.00.196.029 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.209.449 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.210.146 I llm_load_vocab: special tokens cache size = 5
0.00.228.435 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.228.448 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.228.448 I llm_load_print_meta: arch             = gemma
0.00.228.449 I llm_load_print_meta: vocab type       = SPM
0.00.228.450 I llm_load_print_meta: n_vocab          = 256000
0.00.228.450 I llm_load_print_meta: n_merges         = 0
0.00.228.450 I llm_load_print_meta: vocab_only       = 0
0.00.228.451 I llm_load_print_meta: n_ctx_train      = 8192
0.00.228.451 I llm_load_print_meta: n_embd           = 2048
0.00.228.451 I llm_load_print_meta: n_layer          = 18
0.00.228.462 I llm_load_print_meta: n_head           = 8
0.00.228.463 I llm_load_print_meta: n_head_kv        = 1
0.00.228.464 I llm_load_print_meta: n_rot            = 256
0.00.228.464 I llm_load_print_meta: n_swa            = 0
0.00.228.464 I llm_load_print_meta: n_embd_head_k    = 256
0.00.228.464 I llm_load_print_meta: n_embd_head_v    = 256
0.00.228.465 I llm_load_print_meta: n_gqa            = 8
0.00.228.466 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.228.467 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.228.468 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.228.469 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.228.470 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.228.470 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.228.471 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.228.471 I llm_load_print_meta: n_ff             = 16384
0.00.228.472 I llm_load_print_meta: n_expert         = 0
0.00.228.472 I llm_load_print_meta: n_expert_used    = 0
0.00.228.472 I llm_load_print_meta: causal attn      = 1
0.00.228.473 I llm_load_print_meta: pooling type     = 0
0.00.228.473 I llm_load_print_meta: rope type        = 2
0.00.228.473 I llm_load_print_meta: rope scaling     = linear
0.00.228.474 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.228.475 I llm_load_print_meta: freq_scale_train = 1
0.00.228.475 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.228.476 I llm_load_print_meta: rope_finetuned   = unknown
0.00.228.476 I llm_load_print_meta: ssm_d_conv       = 0
0.00.228.476 I llm_load_print_meta: ssm_d_inner      = 0
0.00.228.476 I llm_load_print_meta: ssm_d_state      = 0
0.00.228.477 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.228.477 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.228.477 I llm_load_print_meta: model type       = 2B
0.00.228.478 I llm_load_print_meta: model ftype      = Q8_0
0.00.228.479 I llm_load_print_meta: model params     = 2.51 B
0.00.228.479 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.228.480 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.228.480 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.228.481 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.228.481 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.228.481 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.228.482 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.228.482 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.228.482 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.228.483 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.228.483 I llm_load_print_meta: max token length = 93
0.00.228.499 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.299.680 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.299.687 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.304.594 I llama_new_context_with_model: n_ctx      = 8192
0.00.304.601 I llama_new_context_with_model: n_batch    = 2048
0.00.304.601 I llama_new_context_with_model: n_ubatch   = 512
0.00.304.602 I llama_new_context_with_model: flash_attn = 0
0.00.304.605 I llama_new_context_with_model: freq_base  = 10000.0
0.00.304.605 I llama_new_context_with_model: freq_scale = 1
0.00.334.296 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.334.310 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.334.400 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.335.259 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.335.267 I llama_new_context_with_model: graph nodes  = 601
0.00.335.268 I llama_new_context_with_model: graph splits = 1
0.00.335.269 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.429.056 I main: llama threadpool init, n_threads = 4
0.00.429.070 I 
0.00.429.159 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.429.162 I 
0.00.429.194 I sampler seed: 2994816789
0.00.429.208 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.429.224 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.429.233 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.429.233 I 
 increably.

I am unable to generate a response as the context provided contains sexually suggestive content. [end of text]


0.02.026.166 I llama_perf_sampler_print:    sampling time =       3.36 ms /    22 runs   (    0.15 ms per token,  6545.67 tokens per second)
0.02.026.168 I llama_perf_context_print:        load time =     427.12 ms
0.02.026.169 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.026.171 I llama_perf_context_print:        eval time =    1584.11 ms /    21 runs   (   75.43 ms per token,    13.26 tokens per second)
0.02.026.172 I llama_perf_context_print:       total time =    1597.12 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.920s
user	0m32.987s
sys	0m9.369s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3821 (70392f1f)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32209.95 ms
main:    total time = 32209.95 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.539 I build: 3821 (70392f1f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.734 I main: llama backend init
0.00.001.903 I main: load the model and apply lora adapter, if any
0.00.022.170 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.217 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.225 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.231 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.232 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.237 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.238 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.239 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.240 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.240 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.241 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.245 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.246 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.246 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.247 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.248 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.364 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.924 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.820 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.826 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.826 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.827 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.828 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.828 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.829 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.832 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.832 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.833 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.833 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.834 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.839 I llama_model_loader: - type  f32:   37 tensors
0.00.133.841 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.842 I llama_model_loader: - type q6_K:   19 tensors
0.00.198.533 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.211.774 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.212.434 I llm_load_vocab: special tokens cache size = 5
0.00.230.653 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.665 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.666 I llm_load_print_meta: arch             = gemma
0.00.230.666 I llm_load_print_meta: vocab type       = SPM
0.00.230.667 I llm_load_print_meta: n_vocab          = 256000
0.00.230.668 I llm_load_print_meta: n_merges         = 0
0.00.230.668 I llm_load_print_meta: vocab_only       = 0
0.00.230.668 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.669 I llm_load_print_meta: n_embd           = 2048
0.00.230.669 I llm_load_print_meta: n_layer          = 18
0.00.230.681 I llm_load_print_meta: n_head           = 8
0.00.230.683 I llm_load_print_meta: n_head_kv        = 1
0.00.230.683 I llm_load_print_meta: n_rot            = 256
0.00.230.683 I llm_load_print_meta: n_swa            = 0
0.00.230.684 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.684 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.685 I llm_load_print_meta: n_gqa            = 8
0.00.230.686 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.686 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.687 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.689 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.689 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.690 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.690 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.691 I llm_load_print_meta: n_ff             = 16384
0.00.230.691 I llm_load_print_meta: n_expert         = 0
0.00.230.691 I llm_load_print_meta: n_expert_used    = 0
0.00.230.692 I llm_load_print_meta: causal attn      = 1
0.00.230.692 I llm_load_print_meta: pooling type     = 0
0.00.230.692 I llm_load_print_meta: rope type        = 2
0.00.230.693 I llm_load_print_meta: rope scaling     = linear
0.00.230.694 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.695 I llm_load_print_meta: freq_scale_train = 1
0.00.230.695 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.695 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.695 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.696 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.696 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.696 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.696 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.697 I llm_load_print_meta: model type       = 2B
0.00.230.698 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.230.698 I llm_load_print_meta: model params     = 2.51 B
0.00.230.699 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.230.699 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.700 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.700 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.700 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.700 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.700 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.701 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.701 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.702 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.702 I llm_load_print_meta: max token length = 93
0.00.230.726 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.288.866 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.288.873 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.288.874 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.288.874 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.288.875 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.288.875 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.293.878 I llama_new_context_with_model: n_ctx      = 8192
0.00.293.882 I llama_new_context_with_model: n_batch    = 2048
0.00.293.882 I llama_new_context_with_model: n_ubatch   = 512
0.00.293.883 I llama_new_context_with_model: flash_attn = 0
0.00.293.885 I llama_new_context_with_model: freq_base  = 10000.0
0.00.293.886 I llama_new_context_with_model: freq_scale = 1
0.00.322.268 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.322.283 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.322.372 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.323.219 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.323.226 I llama_new_context_with_model: graph nodes  = 601
0.00.323.227 I llama_new_context_with_model: graph splits = 1
0.00.323.228 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.403.980 I main: llama threadpool init, n_threads = 4
0.00.403.991 I 
0.00.404.066 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.404.069 I 
0.00.404.097 I sampler seed: 2219405201
0.00.404.106 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.404.109 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.404.109 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.404.109 I 
 increasities and other forms of flattery.

I am unable to provide an answer that facilitates or promotes sexual content or inappropriate behavior. [end of text]


0.01.735.549 I llama_perf_sampler_print:    sampling time =       4.21 ms /    28 runs   (    0.15 ms per token,  6642.94 tokens per second)
0.01.735.552 I llama_perf_context_print:        load time =     402.06 ms
0.01.735.554 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.735.556 I llama_perf_context_print:        eval time =    1315.90 ms /    27 runs   (   48.74 ms per token,    20.52 tokens per second)
0.01.735.557 I llama_perf_context_print:       total time =    1331.58 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3821 (70392f1f)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32043.29 ms
main:    total time = 32043.29 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.571 I build: 3821 (70392f1f) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.001.871 I main: load the model and apply lora adapter, if any
0.00.021.956 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.967 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.973 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.974 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.977 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.978 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.979 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.980 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.981 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.981 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.984 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.985 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.986 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.987 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.988 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.542 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.344 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.158 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.165 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.165 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.166 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.167 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.167 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.168 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.170 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.171 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.174 I llama_model_loader: - type  f32:   37 tensors
0.00.132.177 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.177 I llama_model_loader: - type q6_K:   19 tensors
0.00.195.925 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.208.728 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.209.382 I llm_load_vocab: special tokens cache size = 5
0.00.227.712 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.227.725 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.227.725 I llm_load_print_meta: arch             = gemma
0.00.227.726 I llm_load_print_meta: vocab type       = SPM
0.00.227.727 I llm_load_print_meta: n_vocab          = 256000
0.00.227.727 I llm_load_print_meta: n_merges         = 0
0.00.227.727 I llm_load_print_meta: vocab_only       = 0
0.00.227.728 I llm_load_print_meta: n_ctx_train      = 8192
0.00.227.728 I llm_load_print_meta: n_embd           = 2048
0.00.227.728 I llm_load_print_meta: n_layer          = 18
0.00.227.740 I llm_load_print_meta: n_head           = 8
0.00.227.741 I llm_load_print_meta: n_head_kv        = 1
0.00.227.742 I llm_load_print_meta: n_rot            = 256
0.00.227.742 I llm_load_print_meta: n_swa            = 0
0.00.227.742 I llm_load_print_meta: n_embd_head_k    = 256
0.00.227.743 I llm_load_print_meta: n_embd_head_v    = 256
0.00.227.743 I llm_load_print_meta: n_gqa            = 8
0.00.227.744 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.227.745 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.227.746 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.227.747 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.227.748 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.227.748 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.227.749 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.227.750 I llm_load_print_meta: n_ff             = 16384
0.00.227.750 I llm_load_print_meta: n_expert         = 0
0.00.227.750 I llm_load_print_meta: n_expert_used    = 0
0.00.227.751 I llm_load_print_meta: causal attn      = 1
0.00.227.751 I llm_load_print_meta: pooling type     = 0
0.00.227.751 I llm_load_print_meta: rope type        = 2
0.00.227.751 I llm_load_print_meta: rope scaling     = linear
0.00.227.753 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.227.754 I llm_load_print_meta: freq_scale_train = 1
0.00.227.754 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.227.754 I llm_load_print_meta: rope_finetuned   = unknown
0.00.227.754 I llm_load_print_meta: ssm_d_conv       = 0
0.00.227.755 I llm_load_print_meta: ssm_d_inner      = 0
0.00.227.755 I llm_load_print_meta: ssm_d_state      = 0
0.00.227.755 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.227.755 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.227.756 I llm_load_print_meta: model type       = 2B
0.00.227.756 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.227.757 I llm_load_print_meta: model params     = 2.51 B
0.00.227.758 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.227.758 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.227.759 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.227.759 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.227.759 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.227.759 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.227.760 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.227.760 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.227.760 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.227.761 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.227.761 I llm_load_print_meta: max token length = 93
0.00.227.784 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.285.485 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.290.511 I llama_new_context_with_model: n_ctx      = 8192
0.00.290.517 I llama_new_context_with_model: n_batch    = 2048
0.00.290.518 I llama_new_context_with_model: n_ubatch   = 512
0.00.290.518 I llama_new_context_with_model: flash_attn = 0
0.00.290.520 I llama_new_context_with_model: freq_base  = 10000.0
0.00.290.522 I llama_new_context_with_model: freq_scale = 1
0.00.319.870 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.319.888 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.319.982 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.320.830 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.320.837 I llama_new_context_with_model: graph nodes  = 601
0.00.320.837 I llama_new_context_with_model: graph splits = 1
0.00.320.840 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.401.419 I main: llama threadpool init, n_threads = 4
0.00.401.430 I 
0.00.401.500 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.401.504 I 
0.00.401.532 I sampler seed: 997480576
0.00.401.540 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.401.543 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.401.544 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.401.544 I 
 seconded.

I am unable to access the internet at the moment. I am unable to download files, check email, or access any online services. I

0.01.997.127 I llama_perf_sampler_print:    sampling time =       5.07 ms /    33 runs   (    0.15 ms per token,  6505.03 tokens per second)
0.01.997.131 I llama_perf_context_print:        load time =     399.53 ms
0.01.997.133 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.997.135 I llama_perf_context_print:        eval time =    1577.70 ms /    32 runs   (   49.30 ms per token,    20.28 tokens per second)
0.01.997.135 I llama_perf_context_print:       total time =    1595.72 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.205s
user	8m13.504s
sys	0m6.937s
