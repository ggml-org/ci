+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.646 I build: 3918 (4c42f93b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.848 I main: llama backend init
0.00.002.805 I main: load the model and apply lora adapter, if any
0.00.024.607 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.807 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.892 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.902 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.904 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.908 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.910 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.911 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.913 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.914 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.923 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.930 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.934 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.935 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.936 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.937 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.962 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.016 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.974 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.982 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.983 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.984 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.985 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.986 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.987 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.991 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.992 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.993 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.994 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.995 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.004 I llama_model_loader: - type  f32:   37 tensors
0.00.268.008 I llama_model_loader: - type q8_0:  127 tensors
0.00.433.722 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.478.372 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.480.045 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.485.043 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.495.655 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.496.588 I llm_load_vocab: special tokens cache size = 5
0.00.590.449 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.590.520 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.590.521 I llm_load_print_meta: arch             = gemma
0.00.590.522 I llm_load_print_meta: vocab type       = SPM
0.00.590.522 I llm_load_print_meta: n_vocab          = 256000
0.00.590.525 I llm_load_print_meta: n_merges         = 0
0.00.590.526 I llm_load_print_meta: vocab_only       = 0
0.00.590.526 I llm_load_print_meta: n_ctx_train      = 8192
0.00.590.527 I llm_load_print_meta: n_embd           = 2048
0.00.590.527 I llm_load_print_meta: n_layer          = 18
0.00.590.591 I llm_load_print_meta: n_head           = 8
0.00.590.598 I llm_load_print_meta: n_head_kv        = 1
0.00.590.598 I llm_load_print_meta: n_rot            = 256
0.00.590.599 I llm_load_print_meta: n_swa            = 0
0.00.590.599 I llm_load_print_meta: n_embd_head_k    = 256
0.00.590.599 I llm_load_print_meta: n_embd_head_v    = 256
0.00.590.604 I llm_load_print_meta: n_gqa            = 8
0.00.590.609 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.590.614 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.590.615 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.590.616 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.590.617 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.590.617 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.590.618 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.590.624 I llm_load_print_meta: n_ff             = 16384
0.00.590.625 I llm_load_print_meta: n_expert         = 0
0.00.590.638 I llm_load_print_meta: n_expert_used    = 0
0.00.590.643 I llm_load_print_meta: causal attn      = 1
0.00.590.643 I llm_load_print_meta: pooling type     = 0
0.00.590.643 I llm_load_print_meta: rope type        = 2
0.00.590.644 I llm_load_print_meta: rope scaling     = linear
0.00.590.645 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.590.646 I llm_load_print_meta: freq_scale_train = 1
0.00.590.647 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.590.647 I llm_load_print_meta: rope_finetuned   = unknown
0.00.590.648 I llm_load_print_meta: ssm_d_conv       = 0
0.00.590.648 I llm_load_print_meta: ssm_d_inner      = 0
0.00.590.649 I llm_load_print_meta: ssm_d_state      = 0
0.00.590.649 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.590.649 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.590.650 I llm_load_print_meta: model type       = 2B
0.00.590.651 I llm_load_print_meta: model ftype      = Q8_0
0.00.590.665 I llm_load_print_meta: model params     = 2.51 B
0.00.590.669 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.590.669 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.590.670 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.590.671 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.590.671 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.590.672 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.590.672 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.590.672 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.590.678 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.590.680 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.590.681 I llm_load_print_meta: max token length = 93
0.00.590.862 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.691.312 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.691.320 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.691.321 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.691.321 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.691.322 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.691.322 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.696.956 I llama_new_context_with_model: n_ctx      = 8192
0.00.696.964 I llama_new_context_with_model: n_batch    = 2048
0.00.696.964 I llama_new_context_with_model: n_ubatch   = 512
0.00.696.965 I llama_new_context_with_model: flash_attn = 0
0.00.696.967 I llama_new_context_with_model: freq_base  = 10000.0
0.00.696.968 I llama_new_context_with_model: freq_scale = 1
0.00.726.037 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.726.081 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.726.199 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.727.581 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.727.586 I llama_new_context_with_model: graph nodes  = 601
0.00.727.587 I llama_new_context_with_model: graph splits = 1
0.00.727.603 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.340.801 I main: llama threadpool init, n_threads = 4
0.01.340.813 I 
0.01.340.919 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.340.923 I 
0.01.341.092 I sampler seed: 1326471998
0.01.341.102 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.341.108 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.341.111 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.341.111 I 
 increably with the rise of the internet and social media.

**a) Explain how social media has influenced the marketing landscape.**

**b) Discuss the

0.14.880.324 I llama_perf_sampler_print:    sampling time =      49.10 ms /    33 runs   (    1.49 ms per token,   672.06 tokens per second)
0.14.880.327 I llama_perf_context_print:        load time =    1337.91 ms
0.14.880.329 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.880.342 I llama_perf_context_print:        eval time =   13456.23 ms /    32 runs   (  420.51 ms per token,     2.38 tokens per second)
0.14.880.344 I llama_perf_context_print:       total time =   13539.53 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.640 I build: 3918 (4c42f93b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.842 I main: llama backend init
0.00.002.787 I main: load the model and apply lora adapter, if any
0.00.024.301 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.391 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.405 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.409 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.413 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.415 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.417 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.418 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.419 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.420 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.426 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.427 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.428 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.430 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.431 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.894 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.046 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.013 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.022 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.024 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.025 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.026 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.027 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.028 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.032 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.033 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.034 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.035 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.268.037 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.044 I llama_model_loader: - type  f32:   37 tensors
0.00.268.048 I llama_model_loader: - type q8_0:  127 tensors
0.00.453.822 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.501.582 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.503.734 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.510.180 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.523.663 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.524.659 I llm_load_vocab: special tokens cache size = 5
0.00.618.370 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.618.447 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.618.448 I llm_load_print_meta: arch             = gemma
0.00.618.448 I llm_load_print_meta: vocab type       = SPM
0.00.618.449 I llm_load_print_meta: n_vocab          = 256000
0.00.618.452 I llm_load_print_meta: n_merges         = 0
0.00.618.452 I llm_load_print_meta: vocab_only       = 0
0.00.618.453 I llm_load_print_meta: n_ctx_train      = 8192
0.00.618.453 I llm_load_print_meta: n_embd           = 2048
0.00.618.453 I llm_load_print_meta: n_layer          = 18
0.00.618.515 I llm_load_print_meta: n_head           = 8
0.00.618.522 I llm_load_print_meta: n_head_kv        = 1
0.00.618.523 I llm_load_print_meta: n_rot            = 256
0.00.618.523 I llm_load_print_meta: n_swa            = 0
0.00.618.524 I llm_load_print_meta: n_embd_head_k    = 256
0.00.618.524 I llm_load_print_meta: n_embd_head_v    = 256
0.00.618.528 I llm_load_print_meta: n_gqa            = 8
0.00.618.533 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.618.538 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.618.540 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.618.542 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.618.543 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.618.543 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.618.567 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.618.573 I llm_load_print_meta: n_ff             = 16384
0.00.618.574 I llm_load_print_meta: n_expert         = 0
0.00.618.574 I llm_load_print_meta: n_expert_used    = 0
0.00.618.575 I llm_load_print_meta: causal attn      = 1
0.00.618.575 I llm_load_print_meta: pooling type     = 0
0.00.618.576 I llm_load_print_meta: rope type        = 2
0.00.618.576 I llm_load_print_meta: rope scaling     = linear
0.00.618.579 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.618.579 I llm_load_print_meta: freq_scale_train = 1
0.00.618.580 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.618.580 I llm_load_print_meta: rope_finetuned   = unknown
0.00.618.580 I llm_load_print_meta: ssm_d_conv       = 0
0.00.618.585 I llm_load_print_meta: ssm_d_inner      = 0
0.00.618.586 I llm_load_print_meta: ssm_d_state      = 0
0.00.618.586 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.618.586 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.618.587 I llm_load_print_meta: model type       = 2B
0.00.618.588 I llm_load_print_meta: model ftype      = Q8_0
0.00.618.589 I llm_load_print_meta: model params     = 2.51 B
0.00.618.590 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.618.590 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.618.599 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.618.600 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.618.601 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.618.608 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.618.609 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.618.610 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.618.615 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.618.620 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.618.620 I llm_load_print_meta: max token length = 93
0.00.618.789 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.714.255 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.719.812 I llama_new_context_with_model: n_ctx      = 8192
0.00.719.820 I llama_new_context_with_model: n_batch    = 2048
0.00.719.820 I llama_new_context_with_model: n_ubatch   = 512
0.00.719.821 I llama_new_context_with_model: flash_attn = 0
0.00.719.823 I llama_new_context_with_model: freq_base  = 10000.0
0.00.719.824 I llama_new_context_with_model: freq_scale = 1
0.00.750.184 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.750.230 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.750.347 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.751.716 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.751.720 I llama_new_context_with_model: graph nodes  = 601
0.00.751.721 I llama_new_context_with_model: graph splits = 1
0.00.751.736 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.392.206 I main: llama threadpool init, n_threads = 4
0.01.392.216 I 
0.01.392.322 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.392.325 I 
0.01.392.490 I sampler seed: 1721289550
0.01.392.500 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.392.507 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.392.508 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.392.508 I 
 increasities, and the general societal impact.

The COVID-19 pandemic has had a profound impact on societies around the world, leading to widespread lockdowns and

0.15.052.406 I llama_perf_sampler_print:    sampling time =      49.18 ms /    33 runs   (    1.49 ms per token,   670.98 tokens per second)
0.15.052.419 I llama_perf_context_print:        load time =    1389.33 ms
0.15.052.421 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.052.424 I llama_perf_context_print:        eval time =   13577.37 ms /    32 runs   (  424.29 ms per token,     2.36 tokens per second)
0.15.052.425 I llama_perf_context_print:       total time =   13660.21 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.672 I build: 3918 (4c42f93b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.867 I main: llama backend init
0.00.002.815 I main: load the model and apply lora adapter, if any
0.00.024.921 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.124 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.219 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.232 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.233 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.238 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.239 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.241 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.242 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.251 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.253 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.261 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.262 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.263 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.264 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.265 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.095 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.464 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.317 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.326 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.327 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.328 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.329 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.330 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.331 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.335 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.336 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.337 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.338 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.269.339 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.347 I llama_model_loader: - type  f32:   37 tensors
0.00.269.351 I llama_model_loader: - type q8_0:  127 tensors
0.00.449.939 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.492.216 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.493.936 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.499.093 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.510.199 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.511.155 I llm_load_vocab: special tokens cache size = 5
0.00.604.982 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.605.052 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.605.054 I llm_load_print_meta: arch             = gemma
0.00.605.054 I llm_load_print_meta: vocab type       = SPM
0.00.605.056 I llm_load_print_meta: n_vocab          = 256000
0.00.605.058 I llm_load_print_meta: n_merges         = 0
0.00.605.058 I llm_load_print_meta: vocab_only       = 0
0.00.605.059 I llm_load_print_meta: n_ctx_train      = 8192
0.00.605.059 I llm_load_print_meta: n_embd           = 2048
0.00.605.059 I llm_load_print_meta: n_layer          = 18
0.00.605.123 I llm_load_print_meta: n_head           = 8
0.00.605.130 I llm_load_print_meta: n_head_kv        = 1
0.00.605.130 I llm_load_print_meta: n_rot            = 256
0.00.605.132 I llm_load_print_meta: n_swa            = 0
0.00.605.133 I llm_load_print_meta: n_embd_head_k    = 256
0.00.605.133 I llm_load_print_meta: n_embd_head_v    = 256
0.00.605.138 I llm_load_print_meta: n_gqa            = 8
0.00.605.143 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.605.148 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.605.149 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.605.151 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.605.152 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.605.153 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.605.154 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.605.158 I llm_load_print_meta: n_ff             = 16384
0.00.605.159 I llm_load_print_meta: n_expert         = 0
0.00.605.170 I llm_load_print_meta: n_expert_used    = 0
0.00.605.171 I llm_load_print_meta: causal attn      = 1
0.00.605.172 I llm_load_print_meta: pooling type     = 0
0.00.605.177 I llm_load_print_meta: rope type        = 2
0.00.605.177 I llm_load_print_meta: rope scaling     = linear
0.00.605.179 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.605.179 I llm_load_print_meta: freq_scale_train = 1
0.00.605.180 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.605.181 I llm_load_print_meta: rope_finetuned   = unknown
0.00.605.181 I llm_load_print_meta: ssm_d_conv       = 0
0.00.605.182 I llm_load_print_meta: ssm_d_inner      = 0
0.00.605.182 I llm_load_print_meta: ssm_d_state      = 0
0.00.605.182 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.605.185 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.605.186 I llm_load_print_meta: model type       = 2B
0.00.605.188 I llm_load_print_meta: model ftype      = Q8_0
0.00.605.189 I llm_load_print_meta: model params     = 2.51 B
0.00.605.190 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.605.190 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.605.192 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.605.192 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.605.193 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.605.193 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.605.194 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.605.195 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.605.201 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.605.202 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.605.203 I llm_load_print_meta: max token length = 93
0.00.605.368 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.684.053 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.684.065 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.684.066 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.684.066 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.684.067 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.684.068 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.689.781 I llama_new_context_with_model: n_ctx      = 8192
0.00.689.789 I llama_new_context_with_model: n_batch    = 2048
0.00.689.789 I llama_new_context_with_model: n_ubatch   = 512
0.00.689.790 I llama_new_context_with_model: flash_attn = 0
0.00.689.793 I llama_new_context_with_model: freq_base  = 10000.0
0.00.689.794 I llama_new_context_with_model: freq_scale = 1
0.00.719.731 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.719.776 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.719.897 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.721.295 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.721.300 I llama_new_context_with_model: graph nodes  = 601
0.00.721.300 I llama_new_context_with_model: graph splits = 1
0.00.721.316 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.334.198 I main: llama threadpool init, n_threads = 4
0.01.334.207 I 
0.01.334.310 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.334.314 I 
0.01.334.482 I sampler seed: 2637655558
0.01.334.494 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.334.500 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.334.501 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.334.501 I 
 increasities, and other forms of sexual harassment. [end of text]


0.06.032.675 I llama_perf_sampler_print:    sampling time =      17.01 ms /    12 runs   (    1.42 ms per token,   705.34 tokens per second)
0.06.032.678 I llama_perf_context_print:        load time =    1331.29 ms
0.06.032.692 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.06.032.694 I llama_perf_context_print:        eval time =    4668.87 ms /    11 runs   (  424.44 ms per token,     2.36 tokens per second)
0.06.032.695 I llama_perf_context_print:       total time =    4698.49 ms /    12 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.686 I build: 3918 (4c42f93b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.879 I main: llama backend init
0.00.002.835 I main: load the model and apply lora adapter, if any
0.00.025.069 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.283 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.368 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.379 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.380 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.384 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.386 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.388 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.396 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.398 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.399 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.406 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.410 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.411 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.412 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.413 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.585 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.892 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.854 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.864 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.865 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.866 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.867 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.868 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.869 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.884 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.888 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.889 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.890 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.268.892 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.901 I llama_model_loader: - type  f32:   37 tensors
0.00.268.906 I llama_model_loader: - type q8_0:  127 tensors
0.00.445.883 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.491.520 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.493.464 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.499.877 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.514.068 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.515.099 I llm_load_vocab: special tokens cache size = 5
0.00.609.019 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.609.093 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.609.094 I llm_load_print_meta: arch             = gemma
0.00.609.095 I llm_load_print_meta: vocab type       = SPM
0.00.609.095 I llm_load_print_meta: n_vocab          = 256000
0.00.609.097 I llm_load_print_meta: n_merges         = 0
0.00.609.098 I llm_load_print_meta: vocab_only       = 0
0.00.609.098 I llm_load_print_meta: n_ctx_train      = 8192
0.00.609.099 I llm_load_print_meta: n_embd           = 2048
0.00.609.099 I llm_load_print_meta: n_layer          = 18
0.00.609.161 I llm_load_print_meta: n_head           = 8
0.00.609.168 I llm_load_print_meta: n_head_kv        = 1
0.00.609.168 I llm_load_print_meta: n_rot            = 256
0.00.609.169 I llm_load_print_meta: n_swa            = 0
0.00.609.169 I llm_load_print_meta: n_embd_head_k    = 256
0.00.609.170 I llm_load_print_meta: n_embd_head_v    = 256
0.00.609.175 I llm_load_print_meta: n_gqa            = 8
0.00.609.180 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.609.185 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.609.186 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.609.212 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.609.213 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.609.213 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.609.214 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.609.220 I llm_load_print_meta: n_ff             = 16384
0.00.609.220 I llm_load_print_meta: n_expert         = 0
0.00.609.221 I llm_load_print_meta: n_expert_used    = 0
0.00.609.222 I llm_load_print_meta: causal attn      = 1
0.00.609.222 I llm_load_print_meta: pooling type     = 0
0.00.609.223 I llm_load_print_meta: rope type        = 2
0.00.609.223 I llm_load_print_meta: rope scaling     = linear
0.00.609.225 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.609.226 I llm_load_print_meta: freq_scale_train = 1
0.00.609.226 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.609.227 I llm_load_print_meta: rope_finetuned   = unknown
0.00.609.227 I llm_load_print_meta: ssm_d_conv       = 0
0.00.609.228 I llm_load_print_meta: ssm_d_inner      = 0
0.00.609.228 I llm_load_print_meta: ssm_d_state      = 0
0.00.609.229 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.609.229 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.609.231 I llm_load_print_meta: model type       = 2B
0.00.609.232 I llm_load_print_meta: model ftype      = Q8_0
0.00.609.232 I llm_load_print_meta: model params     = 2.51 B
0.00.609.238 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.609.238 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.609.239 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.609.240 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.609.240 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.609.241 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.609.241 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.609.246 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.609.252 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.609.253 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.609.253 I llm_load_print_meta: max token length = 93
0.00.609.421 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.680.600 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.680.612 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.686.264 I llama_new_context_with_model: n_ctx      = 8192
0.00.686.272 I llama_new_context_with_model: n_batch    = 2048
0.00.686.272 I llama_new_context_with_model: n_ubatch   = 512
0.00.686.272 I llama_new_context_with_model: flash_attn = 0
0.00.686.275 I llama_new_context_with_model: freq_base  = 10000.0
0.00.686.276 I llama_new_context_with_model: freq_scale = 1
0.00.715.910 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.715.953 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.716.073 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.717.436 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.717.441 I llama_new_context_with_model: graph nodes  = 601
0.00.717.441 I llama_new_context_with_model: graph splits = 1
0.00.717.457 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.330.466 I main: llama threadpool init, n_threads = 4
0.01.330.478 I 
0.01.330.583 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.330.587 I 
0.01.330.753 I sampler seed: 4069680848
0.01.330.764 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.330.771 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.330.772 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.330.772 I 
 increasively.

I'm not sure what you're trying to ask. Please try rephrasing your question. [end of text]


0.12.357.232 I llama_perf_sampler_print:    sampling time =      39.79 ms /    27 runs   (    1.47 ms per token,   678.55 tokens per second)
0.12.357.236 I llama_perf_context_print:        load time =    1327.54 ms
0.12.357.238 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.357.250 I llama_perf_context_print:        eval time =   10959.25 ms /    26 runs   (  421.51 ms per token,     2.37 tokens per second)
0.12.357.252 I llama_perf_context_print:       total time =   11026.78 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m57.977s
user	3m4.519s
sys	0m9.416s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3918 (4c42f93b)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199207.26 ms
main:    total time = 199207.26 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.634 I build: 3918 (4c42f93b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.829 I main: llama backend init
0.00.002.789 I main: load the model and apply lora adapter, if any
0.00.024.708 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.919 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.010 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.022 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.024 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.028 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.029 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.031 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.032 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.033 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.034 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.040 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.041 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.042 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.043 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.052 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.505 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.502 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.430 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.439 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.440 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.441 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.442 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.444 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.445 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.466 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.470 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.471 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.472 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.268.474 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.481 I llama_model_loader: - type  f32:   37 tensors
0.00.268.487 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.487 I llama_model_loader: - type q6_K:   19 tensors
0.00.447.546 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.491.350 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.493.101 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.498.705 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.511.079 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.512.086 I llm_load_vocab: special tokens cache size = 5
0.00.607.678 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.607.748 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.607.752 I llm_load_print_meta: arch             = gemma
0.00.607.752 I llm_load_print_meta: vocab type       = SPM
0.00.607.753 I llm_load_print_meta: n_vocab          = 256000
0.00.607.756 I llm_load_print_meta: n_merges         = 0
0.00.607.756 I llm_load_print_meta: vocab_only       = 0
0.00.607.756 I llm_load_print_meta: n_ctx_train      = 8192
0.00.607.757 I llm_load_print_meta: n_embd           = 2048
0.00.607.757 I llm_load_print_meta: n_layer          = 18
0.00.607.822 I llm_load_print_meta: n_head           = 8
0.00.607.832 I llm_load_print_meta: n_head_kv        = 1
0.00.607.832 I llm_load_print_meta: n_rot            = 256
0.00.607.833 I llm_load_print_meta: n_swa            = 0
0.00.607.833 I llm_load_print_meta: n_embd_head_k    = 256
0.00.607.833 I llm_load_print_meta: n_embd_head_v    = 256
0.00.607.838 I llm_load_print_meta: n_gqa            = 8
0.00.607.843 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.607.848 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.607.850 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.607.852 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.607.853 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.607.853 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.607.853 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.607.859 I llm_load_print_meta: n_ff             = 16384
0.00.607.862 I llm_load_print_meta: n_expert         = 0
0.00.607.862 I llm_load_print_meta: n_expert_used    = 0
0.00.607.862 I llm_load_print_meta: causal attn      = 1
0.00.607.863 I llm_load_print_meta: pooling type     = 0
0.00.607.863 I llm_load_print_meta: rope type        = 2
0.00.607.863 I llm_load_print_meta: rope scaling     = linear
0.00.607.865 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.607.866 I llm_load_print_meta: freq_scale_train = 1
0.00.607.866 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.607.866 I llm_load_print_meta: rope_finetuned   = unknown
0.00.607.867 I llm_load_print_meta: ssm_d_conv       = 0
0.00.607.867 I llm_load_print_meta: ssm_d_inner      = 0
0.00.607.867 I llm_load_print_meta: ssm_d_state      = 0
0.00.607.867 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.607.868 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.607.869 I llm_load_print_meta: model type       = 2B
0.00.607.870 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.607.870 I llm_load_print_meta: model params     = 2.51 B
0.00.607.871 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.607.871 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.607.873 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.607.873 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.607.875 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.607.876 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.607.892 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.607.893 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.607.899 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.607.901 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.607.901 I llm_load_print_meta: max token length = 93
0.00.608.071 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.667.630 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.667.640 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.667.641 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.667.642 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.667.642 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.667.643 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.673.239 I llama_new_context_with_model: n_ctx      = 8192
0.00.673.246 I llama_new_context_with_model: n_batch    = 2048
0.00.673.246 I llama_new_context_with_model: n_ubatch   = 512
0.00.673.247 I llama_new_context_with_model: flash_attn = 0
0.00.673.249 I llama_new_context_with_model: freq_base  = 10000.0
0.00.673.250 I llama_new_context_with_model: freq_scale = 1
0.00.702.694 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.702.737 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.702.853 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.704.247 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.704.252 I llama_new_context_with_model: graph nodes  = 601
0.00.704.252 I llama_new_context_with_model: graph splits = 1
0.00.704.268 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.283.522 I main: llama threadpool init, n_threads = 4
0.01.283.532 I 
0.01.283.641 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.283.644 I 
0.01.283.809 I sampler seed: 1563437200
0.01.283.819 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.283.826 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.283.827 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.283.827 I 
 seconde les informations suivantes :

**1. La population mondiale est d'environ 8 milliards d'habitants.**
**2. Les hommes sont représentant

0.12.199.000 I llama_perf_sampler_print:    sampling time =      49.12 ms /    33 runs   (    1.49 ms per token,   671.80 tokens per second)
0.12.199.015 I llama_perf_context_print:        load time =    1280.64 ms
0.12.199.017 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.199.018 I llama_perf_context_print:        eval time =   10834.00 ms /    32 runs   (  338.56 ms per token,     2.95 tokens per second)
0.12.199.019 I llama_perf_context_print:       total time =   10915.49 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3918 (4c42f93b)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199113.16 ms
main:    total time = 199113.16 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.657 I build: 3918 (4c42f93b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.860 I main: llama backend init
0.00.002.798 I main: load the model and apply lora adapter, if any
0.00.024.857 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.955 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.970 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.972 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.977 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.980 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.981 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.982 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.983 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.984 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.996 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.997 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.998 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.999 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.000 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.511 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.916 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.748 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.754 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.755 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.756 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.757 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.759 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.760 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.763 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.764 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.771 I llama_model_loader: - type  f32:   37 tensors
0.00.267.775 I llama_model_loader: - type q4_K:  108 tensors
0.00.267.776 I llama_model_loader: - type q6_K:   19 tensors
0.00.452.934 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.496.088 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.497.791 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.502.827 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.513.408 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.514.302 I llm_load_vocab: special tokens cache size = 5
0.00.620.843 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.620.910 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.620.911 I llm_load_print_meta: arch             = gemma
0.00.620.912 I llm_load_print_meta: vocab type       = SPM
0.00.620.913 I llm_load_print_meta: n_vocab          = 256000
0.00.620.915 I llm_load_print_meta: n_merges         = 0
0.00.620.916 I llm_load_print_meta: vocab_only       = 0
0.00.620.916 I llm_load_print_meta: n_ctx_train      = 8192
0.00.620.917 I llm_load_print_meta: n_embd           = 2048
0.00.620.917 I llm_load_print_meta: n_layer          = 18
0.00.620.980 I llm_load_print_meta: n_head           = 8
0.00.620.988 I llm_load_print_meta: n_head_kv        = 1
0.00.620.988 I llm_load_print_meta: n_rot            = 256
0.00.620.989 I llm_load_print_meta: n_swa            = 0
0.00.620.989 I llm_load_print_meta: n_embd_head_k    = 256
0.00.620.989 I llm_load_print_meta: n_embd_head_v    = 256
0.00.620.994 I llm_load_print_meta: n_gqa            = 8
0.00.621.011 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.621.017 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.621.018 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.621.020 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.621.020 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.621.021 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.621.021 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.621.026 I llm_load_print_meta: n_ff             = 16384
0.00.621.039 I llm_load_print_meta: n_expert         = 0
0.00.621.040 I llm_load_print_meta: n_expert_used    = 0
0.00.621.040 I llm_load_print_meta: causal attn      = 1
0.00.621.041 I llm_load_print_meta: pooling type     = 0
0.00.621.048 I llm_load_print_meta: rope type        = 2
0.00.621.048 I llm_load_print_meta: rope scaling     = linear
0.00.621.050 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.621.051 I llm_load_print_meta: freq_scale_train = 1
0.00.621.051 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.621.052 I llm_load_print_meta: rope_finetuned   = unknown
0.00.621.052 I llm_load_print_meta: ssm_d_conv       = 0
0.00.621.052 I llm_load_print_meta: ssm_d_inner      = 0
0.00.621.053 I llm_load_print_meta: ssm_d_state      = 0
0.00.621.053 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.621.054 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.621.055 I llm_load_print_meta: model type       = 2B
0.00.621.056 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.621.057 I llm_load_print_meta: model params     = 2.51 B
0.00.621.058 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.621.058 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.621.059 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.621.060 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.621.060 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.621.061 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.621.062 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.621.063 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.621.068 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.621.070 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.621.070 I llm_load_print_meta: max token length = 93
0.00.621.237 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.680.440 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.686.104 I llama_new_context_with_model: n_ctx      = 8192
0.00.686.111 I llama_new_context_with_model: n_batch    = 2048
0.00.686.111 I llama_new_context_with_model: n_ubatch   = 512
0.00.686.112 I llama_new_context_with_model: flash_attn = 0
0.00.686.114 I llama_new_context_with_model: freq_base  = 10000.0
0.00.686.115 I llama_new_context_with_model: freq_scale = 1
0.00.715.356 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.715.400 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.715.514 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.716.848 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.716.852 I llama_new_context_with_model: graph nodes  = 601
0.00.716.853 I llama_new_context_with_model: graph splits = 1
0.00.716.868 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.295.371 I main: llama threadpool init, n_threads = 4
0.01.295.382 I 
0.01.295.494 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.295.497 I 
0.01.295.661 I sampler seed: 1660260697
0.01.295.671 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.295.679 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.295.679 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.295.689 I 
 increamically!

I am not sure what you mean by "certifiably".

I need help! [end of text]


0.09.577.778 I llama_perf_sampler_print:    sampling time =      36.92 ms /    25 runs   (    1.48 ms per token,   677.21 tokens per second)
0.09.577.781 I llama_perf_context_print:        load time =    1292.47 ms
0.09.577.792 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.577.795 I llama_perf_context_print:        eval time =    8220.67 ms /    24 runs   (  342.53 ms per token,     2.92 tokens per second)
0.09.577.796 I llama_perf_context_print:       total time =    8282.42 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m2.972s
user	49m56.840s
sys	0m6.313s
