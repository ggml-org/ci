+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.572 I build: 3885 (db8d018d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.790 I main: llama backend init
0.00.001.866 I main: load the model and apply lora adapter, if any
0.00.022.204 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.251 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.260 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.266 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.276 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.280 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.281 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.282 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.283 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.284 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.285 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.290 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.290 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.291 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.292 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.292 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.059 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.482 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.341 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.348 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.348 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.349 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.349 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.350 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.351 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.354 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.354 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.355 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.356 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.356 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.361 I llama_model_loader: - type  f32:   37 tensors
0.00.133.363 I llama_model_loader: - type q8_0:  127 tensors
0.00.196.890 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.214.090 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.860 I llm_load_vocab: special tokens cache size = 5
0.00.235.961 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.235.973 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.235.974 I llm_load_print_meta: arch             = gemma
0.00.235.974 I llm_load_print_meta: vocab type       = SPM
0.00.235.975 I llm_load_print_meta: n_vocab          = 256000
0.00.235.975 I llm_load_print_meta: n_merges         = 0
0.00.235.976 I llm_load_print_meta: vocab_only       = 0
0.00.235.976 I llm_load_print_meta: n_ctx_train      = 8192
0.00.235.976 I llm_load_print_meta: n_embd           = 2048
0.00.235.976 I llm_load_print_meta: n_layer          = 18
0.00.235.988 I llm_load_print_meta: n_head           = 8
0.00.235.989 I llm_load_print_meta: n_head_kv        = 1
0.00.235.990 I llm_load_print_meta: n_rot            = 256
0.00.235.990 I llm_load_print_meta: n_swa            = 0
0.00.235.990 I llm_load_print_meta: n_embd_head_k    = 256
0.00.235.991 I llm_load_print_meta: n_embd_head_v    = 256
0.00.235.992 I llm_load_print_meta: n_gqa            = 8
0.00.235.993 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.235.994 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.235.995 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.235.997 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.235.997 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.235.997 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.235.998 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.235.999 I llm_load_print_meta: n_ff             = 16384
0.00.235.999 I llm_load_print_meta: n_expert         = 0
0.00.235.999 I llm_load_print_meta: n_expert_used    = 0
0.00.236.000 I llm_load_print_meta: causal attn      = 1
0.00.236.000 I llm_load_print_meta: pooling type     = 0
0.00.236.000 I llm_load_print_meta: rope type        = 2
0.00.236.000 I llm_load_print_meta: rope scaling     = linear
0.00.236.002 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.236.002 I llm_load_print_meta: freq_scale_train = 1
0.00.236.003 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.236.003 I llm_load_print_meta: rope_finetuned   = unknown
0.00.236.003 I llm_load_print_meta: ssm_d_conv       = 0
0.00.236.004 I llm_load_print_meta: ssm_d_inner      = 0
0.00.236.004 I llm_load_print_meta: ssm_d_state      = 0
0.00.236.004 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.236.004 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.236.005 I llm_load_print_meta: model type       = 2B
0.00.236.005 I llm_load_print_meta: model ftype      = Q8_0
0.00.236.006 I llm_load_print_meta: model params     = 2.51 B
0.00.236.007 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.236.008 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.236.008 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.236.008 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.236.009 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.236.009 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.236.010 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.236.010 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.236.010 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.236.011 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.236.011 I llm_load_print_meta: max token length = 93
0.00.236.037 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.337.006 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.337.015 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.337.015 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.337.016 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.337.016 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.337.017 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.342.197 I llama_new_context_with_model: n_ctx      = 8192
0.00.342.204 I llama_new_context_with_model: n_batch    = 2048
0.00.342.204 I llama_new_context_with_model: n_ubatch   = 512
0.00.342.205 I llama_new_context_with_model: flash_attn = 0
0.00.342.207 I llama_new_context_with_model: freq_base  = 10000.0
0.00.342.208 I llama_new_context_with_model: freq_scale = 1
0.00.371.366 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.371.380 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.371.476 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.372.376 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.372.383 I llama_new_context_with_model: graph nodes  = 601
0.00.372.383 I llama_new_context_with_model: graph splits = 1
0.00.372.385 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.122 I main: llama threadpool init, n_threads = 4
0.00.464.133 I 
0.00.464.210 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.213 I 
0.00.464.249 I sampler seed: 3811231880
0.00.464.259 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.262 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.464.262 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.262 I 
 increably.

I am unable to locate the requested document.

I apologize for any inconvenience this may cause.

**Request:**

Please provide assistance in

0.02.740.396 I llama_perf_sampler_print:    sampling time =       5.39 ms /    33 runs   (    0.16 ms per token,  6122.45 tokens per second)
0.02.740.399 I llama_perf_context_print:        load time =     462.19 ms
0.02.740.400 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.740.403 I llama_perf_context_print:        eval time =    2257.26 ms /    32 runs   (   70.54 ms per token,    14.18 tokens per second)
0.02.740.404 I llama_perf_context_print:       total time =    2276.28 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.528 I build: 3885 (db8d018d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.718 I main: llama backend init
0.00.001.819 I main: load the model and apply lora adapter, if any
0.00.021.807 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.815 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.822 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.823 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.830 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.831 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.832 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.833 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.834 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.834 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.839 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.840 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.844 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.844 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.844 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.075 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.169 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.982 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.989 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.990 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.991 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.991 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.992 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.993 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.996 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.997 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.998 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.999 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.000 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.004 I llama_model_loader: - type  f32:   37 tensors
0.00.132.007 I llama_model_loader: - type q8_0:  127 tensors
0.00.188.030 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.465 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.203 I llm_load_vocab: special tokens cache size = 5
0.00.224.124 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.139 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.139 I llm_load_print_meta: arch             = gemma
0.00.224.140 I llm_load_print_meta: vocab type       = SPM
0.00.224.140 I llm_load_print_meta: n_vocab          = 256000
0.00.224.141 I llm_load_print_meta: n_merges         = 0
0.00.224.141 I llm_load_print_meta: vocab_only       = 0
0.00.224.142 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.142 I llm_load_print_meta: n_embd           = 2048
0.00.224.142 I llm_load_print_meta: n_layer          = 18
0.00.224.155 I llm_load_print_meta: n_head           = 8
0.00.224.156 I llm_load_print_meta: n_head_kv        = 1
0.00.224.156 I llm_load_print_meta: n_rot            = 256
0.00.224.157 I llm_load_print_meta: n_swa            = 0
0.00.224.157 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.157 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.158 I llm_load_print_meta: n_gqa            = 8
0.00.224.159 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.160 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.160 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.162 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.162 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.163 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.163 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.164 I llm_load_print_meta: n_ff             = 16384
0.00.224.164 I llm_load_print_meta: n_expert         = 0
0.00.224.165 I llm_load_print_meta: n_expert_used    = 0
0.00.224.165 I llm_load_print_meta: causal attn      = 1
0.00.224.165 I llm_load_print_meta: pooling type     = 0
0.00.224.165 I llm_load_print_meta: rope type        = 2
0.00.224.166 I llm_load_print_meta: rope scaling     = linear
0.00.224.167 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.168 I llm_load_print_meta: freq_scale_train = 1
0.00.224.168 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.168 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.169 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.169 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.169 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.170 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.170 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.170 I llm_load_print_meta: model type       = 2B
0.00.224.171 I llm_load_print_meta: model ftype      = Q8_0
0.00.224.172 I llm_load_print_meta: model params     = 2.51 B
0.00.224.173 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.224.173 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.173 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.174 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.174 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.174 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.174 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.175 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.175 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.176 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.176 I llm_load_print_meta: max token length = 93
0.00.224.194 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.317.993 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.323.051 I llama_new_context_with_model: n_ctx      = 8192
0.00.323.058 I llama_new_context_with_model: n_batch    = 2048
0.00.323.059 I llama_new_context_with_model: n_ubatch   = 512
0.00.323.059 I llama_new_context_with_model: flash_attn = 0
0.00.323.062 I llama_new_context_with_model: freq_base  = 10000.0
0.00.323.063 I llama_new_context_with_model: freq_scale = 1
0.00.352.166 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.352.183 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.352.273 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.353.115 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.353.124 I llama_new_context_with_model: graph nodes  = 601
0.00.353.124 I llama_new_context_with_model: graph splits = 1
0.00.353.126 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.291 I main: llama threadpool init, n_threads = 4
0.00.440.304 I 
0.00.440.380 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.384 I 
0.00.440.419 I sampler seed: 2711497459
0.00.440.429 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.432 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.440.433 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.433 I 
 increamically with the rise of digital technology. Digital technologies have revolutionized almost every aspect of our lives, from communication and entertainment to education and healthcare.

**

0.02.631.793 I llama_perf_sampler_print:    sampling time =       5.47 ms /    33 runs   (    0.17 ms per token,  6035.11 tokens per second)
0.02.631.796 I llama_perf_context_print:        load time =     438.40 ms
0.02.631.797 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.631.799 I llama_perf_context_print:        eval time =    2172.02 ms /    32 runs   (   67.88 ms per token,    14.73 tokens per second)
0.02.631.800 I llama_perf_context_print:       total time =    2191.51 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.586 I build: 3885 (db8d018d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.825 I main: llama backend init
0.00.002.066 I main: load the model and apply lora adapter, if any
0.00.022.276 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.340 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.348 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.354 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.355 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.360 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.361 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.362 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.363 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.364 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.365 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.371 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.373 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.374 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.375 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.376 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.038 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.544 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.509 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.515 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.516 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.517 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.518 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.519 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.520 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.522 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.523 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.524 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.524 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.525 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.530 I llama_model_loader: - type  f32:   37 tensors
0.00.133.534 I llama_model_loader: - type q8_0:  127 tensors
0.00.190.731 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.205.062 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.205.821 I llm_load_vocab: special tokens cache size = 5
0.00.226.953 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.226.967 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.226.967 I llm_load_print_meta: arch             = gemma
0.00.226.968 I llm_load_print_meta: vocab type       = SPM
0.00.226.969 I llm_load_print_meta: n_vocab          = 256000
0.00.226.969 I llm_load_print_meta: n_merges         = 0
0.00.226.970 I llm_load_print_meta: vocab_only       = 0
0.00.226.971 I llm_load_print_meta: n_ctx_train      = 8192
0.00.226.985 I llm_load_print_meta: n_embd           = 2048
0.00.226.985 I llm_load_print_meta: n_layer          = 18
0.00.227.001 I llm_load_print_meta: n_head           = 8
0.00.227.003 I llm_load_print_meta: n_head_kv        = 1
0.00.227.003 I llm_load_print_meta: n_rot            = 256
0.00.227.004 I llm_load_print_meta: n_swa            = 0
0.00.227.004 I llm_load_print_meta: n_embd_head_k    = 256
0.00.227.005 I llm_load_print_meta: n_embd_head_v    = 256
0.00.227.006 I llm_load_print_meta: n_gqa            = 8
0.00.227.008 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.227.009 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.227.010 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.227.012 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.227.013 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.227.014 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.227.014 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.227.016 I llm_load_print_meta: n_ff             = 16384
0.00.227.016 I llm_load_print_meta: n_expert         = 0
0.00.227.017 I llm_load_print_meta: n_expert_used    = 0
0.00.227.018 I llm_load_print_meta: causal attn      = 1
0.00.227.019 I llm_load_print_meta: pooling type     = 0
0.00.227.019 I llm_load_print_meta: rope type        = 2
0.00.227.020 I llm_load_print_meta: rope scaling     = linear
0.00.227.023 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.227.024 I llm_load_print_meta: freq_scale_train = 1
0.00.227.024 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.227.028 I llm_load_print_meta: rope_finetuned   = unknown
0.00.227.028 I llm_load_print_meta: ssm_d_conv       = 0
0.00.227.029 I llm_load_print_meta: ssm_d_inner      = 0
0.00.227.029 I llm_load_print_meta: ssm_d_state      = 0
0.00.227.030 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.227.030 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.227.032 I llm_load_print_meta: model type       = 2B
0.00.227.033 I llm_load_print_meta: model ftype      = Q8_0
0.00.227.034 I llm_load_print_meta: model params     = 2.51 B
0.00.227.035 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.227.035 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.227.036 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.227.037 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.227.037 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.227.038 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.227.039 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.227.040 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.227.041 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.227.041 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.227.042 I llm_load_print_meta: max token length = 93
0.00.227.075 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.303.288 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.303.297 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.303.298 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.303.299 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.303.299 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.303.300 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.308.406 I llama_new_context_with_model: n_ctx      = 8192
0.00.308.414 I llama_new_context_with_model: n_batch    = 2048
0.00.308.414 I llama_new_context_with_model: n_ubatch   = 512
0.00.308.415 I llama_new_context_with_model: flash_attn = 0
0.00.308.418 I llama_new_context_with_model: freq_base  = 10000.0
0.00.308.419 I llama_new_context_with_model: freq_scale = 1
0.00.338.268 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.338.283 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.338.383 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.339.233 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.339.242 I llama_new_context_with_model: graph nodes  = 601
0.00.339.242 I llama_new_context_with_model: graph splits = 1
0.00.339.244 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.432.940 I main: llama threadpool init, n_threads = 4
0.00.432.952 I 
0.00.433.041 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.433.044 I 
0.00.433.092 I sampler seed: 1317282668
0.00.433.103 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.433.107 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.433.108 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.433.108 I 
 increadibly.

I am unable to generate a response as requested because it would involve generating potentially harmful or dangerous content. [end of text]


0.02.223.281 I llama_perf_sampler_print:    sampling time =       4.39 ms /    26 runs   (    0.17 ms per token,  5927.95 tokens per second)
0.02.223.284 I llama_perf_context_print:        load time =     430.79 ms
0.02.223.285 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.223.287 I llama_perf_context_print:        eval time =    1775.34 ms /    25 runs   (   71.01 ms per token,    14.08 tokens per second)
0.02.223.289 I llama_perf_context_print:       total time =    1790.35 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.542 I build: 3885 (db8d018d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.734 I main: llama backend init
0.00.001.829 I main: load the model and apply lora adapter, if any
0.00.021.833 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.879 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.892 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.898 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.899 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.904 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.904 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.905 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.906 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.906 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.907 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.911 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.912 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.912 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.913 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.913 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.467 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.819 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.657 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.663 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.664 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.664 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.665 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.666 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.667 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.669 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.670 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.670 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.671 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.672 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.677 I llama_model_loader: - type  f32:   37 tensors
0.00.132.679 I llama_model_loader: - type q8_0:  127 tensors
0.00.191.953 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.208.835 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.209.584 I llm_load_vocab: special tokens cache size = 5
0.00.232.152 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.167 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.168 I llm_load_print_meta: arch             = gemma
0.00.232.168 I llm_load_print_meta: vocab type       = SPM
0.00.232.169 I llm_load_print_meta: n_vocab          = 256000
0.00.232.170 I llm_load_print_meta: n_merges         = 0
0.00.232.170 I llm_load_print_meta: vocab_only       = 0
0.00.232.170 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.171 I llm_load_print_meta: n_embd           = 2048
0.00.232.171 I llm_load_print_meta: n_layer          = 18
0.00.232.185 I llm_load_print_meta: n_head           = 8
0.00.232.186 I llm_load_print_meta: n_head_kv        = 1
0.00.232.186 I llm_load_print_meta: n_rot            = 256
0.00.232.186 I llm_load_print_meta: n_swa            = 0
0.00.232.187 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.187 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.188 I llm_load_print_meta: n_gqa            = 8
0.00.232.189 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.190 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.191 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.192 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.193 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.193 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.194 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.196 I llm_load_print_meta: n_ff             = 16384
0.00.232.196 I llm_load_print_meta: n_expert         = 0
0.00.232.197 I llm_load_print_meta: n_expert_used    = 0
0.00.232.197 I llm_load_print_meta: causal attn      = 1
0.00.232.197 I llm_load_print_meta: pooling type     = 0
0.00.232.198 I llm_load_print_meta: rope type        = 2
0.00.232.199 I llm_load_print_meta: rope scaling     = linear
0.00.232.201 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.202 I llm_load_print_meta: freq_scale_train = 1
0.00.232.202 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.212 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.213 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.213 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.213 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.214 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.214 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.215 I llm_load_print_meta: model type       = 2B
0.00.232.216 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.217 I llm_load_print_meta: model params     = 2.51 B
0.00.232.218 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.219 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.220 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.220 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.220 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.221 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.221 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.222 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.222 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.223 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.223 I llm_load_print_meta: max token length = 93
0.00.232.250 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.306.524 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.306.530 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.311.625 I llama_new_context_with_model: n_ctx      = 8192
0.00.311.633 I llama_new_context_with_model: n_batch    = 2048
0.00.311.633 I llama_new_context_with_model: n_ubatch   = 512
0.00.311.634 I llama_new_context_with_model: flash_attn = 0
0.00.311.636 I llama_new_context_with_model: freq_base  = 10000.0
0.00.311.637 I llama_new_context_with_model: freq_scale = 1
0.00.342.049 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.342.065 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.342.158 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.343.029 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.343.036 I llama_new_context_with_model: graph nodes  = 601
0.00.343.037 I llama_new_context_with_model: graph splits = 1
0.00.343.039 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.456.199 I main: llama threadpool init, n_threads = 4
0.00.456.213 I 
0.00.456.300 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.456.304 I 
0.00.456.343 I sampler seed: 2135970061
0.00.456.352 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.456.355 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.456.356 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.456.356 I 
 increasively, not at the same rate. [end of text]


0.01.220.712 I llama_perf_sampler_print:    sampling time =       1.82 ms /    11 runs   (    0.17 ms per token,  6030.70 tokens per second)
0.01.220.714 I llama_perf_context_print:        load time =     454.31 ms
0.01.220.715 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.220.717 I llama_perf_context_print:        eval time =     757.76 ms /    10 runs   (   75.78 ms per token,    13.20 tokens per second)
0.01.220.717 I llama_perf_context_print:       total time =     764.52 ms /    11 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.830s
user	0m30.895s
sys	0m9.579s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3885 (db8d018d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32086.86 ms
main:    total time = 32086.86 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.547 I build: 3885 (db8d018d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.749 I main: llama backend init
0.00.001.863 I main: load the model and apply lora adapter, if any
0.00.022.324 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.371 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.382 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.387 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.390 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.395 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.395 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.396 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.396 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.397 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.398 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.402 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.403 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.403 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.404 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.405 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.239 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.166 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.056 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.065 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.066 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.067 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.068 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.069 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.070 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.074 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.074 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.075 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.075 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.077 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.081 I llama_model_loader: - type  f32:   37 tensors
0.00.133.083 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.085 I llama_model_loader: - type q6_K:   19 tensors
0.00.206.074 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.229.034 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.229.807 I llm_load_vocab: special tokens cache size = 5
0.00.251.005 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.251.020 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.251.021 I llm_load_print_meta: arch             = gemma
0.00.251.021 I llm_load_print_meta: vocab type       = SPM
0.00.251.022 I llm_load_print_meta: n_vocab          = 256000
0.00.251.022 I llm_load_print_meta: n_merges         = 0
0.00.251.023 I llm_load_print_meta: vocab_only       = 0
0.00.251.023 I llm_load_print_meta: n_ctx_train      = 8192
0.00.251.023 I llm_load_print_meta: n_embd           = 2048
0.00.251.024 I llm_load_print_meta: n_layer          = 18
0.00.251.036 I llm_load_print_meta: n_head           = 8
0.00.251.036 I llm_load_print_meta: n_head_kv        = 1
0.00.251.037 I llm_load_print_meta: n_rot            = 256
0.00.251.037 I llm_load_print_meta: n_swa            = 0
0.00.251.037 I llm_load_print_meta: n_embd_head_k    = 256
0.00.251.038 I llm_load_print_meta: n_embd_head_v    = 256
0.00.251.039 I llm_load_print_meta: n_gqa            = 8
0.00.251.040 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.251.041 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.251.042 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.251.043 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.251.043 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.251.044 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.251.044 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.251.045 I llm_load_print_meta: n_ff             = 16384
0.00.251.045 I llm_load_print_meta: n_expert         = 0
0.00.251.046 I llm_load_print_meta: n_expert_used    = 0
0.00.251.046 I llm_load_print_meta: causal attn      = 1
0.00.251.046 I llm_load_print_meta: pooling type     = 0
0.00.251.046 I llm_load_print_meta: rope type        = 2
0.00.251.047 I llm_load_print_meta: rope scaling     = linear
0.00.251.048 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.251.048 I llm_load_print_meta: freq_scale_train = 1
0.00.251.049 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.251.049 I llm_load_print_meta: rope_finetuned   = unknown
0.00.251.049 I llm_load_print_meta: ssm_d_conv       = 0
0.00.251.050 I llm_load_print_meta: ssm_d_inner      = 0
0.00.251.050 I llm_load_print_meta: ssm_d_state      = 0
0.00.251.050 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.251.051 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.251.051 I llm_load_print_meta: model type       = 2B
0.00.251.052 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.251.053 I llm_load_print_meta: model params     = 2.51 B
0.00.251.053 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.251.054 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.251.054 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.251.054 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.251.054 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.251.055 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.251.055 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.251.056 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.251.056 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.251.057 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.251.057 I llm_load_print_meta: max token length = 93
0.00.251.085 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.309.332 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.309.340 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.309.341 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.309.342 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.309.343 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.309.343 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.314.495 I llama_new_context_with_model: n_ctx      = 8192
0.00.314.503 I llama_new_context_with_model: n_batch    = 2048
0.00.314.503 I llama_new_context_with_model: n_ubatch   = 512
0.00.314.504 I llama_new_context_with_model: flash_attn = 0
0.00.314.507 I llama_new_context_with_model: freq_base  = 10000.0
0.00.314.508 I llama_new_context_with_model: freq_scale = 1
0.00.344.904 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.344.919 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.345.021 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.345.899 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.345.907 I llama_new_context_with_model: graph nodes  = 601
0.00.345.907 I llama_new_context_with_model: graph splits = 1
0.00.345.909 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.428.041 I main: llama threadpool init, n_threads = 4
0.00.428.053 I 
0.00.428.128 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.428.131 I 
0.00.428.167 I sampler seed: 2769630381
0.00.428.177 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.428.180 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.428.180 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.428.181 I 
 maneuvously, seeking advice on how to best navigate this treacherous path.

**Please provide guidance on the following:**

* **Identifying potential hazards and risks

0.02.040.284 I llama_perf_sampler_print:    sampling time =       5.46 ms /    33 runs   (    0.17 ms per token,  6046.17 tokens per second)
0.02.040.287 I llama_perf_context_print:        load time =     426.12 ms
0.02.040.288 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.040.289 I llama_perf_context_print:        eval time =    1592.95 ms /    32 runs   (   49.78 ms per token,    20.09 tokens per second)
0.02.040.290 I llama_perf_context_print:       total time =    1612.25 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3885 (db8d018d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32030.89 ms
main:    total time = 32030.89 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.564 I build: 3885 (db8d018d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.761 I main: llama backend init
0.00.001.886 I main: load the model and apply lora adapter, if any
0.00.021.901 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.913 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.920 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.921 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.925 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.925 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.926 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.926 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.927 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.928 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.932 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.933 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.934 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.934 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.935 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.384 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.396 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.209 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.215 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.216 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.216 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.217 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.218 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.218 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.222 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.222 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.227 I llama_model_loader: - type  f32:   37 tensors
0.00.132.229 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.231 I llama_model_loader: - type q6_K:   19 tensors
0.00.192.962 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.208.913 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.209.674 I llm_load_vocab: special tokens cache size = 5
0.00.231.068 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.231.083 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.231.083 I llm_load_print_meta: arch             = gemma
0.00.231.083 I llm_load_print_meta: vocab type       = SPM
0.00.231.084 I llm_load_print_meta: n_vocab          = 256000
0.00.231.085 I llm_load_print_meta: n_merges         = 0
0.00.231.085 I llm_load_print_meta: vocab_only       = 0
0.00.231.087 I llm_load_print_meta: n_ctx_train      = 8192
0.00.231.087 I llm_load_print_meta: n_embd           = 2048
0.00.231.088 I llm_load_print_meta: n_layer          = 18
0.00.231.100 I llm_load_print_meta: n_head           = 8
0.00.231.101 I llm_load_print_meta: n_head_kv        = 1
0.00.231.101 I llm_load_print_meta: n_rot            = 256
0.00.231.101 I llm_load_print_meta: n_swa            = 0
0.00.231.102 I llm_load_print_meta: n_embd_head_k    = 256
0.00.231.103 I llm_load_print_meta: n_embd_head_v    = 256
0.00.231.104 I llm_load_print_meta: n_gqa            = 8
0.00.231.106 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.231.107 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.231.108 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.231.110 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.231.110 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.231.111 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.231.111 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.231.112 I llm_load_print_meta: n_ff             = 16384
0.00.231.112 I llm_load_print_meta: n_expert         = 0
0.00.231.113 I llm_load_print_meta: n_expert_used    = 0
0.00.231.113 I llm_load_print_meta: causal attn      = 1
0.00.231.114 I llm_load_print_meta: pooling type     = 0
0.00.231.116 I llm_load_print_meta: rope type        = 2
0.00.231.117 I llm_load_print_meta: rope scaling     = linear
0.00.231.118 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.231.118 I llm_load_print_meta: freq_scale_train = 1
0.00.231.119 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.231.119 I llm_load_print_meta: rope_finetuned   = unknown
0.00.231.119 I llm_load_print_meta: ssm_d_conv       = 0
0.00.231.119 I llm_load_print_meta: ssm_d_inner      = 0
0.00.231.120 I llm_load_print_meta: ssm_d_state      = 0
0.00.231.120 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.231.120 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.231.121 I llm_load_print_meta: model type       = 2B
0.00.231.121 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.231.122 I llm_load_print_meta: model params     = 2.51 B
0.00.231.123 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.231.123 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.231.124 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.231.124 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.231.124 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.231.125 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.231.126 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.231.126 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.231.126 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.231.127 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.231.128 I llm_load_print_meta: max token length = 93
0.00.231.147 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.287.982 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.292.944 I llama_new_context_with_model: n_ctx      = 8192
0.00.292.951 I llama_new_context_with_model: n_batch    = 2048
0.00.292.951 I llama_new_context_with_model: n_ubatch   = 512
0.00.292.951 I llama_new_context_with_model: flash_attn = 0
0.00.292.954 I llama_new_context_with_model: freq_base  = 10000.0
0.00.292.955 I llama_new_context_with_model: freq_scale = 1
0.00.322.055 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.322.072 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.322.165 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.323.008 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.323.016 I llama_new_context_with_model: graph nodes  = 601
0.00.323.016 I llama_new_context_with_model: graph splits = 1
0.00.323.018 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.404.082 I main: llama threadpool init, n_threads = 4
0.00.404.093 I 
0.00.404.170 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.404.174 I 
0.00.404.210 I sampler seed: 85212815
0.00.404.220 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.404.223 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.404.224 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.404.224 I 
 increasities are a part of the human experience. They can be caused by various factors, including stress, trauma, and mental health conditions.

**Answer the

0.02.042.848 I llama_perf_sampler_print:    sampling time =       5.44 ms /    33 runs   (    0.16 ms per token,  6063.95 tokens per second)
0.02.042.851 I llama_perf_context_print:        load time =     402.13 ms
0.02.042.852 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.042.853 I llama_perf_context_print:        eval time =    1620.09 ms /    32 runs   (   50.63 ms per token,    19.75 tokens per second)
0.02.042.854 I llama_perf_context_print:       total time =    1638.77 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.603s
user	8m14.478s
sys	0m7.223s
