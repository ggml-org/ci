+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.646 I build: 3929 (dbf18e4d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.847 I main: llama backend init
0.00.002.787 I main: load the model and apply lora adapter, if any
0.00.024.791 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.005 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.098 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.109 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.111 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.116 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.118 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.119 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.120 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.122 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.123 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.131 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.132 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.142 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.143 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.144 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.130 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.880 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.847 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.857 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.858 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.859 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.860 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.861 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.862 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.866 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.866 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.867 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.868 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.268.869 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.878 I llama_model_loader: - type  f32:   37 tensors
0.00.268.882 I llama_model_loader: - type q8_0:  127 tensors
0.00.457.024 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.502.606 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.504.489 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.510.143 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.522.286 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.523.267 I llm_load_vocab: special tokens cache size = 5
0.00.616.159 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.616.232 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.616.232 I llm_load_print_meta: arch             = gemma
0.00.616.234 I llm_load_print_meta: vocab type       = SPM
0.00.616.234 I llm_load_print_meta: n_vocab          = 256000
0.00.616.236 I llm_load_print_meta: n_merges         = 0
0.00.616.237 I llm_load_print_meta: vocab_only       = 0
0.00.616.238 I llm_load_print_meta: n_ctx_train      = 8192
0.00.616.238 I llm_load_print_meta: n_embd           = 2048
0.00.616.238 I llm_load_print_meta: n_layer          = 18
0.00.616.302 I llm_load_print_meta: n_head           = 8
0.00.616.309 I llm_load_print_meta: n_head_kv        = 1
0.00.616.309 I llm_load_print_meta: n_rot            = 256
0.00.616.310 I llm_load_print_meta: n_swa            = 0
0.00.616.311 I llm_load_print_meta: n_embd_head_k    = 256
0.00.616.312 I llm_load_print_meta: n_embd_head_v    = 256
0.00.616.316 I llm_load_print_meta: n_gqa            = 8
0.00.616.321 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.616.326 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.616.327 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.616.329 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.616.330 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.616.330 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.616.331 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.616.357 I llm_load_print_meta: n_ff             = 16384
0.00.616.359 I llm_load_print_meta: n_expert         = 0
0.00.616.360 I llm_load_print_meta: n_expert_used    = 0
0.00.616.360 I llm_load_print_meta: causal attn      = 1
0.00.616.361 I llm_load_print_meta: pooling type     = 0
0.00.616.361 I llm_load_print_meta: rope type        = 2
0.00.616.362 I llm_load_print_meta: rope scaling     = linear
0.00.616.364 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.616.365 I llm_load_print_meta: freq_scale_train = 1
0.00.616.365 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.616.373 I llm_load_print_meta: rope_finetuned   = unknown
0.00.616.374 I llm_load_print_meta: ssm_d_conv       = 0
0.00.616.374 I llm_load_print_meta: ssm_d_inner      = 0
0.00.616.374 I llm_load_print_meta: ssm_d_state      = 0
0.00.616.375 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.616.376 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.616.377 I llm_load_print_meta: model type       = 2B
0.00.616.381 I llm_load_print_meta: model ftype      = Q8_0
0.00.616.381 I llm_load_print_meta: model params     = 2.51 B
0.00.616.382 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.616.383 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.616.384 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.616.384 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.616.385 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.616.385 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.616.385 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.616.386 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.616.392 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.616.394 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.616.401 I llm_load_print_meta: max token length = 93
0.00.616.574 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.721.519 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.721.531 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.721.532 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.721.532 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.721.533 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.721.534 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.727.213 I llama_new_context_with_model: n_ctx      = 8192
0.00.727.220 I llama_new_context_with_model: n_batch    = 2048
0.00.727.220 I llama_new_context_with_model: n_ubatch   = 512
0.00.727.221 I llama_new_context_with_model: flash_attn = 0
0.00.727.224 I llama_new_context_with_model: freq_base  = 10000.0
0.00.727.224 I llama_new_context_with_model: freq_scale = 1
0.00.758.736 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.758.776 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.758.896 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.760.304 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.760.309 I llama_new_context_with_model: graph nodes  = 601
0.00.760.310 I llama_new_context_with_model: graph splits = 1
0.00.760.327 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.372.683 I main: llama threadpool init, n_threads = 4
0.01.372.694 I 
0.01.372.801 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.372.805 I 
0.01.372.987 I sampler seed: 4026232974
0.01.373.000 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.373.007 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.373.009 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.373.009 I 
 increably. It is a large language model with remarkable capabilities and the potential to revolutionize many industries.

**Questions:**

1. What are the potential

0.14.775.735 I llama_perf_sampler_print:    sampling time =      48.79 ms /    33 runs   (    1.48 ms per token,   676.35 tokens per second)
0.14.775.739 I llama_perf_context_print:        load time =    1369.81 ms
0.14.775.752 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.775.755 I llama_perf_context_print:        eval time =   13321.01 ms /    32 runs   (  416.28 ms per token,     2.40 tokens per second)
0.14.775.756 I llama_perf_context_print:       total time =   13403.06 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.679 I build: 3929 (dbf18e4d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.903 I main: llama backend init
0.00.002.862 I main: load the model and apply lora adapter, if any
0.00.025.198 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.300 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.315 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.317 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.322 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.325 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.327 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.328 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.329 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.330 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.338 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.339 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.340 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.342 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.344 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.728 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.738 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.737 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.746 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.747 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.749 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.750 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.751 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.752 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.756 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.757 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.758 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.759 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.269.760 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.769 I llama_model_loader: - type  f32:   37 tensors
0.00.269.773 I llama_model_loader: - type q8_0:  127 tensors
0.00.468.433 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.515.800 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.517.894 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.524.449 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.538.405 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.539.400 I llm_load_vocab: special tokens cache size = 5
0.00.650.331 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.650.404 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.650.409 I llm_load_print_meta: arch             = gemma
0.00.650.410 I llm_load_print_meta: vocab type       = SPM
0.00.650.411 I llm_load_print_meta: n_vocab          = 256000
0.00.650.413 I llm_load_print_meta: n_merges         = 0
0.00.650.413 I llm_load_print_meta: vocab_only       = 0
0.00.650.414 I llm_load_print_meta: n_ctx_train      = 8192
0.00.650.414 I llm_load_print_meta: n_embd           = 2048
0.00.650.415 I llm_load_print_meta: n_layer          = 18
0.00.650.479 I llm_load_print_meta: n_head           = 8
0.00.650.489 I llm_load_print_meta: n_head_kv        = 1
0.00.650.490 I llm_load_print_meta: n_rot            = 256
0.00.650.490 I llm_load_print_meta: n_swa            = 0
0.00.650.490 I llm_load_print_meta: n_embd_head_k    = 256
0.00.650.491 I llm_load_print_meta: n_embd_head_v    = 256
0.00.650.495 I llm_load_print_meta: n_gqa            = 8
0.00.650.500 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.650.505 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.650.507 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.650.508 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.650.508 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.650.510 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.650.510 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.650.516 I llm_load_print_meta: n_ff             = 16384
0.00.650.516 I llm_load_print_meta: n_expert         = 0
0.00.650.517 I llm_load_print_meta: n_expert_used    = 0
0.00.650.518 I llm_load_print_meta: causal attn      = 1
0.00.650.518 I llm_load_print_meta: pooling type     = 0
0.00.650.518 I llm_load_print_meta: rope type        = 2
0.00.650.519 I llm_load_print_meta: rope scaling     = linear
0.00.650.522 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.650.523 I llm_load_print_meta: freq_scale_train = 1
0.00.650.524 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.650.524 I llm_load_print_meta: rope_finetuned   = unknown
0.00.650.524 I llm_load_print_meta: ssm_d_conv       = 0
0.00.650.525 I llm_load_print_meta: ssm_d_inner      = 0
0.00.650.525 I llm_load_print_meta: ssm_d_state      = 0
0.00.650.525 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.650.526 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.650.526 I llm_load_print_meta: model type       = 2B
0.00.650.527 I llm_load_print_meta: model ftype      = Q8_0
0.00.650.528 I llm_load_print_meta: model params     = 2.51 B
0.00.650.529 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.650.530 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.650.531 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.650.531 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.650.532 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.650.532 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.650.532 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.650.533 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.650.538 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.650.539 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.650.540 I llm_load_print_meta: max token length = 93
0.00.650.705 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.746.336 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.752.010 I llama_new_context_with_model: n_ctx      = 8192
0.00.752.018 I llama_new_context_with_model: n_batch    = 2048
0.00.752.018 I llama_new_context_with_model: n_ubatch   = 512
0.00.752.019 I llama_new_context_with_model: flash_attn = 0
0.00.752.022 I llama_new_context_with_model: freq_base  = 10000.0
0.00.752.023 I llama_new_context_with_model: freq_scale = 1
0.00.783.331 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.783.375 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.783.492 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.784.878 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.784.883 I llama_new_context_with_model: graph nodes  = 601
0.00.784.884 I llama_new_context_with_model: graph splits = 1
0.00.784.901 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.416.468 I main: llama threadpool init, n_threads = 4
0.01.416.480 I 
0.01.416.594 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.416.599 I 
0.01.416.801 I sampler seed: 3920440223
0.01.416.815 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.416.827 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.416.830 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.416.831 I 
 seconary.

The **[Subject]** of this paper is [Insert topic].

**Abstract:**

[Provide a concise summary of the paper's

0.15.032.883 I llama_perf_sampler_print:    sampling time =      49.56 ms /    33 runs   (    1.50 ms per token,   665.89 tokens per second)
0.15.032.887 I llama_perf_context_print:        load time =    1413.50 ms
0.15.032.888 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.032.890 I llama_perf_context_print:        eval time =   13532.82 ms /    32 runs   (  422.90 ms per token,     2.36 tokens per second)
0.15.032.891 I llama_perf_context_print:       total time =   13616.43 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.663 I build: 3929 (dbf18e4d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.862 I main: llama backend init
0.00.002.793 I main: load the model and apply lora adapter, if any
0.00.024.857 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.025.072 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.025.166 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.178 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.180 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.184 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.186 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.187 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.188 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.189 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.190 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.197 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.199 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.200 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.201 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.203 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.545 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.062 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.924 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.934 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.935 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.936 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.937 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.939 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.939 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.943 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.944 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.945 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.946 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.268.947 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.956 I llama_model_loader: - type  f32:   37 tensors
0.00.268.959 I llama_model_loader: - type q8_0:  127 tensors
0.00.459.436 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.504.120 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.505.996 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.511.811 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.524.411 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.525.384 I llm_load_vocab: special tokens cache size = 5
0.00.618.705 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.618.777 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.618.778 I llm_load_print_meta: arch             = gemma
0.00.618.778 I llm_load_print_meta: vocab type       = SPM
0.00.618.779 I llm_load_print_meta: n_vocab          = 256000
0.00.618.782 I llm_load_print_meta: n_merges         = 0
0.00.618.782 I llm_load_print_meta: vocab_only       = 0
0.00.618.783 I llm_load_print_meta: n_ctx_train      = 8192
0.00.618.783 I llm_load_print_meta: n_embd           = 2048
0.00.618.783 I llm_load_print_meta: n_layer          = 18
0.00.618.848 I llm_load_print_meta: n_head           = 8
0.00.618.855 I llm_load_print_meta: n_head_kv        = 1
0.00.618.855 I llm_load_print_meta: n_rot            = 256
0.00.618.856 I llm_load_print_meta: n_swa            = 0
0.00.618.856 I llm_load_print_meta: n_embd_head_k    = 256
0.00.618.856 I llm_load_print_meta: n_embd_head_v    = 256
0.00.618.861 I llm_load_print_meta: n_gqa            = 8
0.00.618.866 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.618.870 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.618.872 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.618.873 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.618.873 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.618.874 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.618.874 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.618.880 I llm_load_print_meta: n_ff             = 16384
0.00.618.880 I llm_load_print_meta: n_expert         = 0
0.00.618.882 I llm_load_print_meta: n_expert_used    = 0
0.00.618.882 I llm_load_print_meta: causal attn      = 1
0.00.618.883 I llm_load_print_meta: pooling type     = 0
0.00.618.894 I llm_load_print_meta: rope type        = 2
0.00.618.896 I llm_load_print_meta: rope scaling     = linear
0.00.618.911 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.618.912 I llm_load_print_meta: freq_scale_train = 1
0.00.618.912 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.618.913 I llm_load_print_meta: rope_finetuned   = unknown
0.00.618.914 I llm_load_print_meta: ssm_d_conv       = 0
0.00.618.915 I llm_load_print_meta: ssm_d_inner      = 0
0.00.618.915 I llm_load_print_meta: ssm_d_state      = 0
0.00.618.922 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.618.923 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.618.923 I llm_load_print_meta: model type       = 2B
0.00.618.925 I llm_load_print_meta: model ftype      = Q8_0
0.00.618.926 I llm_load_print_meta: model params     = 2.51 B
0.00.618.927 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.618.932 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.618.933 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.618.933 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.618.933 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.618.940 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.618.941 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.618.942 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.618.947 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.618.949 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.618.950 I llm_load_print_meta: max token length = 93
0.00.619.115 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.696.484 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.696.496 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.696.497 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.696.497 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.696.498 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.696.499 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.702.233 I llama_new_context_with_model: n_ctx      = 8192
0.00.702.241 I llama_new_context_with_model: n_batch    = 2048
0.00.702.241 I llama_new_context_with_model: n_ubatch   = 512
0.00.702.242 I llama_new_context_with_model: flash_attn = 0
0.00.702.245 I llama_new_context_with_model: freq_base  = 10000.0
0.00.702.246 I llama_new_context_with_model: freq_scale = 1
0.00.731.822 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.731.864 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.731.984 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.733.399 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.733.401 I llama_new_context_with_model: graph nodes  = 601
0.00.733.401 I llama_new_context_with_model: graph splits = 1
0.00.733.418 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.345.929 I main: llama threadpool init, n_threads = 4
0.01.345.941 I 
0.01.346.050 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.346.054 I 
0.01.346.231 I sampler seed: 2982077315
0.01.346.243 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.346.251 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.346.252 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.346.254 I 
 increasities to the following:

**A. Direct Observation**

Direct observation allows researchers to collect data directly from participants through observation. This method provides rich,

0.14.777.977 I llama_perf_sampler_print:    sampling time =      49.18 ms /    33 runs   (    1.49 ms per token,   671.02 tokens per second)
0.14.777.980 I llama_perf_context_print:        load time =    1343.04 ms
0.14.777.981 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.777.994 I llama_perf_context_print:        eval time =   13350.02 ms /    32 runs   (  417.19 ms per token,     2.40 tokens per second)
0.14.777.995 I llama_perf_context_print:       total time =   13432.06 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.672 I build: 3929 (dbf18e4d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.864 I main: llama backend init
0.00.002.793 I main: load the model and apply lora adapter, if any
0.00.024.665 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.876 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.962 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.972 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.975 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.979 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.980 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.981 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.982 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.983 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.984 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.991 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.993 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.994 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.995 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.997 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.069 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.000 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.996 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.005 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.006 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.007 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.008 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.009 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.010 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.015 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.016 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.017 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.018 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.269.020 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.027 I llama_model_loader: - type  f32:   37 tensors
0.00.269.031 I llama_model_loader: - type q8_0:  127 tensors
0.00.452.553 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.496.521 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.498.308 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.503.611 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.514.783 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.515.669 I llm_load_vocab: special tokens cache size = 5
0.00.624.901 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.624.972 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.624.973 I llm_load_print_meta: arch             = gemma
0.00.624.973 I llm_load_print_meta: vocab type       = SPM
0.00.624.974 I llm_load_print_meta: n_vocab          = 256000
0.00.624.976 I llm_load_print_meta: n_merges         = 0
0.00.624.977 I llm_load_print_meta: vocab_only       = 0
0.00.624.978 I llm_load_print_meta: n_ctx_train      = 8192
0.00.624.978 I llm_load_print_meta: n_embd           = 2048
0.00.624.978 I llm_load_print_meta: n_layer          = 18
0.00.625.041 I llm_load_print_meta: n_head           = 8
0.00.625.048 I llm_load_print_meta: n_head_kv        = 1
0.00.625.049 I llm_load_print_meta: n_rot            = 256
0.00.625.049 I llm_load_print_meta: n_swa            = 0
0.00.625.050 I llm_load_print_meta: n_embd_head_k    = 256
0.00.625.050 I llm_load_print_meta: n_embd_head_v    = 256
0.00.625.055 I llm_load_print_meta: n_gqa            = 8
0.00.625.059 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.625.064 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.625.066 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.625.068 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.625.068 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.625.068 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.625.069 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.625.078 I llm_load_print_meta: n_ff             = 16384
0.00.625.079 I llm_load_print_meta: n_expert         = 0
0.00.625.080 I llm_load_print_meta: n_expert_used    = 0
0.00.625.080 I llm_load_print_meta: causal attn      = 1
0.00.625.081 I llm_load_print_meta: pooling type     = 0
0.00.625.092 I llm_load_print_meta: rope type        = 2
0.00.625.093 I llm_load_print_meta: rope scaling     = linear
0.00.625.094 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.625.095 I llm_load_print_meta: freq_scale_train = 1
0.00.625.095 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.625.099 I llm_load_print_meta: rope_finetuned   = unknown
0.00.625.099 I llm_load_print_meta: ssm_d_conv       = 0
0.00.625.100 I llm_load_print_meta: ssm_d_inner      = 0
0.00.625.100 I llm_load_print_meta: ssm_d_state      = 0
0.00.625.100 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.625.100 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.625.101 I llm_load_print_meta: model type       = 2B
0.00.625.102 I llm_load_print_meta: model ftype      = Q8_0
0.00.625.103 I llm_load_print_meta: model params     = 2.51 B
0.00.625.104 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.625.104 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.625.105 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.625.105 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.625.106 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.625.106 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.625.106 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.625.107 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.625.113 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.625.114 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.625.114 I llm_load_print_meta: max token length = 93
0.00.625.283 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.696.264 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.696.274 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.701.862 I llama_new_context_with_model: n_ctx      = 8192
0.00.701.870 I llama_new_context_with_model: n_batch    = 2048
0.00.701.870 I llama_new_context_with_model: n_ubatch   = 512
0.00.701.871 I llama_new_context_with_model: flash_attn = 0
0.00.701.873 I llama_new_context_with_model: freq_base  = 10000.0
0.00.701.874 I llama_new_context_with_model: freq_scale = 1
0.00.731.269 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.731.310 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.731.430 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.732.848 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.732.854 I llama_new_context_with_model: graph nodes  = 601
0.00.732.854 I llama_new_context_with_model: graph splits = 1
0.00.732.871 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.346.059 I main: llama threadpool init, n_threads = 4
0.01.346.069 I 
0.01.346.173 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.346.178 I 
0.01.346.356 I sampler seed: 4130134446
0.01.346.367 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.346.373 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.346.375 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.346.376 I 
 seconal of Jesus Christ, also known as the Second Coming, is a pivotal event in Christian belief.

**What are the key beliefs and expectations associated with

0.14.843.836 I llama_perf_sampler_print:    sampling time =      49.12 ms /    33 runs   (    1.49 ms per token,   671.81 tokens per second)
0.14.843.840 I llama_perf_context_print:        load time =    1343.17 ms
0.14.843.842 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.843.853 I llama_perf_context_print:        eval time =   13415.73 ms /    32 runs   (  419.24 ms per token,     2.39 tokens per second)
0.14.843.856 I llama_perf_context_print:       total time =   13497.79 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m9.918s
user	3m48.636s
sys	0m9.558s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3929 (dbf18e4d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198809.81 ms
main:    total time = 198809.81 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.644 I build: 3929 (dbf18e4d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.847 I main: llama backend init
0.00.002.797 I main: load the model and apply lora adapter, if any
0.00.024.912 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.123 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.211 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.221 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.223 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.227 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.232 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.233 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.234 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.236 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.237 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.243 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.245 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.246 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.247 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.248 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.000 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.003 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.042 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.049 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.051 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.052 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.053 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.054 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.055 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.059 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.060 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.061 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.061 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.268.063 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.071 I llama_model_loader: - type  f32:   37 tensors
0.00.268.075 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.076 I llama_model_loader: - type q6_K:   19 tensors
0.00.447.325 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.493.995 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.496.021 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.502.025 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.514.569 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.515.499 I llm_load_vocab: special tokens cache size = 5
0.00.619.787 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.619.856 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.619.857 I llm_load_print_meta: arch             = gemma
0.00.619.858 I llm_load_print_meta: vocab type       = SPM
0.00.619.859 I llm_load_print_meta: n_vocab          = 256000
0.00.619.861 I llm_load_print_meta: n_merges         = 0
0.00.619.862 I llm_load_print_meta: vocab_only       = 0
0.00.619.862 I llm_load_print_meta: n_ctx_train      = 8192
0.00.619.862 I llm_load_print_meta: n_embd           = 2048
0.00.619.863 I llm_load_print_meta: n_layer          = 18
0.00.619.925 I llm_load_print_meta: n_head           = 8
0.00.619.932 I llm_load_print_meta: n_head_kv        = 1
0.00.619.933 I llm_load_print_meta: n_rot            = 256
0.00.619.934 I llm_load_print_meta: n_swa            = 0
0.00.619.935 I llm_load_print_meta: n_embd_head_k    = 256
0.00.619.935 I llm_load_print_meta: n_embd_head_v    = 256
0.00.619.940 I llm_load_print_meta: n_gqa            = 8
0.00.619.945 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.619.950 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.619.952 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.619.953 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.619.954 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.619.954 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.619.955 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.619.960 I llm_load_print_meta: n_ff             = 16384
0.00.619.960 I llm_load_print_meta: n_expert         = 0
0.00.619.961 I llm_load_print_meta: n_expert_used    = 0
0.00.619.961 I llm_load_print_meta: causal attn      = 1
0.00.619.961 I llm_load_print_meta: pooling type     = 0
0.00.619.962 I llm_load_print_meta: rope type        = 2
0.00.619.963 I llm_load_print_meta: rope scaling     = linear
0.00.619.965 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.619.965 I llm_load_print_meta: freq_scale_train = 1
0.00.619.966 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.619.967 I llm_load_print_meta: rope_finetuned   = unknown
0.00.619.967 I llm_load_print_meta: ssm_d_conv       = 0
0.00.619.967 I llm_load_print_meta: ssm_d_inner      = 0
0.00.619.967 I llm_load_print_meta: ssm_d_state      = 0
0.00.619.968 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.619.968 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.619.969 I llm_load_print_meta: model type       = 2B
0.00.619.970 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.619.971 I llm_load_print_meta: model params     = 2.51 B
0.00.619.971 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.619.972 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.619.972 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.619.973 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.619.973 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.619.974 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.619.974 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.619.975 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.619.980 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.619.982 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.619.982 I llm_load_print_meta: max token length = 93
0.00.620.147 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.680.215 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.680.224 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.680.225 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.680.226 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.680.227 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.680.228 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.685.795 I llama_new_context_with_model: n_ctx      = 8192
0.00.685.803 I llama_new_context_with_model: n_batch    = 2048
0.00.685.804 I llama_new_context_with_model: n_ubatch   = 512
0.00.685.804 I llama_new_context_with_model: flash_attn = 0
0.00.685.807 I llama_new_context_with_model: freq_base  = 10000.0
0.00.685.807 I llama_new_context_with_model: freq_scale = 1
0.00.714.710 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.714.749 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.714.868 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.716.233 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.716.238 I llama_new_context_with_model: graph nodes  = 601
0.00.716.238 I llama_new_context_with_model: graph splits = 1
0.00.716.254 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.293.329 I main: llama threadpool init, n_threads = 4
0.01.293.341 I 
0.01.293.448 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.293.453 I 
0.01.293.631 I sampler seed: 3399687058
0.01.293.642 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.293.649 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.293.652 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.293.652 I 
 maneuvously! [end of text]


0.03.002.318 I llama_perf_sampler_print:    sampling time =       7.78 ms /     6 runs   (    1.30 ms per token,   771.11 tokens per second)
0.03.002.321 I llama_perf_context_print:        load time =    1290.44 ms
0.03.002.323 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.002.324 I llama_perf_context_print:        eval time =    1694.70 ms /     5 runs   (  338.94 ms per token,     2.95 tokens per second)
0.03.002.325 I llama_perf_context_print:       total time =    1709.00 ms /     6 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3929 (dbf18e4d)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199595.47 ms
main:    total time = 199595.47 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.671 I build: 3929 (dbf18e4d) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.878 I main: llama backend init
0.00.002.829 I main: load the model and apply lora adapter, if any
0.00.025.108 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.211 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.226 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.230 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.235 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.237 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.238 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.238 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.239 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.240 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.248 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.249 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.251 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.253 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.254 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.319 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.829 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.805 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.813 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.814 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.815 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.816 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.818 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.819 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.822 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.823 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.831 I llama_model_loader: - type  f32:   37 tensors
0.00.268.835 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.836 I llama_model_loader: - type q6_K:   19 tensors
0.00.460.655 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.507.591 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.509.633 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.515.901 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.529.119 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.530.071 I llm_load_vocab: special tokens cache size = 5
0.00.639.904 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.639.980 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.639.981 I llm_load_print_meta: arch             = gemma
0.00.639.982 I llm_load_print_meta: vocab type       = SPM
0.00.639.983 I llm_load_print_meta: n_vocab          = 256000
0.00.639.985 I llm_load_print_meta: n_merges         = 0
0.00.639.985 I llm_load_print_meta: vocab_only       = 0
0.00.639.986 I llm_load_print_meta: n_ctx_train      = 8192
0.00.639.986 I llm_load_print_meta: n_embd           = 2048
0.00.639.987 I llm_load_print_meta: n_layer          = 18
0.00.640.052 I llm_load_print_meta: n_head           = 8
0.00.640.059 I llm_load_print_meta: n_head_kv        = 1
0.00.640.060 I llm_load_print_meta: n_rot            = 256
0.00.640.060 I llm_load_print_meta: n_swa            = 0
0.00.640.061 I llm_load_print_meta: n_embd_head_k    = 256
0.00.640.061 I llm_load_print_meta: n_embd_head_v    = 256
0.00.640.089 I llm_load_print_meta: n_gqa            = 8
0.00.640.096 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.640.101 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.640.103 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.640.104 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.640.105 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.640.105 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.640.106 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.640.111 I llm_load_print_meta: n_ff             = 16384
0.00.640.111 I llm_load_print_meta: n_expert         = 0
0.00.640.112 I llm_load_print_meta: n_expert_used    = 0
0.00.640.113 I llm_load_print_meta: causal attn      = 1
0.00.640.113 I llm_load_print_meta: pooling type     = 0
0.00.640.113 I llm_load_print_meta: rope type        = 2
0.00.640.115 I llm_load_print_meta: rope scaling     = linear
0.00.640.116 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.640.117 I llm_load_print_meta: freq_scale_train = 1
0.00.640.117 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.640.118 I llm_load_print_meta: rope_finetuned   = unknown
0.00.640.118 I llm_load_print_meta: ssm_d_conv       = 0
0.00.640.126 I llm_load_print_meta: ssm_d_inner      = 0
0.00.640.127 I llm_load_print_meta: ssm_d_state      = 0
0.00.640.128 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.640.136 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.640.137 I llm_load_print_meta: model type       = 2B
0.00.640.138 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.640.138 I llm_load_print_meta: model params     = 2.51 B
0.00.640.139 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.640.139 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.640.140 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.640.141 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.640.142 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.640.142 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.640.142 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.640.143 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.640.149 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.640.151 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.640.151 I llm_load_print_meta: max token length = 93
0.00.640.325 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.697.591 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.703.283 I llama_new_context_with_model: n_ctx      = 8192
0.00.703.290 I llama_new_context_with_model: n_batch    = 2048
0.00.703.290 I llama_new_context_with_model: n_ubatch   = 512
0.00.703.291 I llama_new_context_with_model: flash_attn = 0
0.00.703.295 I llama_new_context_with_model: freq_base  = 10000.0
0.00.703.296 I llama_new_context_with_model: freq_scale = 1
0.00.734.184 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.734.227 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.734.342 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.735.784 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.735.789 I llama_new_context_with_model: graph nodes  = 601
0.00.735.789 I llama_new_context_with_model: graph splits = 1
0.00.735.805 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.313.675 I main: llama threadpool init, n_threads = 4
0.01.313.687 I 
0.01.313.797 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.313.801 I 
0.01.313.981 I sampler seed: 4095239559
0.01.313.992 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.314.000 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.314.001 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.314.001 I 
 seconally.

**Answer:**

I am not able to generate text that is sexually suggestive in nature. My purpose is to assist with tasks that are within

0.12.227.459 I llama_perf_sampler_print:    sampling time =      49.21 ms /    33 runs   (    1.49 ms per token,   670.65 tokens per second)
0.12.227.464 I llama_perf_context_print:        load time =    1310.75 ms
0.12.227.466 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.227.468 I llama_perf_context_print:        eval time =   10831.75 ms /    32 runs   (  338.49 ms per token,     2.95 tokens per second)
0.12.227.469 I llama_perf_context_print:       total time =   10913.79 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m56.530s
user	49m39.541s
sys	0m6.239s
