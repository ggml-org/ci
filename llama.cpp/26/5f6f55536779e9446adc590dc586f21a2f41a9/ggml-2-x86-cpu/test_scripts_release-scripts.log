+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.444 I build: 4367 (265f6f55) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.668 I main: llama backend init
0.00.000.675 I main: load the model and apply lora adapter, if any
0.00.021.917 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.927 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.934 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.939 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.940 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.943 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.946 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.947 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.948 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.948 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.949 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.953 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.953 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.954 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.955 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.956 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.032 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.548 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.407 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.413 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.414 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.414 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.415 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.416 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.416 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.418 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.419 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.419 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.420 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.420 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.424 I llama_model_loader: - type  f32:   37 tensors
0.00.131.425 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.826 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.251.449 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.252.006 I llm_load_vocab: special tokens cache size = 5
0.00.272.651 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.669 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.670 I llm_load_print_meta: arch             = gemma
0.00.272.671 I llm_load_print_meta: vocab type       = SPM
0.00.272.671 I llm_load_print_meta: n_vocab          = 256000
0.00.272.672 I llm_load_print_meta: n_merges         = 0
0.00.272.672 I llm_load_print_meta: vocab_only       = 0
0.00.272.673 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.673 I llm_load_print_meta: n_embd           = 2048
0.00.272.673 I llm_load_print_meta: n_layer          = 18
0.00.272.685 I llm_load_print_meta: n_head           = 8
0.00.272.686 I llm_load_print_meta: n_head_kv        = 1
0.00.272.686 I llm_load_print_meta: n_rot            = 256
0.00.272.687 I llm_load_print_meta: n_swa            = 0
0.00.272.687 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.687 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.688 I llm_load_print_meta: n_gqa            = 8
0.00.272.689 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.691 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.691 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.692 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.693 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.694 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.694 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.695 I llm_load_print_meta: n_ff             = 16384
0.00.272.695 I llm_load_print_meta: n_expert         = 0
0.00.272.695 I llm_load_print_meta: n_expert_used    = 0
0.00.272.696 I llm_load_print_meta: causal attn      = 1
0.00.272.696 I llm_load_print_meta: pooling type     = 0
0.00.272.696 I llm_load_print_meta: rope type        = 2
0.00.272.696 I llm_load_print_meta: rope scaling     = linear
0.00.272.697 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.698 I llm_load_print_meta: freq_scale_train = 1
0.00.272.698 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.699 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.699 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.700 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.700 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.700 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.700 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.701 I llm_load_print_meta: model type       = 2B
0.00.272.703 I llm_load_print_meta: model ftype      = Q8_0
0.00.272.704 I llm_load_print_meta: model params     = 2.51 B
0.00.272.704 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.272.705 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.705 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.705 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.706 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.706 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.706 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.707 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.707 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.708 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.708 I llm_load_print_meta: max token length = 93
0.00.375.939 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.375.945 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.375.946 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.375.946 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.375.947 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.375.947 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.382.087 I llama_new_context_with_model: n_seq_max     = 1
0.00.382.094 I llama_new_context_with_model: n_ctx         = 4096
0.00.382.095 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.382.095 I llama_new_context_with_model: n_batch       = 2048
0.00.382.096 I llama_new_context_with_model: n_ubatch      = 512
0.00.382.096 I llama_new_context_with_model: flash_attn    = 0
0.00.382.098 I llama_new_context_with_model: freq_base     = 10000.0
0.00.382.099 I llama_new_context_with_model: freq_scale    = 1
0.00.382.100 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.382.118 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.396.362 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.396.374 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.396.462 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.397.745 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.397.751 I llama_new_context_with_model: graph nodes  = 601
0.00.397.752 I llama_new_context_with_model: graph splits = 1
0.00.397.754 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.397.754 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.483.396 I main: llama threadpool init, n_threads = 4
0.00.483.412 I 
0.00.483.498 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.483.502 I 
0.00.483.538 I sampler seed: 2873474738
0.00.483.560 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.483.568 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.483.570 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.483.570 I 
 increasively.

I am unable to generate a response as requested because I am unable to access personal or sensitive information. [end of text]


0.02.239.812 I llama_perf_sampler_print:    sampling time =       4.22 ms /    26 runs   (    0.16 ms per token,  6156.76 tokens per second)
0.02.239.815 I llama_perf_context_print:        load time =     482.71 ms
0.02.239.816 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.239.817 I llama_perf_context_print:        eval time =    1740.65 ms /    25 runs   (   69.63 ms per token,    14.36 tokens per second)
0.02.239.818 I llama_perf_context_print:       total time =    1756.42 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.162 I build: 4367 (265f6f55) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.367 I main: llama backend init
0.00.000.375 I main: load the model and apply lora adapter, if any
0.00.020.929 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.020.946 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.952 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.953 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.957 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.958 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.959 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.959 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.960 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.960 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.965 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.966 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.967 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.968 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.969 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.360 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.427 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.336 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.344 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.345 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.345 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.346 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.347 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.348 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.350 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.351 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.351 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.352 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.352 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.355 I llama_model_loader: - type  f32:   37 tensors
0.00.132.356 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.317 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.226 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.710 I llm_load_vocab: special tokens cache size = 5
0.00.266.270 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.284 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.285 I llm_load_print_meta: arch             = gemma
0.00.266.286 I llm_load_print_meta: vocab type       = SPM
0.00.266.287 I llm_load_print_meta: n_vocab          = 256000
0.00.266.288 I llm_load_print_meta: n_merges         = 0
0.00.266.288 I llm_load_print_meta: vocab_only       = 0
0.00.266.288 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.289 I llm_load_print_meta: n_embd           = 2048
0.00.266.289 I llm_load_print_meta: n_layer          = 18
0.00.266.301 I llm_load_print_meta: n_head           = 8
0.00.266.302 I llm_load_print_meta: n_head_kv        = 1
0.00.266.303 I llm_load_print_meta: n_rot            = 256
0.00.266.303 I llm_load_print_meta: n_swa            = 0
0.00.266.303 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.304 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.305 I llm_load_print_meta: n_gqa            = 8
0.00.266.306 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.307 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.308 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.309 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.310 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.310 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.311 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.311 I llm_load_print_meta: n_ff             = 16384
0.00.266.312 I llm_load_print_meta: n_expert         = 0
0.00.266.312 I llm_load_print_meta: n_expert_used    = 0
0.00.266.312 I llm_load_print_meta: causal attn      = 1
0.00.266.313 I llm_load_print_meta: pooling type     = 0
0.00.266.313 I llm_load_print_meta: rope type        = 2
0.00.266.313 I llm_load_print_meta: rope scaling     = linear
0.00.266.314 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.315 I llm_load_print_meta: freq_scale_train = 1
0.00.266.315 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.316 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.316 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.316 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.316 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.317 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.317 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.318 I llm_load_print_meta: model type       = 2B
0.00.266.319 I llm_load_print_meta: model ftype      = Q8_0
0.00.266.320 I llm_load_print_meta: model params     = 2.51 B
0.00.266.321 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.266.321 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.322 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.322 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.322 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.323 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.323 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.323 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.324 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.324 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.324 I llm_load_print_meta: max token length = 93
0.00.362.479 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.367.703 I llama_new_context_with_model: n_seq_max     = 1
0.00.367.711 I llama_new_context_with_model: n_ctx         = 4096
0.00.367.711 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.367.712 I llama_new_context_with_model: n_batch       = 2048
0.00.367.712 I llama_new_context_with_model: n_ubatch      = 512
0.00.367.713 I llama_new_context_with_model: flash_attn    = 0
0.00.367.717 I llama_new_context_with_model: freq_base     = 10000.0
0.00.367.718 I llama_new_context_with_model: freq_scale    = 1
0.00.367.719 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.367.740 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.383.124 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.383.139 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.383.236 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.384.486 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.384.493 I llama_new_context_with_model: graph nodes  = 601
0.00.384.493 I llama_new_context_with_model: graph splits = 1
0.00.384.495 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.384.495 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.468.419 I main: llama threadpool init, n_threads = 4
0.00.468.435 I 
0.00.468.518 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.468.522 I 
0.00.468.572 I sampler seed: 885906622
0.00.468.584 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.468.598 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.468.603 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.468.603 I 
 increasively to the position where the current value is greater than the sum of the last two values. This is known as a "fire sale."

**Question

0.02.645.931 I llama_perf_sampler_print:    sampling time =       5.93 ms /    33 runs   (    0.18 ms per token,  5567.74 tokens per second)
0.02.645.934 I llama_perf_context_print:        load time =     468.03 ms
0.02.645.935 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.645.936 I llama_perf_context_print:        eval time =    2157.19 ms /    32 runs   (   67.41 ms per token,    14.83 tokens per second)
0.02.645.937 I llama_perf_context_print:       total time =    2177.52 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.539 I build: 4367 (265f6f55) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.753 I main: llama backend init
0.00.000.760 I main: load the model and apply lora adapter, if any
0.00.021.598 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.608 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.619 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.626 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.627 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.631 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.632 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.633 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.633 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.634 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.635 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.640 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.641 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.644 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.645 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.646 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.773 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.078 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.032 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.039 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.040 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.041 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.041 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.042 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.043 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.045 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.046 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.046 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.047 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.047 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.051 I llama_model_loader: - type  f32:   37 tensors
0.00.132.053 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.237 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.253.155 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.253.713 I llm_load_vocab: special tokens cache size = 5
0.00.274.295 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.311 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.312 I llm_load_print_meta: arch             = gemma
0.00.274.312 I llm_load_print_meta: vocab type       = SPM
0.00.274.313 I llm_load_print_meta: n_vocab          = 256000
0.00.274.313 I llm_load_print_meta: n_merges         = 0
0.00.274.314 I llm_load_print_meta: vocab_only       = 0
0.00.274.314 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.315 I llm_load_print_meta: n_embd           = 2048
0.00.274.315 I llm_load_print_meta: n_layer          = 18
0.00.274.326 I llm_load_print_meta: n_head           = 8
0.00.274.327 I llm_load_print_meta: n_head_kv        = 1
0.00.274.327 I llm_load_print_meta: n_rot            = 256
0.00.274.328 I llm_load_print_meta: n_swa            = 0
0.00.274.328 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.328 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.330 I llm_load_print_meta: n_gqa            = 8
0.00.274.331 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.331 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.332 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.334 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.334 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.334 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.335 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.336 I llm_load_print_meta: n_ff             = 16384
0.00.274.336 I llm_load_print_meta: n_expert         = 0
0.00.274.336 I llm_load_print_meta: n_expert_used    = 0
0.00.274.337 I llm_load_print_meta: causal attn      = 1
0.00.274.337 I llm_load_print_meta: pooling type     = 0
0.00.274.337 I llm_load_print_meta: rope type        = 2
0.00.274.338 I llm_load_print_meta: rope scaling     = linear
0.00.274.339 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.340 I llm_load_print_meta: freq_scale_train = 1
0.00.274.340 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.340 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.341 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.341 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.341 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.342 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.342 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.343 I llm_load_print_meta: model type       = 2B
0.00.274.345 I llm_load_print_meta: model ftype      = Q8_0
0.00.274.346 I llm_load_print_meta: model params     = 2.51 B
0.00.274.347 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.274.347 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.348 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.348 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.349 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.349 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.349 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.350 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.350 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.351 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.351 I llm_load_print_meta: max token length = 93
0.00.351.600 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.351.609 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.351.609 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.351.610 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.351.611 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.351.611 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.356.934 I llama_new_context_with_model: n_seq_max     = 1
0.00.356.941 I llama_new_context_with_model: n_ctx         = 4096
0.00.356.942 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.356.942 I llama_new_context_with_model: n_batch       = 2048
0.00.356.943 I llama_new_context_with_model: n_ubatch      = 512
0.00.356.943 I llama_new_context_with_model: flash_attn    = 0
0.00.356.946 I llama_new_context_with_model: freq_base     = 10000.0
0.00.356.947 I llama_new_context_with_model: freq_scale    = 1
0.00.356.948 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.356.966 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.371.004 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.371.017 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.371.105 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.372.367 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.372.373 I llama_new_context_with_model: graph nodes  = 601
0.00.372.373 I llama_new_context_with_model: graph splits = 1
0.00.372.375 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.372.376 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.458.911 I main: llama threadpool init, n_threads = 4
0.00.458.928 I 
0.00.459.012 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.459.019 I 
0.00.459.055 I sampler seed: 3219343158
0.00.459.069 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.459.073 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.459.074 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.459.074 I 
 increasities. [end of text]


0.00.748.740 I llama_perf_sampler_print:    sampling time =       0.72 ms /     5 runs   (    0.14 ms per token,  6915.63 tokens per second)
0.00.748.742 I llama_perf_context_print:        load time =     458.13 ms
0.00.748.743 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.748.744 I llama_perf_context_print:        eval time =     286.50 ms /     4 runs   (   71.63 ms per token,    13.96 tokens per second)
0.00.748.745 I llama_perf_context_print:       total time =     289.84 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.176 I build: 4367 (265f6f55) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.367 I main: llama backend init
0.00.000.375 I main: load the model and apply lora adapter, if any
0.00.021.459 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.471 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.479 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.485 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.489 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.493 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.494 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.495 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.496 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.497 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.497 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.502 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.503 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.504 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.504 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.505 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.694 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.118 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.054 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.061 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.062 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.063 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.064 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.066 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.067 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.071 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.071 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.072 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.073 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.074 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.078 I llama_model_loader: - type  f32:   37 tensors
0.00.131.079 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.331 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.251.713 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.252.287 I llm_load_vocab: special tokens cache size = 5
0.00.273.119 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.273.136 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.273.137 I llm_load_print_meta: arch             = gemma
0.00.273.137 I llm_load_print_meta: vocab type       = SPM
0.00.273.138 I llm_load_print_meta: n_vocab          = 256000
0.00.273.138 I llm_load_print_meta: n_merges         = 0
0.00.273.138 I llm_load_print_meta: vocab_only       = 0
0.00.273.139 I llm_load_print_meta: n_ctx_train      = 8192
0.00.273.139 I llm_load_print_meta: n_embd           = 2048
0.00.273.139 I llm_load_print_meta: n_layer          = 18
0.00.273.150 I llm_load_print_meta: n_head           = 8
0.00.273.151 I llm_load_print_meta: n_head_kv        = 1
0.00.273.152 I llm_load_print_meta: n_rot            = 256
0.00.273.152 I llm_load_print_meta: n_swa            = 0
0.00.273.153 I llm_load_print_meta: n_embd_head_k    = 256
0.00.273.153 I llm_load_print_meta: n_embd_head_v    = 256
0.00.273.154 I llm_load_print_meta: n_gqa            = 8
0.00.273.155 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.273.156 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.273.157 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.273.158 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.273.158 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.273.159 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.273.159 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.273.160 I llm_load_print_meta: n_ff             = 16384
0.00.273.160 I llm_load_print_meta: n_expert         = 0
0.00.273.160 I llm_load_print_meta: n_expert_used    = 0
0.00.273.161 I llm_load_print_meta: causal attn      = 1
0.00.273.161 I llm_load_print_meta: pooling type     = 0
0.00.273.161 I llm_load_print_meta: rope type        = 2
0.00.273.161 I llm_load_print_meta: rope scaling     = linear
0.00.273.163 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.163 I llm_load_print_meta: freq_scale_train = 1
0.00.273.163 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.164 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.164 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.164 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.165 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.165 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.165 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.166 I llm_load_print_meta: model type       = 2B
0.00.273.167 I llm_load_print_meta: model ftype      = Q8_0
0.00.273.168 I llm_load_print_meta: model params     = 2.51 B
0.00.273.169 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.273.169 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.169 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.170 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.170 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.171 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.171 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.171 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.172 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.172 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.173 I llm_load_print_meta: max token length = 93
0.00.344.045 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.344.052 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.349.225 I llama_new_context_with_model: n_seq_max     = 1
0.00.349.232 I llama_new_context_with_model: n_ctx         = 4096
0.00.349.232 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.349.233 I llama_new_context_with_model: n_batch       = 2048
0.00.349.233 I llama_new_context_with_model: n_ubatch      = 512
0.00.349.234 I llama_new_context_with_model: flash_attn    = 0
0.00.349.236 I llama_new_context_with_model: freq_base     = 10000.0
0.00.349.237 I llama_new_context_with_model: freq_scale    = 1
0.00.349.238 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.349.256 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.363.730 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.363.743 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.363.834 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.100 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.365.106 I llama_new_context_with_model: graph nodes  = 601
0.00.365.107 I llama_new_context_with_model: graph splits = 1
0.00.365.109 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.365.109 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.453.701 I main: llama threadpool init, n_threads = 4
0.00.453.716 I 
0.00.453.789 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.453.793 I 
0.00.453.825 I sampler seed: 3230201529
0.00.453.836 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.453.839 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.453.840 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.453.840 I 
 increably.

I am unable to generate a response due to the provided context containing potentially harmful or inappropriate content. [end of text]


0.02.267.517 I llama_perf_sampler_print:    sampling time =       4.12 ms /    25 runs   (    0.16 ms per token,  6070.91 tokens per second)
0.02.267.519 I llama_perf_context_print:        load time =     453.31 ms
0.02.267.520 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.267.522 I llama_perf_context_print:        eval time =    1799.16 ms /    24 runs   (   74.96 ms per token,    13.34 tokens per second)
0.02.267.523 I llama_perf_context_print:       total time =    1813.82 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.412s
user	0m27.064s
sys	0m9.360s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4367 (265f6f55)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40244.85 ms
main:    total time = 40244.85 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.527 I build: 4367 (265f6f55) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.719 I main: llama backend init
0.00.000.725 I main: load the model and apply lora adapter, if any
0.00.029.898 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.029.906 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.029.915 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.029.920 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.029.921 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.029.925 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.029.925 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.029.926 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.029.927 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.029.927 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.029.928 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.029.931 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.029.932 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.029.932 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.029.933 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.029.934 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.056.969 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.132.958 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.139.957 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.139.964 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.139.965 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.139.965 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.139.966 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.139.966 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.139.967 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.139.969 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.139.970 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.139.970 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.139.971 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.139.971 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.139.975 I llama_model_loader: - type  f32:   37 tensors
0.00.139.976 I llama_model_loader: - type q4_K:  108 tensors
0.00.139.977 I llama_model_loader: - type q6_K:   19 tensors
0.00.217.976 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.262.104 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.690 I llm_load_vocab: special tokens cache size = 5
0.00.283.284 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.283.299 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.283.300 I llm_load_print_meta: arch             = gemma
0.00.283.300 I llm_load_print_meta: vocab type       = SPM
0.00.283.301 I llm_load_print_meta: n_vocab          = 256000
0.00.283.301 I llm_load_print_meta: n_merges         = 0
0.00.283.302 I llm_load_print_meta: vocab_only       = 0
0.00.283.302 I llm_load_print_meta: n_ctx_train      = 8192
0.00.283.302 I llm_load_print_meta: n_embd           = 2048
0.00.283.303 I llm_load_print_meta: n_layer          = 18
0.00.283.314 I llm_load_print_meta: n_head           = 8
0.00.283.315 I llm_load_print_meta: n_head_kv        = 1
0.00.283.315 I llm_load_print_meta: n_rot            = 256
0.00.283.316 I llm_load_print_meta: n_swa            = 0
0.00.283.316 I llm_load_print_meta: n_embd_head_k    = 256
0.00.283.316 I llm_load_print_meta: n_embd_head_v    = 256
0.00.283.317 I llm_load_print_meta: n_gqa            = 8
0.00.283.318 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.283.319 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.283.320 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.283.321 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.283.321 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.283.322 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.283.322 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.283.323 I llm_load_print_meta: n_ff             = 16384
0.00.283.323 I llm_load_print_meta: n_expert         = 0
0.00.283.323 I llm_load_print_meta: n_expert_used    = 0
0.00.283.323 I llm_load_print_meta: causal attn      = 1
0.00.283.324 I llm_load_print_meta: pooling type     = 0
0.00.283.324 I llm_load_print_meta: rope type        = 2
0.00.283.325 I llm_load_print_meta: rope scaling     = linear
0.00.283.326 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.283.327 I llm_load_print_meta: freq_scale_train = 1
0.00.283.327 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.283.328 I llm_load_print_meta: rope_finetuned   = unknown
0.00.283.328 I llm_load_print_meta: ssm_d_conv       = 0
0.00.283.328 I llm_load_print_meta: ssm_d_inner      = 0
0.00.283.329 I llm_load_print_meta: ssm_d_state      = 0
0.00.283.329 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.283.329 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.283.330 I llm_load_print_meta: model type       = 2B
0.00.283.331 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.283.332 I llm_load_print_meta: model params     = 2.51 B
0.00.283.332 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.283.333 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.283.333 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.283.334 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.283.334 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.283.334 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.283.335 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.283.335 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.283.335 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.283.336 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.283.336 I llm_load_print_meta: max token length = 93
0.00.343.262 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.343.269 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.343.270 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.343.270 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.343.271 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.343.272 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.348.468 I llama_new_context_with_model: n_seq_max     = 1
0.00.348.475 I llama_new_context_with_model: n_ctx         = 4096
0.00.348.475 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.348.476 I llama_new_context_with_model: n_batch       = 2048
0.00.348.477 I llama_new_context_with_model: n_ubatch      = 512
0.00.348.477 I llama_new_context_with_model: flash_attn    = 0
0.00.348.479 I llama_new_context_with_model: freq_base     = 10000.0
0.00.348.480 I llama_new_context_with_model: freq_scale    = 1
0.00.348.481 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.348.502 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.363.287 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.363.299 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.363.389 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.676 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.364.683 I llama_new_context_with_model: graph nodes  = 601
0.00.364.683 I llama_new_context_with_model: graph splits = 1
0.00.364.685 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.364.686 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.439.734 I main: llama threadpool init, n_threads = 4
0.00.439.750 I 
0.00.439.826 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.439.829 I 
0.00.439.861 I sampler seed: 292289431
0.00.439.872 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.439.884 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.439.888 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.439.888 I 
 increasities can cause inflammation in the body, leading to a variety of health problems.

**How does inflammation contribute to the development of cardiovascular disease?**



0.02.040.317 I llama_perf_sampler_print:    sampling time =       5.81 ms /    33 runs   (    0.18 ms per token,  5683.78 tokens per second)
0.02.040.320 I llama_perf_context_print:        load time =     438.99 ms
0.02.040.321 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.040.322 I llama_perf_context_print:        eval time =    1581.28 ms /    32 runs   (   49.42 ms per token,    20.24 tokens per second)
0.02.040.323 I llama_perf_context_print:       total time =    1600.59 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4367 (265f6f55)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40213.50 ms
main:    total time = 40213.50 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.604 I build: 4367 (265f6f55) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.801 I main: llama backend init
0.00.000.807 I main: load the model and apply lora adapter, if any
0.00.021.763 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.782 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.789 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.790 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.795 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.798 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.799 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.799 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.800 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.800 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.804 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.805 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.806 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.807 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.807 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.388 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.275 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.357 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.362 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.363 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.364 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.365 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.365 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.366 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.369 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.371 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.374 I llama_model_loader: - type  f32:   37 tensors
0.00.131.375 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.376 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.290 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.939 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.242.394 I llm_load_vocab: special tokens cache size = 5
0.00.263.712 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.263.728 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.263.729 I llm_load_print_meta: arch             = gemma
0.00.263.729 I llm_load_print_meta: vocab type       = SPM
0.00.263.730 I llm_load_print_meta: n_vocab          = 256000
0.00.263.731 I llm_load_print_meta: n_merges         = 0
0.00.263.731 I llm_load_print_meta: vocab_only       = 0
0.00.263.731 I llm_load_print_meta: n_ctx_train      = 8192
0.00.263.731 I llm_load_print_meta: n_embd           = 2048
0.00.263.732 I llm_load_print_meta: n_layer          = 18
0.00.263.743 I llm_load_print_meta: n_head           = 8
0.00.263.744 I llm_load_print_meta: n_head_kv        = 1
0.00.263.744 I llm_load_print_meta: n_rot            = 256
0.00.263.745 I llm_load_print_meta: n_swa            = 0
0.00.263.745 I llm_load_print_meta: n_embd_head_k    = 256
0.00.263.745 I llm_load_print_meta: n_embd_head_v    = 256
0.00.263.746 I llm_load_print_meta: n_gqa            = 8
0.00.263.747 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.263.748 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.263.749 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.263.750 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.263.751 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.263.751 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.263.751 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.263.752 I llm_load_print_meta: n_ff             = 16384
0.00.263.752 I llm_load_print_meta: n_expert         = 0
0.00.263.753 I llm_load_print_meta: n_expert_used    = 0
0.00.263.753 I llm_load_print_meta: causal attn      = 1
0.00.263.753 I llm_load_print_meta: pooling type     = 0
0.00.263.753 I llm_load_print_meta: rope type        = 2
0.00.263.754 I llm_load_print_meta: rope scaling     = linear
0.00.263.755 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.263.756 I llm_load_print_meta: freq_scale_train = 1
0.00.263.756 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.263.757 I llm_load_print_meta: rope_finetuned   = unknown
0.00.263.757 I llm_load_print_meta: ssm_d_conv       = 0
0.00.263.757 I llm_load_print_meta: ssm_d_inner      = 0
0.00.263.757 I llm_load_print_meta: ssm_d_state      = 0
0.00.263.758 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.263.758 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.263.759 I llm_load_print_meta: model type       = 2B
0.00.263.760 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.263.761 I llm_load_print_meta: model params     = 2.51 B
0.00.263.762 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.263.762 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.263.763 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.263.763 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.263.763 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.263.763 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.263.764 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.263.764 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.263.764 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.263.765 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.263.765 I llm_load_print_meta: max token length = 93
0.00.322.965 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.328.081 I llama_new_context_with_model: n_seq_max     = 1
0.00.328.087 I llama_new_context_with_model: n_ctx         = 4096
0.00.328.088 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.328.088 I llama_new_context_with_model: n_batch       = 2048
0.00.328.089 I llama_new_context_with_model: n_ubatch      = 512
0.00.328.089 I llama_new_context_with_model: flash_attn    = 0
0.00.328.091 I llama_new_context_with_model: freq_base     = 10000.0
0.00.328.092 I llama_new_context_with_model: freq_scale    = 1
0.00.328.093 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.328.111 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18
0.00.342.689 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.342.702 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.342.790 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.344.006 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.344.014 I llama_new_context_with_model: graph nodes  = 601
0.00.344.014 I llama_new_context_with_model: graph splits = 1
0.00.344.017 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.344.018 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.417.676 I main: llama threadpool init, n_threads = 4
0.00.417.690 I 
0.00.417.767 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.417.770 I 
0.00.417.806 I sampler seed: 3765153499
0.00.417.818 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.417.821 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.417.822 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.417.824 I 
 seconally.

**Assistant**

I need more context to provide you with the best possible assistance. Please provide additional information about the specific issue you're

0.01.984.802 I llama_perf_sampler_print:    sampling time =       5.57 ms /    33 runs   (    0.17 ms per token,  5922.47 tokens per second)
0.01.984.805 I llama_perf_context_print:        load time =     416.86 ms
0.01.984.806 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.984.808 I llama_perf_context_print:        eval time =    1546.98 ms /    32 runs   (   48.34 ms per token,    20.69 tokens per second)
0.01.984.809 I llama_perf_context_print:       total time =    1567.13 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.262s
user	10m24.041s
sys	0m6.998s
