+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.540 I build: 3820 (bb5f8199) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.747 I main: llama backend init
0.00.001.862 I main: load the model and apply lora adapter, if any
0.00.022.077 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.124 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.134 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.142 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.144 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.148 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.148 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.149 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.149 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.150 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.150 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.154 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.155 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.155 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.156 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.157 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.894 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.610 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.426 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.432 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.432 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.433 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.433 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.434 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.435 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.437 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.438 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.439 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.439 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.441 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.443 I llama_model_loader: - type  f32:   37 tensors
0.00.132.445 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.036 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.215.296 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.216.049 I llm_load_vocab: special tokens cache size = 5
0.00.234.578 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.234.594 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.234.595 I llm_load_print_meta: arch             = gemma
0.00.234.595 I llm_load_print_meta: vocab type       = SPM
0.00.234.596 I llm_load_print_meta: n_vocab          = 256000
0.00.234.597 I llm_load_print_meta: n_merges         = 0
0.00.234.597 I llm_load_print_meta: vocab_only       = 0
0.00.234.597 I llm_load_print_meta: n_ctx_train      = 8192
0.00.234.598 I llm_load_print_meta: n_embd           = 2048
0.00.234.598 I llm_load_print_meta: n_layer          = 18
0.00.234.611 I llm_load_print_meta: n_head           = 8
0.00.234.612 I llm_load_print_meta: n_head_kv        = 1
0.00.234.612 I llm_load_print_meta: n_rot            = 256
0.00.234.613 I llm_load_print_meta: n_swa            = 0
0.00.234.613 I llm_load_print_meta: n_embd_head_k    = 256
0.00.234.613 I llm_load_print_meta: n_embd_head_v    = 256
0.00.234.614 I llm_load_print_meta: n_gqa            = 8
0.00.234.615 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.234.616 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.234.617 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.234.618 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.234.618 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.234.618 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.234.619 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.234.620 I llm_load_print_meta: n_ff             = 16384
0.00.234.621 I llm_load_print_meta: n_expert         = 0
0.00.234.621 I llm_load_print_meta: n_expert_used    = 0
0.00.234.621 I llm_load_print_meta: causal attn      = 1
0.00.234.621 I llm_load_print_meta: pooling type     = 0
0.00.234.622 I llm_load_print_meta: rope type        = 2
0.00.234.622 I llm_load_print_meta: rope scaling     = linear
0.00.234.623 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.234.624 I llm_load_print_meta: freq_scale_train = 1
0.00.234.624 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.234.624 I llm_load_print_meta: rope_finetuned   = unknown
0.00.234.625 I llm_load_print_meta: ssm_d_conv       = 0
0.00.234.625 I llm_load_print_meta: ssm_d_inner      = 0
0.00.234.625 I llm_load_print_meta: ssm_d_state      = 0
0.00.234.625 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.234.626 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.234.626 I llm_load_print_meta: model type       = 2B
0.00.234.627 I llm_load_print_meta: model ftype      = Q8_0
0.00.234.628 I llm_load_print_meta: model params     = 2.51 B
0.00.234.628 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.234.629 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.234.630 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.234.630 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.234.630 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.234.630 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.234.631 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.234.631 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.234.631 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.234.632 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.234.632 I llm_load_print_meta: max token length = 93
0.00.234.650 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.334.427 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.334.434 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.334.435 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.334.435 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.334.436 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.334.436 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.339.545 I llama_new_context_with_model: n_ctx      = 8192
0.00.339.551 I llama_new_context_with_model: n_batch    = 2048
0.00.339.551 I llama_new_context_with_model: n_ubatch   = 512
0.00.339.552 I llama_new_context_with_model: flash_attn = 0
0.00.339.554 I llama_new_context_with_model: freq_base  = 10000.0
0.00.339.555 I llama_new_context_with_model: freq_scale = 1
0.00.368.935 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.368.950 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.369.041 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.369.900 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.369.908 I llama_new_context_with_model: graph nodes  = 601
0.00.369.909 I llama_new_context_with_model: graph splits = 1
0.00.369.911 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.461.411 I main: llama threadpool init, n_threads = 4
0.00.461.424 I 
0.00.461.499 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.461.502 I 
0.00.461.540 I sampler seed: 24097253
0.00.461.548 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.461.550 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.461.551 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.461.551 I 
 increamentalism, and the decline of the American middle class. [end of text]


0.01.451.755 I llama_perf_sampler_print:    sampling time =       2.15 ms /    15 runs   (    0.14 ms per token,  6989.75 tokens per second)
0.01.451.758 I llama_perf_context_print:        load time =     459.53 ms
0.01.451.759 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.451.762 I llama_perf_context_print:        eval time =     981.31 ms /    14 runs   (   70.09 ms per token,    14.27 tokens per second)
0.01.451.763 I llama_perf_context_print:       total time =     990.35 ms /    15 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.553 I build: 3820 (bb5f8199) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.747 I main: llama backend init
0.00.001.862 I main: load the model and apply lora adapter, if any
0.00.021.848 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.859 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.866 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.866 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.870 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.871 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.871 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.872 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.874 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.874 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.878 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.878 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.879 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.880 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.880 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.391 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.303 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.129 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.136 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.136 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.137 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.139 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.140 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.141 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.144 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.145 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.146 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.147 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.148 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.151 I llama_model_loader: - type  f32:   37 tensors
0.00.132.154 I llama_model_loader: - type q8_0:  127 tensors
0.00.197.173 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.469 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.323 I llm_load_vocab: special tokens cache size = 5
0.00.231.735 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.231.748 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.231.748 I llm_load_print_meta: arch             = gemma
0.00.231.749 I llm_load_print_meta: vocab type       = SPM
0.00.231.749 I llm_load_print_meta: n_vocab          = 256000
0.00.231.750 I llm_load_print_meta: n_merges         = 0
0.00.231.750 I llm_load_print_meta: vocab_only       = 0
0.00.231.750 I llm_load_print_meta: n_ctx_train      = 8192
0.00.231.751 I llm_load_print_meta: n_embd           = 2048
0.00.231.751 I llm_load_print_meta: n_layer          = 18
0.00.231.763 I llm_load_print_meta: n_head           = 8
0.00.231.764 I llm_load_print_meta: n_head_kv        = 1
0.00.231.764 I llm_load_print_meta: n_rot            = 256
0.00.231.765 I llm_load_print_meta: n_swa            = 0
0.00.231.765 I llm_load_print_meta: n_embd_head_k    = 256
0.00.231.765 I llm_load_print_meta: n_embd_head_v    = 256
0.00.231.766 I llm_load_print_meta: n_gqa            = 8
0.00.231.767 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.231.768 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.231.769 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.231.770 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.231.771 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.231.771 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.231.771 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.231.772 I llm_load_print_meta: n_ff             = 16384
0.00.231.772 I llm_load_print_meta: n_expert         = 0
0.00.231.773 I llm_load_print_meta: n_expert_used    = 0
0.00.231.773 I llm_load_print_meta: causal attn      = 1
0.00.231.773 I llm_load_print_meta: pooling type     = 0
0.00.231.774 I llm_load_print_meta: rope type        = 2
0.00.231.774 I llm_load_print_meta: rope scaling     = linear
0.00.231.776 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.231.776 I llm_load_print_meta: freq_scale_train = 1
0.00.231.777 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.231.777 I llm_load_print_meta: rope_finetuned   = unknown
0.00.231.777 I llm_load_print_meta: ssm_d_conv       = 0
0.00.231.777 I llm_load_print_meta: ssm_d_inner      = 0
0.00.231.778 I llm_load_print_meta: ssm_d_state      = 0
0.00.231.778 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.231.778 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.231.779 I llm_load_print_meta: model type       = 2B
0.00.231.779 I llm_load_print_meta: model ftype      = Q8_0
0.00.231.780 I llm_load_print_meta: model params     = 2.51 B
0.00.231.780 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.231.781 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.231.781 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.231.782 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.231.782 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.231.782 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.231.782 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.231.783 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.231.783 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.231.783 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.231.784 I llm_load_print_meta: max token length = 93
0.00.231.806 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.326.447 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.331.559 I llama_new_context_with_model: n_ctx      = 8192
0.00.331.565 I llama_new_context_with_model: n_batch    = 2048
0.00.331.565 I llama_new_context_with_model: n_ubatch   = 512
0.00.331.566 I llama_new_context_with_model: flash_attn = 0
0.00.331.568 I llama_new_context_with_model: freq_base  = 10000.0
0.00.331.568 I llama_new_context_with_model: freq_scale = 1
0.00.361.050 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.361.066 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.361.179 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.026 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.362.033 I llama_new_context_with_model: graph nodes  = 601
0.00.362.034 I llama_new_context_with_model: graph splits = 1
0.00.362.036 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.448.617 I main: llama threadpool init, n_threads = 4
0.00.448.628 I 
0.00.448.700 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.448.703 I 
0.00.448.731 I sampler seed: 35211821
0.00.448.740 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.448.743 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.448.743 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.448.744 I 
 seconally. [end of text]


0.00.721.655 I llama_perf_sampler_print:    sampling time =       0.63 ms /     5 runs   (    0.13 ms per token,  7898.89 tokens per second)
0.00.721.657 I llama_perf_context_print:        load time =     446.74 ms
0.00.721.658 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.721.660 I llama_perf_context_print:        eval time =     269.58 ms /     4 runs   (   67.40 ms per token,    14.84 tokens per second)
0.00.721.660 I llama_perf_context_print:       total time =     273.05 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.559 I build: 3820 (bb5f8199) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.761 I main: llama backend init
0.00.001.841 I main: load the model and apply lora adapter, if any
0.00.021.935 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.983 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.994 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.999 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.000 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.005 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.006 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.007 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.007 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.008 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.008 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.012 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.013 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.014 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.014 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.015 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.024 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.950 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.853 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.860 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.860 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.861 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.862 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.863 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.863 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.866 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.868 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.869 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.869 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.870 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.873 I llama_model_loader: - type  f32:   37 tensors
0.00.132.875 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.358 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.219.750 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.220.551 I llm_load_vocab: special tokens cache size = 5
0.00.238.936 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.238.950 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.238.950 I llm_load_print_meta: arch             = gemma
0.00.238.951 I llm_load_print_meta: vocab type       = SPM
0.00.238.952 I llm_load_print_meta: n_vocab          = 256000
0.00.238.952 I llm_load_print_meta: n_merges         = 0
0.00.238.952 I llm_load_print_meta: vocab_only       = 0
0.00.238.953 I llm_load_print_meta: n_ctx_train      = 8192
0.00.238.953 I llm_load_print_meta: n_embd           = 2048
0.00.238.953 I llm_load_print_meta: n_layer          = 18
0.00.238.966 I llm_load_print_meta: n_head           = 8
0.00.238.967 I llm_load_print_meta: n_head_kv        = 1
0.00.238.968 I llm_load_print_meta: n_rot            = 256
0.00.238.968 I llm_load_print_meta: n_swa            = 0
0.00.238.968 I llm_load_print_meta: n_embd_head_k    = 256
0.00.238.969 I llm_load_print_meta: n_embd_head_v    = 256
0.00.238.970 I llm_load_print_meta: n_gqa            = 8
0.00.238.971 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.238.972 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.238.973 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.238.974 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.238.974 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.238.974 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.238.975 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.238.976 I llm_load_print_meta: n_ff             = 16384
0.00.238.976 I llm_load_print_meta: n_expert         = 0
0.00.238.976 I llm_load_print_meta: n_expert_used    = 0
0.00.238.977 I llm_load_print_meta: causal attn      = 1
0.00.238.977 I llm_load_print_meta: pooling type     = 0
0.00.238.977 I llm_load_print_meta: rope type        = 2
0.00.238.978 I llm_load_print_meta: rope scaling     = linear
0.00.238.979 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.238.980 I llm_load_print_meta: freq_scale_train = 1
0.00.238.980 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.238.981 I llm_load_print_meta: rope_finetuned   = unknown
0.00.238.981 I llm_load_print_meta: ssm_d_conv       = 0
0.00.238.981 I llm_load_print_meta: ssm_d_inner      = 0
0.00.238.981 I llm_load_print_meta: ssm_d_state      = 0
0.00.238.982 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.238.982 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.238.982 I llm_load_print_meta: model type       = 2B
0.00.238.983 I llm_load_print_meta: model ftype      = Q8_0
0.00.238.984 I llm_load_print_meta: model params     = 2.51 B
0.00.238.984 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.238.985 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.238.985 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.238.986 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.238.986 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.238.986 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.238.986 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.238.987 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.238.987 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.238.987 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.238.988 I llm_load_print_meta: max token length = 93
0.00.239.007 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.315.514 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.315.521 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.315.522 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.315.523 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.315.523 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.315.524 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.320.681 I llama_new_context_with_model: n_ctx      = 8192
0.00.320.686 I llama_new_context_with_model: n_batch    = 2048
0.00.320.686 I llama_new_context_with_model: n_ubatch   = 512
0.00.320.686 I llama_new_context_with_model: flash_attn = 0
0.00.320.689 I llama_new_context_with_model: freq_base  = 10000.0
0.00.320.690 I llama_new_context_with_model: freq_scale = 1
0.00.349.867 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.349.885 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.349.980 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.350.827 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.350.835 I llama_new_context_with_model: graph nodes  = 601
0.00.350.836 I llama_new_context_with_model: graph splits = 1
0.00.350.837 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.442.921 I main: llama threadpool init, n_threads = 4
0.00.442.932 I 
0.00.443.004 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.443.007 I 
0.00.443.043 I sampler seed: 3497557308
0.00.443.051 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.443.054 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.443.054 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.443.055 I 
 increably, the music streaming behemoth Spotify. But what is the story behind its meteoric rise?

The story of Spotify's ascent begins with the

0.02.699.175 I llama_perf_sampler_print:    sampling time =       4.97 ms /    33 runs   (    0.15 ms per token,  6639.84 tokens per second)
0.02.699.177 I llama_perf_context_print:        load time =     441.06 ms
0.02.699.178 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.699.180 I llama_perf_context_print:        eval time =    2238.05 ms /    32 runs   (   69.94 ms per token,    14.30 tokens per second)
0.02.699.180 I llama_perf_context_print:       total time =    2256.26 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.549 I build: 3820 (bb5f8199) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.772 I main: llama backend init
0.00.001.936 I main: load the model and apply lora adapter, if any
0.00.023.632 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.677 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.684 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.689 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.689 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.693 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.694 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.694 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.695 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.695 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.696 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.700 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.701 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.701 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.702 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.703 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.496 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.132.023 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.138.946 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.138.955 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.138.956 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.138.957 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.138.957 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.138.958 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.138.959 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.138.961 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.138.962 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.138.963 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.138.963 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.138.964 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.138.967 I llama_model_loader: - type  f32:   37 tensors
0.00.138.970 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.623 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.220.716 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.221.496 I llm_load_vocab: special tokens cache size = 5
0.00.241.421 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.241.434 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.241.435 I llm_load_print_meta: arch             = gemma
0.00.241.436 I llm_load_print_meta: vocab type       = SPM
0.00.241.437 I llm_load_print_meta: n_vocab          = 256000
0.00.241.437 I llm_load_print_meta: n_merges         = 0
0.00.241.438 I llm_load_print_meta: vocab_only       = 0
0.00.241.438 I llm_load_print_meta: n_ctx_train      = 8192
0.00.241.438 I llm_load_print_meta: n_embd           = 2048
0.00.241.438 I llm_load_print_meta: n_layer          = 18
0.00.241.450 I llm_load_print_meta: n_head           = 8
0.00.241.451 I llm_load_print_meta: n_head_kv        = 1
0.00.241.452 I llm_load_print_meta: n_rot            = 256
0.00.241.452 I llm_load_print_meta: n_swa            = 0
0.00.241.453 I llm_load_print_meta: n_embd_head_k    = 256
0.00.241.453 I llm_load_print_meta: n_embd_head_v    = 256
0.00.241.454 I llm_load_print_meta: n_gqa            = 8
0.00.241.455 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.241.456 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.241.457 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.241.458 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.241.459 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.241.459 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.241.460 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.241.462 I llm_load_print_meta: n_ff             = 16384
0.00.241.462 I llm_load_print_meta: n_expert         = 0
0.00.241.462 I llm_load_print_meta: n_expert_used    = 0
0.00.241.463 I llm_load_print_meta: causal attn      = 1
0.00.241.464 I llm_load_print_meta: pooling type     = 0
0.00.241.464 I llm_load_print_meta: rope type        = 2
0.00.241.465 I llm_load_print_meta: rope scaling     = linear
0.00.241.466 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.241.467 I llm_load_print_meta: freq_scale_train = 1
0.00.241.468 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.241.468 I llm_load_print_meta: rope_finetuned   = unknown
0.00.241.469 I llm_load_print_meta: ssm_d_conv       = 0
0.00.241.469 I llm_load_print_meta: ssm_d_inner      = 0
0.00.241.469 I llm_load_print_meta: ssm_d_state      = 0
0.00.241.470 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.241.470 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.241.471 I llm_load_print_meta: model type       = 2B
0.00.241.471 I llm_load_print_meta: model ftype      = Q8_0
0.00.241.472 I llm_load_print_meta: model params     = 2.51 B
0.00.241.473 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.241.474 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.241.475 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.241.475 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.241.475 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.241.484 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.241.485 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.241.486 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.241.486 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.241.487 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.241.488 I llm_load_print_meta: max token length = 93
0.00.241.511 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.314.681 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.314.688 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.319.738 I llama_new_context_with_model: n_ctx      = 8192
0.00.319.744 I llama_new_context_with_model: n_batch    = 2048
0.00.319.744 I llama_new_context_with_model: n_ubatch   = 512
0.00.319.745 I llama_new_context_with_model: flash_attn = 0
0.00.319.748 I llama_new_context_with_model: freq_base  = 10000.0
0.00.319.748 I llama_new_context_with_model: freq_scale = 1
0.00.348.204 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.348.218 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.348.310 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.349.201 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.349.207 I llama_new_context_with_model: graph nodes  = 601
0.00.349.207 I llama_new_context_with_model: graph splits = 1
0.00.349.209 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.443.920 I main: llama threadpool init, n_threads = 4
0.00.443.932 I 
0.00.444.003 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.444.006 I 
0.00.444.034 I sampler seed: 3800432327
0.00.444.043 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.444.045 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.444.046 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.444.046 I 
 increably.

I am unable to understand the provided context because the text is not formatted properly. Please provide the context in a formatted manner so that I can

0.02.861.814 I llama_perf_sampler_print:    sampling time =       4.91 ms /    33 runs   (    0.15 ms per token,  6727.83 tokens per second)
0.02.861.816 I llama_perf_context_print:        load time =     441.97 ms
0.02.861.818 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.861.819 I llama_perf_context_print:        eval time =    2399.12 ms /    32 runs   (   74.97 ms per token,    13.34 tokens per second)
0.02.861.820 I llama_perf_context_print:       total time =    2417.90 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.460s
user	0m26.507s
sys	0m9.346s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3820 (bb5f8199)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31994.76 ms
main:    total time = 31994.76 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.542 I build: 3820 (bb5f8199) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.736 I main: llama backend init
0.00.001.837 I main: load the model and apply lora adapter, if any
0.00.022.215 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.263 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.275 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.283 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.287 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.290 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.291 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.292 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.293 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.293 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.294 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.297 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.297 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.298 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.298 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.299 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.925 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.275 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.099 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.105 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.106 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.106 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.107 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.108 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.109 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.111 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.112 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.113 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.113 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.115 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.118 I llama_model_loader: - type  f32:   37 tensors
0.00.133.121 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.122 I llama_model_loader: - type q6_K:   19 tensors
0.00.197.280 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.261 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.210.845 I llm_load_vocab: special tokens cache size = 5
0.00.228.949 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.228.960 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.228.960 I llm_load_print_meta: arch             = gemma
0.00.228.961 I llm_load_print_meta: vocab type       = SPM
0.00.228.962 I llm_load_print_meta: n_vocab          = 256000
0.00.228.962 I llm_load_print_meta: n_merges         = 0
0.00.228.962 I llm_load_print_meta: vocab_only       = 0
0.00.228.963 I llm_load_print_meta: n_ctx_train      = 8192
0.00.228.963 I llm_load_print_meta: n_embd           = 2048
0.00.228.963 I llm_load_print_meta: n_layer          = 18
0.00.228.974 I llm_load_print_meta: n_head           = 8
0.00.228.975 I llm_load_print_meta: n_head_kv        = 1
0.00.228.975 I llm_load_print_meta: n_rot            = 256
0.00.228.975 I llm_load_print_meta: n_swa            = 0
0.00.228.976 I llm_load_print_meta: n_embd_head_k    = 256
0.00.228.976 I llm_load_print_meta: n_embd_head_v    = 256
0.00.228.977 I llm_load_print_meta: n_gqa            = 8
0.00.228.978 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.228.979 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.228.979 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.228.981 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.228.981 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.228.982 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.228.982 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.228.983 I llm_load_print_meta: n_ff             = 16384
0.00.228.983 I llm_load_print_meta: n_expert         = 0
0.00.228.983 I llm_load_print_meta: n_expert_used    = 0
0.00.228.984 I llm_load_print_meta: causal attn      = 1
0.00.228.984 I llm_load_print_meta: pooling type     = 0
0.00.228.984 I llm_load_print_meta: rope type        = 2
0.00.228.985 I llm_load_print_meta: rope scaling     = linear
0.00.228.986 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.228.987 I llm_load_print_meta: freq_scale_train = 1
0.00.228.987 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.228.988 I llm_load_print_meta: rope_finetuned   = unknown
0.00.228.988 I llm_load_print_meta: ssm_d_conv       = 0
0.00.228.988 I llm_load_print_meta: ssm_d_inner      = 0
0.00.228.988 I llm_load_print_meta: ssm_d_state      = 0
0.00.228.989 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.228.989 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.228.989 I llm_load_print_meta: model type       = 2B
0.00.228.990 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.228.991 I llm_load_print_meta: model params     = 2.51 B
0.00.228.991 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.228.991 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.228.992 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.228.992 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.228.993 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.228.993 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.228.993 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.228.994 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.228.994 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.228.994 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.228.995 I llm_load_print_meta: max token length = 93
0.00.229.009 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.287.846 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.287.851 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.287.852 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.287.852 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.287.853 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.287.853 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.293.008 I llama_new_context_with_model: n_ctx      = 8192
0.00.293.015 I llama_new_context_with_model: n_batch    = 2048
0.00.293.015 I llama_new_context_with_model: n_ubatch   = 512
0.00.293.016 I llama_new_context_with_model: flash_attn = 0
0.00.293.018 I llama_new_context_with_model: freq_base  = 10000.0
0.00.293.019 I llama_new_context_with_model: freq_scale = 1
0.00.321.660 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.321.674 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.321.767 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.322.627 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.322.636 I llama_new_context_with_model: graph nodes  = 601
0.00.322.636 I llama_new_context_with_model: graph splits = 1
0.00.322.638 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.412.056 I main: llama threadpool init, n_threads = 4
0.00.412.069 I 
0.00.412.142 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.412.145 I 
0.00.412.182 I sampler seed: 3241500234
0.00.412.190 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.412.193 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.412.194 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.412.195 I 
 increasities will have no lasting impact on the company.

**Answer:**
The given statement indicates a lack of consideration for the potential long-term effects of

0.02.004.487 I llama_perf_sampler_print:    sampling time =       5.28 ms /    33 runs   (    0.16 ms per token,  6253.55 tokens per second)
0.02.004.490 I llama_perf_context_print:        load time =     410.20 ms
0.02.004.491 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.004.492 I llama_perf_context_print:        eval time =    1573.88 ms /    32 runs   (   49.18 ms per token,    20.33 tokens per second)
0.02.004.493 I llama_perf_context_print:       total time =    1592.44 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3820 (bb5f8199)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32077.19 ms
main:    total time = 32077.19 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.553 I build: 3820 (bb5f8199) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.747 I main: llama backend init
0.00.001.878 I main: load the model and apply lora adapter, if any
0.00.022.126 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.136 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.142 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.143 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.147 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.148 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.149 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.149 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.150 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.150 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.153 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.154 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.155 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.155 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.156 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.832 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.892 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.730 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.736 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.737 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.738 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.739 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.740 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.742 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.745 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.746 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.749 I llama_model_loader: - type  f32:   37 tensors
0.00.132.753 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.753 I llama_model_loader: - type q6_K:   19 tensors
0.00.200.268 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.614 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.329 I llm_load_vocab: special tokens cache size = 5
0.00.232.648 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.664 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.664 I llm_load_print_meta: arch             = gemma
0.00.232.665 I llm_load_print_meta: vocab type       = SPM
0.00.232.666 I llm_load_print_meta: n_vocab          = 256000
0.00.232.666 I llm_load_print_meta: n_merges         = 0
0.00.232.666 I llm_load_print_meta: vocab_only       = 0
0.00.232.667 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.667 I llm_load_print_meta: n_embd           = 2048
0.00.232.667 I llm_load_print_meta: n_layer          = 18
0.00.232.681 I llm_load_print_meta: n_head           = 8
0.00.232.681 I llm_load_print_meta: n_head_kv        = 1
0.00.232.682 I llm_load_print_meta: n_rot            = 256
0.00.232.682 I llm_load_print_meta: n_swa            = 0
0.00.232.682 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.683 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.684 I llm_load_print_meta: n_gqa            = 8
0.00.232.685 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.686 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.686 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.688 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.688 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.688 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.688 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.689 I llm_load_print_meta: n_ff             = 16384
0.00.232.690 I llm_load_print_meta: n_expert         = 0
0.00.232.690 I llm_load_print_meta: n_expert_used    = 0
0.00.232.690 I llm_load_print_meta: causal attn      = 1
0.00.232.691 I llm_load_print_meta: pooling type     = 0
0.00.232.691 I llm_load_print_meta: rope type        = 2
0.00.232.692 I llm_load_print_meta: rope scaling     = linear
0.00.232.693 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.693 I llm_load_print_meta: freq_scale_train = 1
0.00.232.694 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.694 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.694 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.694 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.695 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.695 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.695 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.696 I llm_load_print_meta: model type       = 2B
0.00.232.696 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.232.697 I llm_load_print_meta: model params     = 2.51 B
0.00.232.697 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.232.698 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.698 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.699 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.699 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.699 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.700 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.700 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.700 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.700 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.701 I llm_load_print_meta: max token length = 93
0.00.232.724 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.289.552 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.294.567 I llama_new_context_with_model: n_ctx      = 8192
0.00.294.572 I llama_new_context_with_model: n_batch    = 2048
0.00.294.573 I llama_new_context_with_model: n_ubatch   = 512
0.00.294.573 I llama_new_context_with_model: flash_attn = 0
0.00.294.575 I llama_new_context_with_model: freq_base  = 10000.0
0.00.294.577 I llama_new_context_with_model: freq_scale = 1
0.00.323.260 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.323.275 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.323.365 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.324.219 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.324.227 I llama_new_context_with_model: graph nodes  = 601
0.00.324.227 I llama_new_context_with_model: graph splits = 1
0.00.324.230 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.404.126 I main: llama threadpool init, n_threads = 4
0.00.404.138 I 
0.00.404.211 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.404.214 I 
0.00.404.243 I sampler seed: 2744859615
0.00.404.251 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.404.256 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.404.257 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.404.257 I 
 encompassing the functions and capabilities of the tool.

**Tool Name:** Automated Data Extraction and Reporting Tool

**Purpose:**
The purpose of this tool is

0.02.004.488 I llama_perf_sampler_print:    sampling time =       5.29 ms /    33 runs   (    0.16 ms per token,  6241.72 tokens per second)
0.02.004.491 I llama_perf_context_print:        load time =     402.23 ms
0.02.004.492 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.004.493 I llama_perf_context_print:        eval time =    1581.72 ms /    32 runs   (   49.43 ms per token,    20.23 tokens per second)
0.02.004.494 I llama_perf_context_print:       total time =    1600.37 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.108s
user	8m14.806s
sys	0m6.775s
