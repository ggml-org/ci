+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.573 I build: 3878 (d5ed2b92) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.001.855 I main: load the model and apply lora adapter, if any
0.00.022.312 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.361 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.368 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.374 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.375 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.378 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.379 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.380 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.381 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.382 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.382 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.387 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.388 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.389 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.389 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.389 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.103 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.435 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.333 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.339 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.340 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.341 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.341 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.342 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.343 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.346 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.346 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.347 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.348 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.349 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.353 I llama_model_loader: - type  f32:   37 tensors
0.00.133.356 I llama_model_loader: - type q8_0:  127 tensors
0.00.193.593 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.150 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.210.956 I llm_load_vocab: special tokens cache size = 5
0.00.232.222 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.240 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.240 I llm_load_print_meta: arch             = gemma
0.00.232.241 I llm_load_print_meta: vocab type       = SPM
0.00.232.242 I llm_load_print_meta: n_vocab          = 256000
0.00.232.242 I llm_load_print_meta: n_merges         = 0
0.00.232.243 I llm_load_print_meta: vocab_only       = 0
0.00.232.243 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.244 I llm_load_print_meta: n_embd           = 2048
0.00.232.244 I llm_load_print_meta: n_layer          = 18
0.00.232.257 I llm_load_print_meta: n_head           = 8
0.00.232.258 I llm_load_print_meta: n_head_kv        = 1
0.00.232.258 I llm_load_print_meta: n_rot            = 256
0.00.232.259 I llm_load_print_meta: n_swa            = 0
0.00.232.259 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.259 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.260 I llm_load_print_meta: n_gqa            = 8
0.00.232.261 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.262 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.263 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.265 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.265 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.265 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.267 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.268 I llm_load_print_meta: n_ff             = 16384
0.00.232.268 I llm_load_print_meta: n_expert         = 0
0.00.232.268 I llm_load_print_meta: n_expert_used    = 0
0.00.232.268 I llm_load_print_meta: causal attn      = 1
0.00.232.269 I llm_load_print_meta: pooling type     = 0
0.00.232.269 I llm_load_print_meta: rope type        = 2
0.00.232.269 I llm_load_print_meta: rope scaling     = linear
0.00.232.271 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.272 I llm_load_print_meta: freq_scale_train = 1
0.00.232.272 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.272 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.273 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.273 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.273 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.273 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.274 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.275 I llm_load_print_meta: model type       = 2B
0.00.232.275 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.276 I llm_load_print_meta: model params     = 2.51 B
0.00.232.277 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.277 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.278 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.278 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.278 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.278 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.279 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.279 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.280 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.280 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.281 I llm_load_print_meta: max token length = 93
0.00.232.308 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.332.771 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.332.780 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.332.781 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.332.782 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.332.782 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.332.783 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.337.894 I llama_new_context_with_model: n_ctx      = 8192
0.00.337.900 I llama_new_context_with_model: n_batch    = 2048
0.00.337.901 I llama_new_context_with_model: n_ubatch   = 512
0.00.337.901 I llama_new_context_with_model: flash_attn = 0
0.00.337.904 I llama_new_context_with_model: freq_base  = 10000.0
0.00.337.905 I llama_new_context_with_model: freq_scale = 1
0.00.367.491 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.367.508 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.367.610 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.368.558 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.368.565 I llama_new_context_with_model: graph nodes  = 601
0.00.368.566 I llama_new_context_with_model: graph splits = 1
0.00.368.568 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.462.145 I main: llama threadpool init, n_threads = 4
0.00.462.158 I 
0.00.462.237 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.462.240 I 
0.00.462.278 I sampler seed: 823479416
0.00.462.287 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.462.290 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.462.291 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.462.291 I 
 increamically. [end of text]


0.00.754.088 I llama_perf_sampler_print:    sampling time =       0.73 ms /     5 runs   (    0.15 ms per token,  6802.72 tokens per second)
0.00.754.091 I llama_perf_context_print:        load time =     460.22 ms
0.00.754.092 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.754.094 I llama_perf_context_print:        eval time =     288.40 ms /     4 runs   (   72.10 ms per token,    13.87 tokens per second)
0.00.754.095 I llama_perf_context_print:       total time =     291.95 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.611 I build: 3878 (d5ed2b92) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.813 I main: llama backend init
0.00.001.901 I main: load the model and apply lora adapter, if any
0.00.022.179 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.192 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.200 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.201 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.205 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.206 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.206 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.207 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.208 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.209 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.213 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.214 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.215 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.216 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.216 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.434 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.961 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.782 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.788 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.789 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.789 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.790 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.791 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.792 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.794 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.795 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.796 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.797 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.798 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.801 I llama_model_loader: - type  f32:   37 tensors
0.00.132.805 I llama_model_loader: - type q8_0:  127 tensors
0.00.189.301 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.203.300 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.204.100 I llm_load_vocab: special tokens cache size = 5
0.00.225.451 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.225.465 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.225.465 I llm_load_print_meta: arch             = gemma
0.00.225.466 I llm_load_print_meta: vocab type       = SPM
0.00.225.467 I llm_load_print_meta: n_vocab          = 256000
0.00.225.467 I llm_load_print_meta: n_merges         = 0
0.00.225.468 I llm_load_print_meta: vocab_only       = 0
0.00.225.468 I llm_load_print_meta: n_ctx_train      = 8192
0.00.225.468 I llm_load_print_meta: n_embd           = 2048
0.00.225.469 I llm_load_print_meta: n_layer          = 18
0.00.225.480 I llm_load_print_meta: n_head           = 8
0.00.225.481 I llm_load_print_meta: n_head_kv        = 1
0.00.225.482 I llm_load_print_meta: n_rot            = 256
0.00.225.482 I llm_load_print_meta: n_swa            = 0
0.00.225.482 I llm_load_print_meta: n_embd_head_k    = 256
0.00.225.483 I llm_load_print_meta: n_embd_head_v    = 256
0.00.225.484 I llm_load_print_meta: n_gqa            = 8
0.00.225.484 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.225.485 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.225.486 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.225.488 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.225.488 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.225.488 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.225.489 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.225.490 I llm_load_print_meta: n_ff             = 16384
0.00.225.490 I llm_load_print_meta: n_expert         = 0
0.00.225.490 I llm_load_print_meta: n_expert_used    = 0
0.00.225.490 I llm_load_print_meta: causal attn      = 1
0.00.225.491 I llm_load_print_meta: pooling type     = 0
0.00.225.491 I llm_load_print_meta: rope type        = 2
0.00.225.491 I llm_load_print_meta: rope scaling     = linear
0.00.225.493 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.225.493 I llm_load_print_meta: freq_scale_train = 1
0.00.225.493 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.225.494 I llm_load_print_meta: rope_finetuned   = unknown
0.00.225.494 I llm_load_print_meta: ssm_d_conv       = 0
0.00.225.494 I llm_load_print_meta: ssm_d_inner      = 0
0.00.225.495 I llm_load_print_meta: ssm_d_state      = 0
0.00.225.495 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.225.495 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.225.496 I llm_load_print_meta: model type       = 2B
0.00.225.496 I llm_load_print_meta: model ftype      = Q8_0
0.00.225.497 I llm_load_print_meta: model params     = 2.51 B
0.00.225.498 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.225.498 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.225.499 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.225.499 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.225.499 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.225.499 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.225.500 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.225.500 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.225.500 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.225.501 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.225.501 I llm_load_print_meta: max token length = 93
0.00.225.519 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.320.961 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.326.132 I llama_new_context_with_model: n_ctx      = 8192
0.00.326.139 I llama_new_context_with_model: n_batch    = 2048
0.00.326.140 I llama_new_context_with_model: n_ubatch   = 512
0.00.326.140 I llama_new_context_with_model: flash_attn = 0
0.00.326.143 I llama_new_context_with_model: freq_base  = 10000.0
0.00.326.144 I llama_new_context_with_model: freq_scale = 1
0.00.355.768 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.355.784 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.355.883 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.356.806 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.356.812 I llama_new_context_with_model: graph nodes  = 601
0.00.356.812 I llama_new_context_with_model: graph splits = 1
0.00.356.814 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.444.955 I main: llama threadpool init, n_threads = 4
0.00.444.967 I 
0.00.445.043 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.445.046 I 
0.00.445.083 I sampler seed: 1903117573
0.00.445.092 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.445.095 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.445.095 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.445.096 I 
 increably!

I cannot find the word "incredibly" in the provided text. Therefore, I am unable to determine whether the sentence is grammatically correct

0.02.688.962 I llama_perf_sampler_print:    sampling time =       5.38 ms /    33 runs   (    0.16 ms per token,  6136.11 tokens per second)
0.02.688.964 I llama_perf_context_print:        load time =     442.98 ms
0.02.688.966 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.688.967 I llama_perf_context_print:        eval time =    2225.14 ms /    32 runs   (   69.54 ms per token,    14.38 tokens per second)
0.02.688.968 I llama_perf_context_print:       total time =    2244.01 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.567 I build: 3878 (d5ed2b92) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.787 I main: llama backend init
0.00.001.932 I main: load the model and apply lora adapter, if any
0.00.022.194 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.245 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.252 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.258 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.258 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.263 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.264 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.268 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.268 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.269 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.269 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.275 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.276 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.276 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.276 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.277 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.703 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.396 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.272 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.281 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.282 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.283 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.284 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.285 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.287 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.291 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.292 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.293 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.293 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.295 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.299 I llama_model_loader: - type  f32:   37 tensors
0.00.133.302 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.382 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.230.031 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.230.827 I llm_load_vocab: special tokens cache size = 5
0.00.252.257 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.252.273 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.252.273 I llm_load_print_meta: arch             = gemma
0.00.252.274 I llm_load_print_meta: vocab type       = SPM
0.00.252.275 I llm_load_print_meta: n_vocab          = 256000
0.00.252.275 I llm_load_print_meta: n_merges         = 0
0.00.252.276 I llm_load_print_meta: vocab_only       = 0
0.00.252.276 I llm_load_print_meta: n_ctx_train      = 8192
0.00.252.276 I llm_load_print_meta: n_embd           = 2048
0.00.252.277 I llm_load_print_meta: n_layer          = 18
0.00.252.289 I llm_load_print_meta: n_head           = 8
0.00.252.290 I llm_load_print_meta: n_head_kv        = 1
0.00.252.291 I llm_load_print_meta: n_rot            = 256
0.00.252.291 I llm_load_print_meta: n_swa            = 0
0.00.252.292 I llm_load_print_meta: n_embd_head_k    = 256
0.00.252.293 I llm_load_print_meta: n_embd_head_v    = 256
0.00.252.304 I llm_load_print_meta: n_gqa            = 8
0.00.252.306 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.252.307 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.252.308 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.252.309 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.252.309 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.252.310 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.252.310 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.252.311 I llm_load_print_meta: n_ff             = 16384
0.00.252.312 I llm_load_print_meta: n_expert         = 0
0.00.252.312 I llm_load_print_meta: n_expert_used    = 0
0.00.252.312 I llm_load_print_meta: causal attn      = 1
0.00.252.313 I llm_load_print_meta: pooling type     = 0
0.00.252.313 I llm_load_print_meta: rope type        = 2
0.00.252.313 I llm_load_print_meta: rope scaling     = linear
0.00.252.314 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.252.315 I llm_load_print_meta: freq_scale_train = 1
0.00.252.315 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.252.316 I llm_load_print_meta: rope_finetuned   = unknown
0.00.252.316 I llm_load_print_meta: ssm_d_conv       = 0
0.00.252.316 I llm_load_print_meta: ssm_d_inner      = 0
0.00.252.316 I llm_load_print_meta: ssm_d_state      = 0
0.00.252.317 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.252.317 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.252.318 I llm_load_print_meta: model type       = 2B
0.00.252.318 I llm_load_print_meta: model ftype      = Q8_0
0.00.252.319 I llm_load_print_meta: model params     = 2.51 B
0.00.252.320 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.252.322 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.252.322 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.252.322 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.252.323 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.252.323 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.252.324 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.252.325 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.252.325 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.252.326 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.252.327 I llm_load_print_meta: max token length = 93
0.00.252.354 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.328.708 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.328.715 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.328.716 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.328.716 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.328.717 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.328.717 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.333.931 I llama_new_context_with_model: n_ctx      = 8192
0.00.333.936 I llama_new_context_with_model: n_batch    = 2048
0.00.333.937 I llama_new_context_with_model: n_ubatch   = 512
0.00.333.937 I llama_new_context_with_model: flash_attn = 0
0.00.333.940 I llama_new_context_with_model: freq_base  = 10000.0
0.00.333.941 I llama_new_context_with_model: freq_scale = 1
0.00.364.505 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.364.520 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.364.613 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.451 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.365.459 I llama_new_context_with_model: graph nodes  = 601
0.00.365.459 I llama_new_context_with_model: graph splits = 1
0.00.365.461 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.458.746 I main: llama threadpool init, n_threads = 4
0.00.458.759 I 
0.00.458.836 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.458.840 I 
0.00.458.877 I sampler seed: 723024272
0.00.458.889 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.458.892 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.458.892 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.458.893 I 
 increasities, a vibrant community of young adults with a penchant for mischief and a desire to explore the world. [end of text]


0.02.150.780 I llama_perf_sampler_print:    sampling time =       3.95 ms /    24 runs   (    0.16 ms per token,  6080.57 tokens per second)
0.02.150.782 I llama_perf_context_print:        load time =     456.74 ms
0.02.150.783 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.150.784 I llama_perf_context_print:        eval time =    1677.53 ms /    23 runs   (   72.94 ms per token,    13.71 tokens per second)
0.02.150.785 I llama_perf_context_print:       total time =    1692.04 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.564 I build: 3878 (d5ed2b92) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.778 I main: llama backend init
0.00.001.903 I main: load the model and apply lora adapter, if any
0.00.022.172 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.231 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.243 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.257 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.259 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.266 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.266 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.267 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.268 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.269 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.271 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.277 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.278 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.279 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.280 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.281 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.568 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.545 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.403 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.409 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.410 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.410 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.411 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.412 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.413 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.416 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.417 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.417 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.418 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.420 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.424 I llama_model_loader: - type  f32:   37 tensors
0.00.132.427 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.440 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.216.992 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.217.783 I llm_load_vocab: special tokens cache size = 5
0.00.239.260 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.239.278 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.239.279 I llm_load_print_meta: arch             = gemma
0.00.239.279 I llm_load_print_meta: vocab type       = SPM
0.00.239.280 I llm_load_print_meta: n_vocab          = 256000
0.00.239.280 I llm_load_print_meta: n_merges         = 0
0.00.239.281 I llm_load_print_meta: vocab_only       = 0
0.00.239.281 I llm_load_print_meta: n_ctx_train      = 8192
0.00.239.281 I llm_load_print_meta: n_embd           = 2048
0.00.239.282 I llm_load_print_meta: n_layer          = 18
0.00.239.295 I llm_load_print_meta: n_head           = 8
0.00.239.296 I llm_load_print_meta: n_head_kv        = 1
0.00.239.297 I llm_load_print_meta: n_rot            = 256
0.00.239.297 I llm_load_print_meta: n_swa            = 0
0.00.239.297 I llm_load_print_meta: n_embd_head_k    = 256
0.00.239.298 I llm_load_print_meta: n_embd_head_v    = 256
0.00.239.299 I llm_load_print_meta: n_gqa            = 8
0.00.239.300 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.239.301 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.239.301 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.239.303 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.239.303 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.239.304 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.239.304 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.239.305 I llm_load_print_meta: n_ff             = 16384
0.00.239.305 I llm_load_print_meta: n_expert         = 0
0.00.239.306 I llm_load_print_meta: n_expert_used    = 0
0.00.239.306 I llm_load_print_meta: causal attn      = 1
0.00.239.307 I llm_load_print_meta: pooling type     = 0
0.00.239.307 I llm_load_print_meta: rope type        = 2
0.00.239.307 I llm_load_print_meta: rope scaling     = linear
0.00.239.309 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.239.309 I llm_load_print_meta: freq_scale_train = 1
0.00.239.309 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.239.310 I llm_load_print_meta: rope_finetuned   = unknown
0.00.239.310 I llm_load_print_meta: ssm_d_conv       = 0
0.00.239.310 I llm_load_print_meta: ssm_d_inner      = 0
0.00.239.311 I llm_load_print_meta: ssm_d_state      = 0
0.00.239.311 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.239.311 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.239.312 I llm_load_print_meta: model type       = 2B
0.00.239.313 I llm_load_print_meta: model ftype      = Q8_0
0.00.239.314 I llm_load_print_meta: model params     = 2.51 B
0.00.239.314 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.239.315 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.239.315 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.239.315 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.239.316 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.239.316 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.239.316 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.239.317 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.239.317 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.239.318 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.239.318 I llm_load_print_meta: max token length = 93
0.00.239.352 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.310.158 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.310.165 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.315.350 I llama_new_context_with_model: n_ctx      = 8192
0.00.315.357 I llama_new_context_with_model: n_batch    = 2048
0.00.315.358 I llama_new_context_with_model: n_ubatch   = 512
0.00.315.358 I llama_new_context_with_model: flash_attn = 0
0.00.315.362 I llama_new_context_with_model: freq_base  = 10000.0
0.00.315.362 I llama_new_context_with_model: freq_scale = 1
0.00.344.857 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.344.871 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.344.985 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.345.893 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.345.902 I llama_new_context_with_model: graph nodes  = 601
0.00.345.903 I llama_new_context_with_model: graph splits = 1
0.00.345.905 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.441.768 I main: llama threadpool init, n_threads = 4
0.00.441.780 I 
0.00.441.866 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.441.870 I 
0.00.441.913 I sampler seed: 491819612
0.00.441.922 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.925 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.441.925 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.926 I 
 increasels.

I'm not sure what you're trying to say here. Could you please rephrase your question? [end of text]


0.02.565.643 I llama_perf_sampler_print:    sampling time =       4.85 ms /    28 runs   (    0.17 ms per token,  5777.96 tokens per second)
0.02.565.645 I llama_perf_context_print:        load time =     439.79 ms
0.02.565.646 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.565.647 I llama_perf_context_print:        eval time =    2106.53 ms /    27 runs   (   78.02 ms per token,    12.82 tokens per second)
0.02.565.648 I llama_perf_context_print:       total time =    2123.88 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.990s
user	0m28.223s
sys	0m9.694s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3878 (d5ed2b92)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32061.19 ms
main:    total time = 32061.19 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.577 I build: 3878 (d5ed2b92) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.786 I main: llama backend init
0.00.001.918 I main: load the model and apply lora adapter, if any
0.00.022.106 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.154 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.162 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.168 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.168 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.173 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.173 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.174 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.174 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.175 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.177 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.182 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.182 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.183 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.183 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.184 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.715 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.393 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.238 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.244 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.245 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.245 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.246 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.247 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.248 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.251 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.251 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.252 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.252 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.255 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.259 I llama_model_loader: - type  f32:   37 tensors
0.00.133.262 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.262 I llama_model_loader: - type q6_K:   19 tensors
0.00.194.844 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.696 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.493 I llm_load_vocab: special tokens cache size = 5
0.00.234.568 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.234.582 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.234.583 I llm_load_print_meta: arch             = gemma
0.00.234.584 I llm_load_print_meta: vocab type       = SPM
0.00.234.584 I llm_load_print_meta: n_vocab          = 256000
0.00.234.585 I llm_load_print_meta: n_merges         = 0
0.00.234.585 I llm_load_print_meta: vocab_only       = 0
0.00.234.586 I llm_load_print_meta: n_ctx_train      = 8192
0.00.234.586 I llm_load_print_meta: n_embd           = 2048
0.00.234.586 I llm_load_print_meta: n_layer          = 18
0.00.234.598 I llm_load_print_meta: n_head           = 8
0.00.234.599 I llm_load_print_meta: n_head_kv        = 1
0.00.234.599 I llm_load_print_meta: n_rot            = 256
0.00.234.600 I llm_load_print_meta: n_swa            = 0
0.00.234.600 I llm_load_print_meta: n_embd_head_k    = 256
0.00.234.600 I llm_load_print_meta: n_embd_head_v    = 256
0.00.234.601 I llm_load_print_meta: n_gqa            = 8
0.00.234.602 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.234.603 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.234.604 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.234.605 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.234.606 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.234.606 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.234.606 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.234.607 I llm_load_print_meta: n_ff             = 16384
0.00.234.608 I llm_load_print_meta: n_expert         = 0
0.00.234.608 I llm_load_print_meta: n_expert_used    = 0
0.00.234.608 I llm_load_print_meta: causal attn      = 1
0.00.234.608 I llm_load_print_meta: pooling type     = 0
0.00.234.609 I llm_load_print_meta: rope type        = 2
0.00.234.609 I llm_load_print_meta: rope scaling     = linear
0.00.234.611 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.234.612 I llm_load_print_meta: freq_scale_train = 1
0.00.234.612 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.234.612 I llm_load_print_meta: rope_finetuned   = unknown
0.00.234.613 I llm_load_print_meta: ssm_d_conv       = 0
0.00.234.613 I llm_load_print_meta: ssm_d_inner      = 0
0.00.234.613 I llm_load_print_meta: ssm_d_state      = 0
0.00.234.613 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.234.614 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.234.614 I llm_load_print_meta: model type       = 2B
0.00.234.615 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.234.616 I llm_load_print_meta: model params     = 2.51 B
0.00.234.616 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.234.617 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.234.617 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.234.617 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.234.618 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.234.618 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.234.619 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.234.619 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.234.620 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.234.620 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.234.620 I llm_load_print_meta: max token length = 93
0.00.234.641 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.292.618 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.292.625 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.292.626 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.292.627 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.292.627 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.292.628 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.297.723 I llama_new_context_with_model: n_ctx      = 8192
0.00.297.729 I llama_new_context_with_model: n_batch    = 2048
0.00.297.729 I llama_new_context_with_model: n_ubatch   = 512
0.00.297.730 I llama_new_context_with_model: flash_attn = 0
0.00.297.733 I llama_new_context_with_model: freq_base  = 10000.0
0.00.297.734 I llama_new_context_with_model: freq_scale = 1
0.00.327.493 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.327.508 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.327.604 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.328.493 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.328.501 I llama_new_context_with_model: graph nodes  = 601
0.00.328.502 I llama_new_context_with_model: graph splits = 1
0.00.328.504 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.412.102 I main: llama threadpool init, n_threads = 4
0.00.412.115 I 
0.00.412.188 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.412.192 I 
0.00.412.228 I sampler seed: 1844643749
0.00.412.236 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.412.239 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.412.240 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.412.240 I 
 encompessing the personality trait of conscientiousness.

**Conscientiousness** is a personality trait characterized by a high level of order, planning, and organization in

0.02.109.377 I llama_perf_sampler_print:    sampling time =       5.46 ms /    33 runs   (    0.17 ms per token,  6038.43 tokens per second)
0.02.109.380 I llama_perf_context_print:        load time =     410.11 ms
0.02.109.381 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.109.384 I llama_perf_context_print:        eval time =    1677.49 ms /    32 runs   (   52.42 ms per token,    19.08 tokens per second)
0.02.109.385 I llama_perf_context_print:       total time =    1697.28 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3878 (d5ed2b92)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32108.69 ms
main:    total time = 32108.69 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.574 I build: 3878 (d5ed2b92) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.775 I main: llama backend init
0.00.001.881 I main: load the model and apply lora adapter, if any
0.00.022.065 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.079 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.087 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.087 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.092 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.093 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.093 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.094 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.094 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.095 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.099 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.100 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.100 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.101 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.101 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.447 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.027 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.161 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.167 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.168 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.169 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.169 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.170 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.171 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.173 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.174 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.178 I llama_model_loader: - type  f32:   37 tensors
0.00.134.180 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.181 I llama_model_loader: - type q6_K:   19 tensors
0.00.196.756 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.160 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.212.923 I llm_load_vocab: special tokens cache size = 5
0.00.234.077 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.234.092 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.234.092 I llm_load_print_meta: arch             = gemma
0.00.234.093 I llm_load_print_meta: vocab type       = SPM
0.00.234.093 I llm_load_print_meta: n_vocab          = 256000
0.00.234.094 I llm_load_print_meta: n_merges         = 0
0.00.234.094 I llm_load_print_meta: vocab_only       = 0
0.00.234.094 I llm_load_print_meta: n_ctx_train      = 8192
0.00.234.094 I llm_load_print_meta: n_embd           = 2048
0.00.234.095 I llm_load_print_meta: n_layer          = 18
0.00.234.108 I llm_load_print_meta: n_head           = 8
0.00.234.125 I llm_load_print_meta: n_head_kv        = 1
0.00.234.126 I llm_load_print_meta: n_rot            = 256
0.00.234.126 I llm_load_print_meta: n_swa            = 0
0.00.234.127 I llm_load_print_meta: n_embd_head_k    = 256
0.00.234.127 I llm_load_print_meta: n_embd_head_v    = 256
0.00.234.129 I llm_load_print_meta: n_gqa            = 8
0.00.234.130 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.234.131 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.234.132 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.234.133 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.234.134 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.234.135 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.234.135 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.234.136 I llm_load_print_meta: n_ff             = 16384
0.00.234.136 I llm_load_print_meta: n_expert         = 0
0.00.234.136 I llm_load_print_meta: n_expert_used    = 0
0.00.234.137 I llm_load_print_meta: causal attn      = 1
0.00.234.137 I llm_load_print_meta: pooling type     = 0
0.00.234.138 I llm_load_print_meta: rope type        = 2
0.00.234.142 I llm_load_print_meta: rope scaling     = linear
0.00.234.144 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.234.144 I llm_load_print_meta: freq_scale_train = 1
0.00.234.145 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.234.145 I llm_load_print_meta: rope_finetuned   = unknown
0.00.234.145 I llm_load_print_meta: ssm_d_conv       = 0
0.00.234.146 I llm_load_print_meta: ssm_d_inner      = 0
0.00.234.146 I llm_load_print_meta: ssm_d_state      = 0
0.00.234.146 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.234.147 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.234.147 I llm_load_print_meta: model type       = 2B
0.00.234.148 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.234.149 I llm_load_print_meta: model params     = 2.51 B
0.00.234.149 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.234.150 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.234.151 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.234.151 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.234.152 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.234.152 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.234.152 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.234.153 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.234.153 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.234.154 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.234.155 I llm_load_print_meta: max token length = 93
0.00.234.176 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.290.942 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.295.896 I llama_new_context_with_model: n_ctx      = 8192
0.00.295.903 I llama_new_context_with_model: n_batch    = 2048
0.00.295.904 I llama_new_context_with_model: n_ubatch   = 512
0.00.295.904 I llama_new_context_with_model: flash_attn = 0
0.00.295.907 I llama_new_context_with_model: freq_base  = 10000.0
0.00.295.908 I llama_new_context_with_model: freq_scale = 1
0.00.327.428 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.327.444 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.327.537 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.328.436 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.328.442 I llama_new_context_with_model: graph nodes  = 601
0.00.328.443 I llama_new_context_with_model: graph splits = 1
0.00.328.444 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.415.418 I main: llama threadpool init, n_threads = 4
0.00.415.430 I 
0.00.415.508 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.415.512 I 
0.00.415.547 I sampler seed: 1013996062
0.00.415.557 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.415.560 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.415.561 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.415.561 I 
 seconded to the other side of the river. [end of text]


0.01.007.504 I llama_perf_sampler_print:    sampling time =       2.32 ms /    12 runs   (    0.19 ms per token,  5163.51 tokens per second)
0.01.007.506 I llama_perf_context_print:        load time =     413.46 ms
0.01.007.507 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.007.509 I llama_perf_context_print:        eval time =     584.05 ms /    11 runs   (   53.10 ms per token,    18.83 tokens per second)
0.01.007.509 I llama_perf_context_print:       total time =     592.09 ms /    12 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.468s
user	8m10.971s
sys	0m7.155s
