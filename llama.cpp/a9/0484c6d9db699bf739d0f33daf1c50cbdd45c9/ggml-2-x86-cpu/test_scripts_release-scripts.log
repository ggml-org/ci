+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.591 I build: 3855 (a90484c6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.790 I main: llama backend init
0.00.001.905 I main: load the model and apply lora adapter, if any
0.00.022.269 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.318 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.330 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.338 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.341 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.346 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.347 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.347 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.348 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.349 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.349 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.354 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.354 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.355 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.355 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.356 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.234 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.312 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.217 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.223 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.224 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.225 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.225 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.226 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.227 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.230 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.230 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.232 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.233 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.234 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.237 I llama_model_loader: - type  f32:   37 tensors
0.00.133.240 I llama_model_loader: - type q8_0:  127 tensors
0.00.190.751 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.205.154 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.205.887 I llm_load_vocab: special tokens cache size = 5
0.00.226.956 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.226.969 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.226.970 I llm_load_print_meta: arch             = gemma
0.00.226.971 I llm_load_print_meta: vocab type       = SPM
0.00.226.971 I llm_load_print_meta: n_vocab          = 256000
0.00.226.972 I llm_load_print_meta: n_merges         = 0
0.00.226.972 I llm_load_print_meta: vocab_only       = 0
0.00.226.973 I llm_load_print_meta: n_ctx_train      = 8192
0.00.226.973 I llm_load_print_meta: n_embd           = 2048
0.00.226.973 I llm_load_print_meta: n_layer          = 18
0.00.226.985 I llm_load_print_meta: n_head           = 8
0.00.226.986 I llm_load_print_meta: n_head_kv        = 1
0.00.226.986 I llm_load_print_meta: n_rot            = 256
0.00.226.987 I llm_load_print_meta: n_swa            = 0
0.00.226.987 I llm_load_print_meta: n_embd_head_k    = 256
0.00.226.987 I llm_load_print_meta: n_embd_head_v    = 256
0.00.226.988 I llm_load_print_meta: n_gqa            = 8
0.00.226.989 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.226.990 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.226.991 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.226.992 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.226.992 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.226.993 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.226.993 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.226.994 I llm_load_print_meta: n_ff             = 16384
0.00.226.994 I llm_load_print_meta: n_expert         = 0
0.00.226.994 I llm_load_print_meta: n_expert_used    = 0
0.00.226.995 I llm_load_print_meta: causal attn      = 1
0.00.226.995 I llm_load_print_meta: pooling type     = 0
0.00.226.995 I llm_load_print_meta: rope type        = 2
0.00.226.995 I llm_load_print_meta: rope scaling     = linear
0.00.226.997 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.226.997 I llm_load_print_meta: freq_scale_train = 1
0.00.226.998 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.226.998 I llm_load_print_meta: rope_finetuned   = unknown
0.00.226.998 I llm_load_print_meta: ssm_d_conv       = 0
0.00.226.999 I llm_load_print_meta: ssm_d_inner      = 0
0.00.227.000 I llm_load_print_meta: ssm_d_state      = 0
0.00.227.000 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.227.000 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.227.001 I llm_load_print_meta: model type       = 2B
0.00.227.001 I llm_load_print_meta: model ftype      = Q8_0
0.00.227.002 I llm_load_print_meta: model params     = 2.51 B
0.00.227.003 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.227.003 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.227.004 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.227.004 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.227.005 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.227.005 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.227.006 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.227.006 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.227.006 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.227.007 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.227.008 I llm_load_print_meta: max token length = 93
0.00.227.032 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.326.215 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.326.223 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.326.224 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.326.224 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.326.225 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.326.226 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.331.367 I llama_new_context_with_model: n_ctx      = 8192
0.00.331.374 I llama_new_context_with_model: n_batch    = 2048
0.00.331.374 I llama_new_context_with_model: n_ubatch   = 512
0.00.331.375 I llama_new_context_with_model: flash_attn = 0
0.00.331.377 I llama_new_context_with_model: freq_base  = 10000.0
0.00.331.379 I llama_new_context_with_model: freq_scale = 1
0.00.359.718 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.733 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.821 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.651 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.659 I llama_new_context_with_model: graph nodes  = 601
0.00.360.660 I llama_new_context_with_model: graph splits = 1
0.00.360.661 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.370 I main: llama threadpool init, n_threads = 4
0.00.451.382 I 
0.00.451.461 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.464 I 
0.00.451.500 I sampler seed: 907169531
0.00.451.509 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.517 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.451.519 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.519 I 
 increasities and a chaotic love triangle collide in a whirlwind romance novel.

**Synopsis:**

Eliza, a free-spirited artist, finds solace and passion in

0.02.693.238 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7001.91 tokens per second)
0.02.693.241 I llama_perf_context_print:        load time =     449.45 ms
0.02.693.243 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.693.245 I llama_perf_context_print:        eval time =    2223.11 ms /    32 runs   (   69.47 ms per token,    14.39 tokens per second)
0.02.693.245 I llama_perf_context_print:       total time =    2241.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.561 I build: 3855 (a90484c6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.764 I main: llama backend init
0.00.001.846 I main: load the model and apply lora adapter, if any
0.00.021.881 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.894 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.902 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.906 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.909 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.910 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.911 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.911 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.912 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.912 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.917 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.917 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.918 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.918 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.918 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.389 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.643 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.440 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.446 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.446 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.447 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.448 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.449 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.449 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.452 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.453 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.454 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.454 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.455 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.459 I llama_model_loader: - type  f32:   37 tensors
0.00.132.461 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.386 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.314 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.957 I llm_load_vocab: special tokens cache size = 5
0.00.222.116 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.131 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.131 I llm_load_print_meta: arch             = gemma
0.00.222.132 I llm_load_print_meta: vocab type       = SPM
0.00.222.132 I llm_load_print_meta: n_vocab          = 256000
0.00.222.133 I llm_load_print_meta: n_merges         = 0
0.00.222.133 I llm_load_print_meta: vocab_only       = 0
0.00.222.133 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.134 I llm_load_print_meta: n_embd           = 2048
0.00.222.134 I llm_load_print_meta: n_layer          = 18
0.00.222.146 I llm_load_print_meta: n_head           = 8
0.00.222.147 I llm_load_print_meta: n_head_kv        = 1
0.00.222.148 I llm_load_print_meta: n_rot            = 256
0.00.222.148 I llm_load_print_meta: n_swa            = 0
0.00.222.149 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.149 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.149 I llm_load_print_meta: n_gqa            = 8
0.00.222.150 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.151 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.152 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.153 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.154 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.154 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.155 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.156 I llm_load_print_meta: n_ff             = 16384
0.00.222.156 I llm_load_print_meta: n_expert         = 0
0.00.222.156 I llm_load_print_meta: n_expert_used    = 0
0.00.222.156 I llm_load_print_meta: causal attn      = 1
0.00.222.156 I llm_load_print_meta: pooling type     = 0
0.00.222.157 I llm_load_print_meta: rope type        = 2
0.00.222.157 I llm_load_print_meta: rope scaling     = linear
0.00.222.158 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.159 I llm_load_print_meta: freq_scale_train = 1
0.00.222.159 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.160 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.160 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.160 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.160 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.161 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.161 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.162 I llm_load_print_meta: model type       = 2B
0.00.222.162 I llm_load_print_meta: model ftype      = Q8_0
0.00.222.163 I llm_load_print_meta: model params     = 2.51 B
0.00.222.164 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.222.164 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.164 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.165 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.165 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.165 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.166 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.166 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.167 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.167 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.167 I llm_load_print_meta: max token length = 93
0.00.222.185 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.317.223 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.322.296 I llama_new_context_with_model: n_ctx      = 8192
0.00.322.302 I llama_new_context_with_model: n_batch    = 2048
0.00.322.302 I llama_new_context_with_model: n_ubatch   = 512
0.00.322.303 I llama_new_context_with_model: flash_attn = 0
0.00.322.306 I llama_new_context_with_model: freq_base  = 10000.0
0.00.322.307 I llama_new_context_with_model: freq_scale = 1
0.00.351.523 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.351.540 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.351.629 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.352.516 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.352.523 I llama_new_context_with_model: graph nodes  = 601
0.00.352.523 I llama_new_context_with_model: graph splits = 1
0.00.352.525 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.439.422 I main: llama threadpool init, n_threads = 4
0.00.439.434 I 
0.00.439.507 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.439.510 I 
0.00.439.546 I sampler seed: 3195362345
0.00.439.556 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.439.558 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.439.559 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.439.559 I 
 increasities in a way that is both accurate and engaging.

In the 18th century, Parisian society was steeped in a rigid social hierarchy. Social

0.02.613.905 I llama_perf_sampler_print:    sampling time =       4.81 ms /    33 runs   (    0.15 ms per token,  6856.43 tokens per second)
0.02.613.907 I llama_perf_context_print:        load time =     437.56 ms
0.02.613.909 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.613.910 I llama_perf_context_print:        eval time =    2155.81 ms /    32 runs   (   67.37 ms per token,    14.84 tokens per second)
0.02.613.911 I llama_perf_context_print:       total time =    2174.49 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.551 I build: 3855 (a90484c6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.001.840 I main: load the model and apply lora adapter, if any
0.00.021.907 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.957 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.966 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.972 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.973 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.978 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.979 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.980 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.980 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.981 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.981 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.986 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.987 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.987 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.988 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.988 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.385 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.908 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.739 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.745 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.747 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.747 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.748 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.749 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.750 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.754 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.755 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.756 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.757 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.758 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.761 I llama_model_loader: - type  f32:   37 tensors
0.00.132.764 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.623 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.629 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.260 I llm_load_vocab: special tokens cache size = 5
0.00.222.551 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.563 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.563 I llm_load_print_meta: arch             = gemma
0.00.222.564 I llm_load_print_meta: vocab type       = SPM
0.00.222.565 I llm_load_print_meta: n_vocab          = 256000
0.00.222.566 I llm_load_print_meta: n_merges         = 0
0.00.222.566 I llm_load_print_meta: vocab_only       = 0
0.00.222.566 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.567 I llm_load_print_meta: n_embd           = 2048
0.00.222.567 I llm_load_print_meta: n_layer          = 18
0.00.222.580 I llm_load_print_meta: n_head           = 8
0.00.222.581 I llm_load_print_meta: n_head_kv        = 1
0.00.222.582 I llm_load_print_meta: n_rot            = 256
0.00.222.582 I llm_load_print_meta: n_swa            = 0
0.00.222.583 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.583 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.584 I llm_load_print_meta: n_gqa            = 8
0.00.222.585 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.586 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.587 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.589 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.589 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.590 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.590 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.591 I llm_load_print_meta: n_ff             = 16384
0.00.222.591 I llm_load_print_meta: n_expert         = 0
0.00.222.592 I llm_load_print_meta: n_expert_used    = 0
0.00.222.592 I llm_load_print_meta: causal attn      = 1
0.00.222.592 I llm_load_print_meta: pooling type     = 0
0.00.222.592 I llm_load_print_meta: rope type        = 2
0.00.222.593 I llm_load_print_meta: rope scaling     = linear
0.00.222.595 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.595 I llm_load_print_meta: freq_scale_train = 1
0.00.222.596 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.596 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.597 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.597 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.597 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.597 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.598 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.598 I llm_load_print_meta: model type       = 2B
0.00.222.599 I llm_load_print_meta: model ftype      = Q8_0
0.00.222.600 I llm_load_print_meta: model params     = 2.51 B
0.00.222.600 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.222.601 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.601 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.601 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.602 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.602 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.603 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.603 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.603 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.604 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.604 I llm_load_print_meta: max token length = 93
0.00.222.621 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.300.496 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.300.506 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.300.508 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.300.509 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.300.510 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.300.512 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.305.657 I llama_new_context_with_model: n_ctx      = 8192
0.00.305.664 I llama_new_context_with_model: n_batch    = 2048
0.00.305.664 I llama_new_context_with_model: n_ubatch   = 512
0.00.305.665 I llama_new_context_with_model: flash_attn = 0
0.00.305.667 I llama_new_context_with_model: freq_base  = 10000.0
0.00.305.668 I llama_new_context_with_model: freq_scale = 1
0.00.335.044 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.335.059 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.335.150 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.335.994 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.336.002 I llama_new_context_with_model: graph nodes  = 601
0.00.336.002 I llama_new_context_with_model: graph splits = 1
0.00.336.004 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.426.230 I main: llama threadpool init, n_threads = 4
0.00.426.243 I 
0.00.426.317 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.426.320 I 
0.00.426.355 I sampler seed: 114842064
0.00.426.377 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.426.380 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.426.380 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.426.381 I 
 increably. 

I am unable to complete this request, as it includes sexually suggestive content that I am not allowed to generate. [end of text]


0.02.394.984 I llama_perf_sampler_print:    sampling time =       4.19 ms /    29 runs   (    0.14 ms per token,  6914.64 tokens per second)
0.02.394.986 I llama_perf_context_print:        load time =     424.37 ms
0.02.394.987 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.394.989 I llama_perf_context_print:        eval time =    1953.15 ms /    28 runs   (   69.76 ms per token,    14.34 tokens per second)
0.02.394.989 I llama_perf_context_print:       total time =    1968.76 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.582 I build: 3855 (a90484c6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.804 I main: llama backend init
0.00.001.941 I main: load the model and apply lora adapter, if any
0.00.021.964 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.017 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.031 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.038 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.042 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.047 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.048 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.049 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.050 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.051 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.052 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.063 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.067 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.068 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.069 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.070 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.311 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.131.800 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.144.622 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.144.632 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.144.633 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.144.633 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.144.634 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.144.635 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.144.636 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.144.639 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.144.640 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.144.640 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.144.641 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.144.641 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.144.644 I llama_model_loader: - type  f32:   37 tensors
0.00.144.647 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.662 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.215.357 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.216.097 I llm_load_vocab: special tokens cache size = 5
0.00.238.270 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.238.285 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.238.285 I llm_load_print_meta: arch             = gemma
0.00.238.286 I llm_load_print_meta: vocab type       = SPM
0.00.238.286 I llm_load_print_meta: n_vocab          = 256000
0.00.238.287 I llm_load_print_meta: n_merges         = 0
0.00.238.288 I llm_load_print_meta: vocab_only       = 0
0.00.238.288 I llm_load_print_meta: n_ctx_train      = 8192
0.00.238.288 I llm_load_print_meta: n_embd           = 2048
0.00.238.288 I llm_load_print_meta: n_layer          = 18
0.00.238.302 I llm_load_print_meta: n_head           = 8
0.00.238.303 I llm_load_print_meta: n_head_kv        = 1
0.00.238.303 I llm_load_print_meta: n_rot            = 256
0.00.238.303 I llm_load_print_meta: n_swa            = 0
0.00.238.304 I llm_load_print_meta: n_embd_head_k    = 256
0.00.238.304 I llm_load_print_meta: n_embd_head_v    = 256
0.00.238.305 I llm_load_print_meta: n_gqa            = 8
0.00.238.306 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.238.307 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.238.307 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.238.309 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.238.309 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.238.310 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.238.310 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.238.311 I llm_load_print_meta: n_ff             = 16384
0.00.238.312 I llm_load_print_meta: n_expert         = 0
0.00.238.312 I llm_load_print_meta: n_expert_used    = 0
0.00.238.312 I llm_load_print_meta: causal attn      = 1
0.00.238.312 I llm_load_print_meta: pooling type     = 0
0.00.238.313 I llm_load_print_meta: rope type        = 2
0.00.238.313 I llm_load_print_meta: rope scaling     = linear
0.00.238.314 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.238.318 I llm_load_print_meta: freq_scale_train = 1
0.00.238.319 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.238.319 I llm_load_print_meta: rope_finetuned   = unknown
0.00.238.320 I llm_load_print_meta: ssm_d_conv       = 0
0.00.238.320 I llm_load_print_meta: ssm_d_inner      = 0
0.00.238.320 I llm_load_print_meta: ssm_d_state      = 0
0.00.238.321 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.238.321 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.238.322 I llm_load_print_meta: model type       = 2B
0.00.238.323 I llm_load_print_meta: model ftype      = Q8_0
0.00.238.324 I llm_load_print_meta: model params     = 2.51 B
0.00.238.325 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.238.325 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.238.326 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.238.326 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.238.327 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.238.327 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.238.328 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.238.329 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.238.329 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.238.330 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.238.331 I llm_load_print_meta: max token length = 93
0.00.238.364 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.308.613 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.308.621 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.313.557 I llama_new_context_with_model: n_ctx      = 8192
0.00.313.564 I llama_new_context_with_model: n_batch    = 2048
0.00.313.564 I llama_new_context_with_model: n_ubatch   = 512
0.00.313.565 I llama_new_context_with_model: flash_attn = 0
0.00.313.567 I llama_new_context_with_model: freq_base  = 10000.0
0.00.313.568 I llama_new_context_with_model: freq_scale = 1
0.00.343.334 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.343.351 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.343.459 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.344.378 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.344.386 I llama_new_context_with_model: graph nodes  = 601
0.00.344.386 I llama_new_context_with_model: graph splits = 1
0.00.344.388 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.448.517 I main: llama threadpool init, n_threads = 4
0.00.448.528 I 
0.00.448.604 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.448.609 I 
0.00.448.651 I sampler seed: 350877130
0.00.448.671 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.448.674 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.448.675 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.448.675 I 
 increamentalism, which is a branch of evolutionary psychology that emphasizes the role of culture and social environments in shaping human behavior and cognition.

**Cultural influences on

0.02.864.880 I llama_perf_sampler_print:    sampling time =       5.18 ms /    33 runs   (    0.16 ms per token,  6371.89 tokens per second)
0.02.864.882 I llama_perf_context_print:        load time =     446.56 ms
0.02.864.883 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.864.884 I llama_perf_context_print:        eval time =    2397.85 ms /    32 runs   (   74.93 ms per token,    13.35 tokens per second)
0.02.864.885 I llama_perf_context_print:       total time =    2416.37 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.068s
user	0m37.932s
sys	0m9.443s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3855 (a90484c6)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31976.20 ms
main:    total time = 31976.20 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.548 I build: 3855 (a90484c6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.737 I main: llama backend init
0.00.001.855 I main: load the model and apply lora adapter, if any
0.00.022.458 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.506 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.513 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.519 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.520 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.523 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.524 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.525 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.525 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.526 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.526 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.529 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.530 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.530 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.531 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.531 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.333 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.575 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.384 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.390 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.391 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.392 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.393 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.394 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.395 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.397 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.398 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.398 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.399 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.400 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.402 I llama_model_loader: - type  f32:   37 tensors
0.00.133.405 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.406 I llama_model_loader: - type q6_K:   19 tensors
0.00.188.688 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.034 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.202.789 I llm_load_vocab: special tokens cache size = 5
0.00.224.247 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.261 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.261 I llm_load_print_meta: arch             = gemma
0.00.224.262 I llm_load_print_meta: vocab type       = SPM
0.00.224.263 I llm_load_print_meta: n_vocab          = 256000
0.00.224.263 I llm_load_print_meta: n_merges         = 0
0.00.224.264 I llm_load_print_meta: vocab_only       = 0
0.00.224.264 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.264 I llm_load_print_meta: n_embd           = 2048
0.00.224.264 I llm_load_print_meta: n_layer          = 18
0.00.224.275 I llm_load_print_meta: n_head           = 8
0.00.224.276 I llm_load_print_meta: n_head_kv        = 1
0.00.224.277 I llm_load_print_meta: n_rot            = 256
0.00.224.277 I llm_load_print_meta: n_swa            = 0
0.00.224.277 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.278 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.279 I llm_load_print_meta: n_gqa            = 8
0.00.224.280 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.281 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.282 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.284 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.284 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.285 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.285 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.286 I llm_load_print_meta: n_ff             = 16384
0.00.224.286 I llm_load_print_meta: n_expert         = 0
0.00.224.286 I llm_load_print_meta: n_expert_used    = 0
0.00.224.286 I llm_load_print_meta: causal attn      = 1
0.00.224.287 I llm_load_print_meta: pooling type     = 0
0.00.224.287 I llm_load_print_meta: rope type        = 2
0.00.224.287 I llm_load_print_meta: rope scaling     = linear
0.00.224.289 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.289 I llm_load_print_meta: freq_scale_train = 1
0.00.224.290 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.290 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.290 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.291 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.291 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.291 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.292 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.292 I llm_load_print_meta: model type       = 2B
0.00.224.293 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.224.293 I llm_load_print_meta: model params     = 2.51 B
0.00.224.294 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.224.295 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.295 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.295 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.296 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.296 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.297 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.297 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.297 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.298 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.298 I llm_load_print_meta: max token length = 93
0.00.224.314 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.281.791 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.281.797 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.281.798 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.281.798 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.281.799 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.281.799 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.286.869 I llama_new_context_with_model: n_ctx      = 8192
0.00.286.875 I llama_new_context_with_model: n_batch    = 2048
0.00.286.875 I llama_new_context_with_model: n_ubatch   = 512
0.00.286.876 I llama_new_context_with_model: flash_attn = 0
0.00.286.879 I llama_new_context_with_model: freq_base  = 10000.0
0.00.286.880 I llama_new_context_with_model: freq_scale = 1
0.00.316.073 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.316.088 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.316.181 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.317.046 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.317.054 I llama_new_context_with_model: graph nodes  = 601
0.00.317.055 I llama_new_context_with_model: graph splits = 1
0.00.317.056 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.398.752 I main: llama threadpool init, n_threads = 4
0.00.398.763 I 
0.00.398.840 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.398.843 I 
0.00.398.878 I sampler seed: 222126916
0.00.398.887 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.398.892 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.398.892 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.398.893 I 
 increasities

**Assistant**

I am unable to provide sexually suggestive or inappropriate responses. My purpose is to assist with tasks and provide information in a responsible and

0.01.997.553 I llama_perf_sampler_print:    sampling time =       5.12 ms /    33 runs   (    0.15 ms per token,  6451.61 tokens per second)
0.01.997.556 I llama_perf_context_print:        load time =     396.88 ms
0.01.997.557 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.997.558 I llama_perf_context_print:        eval time =    1580.47 ms /    32 runs   (   49.39 ms per token,    20.25 tokens per second)
0.01.997.559 I llama_perf_context_print:       total time =    1598.81 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3855 (a90484c6)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32044.02 ms
main:    total time = 32044.02 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.533 I build: 3855 (a90484c6) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.720 I main: llama backend init
0.00.001.811 I main: load the model and apply lora adapter, if any
0.00.022.395 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.406 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.413 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.414 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.417 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.418 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.418 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.422 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.422 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.423 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.427 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.427 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.428 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.429 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.429 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.073 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.527 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.401 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.408 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.409 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.410 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.411 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.412 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.413 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.417 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.418 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.421 I llama_model_loader: - type  f32:   37 tensors
0.00.133.424 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.425 I llama_model_loader: - type q6_K:   19 tensors
0.00.188.158 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.201.249 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.907 I llm_load_vocab: special tokens cache size = 5
0.00.222.885 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.898 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.898 I llm_load_print_meta: arch             = gemma
0.00.222.899 I llm_load_print_meta: vocab type       = SPM
0.00.222.899 I llm_load_print_meta: n_vocab          = 256000
0.00.222.900 I llm_load_print_meta: n_merges         = 0
0.00.222.900 I llm_load_print_meta: vocab_only       = 0
0.00.222.900 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.901 I llm_load_print_meta: n_embd           = 2048
0.00.222.901 I llm_load_print_meta: n_layer          = 18
0.00.222.912 I llm_load_print_meta: n_head           = 8
0.00.222.913 I llm_load_print_meta: n_head_kv        = 1
0.00.222.913 I llm_load_print_meta: n_rot            = 256
0.00.222.914 I llm_load_print_meta: n_swa            = 0
0.00.222.914 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.914 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.915 I llm_load_print_meta: n_gqa            = 8
0.00.222.916 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.917 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.918 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.919 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.920 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.920 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.920 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.922 I llm_load_print_meta: n_ff             = 16384
0.00.222.922 I llm_load_print_meta: n_expert         = 0
0.00.222.922 I llm_load_print_meta: n_expert_used    = 0
0.00.222.922 I llm_load_print_meta: causal attn      = 1
0.00.222.923 I llm_load_print_meta: pooling type     = 0
0.00.222.923 I llm_load_print_meta: rope type        = 2
0.00.222.923 I llm_load_print_meta: rope scaling     = linear
0.00.222.924 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.925 I llm_load_print_meta: freq_scale_train = 1
0.00.222.925 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.925 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.926 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.926 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.926 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.927 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.927 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.928 I llm_load_print_meta: model type       = 2B
0.00.222.928 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.222.929 I llm_load_print_meta: model params     = 2.51 B
0.00.222.930 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.222.930 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.931 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.931 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.931 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.931 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.932 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.932 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.932 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.933 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.933 I llm_load_print_meta: max token length = 93
0.00.222.952 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.842.311 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.847.426 I llama_new_context_with_model: n_ctx      = 8192
0.00.847.432 I llama_new_context_with_model: n_batch    = 2048
0.00.847.433 I llama_new_context_with_model: n_ubatch   = 512
0.00.847.433 I llama_new_context_with_model: flash_attn = 0
0.00.847.437 I llama_new_context_with_model: freq_base  = 10000.0
0.00.847.438 I llama_new_context_with_model: freq_scale = 1
0.00.877.715 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.877.733 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.877.832 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.878.738 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.878.745 I llama_new_context_with_model: graph nodes  = 601
0.00.878.746 I llama_new_context_with_model: graph splits = 1
0.00.878.748 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.967.304 I main: llama threadpool init, n_threads = 4
0.00.967.318 I 
0.00.967.394 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.967.398 I 
0.00.967.434 I sampler seed: 3064796269
0.00.967.444 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.967.447 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.967.447 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.967.447 I 
 seconal rhythm is a rhythmic pattern characterized by:

A) Irregular patterns
B) Regular patterns
C) Unstable patterns
D) Stable patterns



0.02.544.233 I llama_perf_sampler_print:    sampling time =       4.95 ms /    33 runs   (    0.15 ms per token,  6673.41 tokens per second)
0.02.544.235 I llama_perf_context_print:        load time =     965.48 ms
0.02.544.237 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.544.239 I llama_perf_context_print:        eval time =    1558.95 ms /    32 runs   (   48.72 ms per token,    20.53 tokens per second)
0.02.544.239 I llama_perf_context_print:       total time =    1576.94 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.399s
user	8m13.902s
sys	0m7.012s
