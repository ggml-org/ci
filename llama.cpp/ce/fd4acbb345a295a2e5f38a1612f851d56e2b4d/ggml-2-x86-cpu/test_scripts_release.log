+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.559 I build: 3927 (cefd4acb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.749 I main: llama backend init
0.00.001.833 I main: load the model and apply lora adapter, if any
0.00.023.212 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.259 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.266 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.272 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.272 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.275 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.276 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.277 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.277 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.278 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.278 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.282 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.282 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.283 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.283 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.284 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.161 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.457 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.297 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.303 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.304 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.304 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.305 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.306 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.306 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.308 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.309 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.310 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.311 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.312 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.314 I llama_model_loader: - type  f32:   37 tensors
0.00.132.317 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.939 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.079 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.753 I llm_load_vocab: special tokens cache size = 5
0.00.264.261 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.275 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.276 I llm_load_print_meta: arch             = gemma
0.00.264.277 I llm_load_print_meta: vocab type       = SPM
0.00.264.277 I llm_load_print_meta: n_vocab          = 256000
0.00.264.278 I llm_load_print_meta: n_merges         = 0
0.00.264.278 I llm_load_print_meta: vocab_only       = 0
0.00.264.279 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.279 I llm_load_print_meta: n_embd           = 2048
0.00.264.279 I llm_load_print_meta: n_layer          = 18
0.00.264.290 I llm_load_print_meta: n_head           = 8
0.00.264.291 I llm_load_print_meta: n_head_kv        = 1
0.00.264.291 I llm_load_print_meta: n_rot            = 256
0.00.264.292 I llm_load_print_meta: n_swa            = 0
0.00.264.292 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.293 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.293 I llm_load_print_meta: n_gqa            = 8
0.00.264.294 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.296 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.296 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.298 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.298 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.299 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.299 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.300 I llm_load_print_meta: n_ff             = 16384
0.00.264.300 I llm_load_print_meta: n_expert         = 0
0.00.264.300 I llm_load_print_meta: n_expert_used    = 0
0.00.264.301 I llm_load_print_meta: causal attn      = 1
0.00.264.301 I llm_load_print_meta: pooling type     = 0
0.00.264.301 I llm_load_print_meta: rope type        = 2
0.00.264.302 I llm_load_print_meta: rope scaling     = linear
0.00.264.303 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.304 I llm_load_print_meta: freq_scale_train = 1
0.00.264.304 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.305 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.305 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.305 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.306 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.306 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.306 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.307 I llm_load_print_meta: model type       = 2B
0.00.264.307 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.308 I llm_load_print_meta: model params     = 2.51 B
0.00.264.309 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.309 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.310 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.310 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.311 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.311 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.311 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.312 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.312 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.312 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.313 I llm_load_print_meta: max token length = 93
0.00.264.337 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.364.548 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.364.555 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.364.556 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.364.557 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.364.557 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.364.558 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.369.662 I llama_new_context_with_model: n_ctx      = 8192
0.00.369.668 I llama_new_context_with_model: n_batch    = 2048
0.00.369.669 I llama_new_context_with_model: n_ubatch   = 512
0.00.369.669 I llama_new_context_with_model: flash_attn = 0
0.00.369.672 I llama_new_context_with_model: freq_base  = 10000.0
0.00.369.673 I llama_new_context_with_model: freq_scale = 1
0.00.398.318 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.398.332 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.398.424 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.399.294 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.399.302 I llama_new_context_with_model: graph nodes  = 601
0.00.399.302 I llama_new_context_with_model: graph splits = 1
0.00.399.304 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.490.758 I main: llama threadpool init, n_threads = 4
0.00.490.769 I 
0.00.490.850 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.490.853 I 
0.00.490.890 I sampler seed: 597274714
0.00.490.899 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.490.901 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.490.902 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.490.902 I 
 increasities is a type of sexual harassment that involves unwelcome sexual contact or advances made towards a person without their explicit consent. [end of text]


0.02.260.692 I llama_perf_sampler_print:    sampling time =       3.75 ms /    26 runs   (    0.14 ms per token,  6935.18 tokens per second)
0.02.260.695 I llama_perf_context_print:        load time =     488.90 ms
0.02.260.696 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.260.698 I llama_perf_context_print:        eval time =    1755.54 ms /    25 runs   (   70.22 ms per token,    14.24 tokens per second)
0.02.260.699 I llama_perf_context_print:       total time =    1769.94 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.553 I build: 3927 (cefd4acb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.757 I main: llama backend init
0.00.001.833 I main: load the model and apply lora adapter, if any
0.00.021.974 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.986 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.993 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.994 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.997 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.998 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.998 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.999 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.999 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.000 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.005 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.006 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.007 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.007 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.007 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.403 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.974 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.828 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.835 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.836 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.836 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.837 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.838 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.839 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.841 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.842 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.842 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.843 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.844 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.848 I llama_model_loader: - type  f32:   37 tensors
0.00.131.850 I llama_model_loader: - type q8_0:  127 tensors
0.00.209.544 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.714 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.457 I llm_load_vocab: special tokens cache size = 5
0.00.265.232 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.250 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.251 I llm_load_print_meta: arch             = gemma
0.00.265.251 I llm_load_print_meta: vocab type       = SPM
0.00.265.252 I llm_load_print_meta: n_vocab          = 256000
0.00.265.252 I llm_load_print_meta: n_merges         = 0
0.00.265.253 I llm_load_print_meta: vocab_only       = 0
0.00.265.253 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.253 I llm_load_print_meta: n_embd           = 2048
0.00.265.254 I llm_load_print_meta: n_layer          = 18
0.00.265.266 I llm_load_print_meta: n_head           = 8
0.00.265.267 I llm_load_print_meta: n_head_kv        = 1
0.00.265.268 I llm_load_print_meta: n_rot            = 256
0.00.265.268 I llm_load_print_meta: n_swa            = 0
0.00.265.268 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.268 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.269 I llm_load_print_meta: n_gqa            = 8
0.00.265.270 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.272 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.273 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.274 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.275 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.276 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.276 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.277 I llm_load_print_meta: n_ff             = 16384
0.00.265.277 I llm_load_print_meta: n_expert         = 0
0.00.265.277 I llm_load_print_meta: n_expert_used    = 0
0.00.265.278 I llm_load_print_meta: causal attn      = 1
0.00.265.278 I llm_load_print_meta: pooling type     = 0
0.00.265.278 I llm_load_print_meta: rope type        = 2
0.00.265.278 I llm_load_print_meta: rope scaling     = linear
0.00.265.280 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.280 I llm_load_print_meta: freq_scale_train = 1
0.00.265.281 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.281 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.281 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.282 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.282 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.282 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.283 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.283 I llm_load_print_meta: model type       = 2B
0.00.265.283 I llm_load_print_meta: model ftype      = Q8_0
0.00.265.284 I llm_load_print_meta: model params     = 2.51 B
0.00.265.285 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.265.286 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.287 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.287 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.288 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.288 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.288 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.289 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.289 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.289 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.289 I llm_load_print_meta: max token length = 93
0.00.265.310 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.363.637 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.368.701 I llama_new_context_with_model: n_ctx      = 8192
0.00.368.707 I llama_new_context_with_model: n_batch    = 2048
0.00.368.708 I llama_new_context_with_model: n_ubatch   = 512
0.00.368.708 I llama_new_context_with_model: flash_attn = 0
0.00.368.710 I llama_new_context_with_model: freq_base  = 10000.0
0.00.368.712 I llama_new_context_with_model: freq_scale = 1
0.00.399.672 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.399.687 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.399.781 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.400.676 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.400.683 I llama_new_context_with_model: graph nodes  = 601
0.00.400.683 I llama_new_context_with_model: graph splits = 1
0.00.400.685 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.490.259 I main: llama threadpool init, n_threads = 4
0.00.490.271 I 
0.00.490.367 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.490.371 I 
0.00.490.418 I sampler seed: 1859461576
0.00.490.431 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.490.435 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.490.437 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.490.437 I 
 increasively.

I am not sure what you mean by that. Could you please elaborate? [end of text]


0.01.852.234 I llama_perf_sampler_print:    sampling time =       2.90 ms /    21 runs   (    0.14 ms per token,  7246.38 tokens per second)
0.01.852.236 I llama_perf_context_print:        load time =     488.40 ms
0.01.852.238 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.852.240 I llama_perf_context_print:        eval time =    1350.37 ms /    20 runs   (   67.52 ms per token,    14.81 tokens per second)
0.01.852.241 I llama_perf_context_print:       total time =    1361.98 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.562 I build: 3927 (cefd4acb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.766 I main: llama backend init
0.00.001.843 I main: load the model and apply lora adapter, if any
0.00.021.997 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.047 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.054 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.060 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.062 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.068 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.072 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.072 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.073 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.073 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.074 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.080 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.080 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.081 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.081 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.082 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.835 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.717 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.612 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.618 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.618 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.619 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.620 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.620 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.621 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.623 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.624 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.624 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.626 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.136.626 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.136.630 I llama_model_loader: - type  f32:   37 tensors
0.00.136.633 I llama_model_loader: - type q8_0:  127 tensors
0.00.218.651 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.253.304 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.254.069 I llm_load_vocab: special tokens cache size = 5
0.00.274.939 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.274.958 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.274.958 I llm_load_print_meta: arch             = gemma
0.00.274.959 I llm_load_print_meta: vocab type       = SPM
0.00.274.960 I llm_load_print_meta: n_vocab          = 256000
0.00.274.960 I llm_load_print_meta: n_merges         = 0
0.00.274.960 I llm_load_print_meta: vocab_only       = 0
0.00.274.961 I llm_load_print_meta: n_ctx_train      = 8192
0.00.274.961 I llm_load_print_meta: n_embd           = 2048
0.00.274.961 I llm_load_print_meta: n_layer          = 18
0.00.274.974 I llm_load_print_meta: n_head           = 8
0.00.274.975 I llm_load_print_meta: n_head_kv        = 1
0.00.274.975 I llm_load_print_meta: n_rot            = 256
0.00.274.976 I llm_load_print_meta: n_swa            = 0
0.00.274.976 I llm_load_print_meta: n_embd_head_k    = 256
0.00.274.976 I llm_load_print_meta: n_embd_head_v    = 256
0.00.274.977 I llm_load_print_meta: n_gqa            = 8
0.00.274.978 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.274.979 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.274.980 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.274.981 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.274.982 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.274.982 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.274.983 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.274.983 I llm_load_print_meta: n_ff             = 16384
0.00.274.984 I llm_load_print_meta: n_expert         = 0
0.00.274.984 I llm_load_print_meta: n_expert_used    = 0
0.00.274.984 I llm_load_print_meta: causal attn      = 1
0.00.274.984 I llm_load_print_meta: pooling type     = 0
0.00.274.985 I llm_load_print_meta: rope type        = 2
0.00.274.985 I llm_load_print_meta: rope scaling     = linear
0.00.274.986 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.274.987 I llm_load_print_meta: freq_scale_train = 1
0.00.274.987 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.274.988 I llm_load_print_meta: rope_finetuned   = unknown
0.00.274.988 I llm_load_print_meta: ssm_d_conv       = 0
0.00.274.988 I llm_load_print_meta: ssm_d_inner      = 0
0.00.274.989 I llm_load_print_meta: ssm_d_state      = 0
0.00.274.989 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.274.989 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.274.989 I llm_load_print_meta: model type       = 2B
0.00.274.990 I llm_load_print_meta: model ftype      = Q8_0
0.00.274.991 I llm_load_print_meta: model params     = 2.51 B
0.00.274.992 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.274.992 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.274.993 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.274.994 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.274.994 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.274.994 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.274.995 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.274.995 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.274.995 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.274.996 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.274.996 I llm_load_print_meta: max token length = 93
0.00.275.017 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.352.132 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.352.139 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.352.140 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.352.141 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.352.141 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.352.142 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.357.538 I llama_new_context_with_model: n_ctx      = 8192
0.00.357.546 I llama_new_context_with_model: n_batch    = 2048
0.00.357.547 I llama_new_context_with_model: n_ubatch   = 512
0.00.357.547 I llama_new_context_with_model: flash_attn = 0
0.00.357.552 I llama_new_context_with_model: freq_base  = 10000.0
0.00.357.553 I llama_new_context_with_model: freq_scale = 1
0.00.386.163 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.386.179 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.386.287 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.387.159 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.387.166 I llama_new_context_with_model: graph nodes  = 601
0.00.387.166 I llama_new_context_with_model: graph splits = 1
0.00.387.168 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.477.357 I main: llama threadpool init, n_threads = 4
0.00.477.370 I 
0.00.477.463 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.477.466 I 
0.00.477.509 I sampler seed: 1597927118
0.00.477.520 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.477.524 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.477.525 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.477.525 I 
 increasities, but never the other way around.

What is the answer?

A promise.

A promise is a statement of intent that can be made

0.02.728.803 I llama_perf_sampler_print:    sampling time =       4.72 ms /    33 runs   (    0.14 ms per token,  6988.56 tokens per second)
0.02.728.806 I llama_perf_context_print:        load time =     475.49 ms
0.02.728.807 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.728.808 I llama_perf_context_print:        eval time =    2232.75 ms /    32 runs   (   69.77 ms per token,    14.33 tokens per second)
0.02.728.809 I llama_perf_context_print:       total time =    2251.45 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.560 I build: 3927 (cefd4acb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.878 I main: load the model and apply lora adapter, if any
0.00.021.687 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.736 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.747 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.752 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.753 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.759 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.762 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.763 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.764 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.764 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.765 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.769 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.770 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.770 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.771 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.771 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.789 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.533 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.424 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.431 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.432 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.433 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.434 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.435 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.436 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.439 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.440 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.441 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.442 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.443 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.446 I llama_model_loader: - type  f32:   37 tensors
0.00.131.448 I llama_model_loader: - type q8_0:  127 tensors
0.00.214.385 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.251.325 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.252.120 I llm_load_vocab: special tokens cache size = 5
0.00.273.056 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.273.075 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.273.075 I llm_load_print_meta: arch             = gemma
0.00.273.076 I llm_load_print_meta: vocab type       = SPM
0.00.273.077 I llm_load_print_meta: n_vocab          = 256000
0.00.273.077 I llm_load_print_meta: n_merges         = 0
0.00.273.078 I llm_load_print_meta: vocab_only       = 0
0.00.273.078 I llm_load_print_meta: n_ctx_train      = 8192
0.00.273.078 I llm_load_print_meta: n_embd           = 2048
0.00.273.078 I llm_load_print_meta: n_layer          = 18
0.00.273.089 I llm_load_print_meta: n_head           = 8
0.00.273.090 I llm_load_print_meta: n_head_kv        = 1
0.00.273.091 I llm_load_print_meta: n_rot            = 256
0.00.273.091 I llm_load_print_meta: n_swa            = 0
0.00.273.091 I llm_load_print_meta: n_embd_head_k    = 256
0.00.273.091 I llm_load_print_meta: n_embd_head_v    = 256
0.00.273.092 I llm_load_print_meta: n_gqa            = 8
0.00.273.093 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.273.094 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.273.095 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.273.096 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.273.097 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.273.097 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.273.097 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.273.098 I llm_load_print_meta: n_ff             = 16384
0.00.273.098 I llm_load_print_meta: n_expert         = 0
0.00.273.098 I llm_load_print_meta: n_expert_used    = 0
0.00.273.099 I llm_load_print_meta: causal attn      = 1
0.00.273.099 I llm_load_print_meta: pooling type     = 0
0.00.273.099 I llm_load_print_meta: rope type        = 2
0.00.273.100 I llm_load_print_meta: rope scaling     = linear
0.00.273.101 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.101 I llm_load_print_meta: freq_scale_train = 1
0.00.273.102 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.102 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.103 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.103 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.103 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.103 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.104 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.104 I llm_load_print_meta: model type       = 2B
0.00.273.105 I llm_load_print_meta: model ftype      = Q8_0
0.00.273.106 I llm_load_print_meta: model params     = 2.51 B
0.00.273.107 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.273.107 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.108 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.108 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.108 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.109 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.109 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.109 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.110 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.110 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.110 I llm_load_print_meta: max token length = 93
0.00.273.129 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.343.243 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.343.249 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.348.202 I llama_new_context_with_model: n_ctx      = 8192
0.00.348.208 I llama_new_context_with_model: n_batch    = 2048
0.00.348.209 I llama_new_context_with_model: n_ubatch   = 512
0.00.348.209 I llama_new_context_with_model: flash_attn = 0
0.00.348.212 I llama_new_context_with_model: freq_base  = 10000.0
0.00.348.212 I llama_new_context_with_model: freq_scale = 1
0.00.377.419 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.377.435 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.377.536 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.378.394 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.378.402 I llama_new_context_with_model: graph nodes  = 601
0.00.378.402 I llama_new_context_with_model: graph splits = 1
0.00.378.404 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.472.814 I main: llama threadpool init, n_threads = 4
0.00.472.826 I 
0.00.472.902 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.472.905 I 
0.00.472.940 I sampler seed: 535340255
0.00.472.950 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.472.957 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.472.959 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.472.959 I 
 increasities. [end of text]


0.00.777.053 I llama_perf_sampler_print:    sampling time =       0.63 ms /     5 runs   (    0.13 ms per token,  7936.51 tokens per second)
0.00.777.055 I llama_perf_context_print:        load time =     470.91 ms
0.00.777.057 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.777.058 I llama_perf_context_print:        eval time =     301.09 ms /     4 runs   (   75.27 ms per token,    13.29 tokens per second)
0.00.777.059 I llama_perf_context_print:       total time =     304.25 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.464s
user	0m25.630s
sys	0m9.425s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3927 (cefd4acb)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32190.49 ms
main:    total time = 32190.49 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.575 I build: 3927 (cefd4acb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.001.849 I main: load the model and apply lora adapter, if any
0.00.022.434 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.482 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.493 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.500 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.502 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.505 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.506 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.507 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.507 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.508 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.508 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.511 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.512 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.513 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.513 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.514 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.601 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.236 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.439 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.445 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.446 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.447 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.447 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.448 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.449 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.451 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.453 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.454 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.454 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.455 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.459 I llama_model_loader: - type  f32:   37 tensors
0.00.133.461 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.462 I llama_model_loader: - type q6_K:   19 tensors
0.00.215.766 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.251.070 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.827 I llm_load_vocab: special tokens cache size = 5
0.00.272.249 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.265 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.265 I llm_load_print_meta: arch             = gemma
0.00.272.266 I llm_load_print_meta: vocab type       = SPM
0.00.272.267 I llm_load_print_meta: n_vocab          = 256000
0.00.272.267 I llm_load_print_meta: n_merges         = 0
0.00.272.267 I llm_load_print_meta: vocab_only       = 0
0.00.272.268 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.268 I llm_load_print_meta: n_embd           = 2048
0.00.272.268 I llm_load_print_meta: n_layer          = 18
0.00.272.279 I llm_load_print_meta: n_head           = 8
0.00.272.280 I llm_load_print_meta: n_head_kv        = 1
0.00.272.281 I llm_load_print_meta: n_rot            = 256
0.00.272.281 I llm_load_print_meta: n_swa            = 0
0.00.272.281 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.282 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.282 I llm_load_print_meta: n_gqa            = 8
0.00.272.283 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.284 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.285 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.287 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.287 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.288 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.288 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.289 I llm_load_print_meta: n_ff             = 16384
0.00.272.289 I llm_load_print_meta: n_expert         = 0
0.00.272.290 I llm_load_print_meta: n_expert_used    = 0
0.00.272.291 I llm_load_print_meta: causal attn      = 1
0.00.272.291 I llm_load_print_meta: pooling type     = 0
0.00.272.291 I llm_load_print_meta: rope type        = 2
0.00.272.292 I llm_load_print_meta: rope scaling     = linear
0.00.272.295 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.295 I llm_load_print_meta: freq_scale_train = 1
0.00.272.296 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.296 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.296 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.297 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.297 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.297 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.298 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.298 I llm_load_print_meta: model type       = 2B
0.00.272.299 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.272.300 I llm_load_print_meta: model params     = 2.51 B
0.00.272.300 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.272.301 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.301 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.302 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.302 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.303 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.303 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.304 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.304 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.305 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.305 I llm_load_print_meta: max token length = 93
0.00.272.326 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.330.825 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.330.831 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.330.832 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.330.832 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.330.833 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.330.833 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.335.916 I llama_new_context_with_model: n_ctx      = 8192
0.00.335.921 I llama_new_context_with_model: n_batch    = 2048
0.00.335.922 I llama_new_context_with_model: n_ubatch   = 512
0.00.335.923 I llama_new_context_with_model: flash_attn = 0
0.00.335.925 I llama_new_context_with_model: freq_base  = 10000.0
0.00.335.925 I llama_new_context_with_model: freq_scale = 1
0.00.364.556 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.364.570 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.364.660 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.530 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.365.538 I llama_new_context_with_model: graph nodes  = 601
0.00.365.539 I llama_new_context_with_model: graph splits = 1
0.00.365.540 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.218 I main: llama threadpool init, n_threads = 4
0.00.446.229 I 
0.00.446.305 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.446.308 I 
0.00.446.349 I sampler seed: 2612315419
0.00.446.359 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.446.362 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.446.363 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.446.363 I 
 maneuvously. [end of text]


0.00.697.320 I llama_perf_sampler_print:    sampling time =       0.74 ms /     6 runs   (    0.12 ms per token,  8108.11 tokens per second)
0.00.697.323 I llama_perf_context_print:        load time =     444.35 ms
0.00.697.324 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.697.325 I llama_perf_context_print:        eval time =     247.24 ms /     5 runs   (   49.45 ms per token,    20.22 tokens per second)
0.00.697.326 I llama_perf_context_print:       total time =     251.11 ms /     6 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3927 (cefd4acb)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32077.56 ms
main:    total time = 32077.56 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.555 I build: 3927 (cefd4acb) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.001.838 I main: load the model and apply lora adapter, if any
0.00.021.732 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.745 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.752 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.753 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.757 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.758 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.759 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.760 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.761 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.761 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.765 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.766 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.766 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.767 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.767 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.623 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.050 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.888 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.894 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.894 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.895 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.896 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.897 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.898 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.900 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.901 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.905 I llama_model_loader: - type  f32:   37 tensors
0.00.130.907 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.907 I llama_model_loader: - type q6_K:   19 tensors
0.00.210.107 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.923 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.575 I llm_load_vocab: special tokens cache size = 5
0.00.265.989 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.004 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.005 I llm_load_print_meta: arch             = gemma
0.00.266.006 I llm_load_print_meta: vocab type       = SPM
0.00.266.006 I llm_load_print_meta: n_vocab          = 256000
0.00.266.007 I llm_load_print_meta: n_merges         = 0
0.00.266.007 I llm_load_print_meta: vocab_only       = 0
0.00.266.007 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.008 I llm_load_print_meta: n_embd           = 2048
0.00.266.008 I llm_load_print_meta: n_layer          = 18
0.00.266.018 I llm_load_print_meta: n_head           = 8
0.00.266.019 I llm_load_print_meta: n_head_kv        = 1
0.00.266.020 I llm_load_print_meta: n_rot            = 256
0.00.266.020 I llm_load_print_meta: n_swa            = 0
0.00.266.020 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.020 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.021 I llm_load_print_meta: n_gqa            = 8
0.00.266.022 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.023 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.024 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.026 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.026 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.026 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.027 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.028 I llm_load_print_meta: n_ff             = 16384
0.00.266.028 I llm_load_print_meta: n_expert         = 0
0.00.266.028 I llm_load_print_meta: n_expert_used    = 0
0.00.266.028 I llm_load_print_meta: causal attn      = 1
0.00.266.029 I llm_load_print_meta: pooling type     = 0
0.00.266.029 I llm_load_print_meta: rope type        = 2
0.00.266.029 I llm_load_print_meta: rope scaling     = linear
0.00.266.031 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.031 I llm_load_print_meta: freq_scale_train = 1
0.00.266.032 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.032 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.032 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.033 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.033 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.033 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.033 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.034 I llm_load_print_meta: model type       = 2B
0.00.266.034 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.266.035 I llm_load_print_meta: model params     = 2.51 B
0.00.266.036 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.266.036 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.037 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.037 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.037 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.038 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.038 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.038 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.039 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.040 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.040 I llm_load_print_meta: max token length = 93
0.00.266.057 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.323.914 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.328.854 I llama_new_context_with_model: n_ctx      = 8192
0.00.328.860 I llama_new_context_with_model: n_batch    = 2048
0.00.328.861 I llama_new_context_with_model: n_ubatch   = 512
0.00.328.861 I llama_new_context_with_model: flash_attn = 0
0.00.328.863 I llama_new_context_with_model: freq_base  = 10000.0
0.00.328.864 I llama_new_context_with_model: freq_scale = 1
0.00.358.992 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.007 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.101 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.359.957 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.359.965 I llama_new_context_with_model: graph nodes  = 601
0.00.359.966 I llama_new_context_with_model: graph splits = 1
0.00.359.967 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.282 I main: llama threadpool init, n_threads = 4
0.00.440.293 I 
0.00.440.365 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.440.365 I 
0.00.440.417 I sampler seed: 826427679
0.00.440.424 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.440.426 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.440.427 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.440.427 I 
 fufilling, and snapping fingers are all normal motor skills that develop gradually. However, if a person experiences any of these symptoms in a rapid or uncontrolled manner,

0.02.019.712 I llama_perf_sampler_print:    sampling time =       4.80 ms /    33 runs   (    0.15 ms per token,  6870.71 tokens per second)
0.02.019.715 I llama_perf_context_print:        load time =     438.42 ms
0.02.019.717 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.019.718 I llama_perf_context_print:        eval time =    1561.82 ms /    32 runs   (   48.81 ms per token,    20.49 tokens per second)
0.02.019.719 I llama_perf_context_print:       total time =    1579.44 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m9.773s
user	8m9.123s
sys	0m6.932s
