+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.641 I build: 4283 (ce4a7b84) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.884 I main: llama backend init
0.00.000.893 I main: load the model and apply lora adapter, if any
0.00.023.645 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.655 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.752 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.765 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.767 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.772 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.777 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.779 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.782 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.784 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.786 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.794 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.798 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.800 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.803 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.806 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.766 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.732 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.766 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.776 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.778 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.779 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.780 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.782 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.783 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.787 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.789 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.790 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.349.791 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.349.793 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.349.802 I llama_model_loader: - type  f32:   37 tensors
0.00.349.804 I llama_model_loader: - type q8_0:  127 tensors
0.00.563.543 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.622.451 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.623.431 I llm_load_vocab: special tokens cache size = 5
0.00.824.242 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.824.314 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.824.318 I llm_load_print_meta: arch             = gemma
0.00.824.319 I llm_load_print_meta: vocab type       = SPM
0.00.824.320 I llm_load_print_meta: n_vocab          = 256000
0.00.824.322 I llm_load_print_meta: n_merges         = 0
0.00.824.323 I llm_load_print_meta: vocab_only       = 0
0.00.824.323 I llm_load_print_meta: n_ctx_train      = 8192
0.00.824.324 I llm_load_print_meta: n_embd           = 2048
0.00.824.325 I llm_load_print_meta: n_layer          = 18
0.00.824.394 I llm_load_print_meta: n_head           = 8
0.00.824.404 I llm_load_print_meta: n_head_kv        = 1
0.00.824.405 I llm_load_print_meta: n_rot            = 256
0.00.824.405 I llm_load_print_meta: n_swa            = 0
0.00.824.406 I llm_load_print_meta: n_embd_head_k    = 256
0.00.824.409 I llm_load_print_meta: n_embd_head_v    = 256
0.00.824.414 I llm_load_print_meta: n_gqa            = 8
0.00.824.420 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.824.425 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.824.428 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.824.429 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.824.430 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.824.430 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.824.430 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.824.436 I llm_load_print_meta: n_ff             = 16384
0.00.824.436 I llm_load_print_meta: n_expert         = 0
0.00.824.437 I llm_load_print_meta: n_expert_used    = 0
0.00.824.437 I llm_load_print_meta: causal attn      = 1
0.00.824.438 I llm_load_print_meta: pooling type     = 0
0.00.824.439 I llm_load_print_meta: rope type        = 2
0.00.824.439 I llm_load_print_meta: rope scaling     = linear
0.00.824.441 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.824.441 I llm_load_print_meta: freq_scale_train = 1
0.00.824.442 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.824.445 I llm_load_print_meta: rope_finetuned   = unknown
0.00.824.445 I llm_load_print_meta: ssm_d_conv       = 0
0.00.824.446 I llm_load_print_meta: ssm_d_inner      = 0
0.00.824.446 I llm_load_print_meta: ssm_d_state      = 0
0.00.824.447 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.824.447 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.824.448 I llm_load_print_meta: model type       = 2B
0.00.824.449 I llm_load_print_meta: model ftype      = Q8_0
0.00.824.452 I llm_load_print_meta: model params     = 2.51 B
0.00.824.453 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.824.454 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.824.455 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.824.455 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.824.456 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.824.457 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.824.458 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.824.458 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.824.466 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.824.467 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.824.468 I llm_load_print_meta: max token length = 93
0.00.927.352 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.927.359 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.927.360 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.927.361 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.927.362 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.927.363 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.933.656 I llama_new_context_with_model: n_seq_max     = 1
0.00.933.663 I llama_new_context_with_model: n_ctx         = 4096
0.00.933.664 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.933.664 I llama_new_context_with_model: n_batch       = 2048
0.00.933.665 I llama_new_context_with_model: n_ubatch      = 512
0.00.933.665 I llama_new_context_with_model: flash_attn    = 0
0.00.933.667 I llama_new_context_with_model: freq_base     = 10000.0
0.00.933.668 I llama_new_context_with_model: freq_scale    = 1
0.00.933.669 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.948.283 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.948.324 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.948.452 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.951.151 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.951.156 I llama_new_context_with_model: graph nodes  = 601
0.00.951.156 I llama_new_context_with_model: graph splits = 1
0.00.951.181 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.561.669 I main: llama threadpool init, n_threads = 4
0.01.561.685 I 
0.01.561.806 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.01.561.810 I 
0.01.562.054 I sampler seed: 2112232447
0.01.562.068 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.562.077 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.562.082 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.562.083 I 
 increasities, and other forms of sexual harassment in the workplace.

Sexual harassment is a pervasive problem in the United States, with significant consequences for individuals and organizations

0.15.184.392 I llama_perf_sampler_print:    sampling time =      49.16 ms /    33 runs   (    1.49 ms per token,   671.33 tokens per second)
0.15.184.397 I llama_perf_context_print:        load time =    1560.67 ms
0.15.184.399 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.184.401 I llama_perf_context_print:        eval time =   13534.40 ms /    32 runs   (  422.95 ms per token,     2.36 tokens per second)
0.15.184.402 I llama_perf_context_print:       total time =   13622.73 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.653 I build: 4283 (ce4a7b84) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.847 I main: llama backend init
0.00.000.855 I main: load the model and apply lora adapter, if any
0.00.023.714 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.831 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.846 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.848 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.854 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.858 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.860 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.861 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.862 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.863 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.873 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.876 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.877 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.878 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.880 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.969 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.579 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.498 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.507 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.508 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.509 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.510 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.512 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.513 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.517 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.519 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.520 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.349.522 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.349.523 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.349.531 I llama_model_loader: - type  f32:   37 tensors
0.00.349.534 I llama_model_loader: - type q8_0:  127 tensors
0.00.597.158 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.660.593 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.661.508 I llm_load_vocab: special tokens cache size = 5
0.00.856.784 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.856.858 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.856.862 I llm_load_print_meta: arch             = gemma
0.00.856.862 I llm_load_print_meta: vocab type       = SPM
0.00.856.863 I llm_load_print_meta: n_vocab          = 256000
0.00.856.866 I llm_load_print_meta: n_merges         = 0
0.00.856.866 I llm_load_print_meta: vocab_only       = 0
0.00.856.867 I llm_load_print_meta: n_ctx_train      = 8192
0.00.856.867 I llm_load_print_meta: n_embd           = 2048
0.00.856.867 I llm_load_print_meta: n_layer          = 18
0.00.856.930 I llm_load_print_meta: n_head           = 8
0.00.856.941 I llm_load_print_meta: n_head_kv        = 1
0.00.856.942 I llm_load_print_meta: n_rot            = 256
0.00.856.943 I llm_load_print_meta: n_swa            = 0
0.00.856.943 I llm_load_print_meta: n_embd_head_k    = 256
0.00.856.944 I llm_load_print_meta: n_embd_head_v    = 256
0.00.856.949 I llm_load_print_meta: n_gqa            = 8
0.00.856.953 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.856.959 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.856.960 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.856.961 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.856.961 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.856.962 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.856.963 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.856.969 I llm_load_print_meta: n_ff             = 16384
0.00.856.970 I llm_load_print_meta: n_expert         = 0
0.00.856.970 I llm_load_print_meta: n_expert_used    = 0
0.00.856.970 I llm_load_print_meta: causal attn      = 1
0.00.856.971 I llm_load_print_meta: pooling type     = 0
0.00.856.971 I llm_load_print_meta: rope type        = 2
0.00.856.972 I llm_load_print_meta: rope scaling     = linear
0.00.856.973 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.856.974 I llm_load_print_meta: freq_scale_train = 1
0.00.856.974 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.856.975 I llm_load_print_meta: rope_finetuned   = unknown
0.00.856.976 I llm_load_print_meta: ssm_d_conv       = 0
0.00.856.976 I llm_load_print_meta: ssm_d_inner      = 0
0.00.856.976 I llm_load_print_meta: ssm_d_state      = 0
0.00.856.977 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.856.977 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.856.978 I llm_load_print_meta: model type       = 2B
0.00.856.979 I llm_load_print_meta: model ftype      = Q8_0
0.00.856.980 I llm_load_print_meta: model params     = 2.51 B
0.00.856.981 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.856.981 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.856.982 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.856.982 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.856.983 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.856.984 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.856.986 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.856.986 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.856.992 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.856.993 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.856.994 I llm_load_print_meta: max token length = 93
0.00.955.593 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.961.510 I llama_new_context_with_model: n_seq_max     = 1
0.00.961.518 I llama_new_context_with_model: n_ctx         = 4096
0.00.961.518 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.961.518 I llama_new_context_with_model: n_batch       = 2048
0.00.961.519 I llama_new_context_with_model: n_ubatch      = 512
0.00.961.519 I llama_new_context_with_model: flash_attn    = 0
0.00.961.521 I llama_new_context_with_model: freq_base     = 10000.0
0.00.961.522 I llama_new_context_with_model: freq_scale    = 1
0.00.961.523 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.976.972 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.977.016 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.977.140 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.979.799 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.979.803 I llama_new_context_with_model: graph nodes  = 601
0.00.979.804 I llama_new_context_with_model: graph splits = 1
0.00.979.843 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.600.091 I main: llama threadpool init, n_threads = 4
0.01.600.105 I 
0.01.600.224 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.01.600.228 I 
0.01.600.466 I sampler seed: 908258423
0.01.600.479 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.600.490 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.600.491 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.600.491 I 
 increamental. [end of text]


0.03.295.716 I llama_perf_sampler_print:    sampling time =       6.24 ms /     5 runs   (    1.25 ms per token,   801.03 tokens per second)
0.03.295.719 I llama_perf_context_print:        load time =    1599.13 ms
0.03.295.744 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.295.746 I llama_perf_context_print:        eval time =    1683.06 ms /     4 runs   (  420.77 ms per token,     2.38 tokens per second)
0.03.295.747 I llama_perf_context_print:       total time =    1695.63 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.638 I build: 4283 (ce4a7b84) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.884 I main: llama backend init
0.00.000.892 I main: load the model and apply lora adapter, if any
0.00.023.443 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.454 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.554 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.567 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.569 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.574 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.577 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.578 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.580 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.582 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.584 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.600 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.606 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.608 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.610 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.621 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.227.433 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.328.739 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.351.839 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.351.852 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.351.853 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.351.855 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.351.856 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.351.858 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.351.860 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.351.864 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.351.865 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.351.867 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.351.868 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.351.870 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.351.878 I llama_model_loader: - type  f32:   37 tensors
0.00.351.881 I llama_model_loader: - type q8_0:  127 tensors
0.00.580.369 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.643.506 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.644.480 I llm_load_vocab: special tokens cache size = 5
0.00.853.350 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.853.424 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.853.425 I llm_load_print_meta: arch             = gemma
0.00.853.426 I llm_load_print_meta: vocab type       = SPM
0.00.853.427 I llm_load_print_meta: n_vocab          = 256000
0.00.853.430 I llm_load_print_meta: n_merges         = 0
0.00.853.430 I llm_load_print_meta: vocab_only       = 0
0.00.853.431 I llm_load_print_meta: n_ctx_train      = 8192
0.00.853.431 I llm_load_print_meta: n_embd           = 2048
0.00.853.432 I llm_load_print_meta: n_layer          = 18
0.00.853.495 I llm_load_print_meta: n_head           = 8
0.00.853.502 I llm_load_print_meta: n_head_kv        = 1
0.00.853.503 I llm_load_print_meta: n_rot            = 256
0.00.853.504 I llm_load_print_meta: n_swa            = 0
0.00.853.504 I llm_load_print_meta: n_embd_head_k    = 256
0.00.853.505 I llm_load_print_meta: n_embd_head_v    = 256
0.00.853.509 I llm_load_print_meta: n_gqa            = 8
0.00.853.514 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.853.520 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.853.521 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.853.523 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.853.524 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.853.524 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.853.524 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.853.529 I llm_load_print_meta: n_ff             = 16384
0.00.853.530 I llm_load_print_meta: n_expert         = 0
0.00.853.530 I llm_load_print_meta: n_expert_used    = 0
0.00.853.530 I llm_load_print_meta: causal attn      = 1
0.00.853.531 I llm_load_print_meta: pooling type     = 0
0.00.853.531 I llm_load_print_meta: rope type        = 2
0.00.853.532 I llm_load_print_meta: rope scaling     = linear
0.00.853.533 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.853.534 I llm_load_print_meta: freq_scale_train = 1
0.00.853.534 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.853.535 I llm_load_print_meta: rope_finetuned   = unknown
0.00.853.536 I llm_load_print_meta: ssm_d_conv       = 0
0.00.853.536 I llm_load_print_meta: ssm_d_inner      = 0
0.00.853.537 I llm_load_print_meta: ssm_d_state      = 0
0.00.853.537 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.853.537 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.853.547 I llm_load_print_meta: model type       = 2B
0.00.853.549 I llm_load_print_meta: model ftype      = Q8_0
0.00.853.549 I llm_load_print_meta: model params     = 2.51 B
0.00.853.550 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.853.551 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.853.551 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.853.564 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.853.565 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.853.565 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.853.565 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.853.566 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.853.572 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.853.573 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.853.573 I llm_load_print_meta: max token length = 93
0.00.931.291 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.931.301 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.931.302 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.931.302 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.931.303 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.931.304 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.937.262 I llama_new_context_with_model: n_seq_max     = 1
0.00.937.269 I llama_new_context_with_model: n_ctx         = 4096
0.00.937.269 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.937.270 I llama_new_context_with_model: n_batch       = 2048
0.00.937.270 I llama_new_context_with_model: n_ubatch      = 512
0.00.937.271 I llama_new_context_with_model: flash_attn    = 0
0.00.937.274 I llama_new_context_with_model: freq_base     = 10000.0
0.00.937.274 I llama_new_context_with_model: freq_scale    = 1
0.00.937.275 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.951.704 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.951.748 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.951.867 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.954.686 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.954.690 I llama_new_context_with_model: graph nodes  = 601
0.00.954.690 I llama_new_context_with_model: graph splits = 1
0.00.954.714 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.566.725 I main: llama threadpool init, n_threads = 4
0.01.566.744 I 
0.01.566.882 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.01.566.886 I 
0.01.567.142 I sampler seed: 532326773
0.01.567.156 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.567.168 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.567.169 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.567.169 I 
 increadibly and carelessly.

This is a satirical poem about a person who seems to lack self-control and exhibits impulsive and reckless behavior.

**Impulsive

0.15.270.342 I llama_perf_sampler_print:    sampling time =      49.34 ms /    33 runs   (    1.50 ms per token,   668.77 tokens per second)
0.15.270.346 I llama_perf_context_print:        load time =    1565.73 ms
0.15.270.348 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.270.350 I llama_perf_context_print:        eval time =   13614.53 ms /    32 runs   (  425.45 ms per token,     2.35 tokens per second)
0.15.270.351 I llama_perf_context_print:       total time =   13703.63 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.610 I build: 4283 (ce4a7b84) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.816 I main: llama backend init
0.00.000.823 I main: load the model and apply lora adapter, if any
0.00.022.975 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.986 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.068 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.079 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.081 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.085 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.087 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.088 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.090 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.092 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.093 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.102 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.103 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.104 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.105 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.107 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.871 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.325.491 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.348.493 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.348.501 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.348.502 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.348.504 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.348.505 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.348.507 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.348.508 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.348.512 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.348.514 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.348.515 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.348.517 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.348.518 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.348.527 I llama_model_loader: - type  f32:   37 tensors
0.00.348.530 I llama_model_loader: - type q8_0:  127 tensors
0.00.569.283 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.628.357 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.629.248 I llm_load_vocab: special tokens cache size = 5
0.00.830.534 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.830.613 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.830.614 I llm_load_print_meta: arch             = gemma
0.00.830.615 I llm_load_print_meta: vocab type       = SPM
0.00.830.616 I llm_load_print_meta: n_vocab          = 256000
0.00.830.619 I llm_load_print_meta: n_merges         = 0
0.00.830.620 I llm_load_print_meta: vocab_only       = 0
0.00.830.620 I llm_load_print_meta: n_ctx_train      = 8192
0.00.830.620 I llm_load_print_meta: n_embd           = 2048
0.00.830.621 I llm_load_print_meta: n_layer          = 18
0.00.830.691 I llm_load_print_meta: n_head           = 8
0.00.830.698 I llm_load_print_meta: n_head_kv        = 1
0.00.830.725 I llm_load_print_meta: n_rot            = 256
0.00.830.726 I llm_load_print_meta: n_swa            = 0
0.00.830.727 I llm_load_print_meta: n_embd_head_k    = 256
0.00.830.727 I llm_load_print_meta: n_embd_head_v    = 256
0.00.830.732 I llm_load_print_meta: n_gqa            = 8
0.00.830.737 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.830.742 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.830.744 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.830.746 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.830.747 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.830.752 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.830.752 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.830.757 I llm_load_print_meta: n_ff             = 16384
0.00.830.757 I llm_load_print_meta: n_expert         = 0
0.00.830.766 I llm_load_print_meta: n_expert_used    = 0
0.00.830.766 I llm_load_print_meta: causal attn      = 1
0.00.830.767 I llm_load_print_meta: pooling type     = 0
0.00.830.768 I llm_load_print_meta: rope type        = 2
0.00.830.768 I llm_load_print_meta: rope scaling     = linear
0.00.830.770 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.830.771 I llm_load_print_meta: freq_scale_train = 1
0.00.830.772 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.830.772 I llm_load_print_meta: rope_finetuned   = unknown
0.00.830.772 I llm_load_print_meta: ssm_d_conv       = 0
0.00.830.773 I llm_load_print_meta: ssm_d_inner      = 0
0.00.830.774 I llm_load_print_meta: ssm_d_state      = 0
0.00.830.774 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.830.774 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.830.775 I llm_load_print_meta: model type       = 2B
0.00.830.776 I llm_load_print_meta: model ftype      = Q8_0
0.00.830.777 I llm_load_print_meta: model params     = 2.51 B
0.00.830.781 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.830.781 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.830.782 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.830.782 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.830.783 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.830.783 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.830.783 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.830.784 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.830.790 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.830.792 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.830.793 I llm_load_print_meta: max token length = 93
0.00.903.238 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.903.250 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.909.389 I llama_new_context_with_model: n_seq_max     = 1
0.00.909.398 I llama_new_context_with_model: n_ctx         = 4096
0.00.909.398 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.909.399 I llama_new_context_with_model: n_batch       = 2048
0.00.909.399 I llama_new_context_with_model: n_ubatch      = 512
0.00.909.400 I llama_new_context_with_model: flash_attn    = 0
0.00.909.404 I llama_new_context_with_model: freq_base     = 10000.0
0.00.909.405 I llama_new_context_with_model: freq_scale    = 1
0.00.909.406 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.924.265 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.924.306 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.924.428 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.926.991 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.926.996 I llama_new_context_with_model: graph nodes  = 601
0.00.926.996 I llama_new_context_with_model: graph splits = 1
0.00.927.019 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.536.907 I main: llama threadpool init, n_threads = 4
0.01.536.922 I 
0.01.537.041 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.01.537.045 I 
0.01.537.287 I sampler seed: 442165374
0.01.537.300 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.537.310 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.537.313 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.537.313 I 
 increably. [end of text]


0.03.255.883 I llama_perf_sampler_print:    sampling time =       6.24 ms /     5 runs   (    1.25 ms per token,   801.92 tokens per second)
0.03.255.886 I llama_perf_context_print:        load time =    1535.99 ms
0.03.255.887 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.255.889 I llama_perf_context_print:        eval time =    1706.13 ms /     4 runs   (  426.53 ms per token,     2.34 tokens per second)
0.03.255.890 I llama_perf_context_print:       total time =    1718.99 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m46.590s
user	2m16.634s
sys	0m9.389s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4283 (ce4a7b84)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 185876.49 ms
main:    total time = 185876.49 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.667 I build: 4283 (ce4a7b84) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.867 I main: llama backend init
0.00.000.874 I main: load the model and apply lora adapter, if any
0.00.023.417 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.428 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.521 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.533 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.535 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.540 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.544 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.546 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.547 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.549 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.551 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.560 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.562 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.563 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.564 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.565 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.227.029 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.328.033 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.350.915 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.350.923 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.350.925 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.350.926 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.350.927 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.350.930 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.350.931 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.350.936 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.350.938 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.350.951 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.350.956 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.350.957 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.350.966 I llama_model_loader: - type  f32:   37 tensors
0.00.350.969 I llama_model_loader: - type q4_K:  108 tensors
0.00.350.970 I llama_model_loader: - type q6_K:   19 tensors
0.00.568.918 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.631.912 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.632.825 I llm_load_vocab: special tokens cache size = 5
0.00.837.357 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.837.429 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.837.433 I llm_load_print_meta: arch             = gemma
0.00.837.434 I llm_load_print_meta: vocab type       = SPM
0.00.837.435 I llm_load_print_meta: n_vocab          = 256000
0.00.837.438 I llm_load_print_meta: n_merges         = 0
0.00.837.438 I llm_load_print_meta: vocab_only       = 0
0.00.837.438 I llm_load_print_meta: n_ctx_train      = 8192
0.00.837.439 I llm_load_print_meta: n_embd           = 2048
0.00.837.439 I llm_load_print_meta: n_layer          = 18
0.00.837.503 I llm_load_print_meta: n_head           = 8
0.00.837.514 I llm_load_print_meta: n_head_kv        = 1
0.00.837.515 I llm_load_print_meta: n_rot            = 256
0.00.837.516 I llm_load_print_meta: n_swa            = 0
0.00.837.516 I llm_load_print_meta: n_embd_head_k    = 256
0.00.837.534 I llm_load_print_meta: n_embd_head_v    = 256
0.00.837.541 I llm_load_print_meta: n_gqa            = 8
0.00.837.546 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.837.551 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.837.553 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.837.554 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.837.555 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.837.555 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.837.565 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.837.570 I llm_load_print_meta: n_ff             = 16384
0.00.837.572 I llm_load_print_meta: n_expert         = 0
0.00.837.572 I llm_load_print_meta: n_expert_used    = 0
0.00.837.572 I llm_load_print_meta: causal attn      = 1
0.00.837.573 I llm_load_print_meta: pooling type     = 0
0.00.837.573 I llm_load_print_meta: rope type        = 2
0.00.837.574 I llm_load_print_meta: rope scaling     = linear
0.00.837.575 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.837.576 I llm_load_print_meta: freq_scale_train = 1
0.00.837.576 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.837.577 I llm_load_print_meta: rope_finetuned   = unknown
0.00.837.577 I llm_load_print_meta: ssm_d_conv       = 0
0.00.837.578 I llm_load_print_meta: ssm_d_inner      = 0
0.00.837.578 I llm_load_print_meta: ssm_d_state      = 0
0.00.837.578 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.837.579 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.837.580 I llm_load_print_meta: model type       = 2B
0.00.837.581 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.837.582 I llm_load_print_meta: model params     = 2.51 B
0.00.837.583 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.837.586 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.837.587 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.837.587 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.837.587 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.837.588 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.837.588 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.837.588 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.837.594 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.837.596 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.837.596 I llm_load_print_meta: max token length = 93
0.00.900.679 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.900.685 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.900.686 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.900.687 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.900.688 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.900.688 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.906.400 I llama_new_context_with_model: n_seq_max     = 1
0.00.906.407 I llama_new_context_with_model: n_ctx         = 4096
0.00.906.408 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.906.408 I llama_new_context_with_model: n_batch       = 2048
0.00.906.408 I llama_new_context_with_model: n_ubatch      = 512
0.00.906.409 I llama_new_context_with_model: flash_attn    = 0
0.00.906.411 I llama_new_context_with_model: freq_base     = 10000.0
0.00.906.412 I llama_new_context_with_model: freq_scale    = 1
0.00.906.412 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.920.916 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.920.955 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.921.076 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.923.754 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.923.758 I llama_new_context_with_model: graph nodes  = 601
0.00.923.759 I llama_new_context_with_model: graph splits = 1
0.00.923.783 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.506.374 I main: llama threadpool init, n_threads = 4
0.01.506.391 I 
0.01.506.514 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.01.506.518 I 
0.01.506.753 I sampler seed: 3975704446
0.01.506.766 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.506.778 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.506.779 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.506.779 I 
 secon.png
I'm unable to access the provided image file. Could you please provide me with the image file and any relevant information about it?



0.12.636.358 I llama_perf_sampler_print:    sampling time =      49.18 ms /    33 runs   (    1.49 ms per token,   670.99 tokens per second)
0.12.636.376 I llama_perf_context_print:        load time =    1505.41 ms
0.12.636.378 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.636.380 I llama_perf_context_print:        eval time =   11042.14 ms /    32 runs   (  345.07 ms per token,     2.90 tokens per second)
0.12.636.381 I llama_perf_context_print:       total time =   11129.99 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4283 (ce4a7b84)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186321.24 ms
main:    total time = 186321.25 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.619 I build: 4283 (ce4a7b84) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.814 I main: llama backend init
0.00.000.822 I main: load the model and apply lora adapter, if any
0.00.024.619 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.714 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.726 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.729 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.735 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.739 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.740 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.742 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.743 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.745 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.761 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.763 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.764 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.766 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.767 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.225.721 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.326.897 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.849 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.858 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.859 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.861 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.862 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.863 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.865 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.869 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.870 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.879 I llama_model_loader: - type  f32:   37 tensors
0.00.349.882 I llama_model_loader: - type q4_K:  108 tensors
0.00.349.882 I llama_model_loader: - type q6_K:   19 tensors
0.00.579.328 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.640.516 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.641.452 I llm_load_vocab: special tokens cache size = 5
0.00.829.278 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.829.349 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.829.350 I llm_load_print_meta: arch             = gemma
0.00.829.351 I llm_load_print_meta: vocab type       = SPM
0.00.829.352 I llm_load_print_meta: n_vocab          = 256000
0.00.829.355 I llm_load_print_meta: n_merges         = 0
0.00.829.355 I llm_load_print_meta: vocab_only       = 0
0.00.829.356 I llm_load_print_meta: n_ctx_train      = 8192
0.00.829.356 I llm_load_print_meta: n_embd           = 2048
0.00.829.356 I llm_load_print_meta: n_layer          = 18
0.00.829.420 I llm_load_print_meta: n_head           = 8
0.00.829.429 I llm_load_print_meta: n_head_kv        = 1
0.00.829.429 I llm_load_print_meta: n_rot            = 256
0.00.829.430 I llm_load_print_meta: n_swa            = 0
0.00.829.430 I llm_load_print_meta: n_embd_head_k    = 256
0.00.829.430 I llm_load_print_meta: n_embd_head_v    = 256
0.00.829.435 I llm_load_print_meta: n_gqa            = 8
0.00.829.440 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.829.446 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.829.448 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.829.449 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.829.449 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.829.450 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.829.450 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.829.455 I llm_load_print_meta: n_ff             = 16384
0.00.829.456 I llm_load_print_meta: n_expert         = 0
0.00.829.456 I llm_load_print_meta: n_expert_used    = 0
0.00.829.457 I llm_load_print_meta: causal attn      = 1
0.00.829.458 I llm_load_print_meta: pooling type     = 0
0.00.829.458 I llm_load_print_meta: rope type        = 2
0.00.829.459 I llm_load_print_meta: rope scaling     = linear
0.00.829.460 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.829.461 I llm_load_print_meta: freq_scale_train = 1
0.00.829.462 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.829.462 I llm_load_print_meta: rope_finetuned   = unknown
0.00.829.464 I llm_load_print_meta: ssm_d_conv       = 0
0.00.829.464 I llm_load_print_meta: ssm_d_inner      = 0
0.00.829.464 I llm_load_print_meta: ssm_d_state      = 0
0.00.829.484 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.829.485 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.829.486 I llm_load_print_meta: model type       = 2B
0.00.829.487 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.829.487 I llm_load_print_meta: model params     = 2.51 B
0.00.829.488 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.829.488 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.829.489 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.829.490 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.829.491 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.829.491 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.829.494 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.829.495 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.829.501 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.829.502 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.829.511 I llm_load_print_meta: max token length = 93
0.00.887.167 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.893.022 I llama_new_context_with_model: n_seq_max     = 1
0.00.893.030 I llama_new_context_with_model: n_ctx         = 4096
0.00.893.030 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.893.031 I llama_new_context_with_model: n_batch       = 2048
0.00.893.031 I llama_new_context_with_model: n_ubatch      = 512
0.00.893.032 I llama_new_context_with_model: flash_attn    = 0
0.00.893.035 I llama_new_context_with_model: freq_base     = 10000.0
0.00.893.036 I llama_new_context_with_model: freq_scale    = 1
0.00.893.037 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.908.730 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.908.775 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.908.896 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.911.488 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.911.492 I llama_new_context_with_model: graph nodes  = 601
0.00.911.492 I llama_new_context_with_model: graph splits = 1
0.00.911.516 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.494.825 I main: llama threadpool init, n_threads = 4
0.01.494.841 I 
0.01.494.967 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.01.494.971 I 
0.01.495.212 I sampler seed: 1856868614
0.01.495.226 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.495.236 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.495.239 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.495.239 I 
 effeering

I am unable to access the requested data as I do not have access to personally identifiable information or personally sensitive data. [end of text]


0.10.882.284 I llama_perf_sampler_print:    sampling time =      41.51 ms /    28 runs   (    1.48 ms per token,   674.57 tokens per second)
0.10.882.287 I llama_perf_context_print:        load time =    1493.91 ms
0.10.882.298 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.882.300 I llama_perf_context_print:        eval time =    9312.97 ms /    27 runs   (  344.92 ms per token,     2.90 tokens per second)
0.10.882.302 I llama_perf_context_print:       total time =    9387.47 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m38.611s
user	46m39.220s
sys	0m6.321s
