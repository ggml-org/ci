### ctest_debug

Runs ctest in debug mode
- status: 0
```
+ ctest --output-on-failure -L main -E test-opt
Test project /home/ggml/work/llama.cpp/build-ci-debug
      Start  1: test-tokenizer-0-bert-bge
 1/27 Test  #1: test-tokenizer-0-bert-bge .........   Passed    0.11 sec
      Start  2: test-tokenizer-0-command-r
 2/27 Test  #2: test-tokenizer-0-command-r ........   Passed    2.68 sec
      Start  3: test-tokenizer-0-deepseek-coder
 3/27 Test  #3: test-tokenizer-0-deepseek-coder ...   Passed    0.39 sec
      Start  4: test-tokenizer-0-deepseek-llm
 4/27 Test  #4: test-tokenizer-0-deepseek-llm .....   Passed    1.00 sec
      Start  5: test-tokenizer-0-falcon
 5/27 Test  #5: test-tokenizer-0-falcon ...........   Passed    0.62 sec
      Start  6: test-tokenizer-0-gpt-2
 6/27 Test  #6: test-tokenizer-0-gpt-2 ............   Passed    0.47 sec
      Start  7: test-tokenizer-0-llama-bpe
 7/27 Test  #7: test-tokenizer-0-llama-bpe ........   Passed    1.88 sec
      Start  8: test-tokenizer-0-llama-spm
 8/27 Test  #8: test-tokenizer-0-llama-spm ........   Passed    0.12 sec
      Start  9: test-tokenizer-0-mpt
 9/27 Test  #9: test-tokenizer-0-mpt ..............   Passed    0.47 sec
      Start 10: test-tokenizer-0-phi-3
10/27 Test #10: test-tokenizer-0-phi-3 ............   Passed    0.12 sec
      Start 11: test-tokenizer-0-qwen2
11/27 Test #11: test-tokenizer-0-qwen2 ............   Passed    1.73 sec
      Start 12: test-tokenizer-0-refact
12/27 Test #12: test-tokenizer-0-refact ...........   Passed    0.48 sec
      Start 13: test-tokenizer-0-starcoder
13/27 Test #13: test-tokenizer-0-starcoder ........   Passed    0.48 sec
      Start 14: test-sampling
14/27 Test #14: test-sampling .....................   Passed    6.32 sec
      Start 15: test-grammar-parser
15/27 Test #15: test-grammar-parser ...............   Passed    0.00 sec
      Start 16: test-grammar-integration
16/27 Test #16: test-grammar-integration ..........   Passed    0.04 sec
      Start 17: test-llama-grammar
17/27 Test #17: test-llama-grammar ................   Passed    0.00 sec
      Start 18: test-json-schema-to-grammar
18/27 Test #18: test-json-schema-to-grammar .......   Passed    1.98 sec
      Start 19: test-tokenizer-1-llama-spm
19/27 Test #19: test-tokenizer-1-llama-spm ........   Passed    1.75 sec
      Start 20: test-log
20/27 Test #20: test-log ..........................   Passed    0.02 sec
      Start 21: test-arg-parser
21/27 Test #21: test-arg-parser ...................   Passed    0.07 sec
      Start 22: test-chat-template
22/27 Test #22: test-chat-template ................   Passed    0.00 sec
      Start 23: test-backend-ops
23/27 Test #23: test-backend-ops ..................   Passed    0.01 sec
      Start 26: test-barrier
24/27 Test #26: test-barrier ......................   Passed    1.34 sec
      Start 27: test-quantize-fns
25/27 Test #27: test-quantize-fns .................   Passed   31.05 sec
      Start 28: test-quantize-perf
26/27 Test #28: test-quantize-perf ................   Passed    0.62 sec
      Start 29: test-rope
27/27 Test #29: test-rope .........................   Passed    0.06 sec

100% tests passed, 0 tests failed out of 27

Label Time Summary:
main    =  53.83 sec*proc (27 tests)

Total Test time (real) =  53.84 sec

real	0m53.909s
user	1m9.049s
sys	0m0.795s
```

### ctest_release

Runs ctest in release mode
- status: 0
```
+ ctest --output-on-failure -L main
Test project /home/ggml/work/llama.cpp/build-ci-release
      Start  1: test-tokenizer-0-bert-bge
 1/27 Test  #1: test-tokenizer-0-bert-bge .........   Passed    0.03 sec
      Start  2: test-tokenizer-0-command-r
 2/27 Test  #2: test-tokenizer-0-command-r ........   Passed    0.61 sec
      Start  3: test-tokenizer-0-deepseek-coder
 3/27 Test  #3: test-tokenizer-0-deepseek-coder ...   Passed    0.07 sec
      Start  4: test-tokenizer-0-deepseek-llm
 4/27 Test  #4: test-tokenizer-0-deepseek-llm .....   Passed    0.21 sec
      Start  5: test-tokenizer-0-falcon
 5/27 Test  #5: test-tokenizer-0-falcon ...........   Passed    0.13 sec
      Start  6: test-tokenizer-0-gpt-2
 6/27 Test  #6: test-tokenizer-0-gpt-2 ............   Passed    0.10 sec
      Start  7: test-tokenizer-0-llama-bpe
 7/27 Test  #7: test-tokenizer-0-llama-bpe ........   Passed    0.43 sec
      Start  8: test-tokenizer-0-llama-spm
 8/27 Test  #8: test-tokenizer-0-llama-spm ........   Passed    0.04 sec
      Start  9: test-tokenizer-0-mpt
 9/27 Test  #9: test-tokenizer-0-mpt ..............   Passed    0.10 sec
      Start 10: test-tokenizer-0-phi-3
10/27 Test #10: test-tokenizer-0-phi-3 ............   Passed    0.04 sec
      Start 11: test-tokenizer-0-qwen2
11/27 Test #11: test-tokenizer-0-qwen2 ............   Passed    0.34 sec
      Start 12: test-tokenizer-0-refact
12/27 Test #12: test-tokenizer-0-refact ...........   Passed    0.10 sec
      Start 13: test-tokenizer-0-starcoder
13/27 Test #13: test-tokenizer-0-starcoder ........   Passed    0.10 sec
      Start 14: test-sampling
14/27 Test #14: test-sampling .....................   Passed    1.27 sec
      Start 15: test-grammar-parser
15/27 Test #15: test-grammar-parser ...............   Passed    0.00 sec
      Start 16: test-grammar-integration
16/27 Test #16: test-grammar-integration ..........   Passed    0.01 sec
      Start 17: test-llama-grammar
17/27 Test #17: test-llama-grammar ................   Passed    0.00 sec
      Start 18: test-json-schema-to-grammar
18/27 Test #18: test-json-schema-to-grammar .......   Passed    1.90 sec
      Start 19: test-tokenizer-1-llama-spm
19/27 Test #19: test-tokenizer-1-llama-spm ........   Passed    0.23 sec
      Start 20: test-log
20/27 Test #20: test-log ..........................   Passed    0.02 sec
      Start 21: test-arg-parser
21/27 Test #21: test-arg-parser ...................   Passed    0.03 sec
      Start 22: test-chat-template
22/27 Test #22: test-chat-template ................   Passed    0.00 sec
      Start 23: test-backend-ops
23/27 Test #23: test-backend-ops ..................   Passed    0.00 sec
      Start 26: test-barrier
24/27 Test #26: test-barrier ......................   Passed    0.32 sec
      Start 27: test-quantize-fns
25/27 Test #27: test-quantize-fns .................   Passed   16.52 sec
      Start 28: test-quantize-perf
26/27 Test #28: test-quantize-perf ................   Passed    0.08 sec
      Start 29: test-rope
27/27 Test #29: test-rope .........................   Passed    0.04 sec

100% tests passed, 0 tests failed out of 27

Label Time Summary:
main    =  22.72 sec*proc (27 tests)

Total Test time (real) =  22.73 sec

real	0m22.797s
user	0m24.269s
sys	0m0.804s
```
### embd_bge_small

BGE Small (BERT):
- status: 0
- f16: 
```
+ ./bin/llama-embedding --model ../models-mnt/bge-small/ggml-model-f16.gguf -p 'I believe the meaning of life is' -ngl 99 -c 0
warning: no usable GPU found, --gpu-layers option will be ignored
warning: one possible reason is that llama.cpp was compiled without GPU support
warning: consult docs/build.md for compilation instructions
0.00.000.539 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.003.713 I llama_model_loader: loaded meta data with 25 key-value pairs and 197 tensors from ../models-mnt/bge-small/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.003.723 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.003.730 I llama_model_loader: - kv   0:                       general.architecture str              = bert
0.00.003.732 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.003.732 I llama_model_loader: - kv   2:                               general.name str              = Bge Small
0.00.003.733 I llama_model_loader: - kv   3:                           general.basename str              = bge
0.00.003.733 I llama_model_loader: - kv   4:                         general.size_label str              = small
0.00.003.737 I llama_model_loader: - kv   5:                           bert.block_count u32              = 12
0.00.003.737 I llama_model_loader: - kv   6:                        bert.context_length u32              = 512
0.00.003.738 I llama_model_loader: - kv   7:                      bert.embedding_length u32              = 384
0.00.003.738 I llama_model_loader: - kv   8:                   bert.feed_forward_length u32              = 1536
0.00.003.739 I llama_model_loader: - kv   9:                  bert.attention.head_count u32              = 12
0.00.003.742 I llama_model_loader: - kv  10:          bert.attention.layer_norm_epsilon f32              = 0.000000
0.00.003.742 I llama_model_loader: - kv  11:                          general.file_type u32              = 1
0.00.003.743 I llama_model_loader: - kv  12:                      bert.attention.causal bool             = false
0.00.003.743 I llama_model_loader: - kv  13:                          bert.pooling_type u32              = 2
0.00.003.743 I llama_model_loader: - kv  14:            tokenizer.ggml.token_type_count u32              = 2
0.00.003.744 I llama_model_loader: - kv  15:                       tokenizer.ggml.model str              = bert
0.00.003.744 I llama_model_loader: - kv  16:                         tokenizer.ggml.pre str              = jina-v2-en
0.00.007.235 I llama_model_loader: - kv  17:                      tokenizer.ggml.tokens arr[str,30522]   = ["[PAD]", "[unused0]", "[unused1]", "...
0.00.008.027 I llama_model_loader: - kv  18:                  tokenizer.ggml.token_type arr[i32,30522]   = [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.008.031 I llama_model_loader: - kv  19:            tokenizer.ggml.unknown_token_id u32              = 100
0.00.008.032 I llama_model_loader: - kv  20:          tokenizer.ggml.seperator_token_id u32              = 102
0.00.008.032 I llama_model_loader: - kv  21:            tokenizer.ggml.padding_token_id u32              = 0
0.00.008.032 I llama_model_loader: - kv  22:                tokenizer.ggml.cls_token_id u32              = 101
0.00.008.033 I llama_model_loader: - kv  23:               tokenizer.ggml.mask_token_id u32              = 103
0.00.008.033 I llama_model_loader: - kv  24:               general.quantization_version u32              = 2
0.00.008.035 I llama_model_loader: - type  f32:  124 tensors
0.00.008.035 I llama_model_loader: - type  f16:   73 tensors
0.00.019.452 I llm_load_vocab: special tokens cache size = 5
0.00.022.165 I llm_load_vocab: token to piece cache size = 0.2032 MB
0.00.022.174 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.022.174 I llm_load_print_meta: arch             = bert
0.00.022.175 I llm_load_print_meta: vocab type       = WPM
0.00.022.175 I llm_load_print_meta: n_vocab          = 30522
0.00.022.176 I llm_load_print_meta: n_merges         = 0
0.00.022.176 I llm_load_print_meta: vocab_only       = 0
0.00.022.176 I llm_load_print_meta: n_ctx_train      = 512
0.00.022.176 I llm_load_print_meta: n_embd           = 384
0.00.022.177 I llm_load_print_meta: n_layer          = 12
0.00.022.183 I llm_load_print_meta: n_head           = 12
0.00.022.184 I llm_load_print_meta: n_head_kv        = 12
0.00.022.184 I llm_load_print_meta: n_rot            = 32
0.00.022.185 I llm_load_print_meta: n_swa            = 0
0.00.022.185 I llm_load_print_meta: n_embd_head_k    = 32
0.00.022.185 I llm_load_print_meta: n_embd_head_v    = 32
0.00.022.186 I llm_load_print_meta: n_gqa            = 1
0.00.022.187 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.022.188 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.022.189 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.022.190 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.022.190 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.022.191 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.022.192 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.022.193 I llm_load_print_meta: n_ff             = 1536
0.00.022.193 I llm_load_print_meta: n_expert         = 0
0.00.022.193 I llm_load_print_meta: n_expert_used    = 0
0.00.022.194 I llm_load_print_meta: causal attn      = 0
0.00.022.194 I llm_load_print_meta: pooling type     = 2
0.00.022.194 I llm_load_print_meta: rope type        = 2
0.00.022.194 I llm_load_print_meta: rope scaling     = linear
0.00.022.196 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.022.196 I llm_load_print_meta: freq_scale_train = 1
0.00.022.197 I llm_load_print_meta: n_ctx_orig_yarn  = 512
0.00.022.198 I llm_load_print_meta: rope_finetuned   = unknown
0.00.022.198 I llm_load_print_meta: ssm_d_conv       = 0
0.00.022.198 I llm_load_print_meta: ssm_d_inner      = 0
0.00.022.199 I llm_load_print_meta: ssm_d_state      = 0
0.00.022.199 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.022.200 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.022.200 I llm_load_print_meta: model type       = 33M
0.00.022.201 I llm_load_print_meta: model ftype      = F16
0.00.022.202 I llm_load_print_meta: model params     = 33.21 M
0.00.022.203 I llm_load_print_meta: model size       = 63.84 MiB (16.12 BPW) 
0.00.022.203 I llm_load_print_meta: general.name     = Bge Small
0.00.022.203 I llm_load_print_meta: UNK token        = 100 '[UNK]'
0.00.022.204 I llm_load_print_meta: SEP token        = 102 '[SEP]'
0.00.022.204 I llm_load_print_meta: PAD token        = 0 '[PAD]'
0.00.022.205 I llm_load_print_meta: CLS token        = 101 '[CLS]'
0.00.022.205 I llm_load_print_meta: MASK token       = 103 '[MASK]'
0.00.022.205 I llm_load_print_meta: LF token         = 0 '[PAD]'
0.00.022.206 I llm_load_print_meta: max token length = 21
0.00.026.687 I llm_load_tensors:   CPU_Mapped model buffer size =    63.84 MiB
...............................................
0.00.027.661 I llama_new_context_with_model: n_seq_max     = 1
0.00.027.665 I llama_new_context_with_model: n_ctx         = 512
0.00.027.665 I llama_new_context_with_model: n_ctx_per_seq = 512
0.00.027.666 I llama_new_context_with_model: n_batch       = 2048
0.00.027.666 I llama_new_context_with_model: n_ubatch      = 2048
0.00.027.666 I llama_new_context_with_model: flash_attn    = 0
0.00.027.668 I llama_new_context_with_model: freq_base     = 10000.0
0.00.027.668 I llama_new_context_with_model: freq_scale    = 1
0.00.030.007 I llama_kv_cache_init:        CPU KV buffer size =     9.00 MiB
0.00.030.014 I llama_new_context_with_model: KV self size  =    9.00 MiB, K (f16):    4.50 MiB, V (f16):    4.50 MiB
0.00.030.019 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.031.442 I llama_new_context_with_model:        CPU compute buffer size =    16.01 MiB
0.00.031.446 I llama_new_context_with_model: graph nodes  = 429
0.00.031.447 I llama_new_context_with_model: graph splits = 1
0.00.031.448 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.034.814 I 
0.00.034.896 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.036.493 I batch_decode: n_tokens = 9, n_seq = 1

embedding 0: -0.043973 -0.019884  0.007663 -0.000832  0.001384 -0.037043  0.109429  0.042574  0.092058 -0.015914  0.006789 -0.035678 -0.017887  0.015052  0.018120  0.015864 -0.011303  0.010416 -0.085217 -0.008459  0.091368 -0.017066 -0.060342 -0.024485  0.027517  0.076064  0.027980 -0.014553  0.017654 -0.033284 -0.037870 -0.019001  0.068665 -0.009841 -0.025040  0.072343 -0.046558  0.011024 -0.050261  0.047714  0.032397 -0.011754  0.022052  0.049640  0.010463  0.005795 -0.028866  0.008928 -0.018515 -0.051481 -0.046042  0.030482 -0.035420  0.054201 -0.069654  0.044251  0.029795  0.046303  0.073405 -0.042586  0.076105  0.038853 -0.181174  0.082502  0.042270 -0.064541 -0.060107 -0.017848  0.006475  0.005892  0.017173 -0.026633  0.064562  0.112599  0.035151 -0.067415  0.027091 -0.067278 -0.033467 -0.033234  0.033242  0.013524 -0.003332 -0.037479 -0.052062  0.055152 -0.001983 -0.038292  0.064450  0.028822 -0.043335 -0.029236 -0.039466  0.036323  0.008385 -0.015454 -0.036588  0.018146  0.028599  0.342831 -0.044468  0.056102  0.017633 -0.020863 -0.066805  0.000153 -0.037913 -0.030070 -0.008535 -0.021581  0.000536 -0.003216  0.004011  0.018916 -0.008553  0.025823  0.049441  0.000086  0.050940 -0.042480 -0.031904  0.023602  0.030694 -0.023159 -0.046273 -0.079267  0.115187  0.046755  0.027834 -0.040731  0.067789 -0.022965  0.010318 -0.032958 -0.018309  0.043840  0.024264  0.052404  0.007477  0.008893  0.011243 -0.074647 -0.065566 -0.026746 -0.041198 -0.023884  0.026735  0.006897  0.027740  0.052873 -0.036658  0.057698 -0.000190  0.031754 -0.019768 -0.022072  0.041040 -0.058903  0.019613  0.043147  0.043596  0.041578 -0.022522  0.027046 -0.021826  0.005442 -0.041315 -0.001239  0.024448  0.002091  0.044333 -0.022737  0.043669  0.064759  0.055422  0.037072 -0.000922  0.046112  0.045813 -0.008493  0.063045 -0.073248 -0.011937  0.032114  0.023951  0.014719 -0.033687  0.001091 -0.015830 -0.019010  0.047874  0.110820  0.028442  0.031366 -0.013284 -0.057521  0.006649  0.005148 -0.012254 -0.051442 -0.000977 -0.017648 -0.019446 -0.040925  0.009197 -0.057945  0.050966  0.052339 -0.009609 -0.040256 -0.014084 -0.024882 -0.017266  0.006298  0.006585 -0.026933  0.015609  0.030761  0.002575  0.023214 -0.022196 -0.098554 -0.051096 -0.278019 -0.014999 -0.061565 -0.027230  0.017666 -0.010951 -0.017081  0.035055  0.046988 -0.015427  0.015238 -0.025470  0.047851 -0.005957 -0.000740 -0.061026 -0.068936 -0.060387 -0.035954  0.043319 -0.055047  0.015081  0.000537 -0.058199 -0.010453  0.012636  0.151510  0.127100 -0.013604  0.042001 -0.025672  0.014032 -0.001047 -0.150463  0.044849  0.005319 -0.036276 -0.029802 -0.020196 -0.034877  0.010222  0.033545 -0.048174 -0.051790 -0.017458 -0.023487  0.047366  0.052076 -0.016779 -0.055451  0.025834 -0.005708  0.010712  0.038702  0.008203 -0.009765 -0.105785 -0.027435 -0.096103  0.025061 -0.011241  0.092367  0.056101  0.003778  0.027793  0.002078 -0.051088 -0.039881 -0.013534 -0.044976 -0.015329  0.002925 -0.043513 -0.077945  0.065223 -0.006822 -0.001606 -0.014654  0.071549  0.023720 -0.037171  0.009171  0.001546 -0.032265  0.015457  0.037872  0.000355 -0.053208  0.021320 -0.039827  0.000033  0.013409  0.019808 -0.057879  0.006475 -0.049533 -0.267845  0.039154 -0.067969  0.038242 -0.012330  0.041493 -0.016116  0.052391 -0.071351  0.011368  0.024714 -0.007231  0.082101  0.028538 -0.021506  0.040491 -0.004553 -0.074596 -0.014756  0.020032  0.002299  0.023152  0.197216 -0.043224 -0.025986 -0.004957 -0.019280  0.074267  0.001719 -0.031988 -0.036599 -0.045077  0.000546 -0.011566  0.018121 -0.029470 -0.008458  0.006416  0.050807 -0.014958  0.006174  0.026088 -0.030801  0.048051  0.114089 -0.040818 -0.011478  0.005393 -0.003589  0.025162 -0.059140  0.013761 -0.010407  0.038699  0.051454  0.035408  0.035042 -0.017040  0.026373 -0.014498 -0.050023  0.003218  0.054131  0.039731 -0.039132 

0.00.040.231 I llama_perf_context_print:        load time =      34.25 ms
0.00.040.233 I llama_perf_context_print: prompt eval time =       3.33 ms /     9 tokens (    0.37 ms per token,  2701.08 tokens per second)
0.00.040.235 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.040.236 I llama_perf_context_print:       total time =       5.42 ms /    10 tokens

real	0m0.051s
user	0m0.071s
sys	0m0.017s
```
- q8_0:
```
+ ./bin/llama-embedding --model ../models-mnt/bge-small/ggml-model-q8_0.gguf -p 'I believe the meaning of life is' -ngl 99 -c 0
warning: no usable GPU found, --gpu-layers option will be ignored
warning: one possible reason is that llama.cpp was compiled without GPU support
warning: consult docs/build.md for compilation instructions
0.00.000.538 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.003.763 I llama_model_loader: loaded meta data with 25 key-value pairs and 197 tensors from ../models-mnt/bge-small/ggml-model-q8_0.gguf (version GGUF V3 (latest))
0.00.003.785 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.003.790 I llama_model_loader: - kv   0:                       general.architecture str              = bert
0.00.003.792 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.003.792 I llama_model_loader: - kv   2:                               general.name str              = Bge Small
0.00.003.793 I llama_model_loader: - kv   3:                           general.basename str              = bge
0.00.003.793 I llama_model_loader: - kv   4:                         general.size_label str              = small
0.00.003.796 I llama_model_loader: - kv   5:                           bert.block_count u32              = 12
0.00.003.797 I llama_model_loader: - kv   6:                        bert.context_length u32              = 512
0.00.003.798 I llama_model_loader: - kv   7:                      bert.embedding_length u32              = 384
0.00.003.798 I llama_model_loader: - kv   8:                   bert.feed_forward_length u32              = 1536
0.00.003.799 I llama_model_loader: - kv   9:                  bert.attention.head_count u32              = 12
0.00.003.802 I llama_model_loader: - kv  10:          bert.attention.layer_norm_epsilon f32              = 0.000000
0.00.003.803 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.003.804 I llama_model_loader: - kv  12:                      bert.attention.causal bool             = false
0.00.003.804 I llama_model_loader: - kv  13:                          bert.pooling_type u32              = 2
0.00.003.804 I llama_model_loader: - kv  14:            tokenizer.ggml.token_type_count u32              = 2
0.00.003.805 I llama_model_loader: - kv  15:                       tokenizer.ggml.model str              = bert
0.00.003.805 I llama_model_loader: - kv  16:                         tokenizer.ggml.pre str              = jina-v2-en
0.00.007.221 I llama_model_loader: - kv  17:                      tokenizer.ggml.tokens arr[str,30522]   = ["[PAD]", "[unused0]", "[unused1]", "...
0.00.008.012 I llama_model_loader: - kv  18:                  tokenizer.ggml.token_type arr[i32,30522]   = [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.008.015 I llama_model_loader: - kv  19:            tokenizer.ggml.unknown_token_id u32              = 100
0.00.008.016 I llama_model_loader: - kv  20:          tokenizer.ggml.seperator_token_id u32              = 102
0.00.008.016 I llama_model_loader: - kv  21:            tokenizer.ggml.padding_token_id u32              = 0
0.00.008.017 I llama_model_loader: - kv  22:                tokenizer.ggml.cls_token_id u32              = 101
0.00.008.017 I llama_model_loader: - kv  23:               tokenizer.ggml.mask_token_id u32              = 103
0.00.008.018 I llama_model_loader: - kv  24:               general.quantization_version u32              = 2
0.00.008.020 I llama_model_loader: - type  f32:  124 tensors
0.00.008.020 I llama_model_loader: - type q8_0:   73 tensors
0.00.019.501 I llm_load_vocab: special tokens cache size = 5
0.00.022.182 I llm_load_vocab: token to piece cache size = 0.2032 MB
0.00.022.193 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.022.193 I llm_load_print_meta: arch             = bert
0.00.022.194 I llm_load_print_meta: vocab type       = WPM
0.00.022.194 I llm_load_print_meta: n_vocab          = 30522
0.00.022.195 I llm_load_print_meta: n_merges         = 0
0.00.022.195 I llm_load_print_meta: vocab_only       = 0
0.00.022.195 I llm_load_print_meta: n_ctx_train      = 512
0.00.022.195 I llm_load_print_meta: n_embd           = 384
0.00.022.195 I llm_load_print_meta: n_layer          = 12
0.00.022.202 I llm_load_print_meta: n_head           = 12
0.00.022.203 I llm_load_print_meta: n_head_kv        = 12
0.00.022.204 I llm_load_print_meta: n_rot            = 32
0.00.022.204 I llm_load_print_meta: n_swa            = 0
0.00.022.205 I llm_load_print_meta: n_embd_head_k    = 32
0.00.022.205 I llm_load_print_meta: n_embd_head_v    = 32
0.00.022.206 I llm_load_print_meta: n_gqa            = 1
0.00.022.207 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.022.207 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.022.208 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.022.209 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.022.209 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.022.209 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.022.210 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.022.211 I llm_load_print_meta: n_ff             = 1536
0.00.022.211 I llm_load_print_meta: n_expert         = 0
0.00.022.211 I llm_load_print_meta: n_expert_used    = 0
0.00.022.212 I llm_load_print_meta: causal attn      = 0
0.00.022.212 I llm_load_print_meta: pooling type     = 2
0.00.022.213 I llm_load_print_meta: rope type        = 2
0.00.022.213 I llm_load_print_meta: rope scaling     = linear
0.00.022.214 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.022.214 I llm_load_print_meta: freq_scale_train = 1
0.00.022.215 I llm_load_print_meta: n_ctx_orig_yarn  = 512
0.00.022.215 I llm_load_print_meta: rope_finetuned   = unknown
0.00.022.215 I llm_load_print_meta: ssm_d_conv       = 0
0.00.022.215 I llm_load_print_meta: ssm_d_inner      = 0
0.00.022.215 I llm_load_print_meta: ssm_d_state      = 0
0.00.022.216 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.022.216 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.022.218 I llm_load_print_meta: model type       = 33M
0.00.022.218 I llm_load_print_meta: model ftype      = Q8_0
0.00.022.219 I llm_load_print_meta: model params     = 33.21 M
0.00.022.220 I llm_load_print_meta: model size       = 34.38 MiB (8.68 BPW) 
0.00.022.220 I llm_load_print_meta: general.name     = Bge Small
0.00.022.221 I llm_load_print_meta: UNK token        = 100 '[UNK]'
0.00.022.221 I llm_load_print_meta: SEP token        = 102 '[SEP]'
0.00.022.221 I llm_load_print_meta: PAD token        = 0 '[PAD]'
0.00.022.222 I llm_load_print_meta: CLS token        = 101 '[CLS]'
0.00.022.222 I llm_load_print_meta: MASK token       = 103 '[MASK]'
0.00.022.222 I llm_load_print_meta: LF token         = 0 '[PAD]'
0.00.022.223 I llm_load_print_meta: max token length = 21
0.00.025.360 I llm_load_tensors:   CPU_Mapped model buffer size =    34.38 MiB
.................................................
0.00.026.319 I llama_new_context_with_model: n_seq_max     = 1
0.00.026.323 I llama_new_context_with_model: n_ctx         = 512
0.00.026.323 I llama_new_context_with_model: n_ctx_per_seq = 512
0.00.026.323 I llama_new_context_with_model: n_batch       = 2048
0.00.026.324 I llama_new_context_with_model: n_ubatch      = 2048
0.00.026.324 I llama_new_context_with_model: flash_attn    = 0
0.00.026.326 I llama_new_context_with_model: freq_base     = 10000.0
0.00.026.326 I llama_new_context_with_model: freq_scale    = 1
0.00.028.731 I llama_kv_cache_init:        CPU KV buffer size =     9.00 MiB
0.00.028.739 I llama_new_context_with_model: KV self size  =    9.00 MiB, K (f16):    4.50 MiB, V (f16):    4.50 MiB
0.00.028.744 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.030.225 I llama_new_context_with_model:        CPU compute buffer size =    16.01 MiB
0.00.030.229 I llama_new_context_with_model: graph nodes  = 429
0.00.030.229 I llama_new_context_with_model: graph splits = 1
0.00.030.231 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.032.972 I 
0.00.033.039 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.034.576 I batch_decode: n_tokens = 9, n_seq = 1

embedding 0: -0.044922 -0.019413  0.009515 -0.002102  0.002819 -0.037346  0.108884  0.042320  0.092050 -0.015802  0.006203 -0.037483 -0.019315  0.014838  0.017312  0.014293 -0.014406  0.012199 -0.084337 -0.007969  0.092391 -0.017228 -0.062058 -0.024418  0.027417  0.077134  0.028219 -0.014623  0.017895 -0.035334 -0.038133 -0.018044  0.068934 -0.010808 -0.024000  0.071910 -0.045750  0.011734 -0.050866  0.050023  0.032255 -0.012384  0.022736  0.051037  0.009457  0.005324 -0.028037  0.007784 -0.019140 -0.054168 -0.047119  0.029088 -0.036035  0.053016 -0.067690  0.044014  0.029616  0.047229  0.073648 -0.043168  0.075918  0.037900 -0.183180  0.081508  0.042762 -0.066165 -0.059699 -0.017308  0.007110  0.005047  0.016962 -0.027730  0.064833  0.111964  0.034996 -0.068446  0.026829 -0.066310 -0.034038 -0.035547  0.032486  0.014914 -0.004339 -0.037040 -0.051606  0.053873 -0.002577 -0.037109  0.062467  0.029008 -0.041969 -0.029640 -0.039698  0.037257  0.007866 -0.014732 -0.036933  0.018711  0.029345  0.345662 -0.043828  0.055518  0.015965 -0.021585 -0.062967  0.000030 -0.037829 -0.031117 -0.008600 -0.019632  0.000917 -0.003949  0.004752  0.017646 -0.010475  0.024866  0.048859 -0.001073  0.050841 -0.042711 -0.029936  0.023056  0.031158 -0.023216 -0.044477 -0.079865  0.114434  0.046968  0.027606 -0.040895  0.067793 -0.022368  0.009769 -0.034681 -0.016154  0.044193  0.022540  0.051639  0.007797  0.007391  0.010083 -0.074316 -0.064372 -0.025101 -0.041340 -0.024550  0.027224  0.005440  0.026617  0.051940 -0.036700  0.058742  0.001461  0.032451 -0.020921 -0.021366  0.040976 -0.059863  0.019722  0.043085  0.042850  0.040582 -0.022107  0.029685 -0.022324  0.007497 -0.040081  0.000397  0.023739  0.002122  0.044315 -0.022987  0.043469  0.064731  0.056117  0.038352  0.000367  0.048953  0.045241 -0.009339  0.060821 -0.073344 -0.011166  0.032674  0.022647  0.014999 -0.033428  0.000347 -0.015448 -0.018743  0.048620  0.110470  0.029597  0.030962 -0.011328 -0.056829  0.006497  0.004694 -0.012985 -0.051779 -0.003150 -0.017702 -0.019727 -0.040388  0.009924 -0.059078  0.050095  0.052471 -0.010575 -0.039471 -0.015563 -0.023734 -0.016019  0.005706  0.007087 -0.027253  0.016754  0.030656  0.001635  0.023381 -0.021934 -0.097271 -0.050370 -0.277306 -0.014223 -0.061428 -0.027445  0.017050 -0.009608 -0.017319  0.033824  0.048471 -0.016368  0.016177 -0.022949  0.049435 -0.005335  0.000750 -0.060800 -0.068838 -0.059804 -0.036057  0.042588 -0.054961  0.014508 -0.000423 -0.059416 -0.009816  0.010768  0.150426  0.126644 -0.011118  0.042668 -0.025554  0.015019 -0.000210 -0.150502  0.042745  0.005784 -0.036606 -0.029014 -0.019236 -0.034275  0.009913  0.034990 -0.049935 -0.053754 -0.017105 -0.024232  0.048749  0.050670 -0.016684 -0.056609  0.023764 -0.005639  0.011582  0.038581  0.006578 -0.008041 -0.106921 -0.027615 -0.097465  0.025000 -0.011210  0.092479  0.055639  0.005293  0.026939  0.001806 -0.051768 -0.038913 -0.013483 -0.046246 -0.014757  0.001830 -0.044614 -0.077737  0.066446 -0.006428 -0.000018 -0.014871  0.071112  0.024387 -0.036434  0.008250  0.001929 -0.033247  0.017147  0.038480  0.001671 -0.051957  0.021081 -0.038685  0.000496  0.012745  0.021241 -0.057647  0.004903 -0.049491 -0.267161  0.038997 -0.067915  0.037074 -0.011075  0.043293 -0.015534  0.050443 -0.070772  0.012405  0.024955 -0.006946  0.082643  0.029026 -0.022356  0.042367 -0.003229 -0.074061 -0.015830  0.020035  0.002637  0.023772  0.196120 -0.044049 -0.024944 -0.004666 -0.017908  0.073222  0.001813 -0.031931 -0.035815 -0.044377 -0.000573 -0.011445  0.018698 -0.027002 -0.010099  0.005813  0.048950 -0.014805  0.006814  0.027005 -0.030880  0.048526  0.111968 -0.039582 -0.012955  0.004347 -0.002677  0.025424 -0.060709  0.014993 -0.008847  0.037792  0.050273  0.035482  0.036962 -0.017363  0.025554 -0.016189 -0.050841  0.003358  0.054623  0.039363 -0.039516 

0.00.037.564 I llama_perf_context_print:        load time =      32.41 ms
0.00.037.567 I llama_perf_context_print: prompt eval time =       2.72 ms /     9 tokens (    0.30 ms per token,  3312.48 tokens per second)
0.00.037.568 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.037.569 I llama_perf_context_print:       total time =       4.59 ms /    10 tokens

real	0m0.047s
user	0m0.065s
sys	0m0.014s
```
### rerank_tiny

Rerank Tiny (Jina):
- status: 0
- f16: 
```
+ ./bin/llama-embedding --model ../models-mnt/rerank-tiny/ggml-model-f16.gguf -p 'what is panda?</s></s>hi\nwhat is panda?</s></s>it'\''s a bear\nwhat is panda?</s></s>The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.' -ngl 99 -c 0 --pooling rank --embd-normalize -1 --verbose-prompt
warning: no usable GPU found, --gpu-layers option will be ignored
warning: one possible reason is that llama.cpp was compiled without GPU support
warning: consult docs/build.md for compilation instructions
0.00.000.188 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.008.090 I llama_model_loader: loaded meta data with 29 key-value pairs and 70 tensors from ../models-mnt/rerank-tiny/ggml-model-f16.gguf (version GGUF V3 (latest))
0.00.008.103 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.008.111 I llama_model_loader: - kv   0:                       general.architecture str              = jina-bert-v2
0.00.008.112 I llama_model_loader: - kv   1:                               general.type str              = model
0.00.008.113 I llama_model_loader: - kv   2:                               general.name str              = Jina Bert Implementation
0.00.008.113 I llama_model_loader: - kv   3:                       general.organization str              = Jinaai
0.00.008.114 I llama_model_loader: - kv   4:                         general.size_label str              = 33M
0.00.008.116 I llama_model_loader: - kv   5:                   jina-bert-v2.block_count u32              = 4
0.00.008.118 I llama_model_loader: - kv   6:                jina-bert-v2.context_length u32              = 8192
0.00.008.119 I llama_model_loader: - kv   7:              jina-bert-v2.embedding_length u32              = 384
0.00.008.119 I llama_model_loader: - kv   8:           jina-bert-v2.feed_forward_length u32              = 1536
0.00.008.121 I llama_model_loader: - kv   9:          jina-bert-v2.attention.head_count u32              = 12
0.00.008.124 I llama_model_loader: - kv  10:  jina-bert-v2.attention.layer_norm_epsilon f32              = 0.000000
0.00.008.124 I llama_model_loader: - kv  11:                          general.file_type u32              = 1
0.00.008.125 I llama_model_loader: - kv  12:              jina-bert-v2.attention.causal bool             = false
0.00.008.125 I llama_model_loader: - kv  13:                       tokenizer.ggml.model str              = gpt2
0.00.008.126 I llama_model_loader: - kv  14:                         tokenizer.ggml.pre str              = jina-v1-en
0.00.014.462 I llama_model_loader: - kv  15:                      tokenizer.ggml.tokens arr[str,61056]   = ["<s>", "<pad>", "</s>", "<unk>", "<m...
0.00.016.086 I llama_model_loader: - kv  16:                  tokenizer.ggml.token_type arr[i32,61056]   = [3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, ...
0.00.019.979 I llama_model_loader: - kv  17:                      tokenizer.ggml.merges arr[str,39382]   = ["t h", "i n", "a n", "e r", "th e", ...
0.00.019.985 I llama_model_loader: - kv  18:                tokenizer.ggml.bos_token_id u32              = 0
0.00.019.985 I llama_model_loader: - kv  19:                tokenizer.ggml.eos_token_id u32              = 2
0.00.019.986 I llama_model_loader: - kv  20:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.019.986 I llama_model_loader: - kv  21:          tokenizer.ggml.seperator_token_id u32              = 2
0.00.019.987 I llama_model_loader: - kv  22:            tokenizer.ggml.padding_token_id u32              = 1
0.00.019.987 I llama_model_loader: - kv  23:                tokenizer.ggml.cls_token_id u32              = 0
0.00.019.988 I llama_model_loader: - kv  24:               tokenizer.ggml.mask_token_id u32              = 4
0.00.019.988 I llama_model_loader: - kv  25:            tokenizer.ggml.token_type_count u32              = 2
0.00.019.989 I llama_model_loader: - kv  26:               tokenizer.ggml.add_bos_token bool             = true
0.00.019.990 I llama_model_loader: - kv  27:               tokenizer.ggml.add_eos_token bool             = true
0.00.019.990 I llama_model_loader: - kv  28:               general.quantization_version u32              = 2
0.00.019.992 I llama_model_loader: - type  f32:   41 tensors
0.00.019.993 I llama_model_loader: - type  f16:   29 tensors
0.00.039.310 W llm_load_vocab: empty token at index 5
0.00.049.619 W llm_load_vocab: model vocab missing newline token, using special_pad_id instead
0.00.064.817 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.064.945 I llm_load_vocab: special tokens cache size = 5
0.00.422.129 I llm_load_vocab: token to piece cache size = 1.5060 MB
0.00.422.148 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.422.149 I llm_load_print_meta: arch             = jina-bert-v2
0.00.422.150 I llm_load_print_meta: vocab type       = BPE
0.00.422.151 I llm_load_print_meta: n_vocab          = 61056
0.00.422.151 I llm_load_print_meta: n_merges         = 39382
0.00.422.152 I llm_load_print_meta: vocab_only       = 0
0.00.422.152 I llm_load_print_meta: n_ctx_train      = 8192
0.00.422.152 I llm_load_print_meta: n_embd           = 384
0.00.422.152 I llm_load_print_meta: n_layer          = 4
0.00.422.164 I llm_load_print_meta: n_head           = 12
0.00.422.165 I llm_load_print_meta: n_head_kv        = 12
0.00.422.166 I llm_load_print_meta: n_rot            = 32
0.00.422.166 I llm_load_print_meta: n_swa            = 0
0.00.422.166 I llm_load_print_meta: n_embd_head_k    = 32
0.00.422.166 I llm_load_print_meta: n_embd_head_v    = 32
0.00.422.167 I llm_load_print_meta: n_gqa            = 1
0.00.422.168 I llm_load_print_meta: n_embd_k_gqa     = 384
0.00.422.169 I llm_load_print_meta: n_embd_v_gqa     = 384
0.00.422.171 I llm_load_print_meta: f_norm_eps       = 1.0e-12
0.00.422.171 I llm_load_print_meta: f_norm_rms_eps   = 0.0e+00
0.00.422.172 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.422.172 I llm_load_print_meta: f_max_alibi_bias = 8.0e+00
0.00.422.173 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.422.173 I llm_load_print_meta: n_ff             = 1536
0.00.422.174 I llm_load_print_meta: n_expert         = 0
0.00.422.174 I llm_load_print_meta: n_expert_used    = 0
0.00.422.174 I llm_load_print_meta: causal attn      = 0
0.00.422.174 I llm_load_print_meta: pooling type     = -1
0.00.422.175 I llm_load_print_meta: rope type        = -1
0.00.422.175 I llm_load_print_meta: rope scaling     = linear
0.00.422.176 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.422.177 I llm_load_print_meta: freq_scale_train = 1
0.00.422.177 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.422.178 I llm_load_print_meta: rope_finetuned   = unknown
0.00.422.178 I llm_load_print_meta: ssm_d_conv       = 0
0.00.422.178 I llm_load_print_meta: ssm_d_inner      = 0
0.00.422.179 I llm_load_print_meta: ssm_d_state      = 0
0.00.422.179 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.422.179 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.422.180 I llm_load_print_meta: model type       = 33M
0.00.422.180 I llm_load_print_meta: model ftype      = F16
0.00.422.181 I llm_load_print_meta: model params     = 32.90 M
0.00.422.182 I llm_load_print_meta: model size       = 62.78 MiB (16.01 BPW) 
0.00.422.182 I llm_load_print_meta: general.name     = Jina Bert Implementation
0.00.422.183 I llm_load_print_meta: BOS token        = 0 '<s>'
0.00.422.183 I llm_load_print_meta: EOS token        = 2 '</s>'
0.00.422.184 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.422.184 I llm_load_print_meta: SEP token        = 2 '</s>'
0.00.422.184 I llm_load_print_meta: PAD token        = 1 '<pad>'
0.00.422.184 I llm_load_print_meta: CLS token        = 0 '<s>'
0.00.422.184 I llm_load_print_meta: MASK token       = 4 '<mask>'
0.00.422.185 I llm_load_print_meta: EOG token        = 2 '</s>'
0.00.422.186 I llm_load_print_meta: max token length = 45
0.00.425.749 I llm_load_tensors:   CPU_Mapped model buffer size =    62.78 MiB
......................
0.00.427.847 I llama_new_context_with_model: n_seq_max     = 1
0.00.427.852 I llama_new_context_with_model: n_ctx         = 8192
0.00.427.853 I llama_new_context_with_model: n_ctx_per_seq = 8192
0.00.427.853 I llama_new_context_with_model: n_batch       = 2048
0.00.427.853 I llama_new_context_with_model: n_ubatch      = 2048
0.00.427.854 I llama_new_context_with_model: flash_attn    = 0
0.00.427.855 I llama_new_context_with_model: freq_base     = 10000.0
0.00.427.856 I llama_new_context_with_model: freq_scale    = 1
0.00.438.008 I llama_kv_cache_init:        CPU KV buffer size =    48.00 MiB
0.00.438.021 I llama_new_context_with_model: KV self size  =   48.00 MiB, K (f16):   24.00 MiB, V (f16):   24.00 MiB
0.00.438.030 I llama_new_context_with_model:        CPU  output buffer size =     0.00 MiB
0.00.439.751 I llama_new_context_with_model:        CPU compute buffer size =   220.02 MiB
0.00.439.757 I llama_new_context_with_model: graph nodes  = 154
0.00.439.757 I llama_new_context_with_model: graph splits = 1
0.00.439.759 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.447.448 I 
0.00.447.546 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.447.789 I main: prompt 0: 'what is panda?</s></s>hi'
0.00.447.792 I main: number of tokens in prompt = 9
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 23233 -> 'hi'
     2 -> '</s>'


0.00.447.799 I main: prompt 1: 'what is panda?</s></s>it's a bear'
0.00.447.800 I main: number of tokens in prompt = 13
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 21153 -> 'it'
    37 -> '''
    87 -> 's'
    69 -> 'a'
 25706 -> 'bear'
     2 -> '</s>'


0.00.447.808 I main: prompt 2: 'what is panda?</s></s>The giant panda (Ailuropoda melanoleuca), sometimes called a panda bear or simply panda, is a bear species endemic to China.'
0.00.447.809 I main: number of tokens in prompt = 40
     0 -> '<s>'
 21381 -> 'what'
 21152 -> 'is'
 49990 -> 'panda'
    61 -> '?'
     2 -> '</s>'
     2 -> '</s>'
 21215 -> 'he'
 28390 -> 'giant'
 49990 -> 'panda'
    38 -> '('
 21163 -> 'il'
 26237 -> 'uro'
 21223 -> 'po'
 23179 -> 'da'
 36906 -> 'melan'
 26791 -> 'ole'
    89 -> 'u'
 21402 -> 'ca'
 21686 -> '),'
 23314 -> 'sometimes'
 22517 -> 'called'
    69 -> 'a'
 49990 -> 'panda'
 25706 -> 'bear'
 21142 -> 'or'
 22810 -> 'simply'
 49990 -> 'panda'
    42 -> ','
 21152 -> 'is'
    69 -> 'a'
 25706 -> 'bear'
 25677 -> 'species'
 28930 -> 'ende'
 22024 -> 'mic'
 21148 -> 'to'
    76 -> 'h'
 22344 -> 'ina'
    44 -> '.'
     2 -> '</s>'


0.00.451.728 I batch_decode: n_tokens = 62, n_seq = 3

rerank score 0:    0.023
rerank score 1:    0.024
rerank score 2:    0.199

0.00.462.755 I llama_perf_context_print:        load time =     447.23 ms
0.00.462.758 I llama_perf_context_print: prompt eval time =      10.76 ms /    62 tokens (    0.17 ms per token,  5762.62 tokens per second)
0.00.462.760 I llama_perf_context_print:        eval time =       0.00 ms /     1 runs   (    0.00 ms per token,      inf tokens per second)
0.00.462.761 I llama_perf_context_print:       total time =      15.31 ms /    63 tokens

real	0m0.482s
user	0m0.529s
sys	0m0.020s
  - rerank score 0 @ 0.023 OK
  - rerank score 1 @ 0.024 OK
  - rerank score 2 @ 0.199 OK
```
### test_scripts_debug

Runs test scripts in debug mode
- status: 0
```
+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.684 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.889 I main: llama backend init
0.00.000.898 I main: load the model and apply lora adapter, if any
0.00.023.931 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.946 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.044 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.057 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.059 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.067 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.071 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.073 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.074 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.075 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.077 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.089 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.090 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.092 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.093 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.095 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.230.670 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.333.857 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.357.361 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.357.373 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.357.374 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.357.375 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.357.377 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.357.378 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.357.380 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.357.384 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.357.386 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.357.387 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.357.389 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.357.391 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.357.400 I llama_model_loader: - type  f32:   37 tensors
0.00.357.403 I llama_model_loader: - type q8_0:  127 tensors
0.00.595.227 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.667.601 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.668.632 I llm_load_vocab: special tokens cache size = 5
0.00.871.025 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.871.097 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.871.098 I llm_load_print_meta: arch             = gemma
0.00.871.098 I llm_load_print_meta: vocab type       = SPM
0.00.871.099 I llm_load_print_meta: n_vocab          = 256000
0.00.871.102 I llm_load_print_meta: n_merges         = 0
0.00.871.102 I llm_load_print_meta: vocab_only       = 0
0.00.871.103 I llm_load_print_meta: n_ctx_train      = 8192
0.00.871.103 I llm_load_print_meta: n_embd           = 2048
0.00.871.103 I llm_load_print_meta: n_layer          = 18
0.00.871.168 I llm_load_print_meta: n_head           = 8
0.00.871.175 I llm_load_print_meta: n_head_kv        = 1
0.00.871.176 I llm_load_print_meta: n_rot            = 256
0.00.871.176 I llm_load_print_meta: n_swa            = 0
0.00.871.177 I llm_load_print_meta: n_embd_head_k    = 256
0.00.871.177 I llm_load_print_meta: n_embd_head_v    = 256
0.00.871.182 I llm_load_print_meta: n_gqa            = 8
0.00.871.187 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.871.192 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.871.194 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.871.196 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.871.196 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.871.196 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.871.198 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.871.228 I llm_load_print_meta: n_ff             = 16384
0.00.871.230 I llm_load_print_meta: n_expert         = 0
0.00.871.230 I llm_load_print_meta: n_expert_used    = 0
0.00.871.230 I llm_load_print_meta: causal attn      = 1
0.00.871.231 I llm_load_print_meta: pooling type     = 0
0.00.871.239 I llm_load_print_meta: rope type        = 2
0.00.871.245 I llm_load_print_meta: rope scaling     = linear
0.00.871.246 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.871.250 I llm_load_print_meta: freq_scale_train = 1
0.00.871.250 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.871.251 I llm_load_print_meta: rope_finetuned   = unknown
0.00.871.251 I llm_load_print_meta: ssm_d_conv       = 0
0.00.871.251 I llm_load_print_meta: ssm_d_inner      = 0
0.00.871.252 I llm_load_print_meta: ssm_d_state      = 0
0.00.871.252 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.871.252 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.871.253 I llm_load_print_meta: model type       = 2B
0.00.871.254 I llm_load_print_meta: model ftype      = Q8_0
0.00.871.254 I llm_load_print_meta: model params     = 2.51 B
0.00.871.255 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.871.256 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.871.256 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.871.257 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.871.257 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.871.258 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.871.266 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.871.273 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.871.280 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.871.282 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.871.282 I llm_load_print_meta: max token length = 93
0.00.974.585 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.974.593 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.974.595 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.974.595 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.974.596 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.974.596 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.980.844 I llama_new_context_with_model: n_seq_max     = 1
0.00.980.853 I llama_new_context_with_model: n_ctx         = 4096
0.00.980.853 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.980.854 I llama_new_context_with_model: n_batch       = 2048
0.00.980.854 I llama_new_context_with_model: n_ubatch      = 512
0.00.980.855 I llama_new_context_with_model: flash_attn    = 0
0.00.980.859 I llama_new_context_with_model: freq_base     = 10000.0
0.00.980.860 I llama_new_context_with_model: freq_scale    = 1
0.00.980.861 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.996.680 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.996.722 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.996.846 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.999.567 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.999.571 I llama_new_context_with_model: graph nodes  = 601
0.00.999.571 I llama_new_context_with_model: graph splits = 1
0.00.999.596 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.610.761 I main: llama threadpool init, n_threads = 4
0.01.610.777 I 
0.01.610.903 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.01.610.907 I 
0.01.611.152 I sampler seed: 199079467
0.01.611.166 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.611.178 I sampler chain: logits -> logit-bias -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.611.181 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.611.181 I 
 increasities, and other forms of disrespect can have severe consequences for individuals and organizations.

**Discuss the consequences of disrespect in the workplace.**

**Discuss the

0.15.284.166 I llama_perf_sampler_print:    sampling time =      49.28 ms /    33 runs   (    1.49 ms per token,   669.60 tokens per second)
0.15.284.170 I llama_perf_context_print:        load time =    1609.74 ms
0.15.284.171 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.284.173 I llama_perf_context_print:        eval time =   13583.34 ms /    32 runs   (  424.48 ms per token,     2.36 tokens per second)
0.15.284.174 I llama_perf_context_print:       total time =   13673.42 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.703 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.906 I main: llama backend init
0.00.000.914 I main: load the model and apply lora adapter, if any
0.00.023.465 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.566 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.580 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.585 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.591 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.594 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.595 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.597 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.598 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.599 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.609 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.613 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.614 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.616 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.617 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.230.196 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.333.391 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.357.007 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.357.019 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.357.021 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.357.022 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.357.023 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.357.025 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.357.026 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.357.030 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.357.032 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.357.033 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.357.035 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.357.037 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.357.046 I llama_model_loader: - type  f32:   37 tensors
0.00.357.049 I llama_model_loader: - type q8_0:  127 tensors
0.00.608.450 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.680.998 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.682.029 I llm_load_vocab: special tokens cache size = 5
0.00.880.176 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.880.252 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.880.253 I llm_load_print_meta: arch             = gemma
0.00.880.254 I llm_load_print_meta: vocab type       = SPM
0.00.880.255 I llm_load_print_meta: n_vocab          = 256000
0.00.880.258 I llm_load_print_meta: n_merges         = 0
0.00.880.258 I llm_load_print_meta: vocab_only       = 0
0.00.880.258 I llm_load_print_meta: n_ctx_train      = 8192
0.00.880.259 I llm_load_print_meta: n_embd           = 2048
0.00.880.259 I llm_load_print_meta: n_layer          = 18
0.00.880.328 I llm_load_print_meta: n_head           = 8
0.00.880.335 I llm_load_print_meta: n_head_kv        = 1
0.00.880.336 I llm_load_print_meta: n_rot            = 256
0.00.880.336 I llm_load_print_meta: n_swa            = 0
0.00.880.337 I llm_load_print_meta: n_embd_head_k    = 256
0.00.880.337 I llm_load_print_meta: n_embd_head_v    = 256
0.00.880.342 I llm_load_print_meta: n_gqa            = 8
0.00.880.347 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.880.370 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.880.372 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.880.373 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.880.374 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.880.374 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.880.374 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.880.380 I llm_load_print_meta: n_ff             = 16384
0.00.880.381 I llm_load_print_meta: n_expert         = 0
0.00.880.389 I llm_load_print_meta: n_expert_used    = 0
0.00.880.390 I llm_load_print_meta: causal attn      = 1
0.00.880.390 I llm_load_print_meta: pooling type     = 0
0.00.880.391 I llm_load_print_meta: rope type        = 2
0.00.880.391 I llm_load_print_meta: rope scaling     = linear
0.00.880.393 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.880.394 I llm_load_print_meta: freq_scale_train = 1
0.00.880.395 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.880.395 I llm_load_print_meta: rope_finetuned   = unknown
0.00.880.395 I llm_load_print_meta: ssm_d_conv       = 0
0.00.880.396 I llm_load_print_meta: ssm_d_inner      = 0
0.00.880.397 I llm_load_print_meta: ssm_d_state      = 0
0.00.880.397 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.880.397 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.880.398 I llm_load_print_meta: model type       = 2B
0.00.880.399 I llm_load_print_meta: model ftype      = Q8_0
0.00.880.400 I llm_load_print_meta: model params     = 2.51 B
0.00.880.400 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.880.401 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.880.402 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.880.402 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.880.403 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.880.404 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.880.404 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.880.404 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.880.410 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.880.416 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.880.417 I llm_load_print_meta: max token length = 93
0.00.974.921 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.980.951 I llama_new_context_with_model: n_seq_max     = 1
0.00.980.959 I llama_new_context_with_model: n_ctx         = 4096
0.00.980.959 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.980.960 I llama_new_context_with_model: n_batch       = 2048
0.00.980.960 I llama_new_context_with_model: n_ubatch      = 512
0.00.980.960 I llama_new_context_with_model: flash_attn    = 0
0.00.980.963 I llama_new_context_with_model: freq_base     = 10000.0
0.00.980.964 I llama_new_context_with_model: freq_scale    = 1
0.00.980.964 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.996.151 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.996.196 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.996.313 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.998.920 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.998.924 I llama_new_context_with_model: graph nodes  = 601
0.00.998.925 I llama_new_context_with_model: graph splits = 1
0.00.998.946 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.609.074 I main: llama threadpool init, n_threads = 4
0.01.609.090 I 
0.01.609.214 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.01.609.218 I 
0.01.609.471 I sampler seed: 857028405
0.01.609.487 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.609.497 I sampler chain: logits -> logit-bias -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.609.500 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.609.501 I 
 increasities and other social media trends that involve inappropriate or sexually suggestive content.

As a language model, I am unable to access or provide information related to sexually

0.15.336.655 I llama_perf_sampler_print:    sampling time =      49.37 ms /    33 runs   (    1.50 ms per token,   668.42 tokens per second)
0.15.336.658 I llama_perf_context_print:        load time =    1608.05 ms
0.15.336.660 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.336.673 I llama_perf_context_print:        eval time =   13638.18 ms /    32 runs   (  426.19 ms per token,     2.35 tokens per second)
0.15.336.675 I llama_perf_context_print:       total time =   13727.59 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.632 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.821 I main: llama backend init
0.00.000.829 I main: load the model and apply lora adapter, if any
0.00.023.135 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.147 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.233 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.245 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.247 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.253 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.256 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.258 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.259 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.260 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.263 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.273 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.276 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.277 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.278 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.279 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.235.533 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.338.842 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.362.431 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.362.443 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.362.444 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.362.446 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.362.447 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.362.448 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.362.450 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.362.454 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.362.455 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.362.457 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.362.458 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.362.460 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.362.469 I llama_model_loader: - type  f32:   37 tensors
0.00.362.471 I llama_model_loader: - type q8_0:  127 tensors
0.00.585.899 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.648.099 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.649.077 I llm_load_vocab: special tokens cache size = 5
0.00.856.261 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.856.335 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.856.337 I llm_load_print_meta: arch             = gemma
0.00.856.337 I llm_load_print_meta: vocab type       = SPM
0.00.856.338 I llm_load_print_meta: n_vocab          = 256000
0.00.856.341 I llm_load_print_meta: n_merges         = 0
0.00.856.341 I llm_load_print_meta: vocab_only       = 0
0.00.856.341 I llm_load_print_meta: n_ctx_train      = 8192
0.00.856.342 I llm_load_print_meta: n_embd           = 2048
0.00.856.342 I llm_load_print_meta: n_layer          = 18
0.00.856.408 I llm_load_print_meta: n_head           = 8
0.00.856.415 I llm_load_print_meta: n_head_kv        = 1
0.00.856.416 I llm_load_print_meta: n_rot            = 256
0.00.856.416 I llm_load_print_meta: n_swa            = 0
0.00.856.416 I llm_load_print_meta: n_embd_head_k    = 256
0.00.856.416 I llm_load_print_meta: n_embd_head_v    = 256
0.00.856.421 I llm_load_print_meta: n_gqa            = 8
0.00.856.426 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.856.431 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.856.432 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.856.434 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.856.435 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.856.436 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.856.436 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.856.442 I llm_load_print_meta: n_ff             = 16384
0.00.856.442 I llm_load_print_meta: n_expert         = 0
0.00.856.442 I llm_load_print_meta: n_expert_used    = 0
0.00.856.444 I llm_load_print_meta: causal attn      = 1
0.00.856.444 I llm_load_print_meta: pooling type     = 0
0.00.856.445 I llm_load_print_meta: rope type        = 2
0.00.856.445 I llm_load_print_meta: rope scaling     = linear
0.00.856.447 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.856.448 I llm_load_print_meta: freq_scale_train = 1
0.00.856.449 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.856.449 I llm_load_print_meta: rope_finetuned   = unknown
0.00.856.450 I llm_load_print_meta: ssm_d_conv       = 0
0.00.856.450 I llm_load_print_meta: ssm_d_inner      = 0
0.00.856.450 I llm_load_print_meta: ssm_d_state      = 0
0.00.856.460 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.856.461 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.856.461 I llm_load_print_meta: model type       = 2B
0.00.856.462 I llm_load_print_meta: model ftype      = Q8_0
0.00.856.467 I llm_load_print_meta: model params     = 2.51 B
0.00.856.468 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.856.468 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.856.470 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.856.470 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.856.471 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.856.471 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.856.475 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.856.475 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.856.482 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.856.489 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.856.489 I llm_load_print_meta: max token length = 93
0.00.935.019 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.935.028 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.935.029 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.935.030 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.935.030 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.935.031 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.940.978 I llama_new_context_with_model: n_seq_max     = 1
0.00.940.985 I llama_new_context_with_model: n_ctx         = 4096
0.00.940.985 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.940.986 I llama_new_context_with_model: n_batch       = 2048
0.00.940.986 I llama_new_context_with_model: n_ubatch      = 512
0.00.940.987 I llama_new_context_with_model: flash_attn    = 0
0.00.940.989 I llama_new_context_with_model: freq_base     = 10000.0
0.00.940.990 I llama_new_context_with_model: freq_scale    = 1
0.00.940.991 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.955.790 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.955.829 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.955.947 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.958.609 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.958.613 I llama_new_context_with_model: graph nodes  = 601
0.00.958.614 I llama_new_context_with_model: graph splits = 1
0.00.958.638 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.569.217 I main: llama threadpool init, n_threads = 4
0.01.569.233 I 
0.01.569.369 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.01.569.370 I 
0.01.569.613 I sampler seed: 1628686660
0.01.569.628 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.569.636 I sampler chain: logits -> logit-bias -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.569.637 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.569.637 I 
 increasities and societal inequalities are significant issues that impact the well-being of individuals and communities.

**Discuss two ways in which societal inequalities can impact the well

0.15.163.357 I llama_perf_sampler_print:    sampling time =      49.23 ms /    33 runs   (    1.49 ms per token,   670.30 tokens per second)
0.15.163.360 I llama_perf_context_print:        load time =    1568.30 ms
0.15.163.362 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.163.377 I llama_perf_context_print:        eval time =   13504.06 ms /    32 runs   (  422.00 ms per token,     2.37 tokens per second)
0.15.163.379 I llama_perf_context_print:       total time =   13594.15 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.652 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.841 I main: llama backend init
0.00.000.849 I main: load the model and apply lora adapter, if any
0.00.024.271 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.283 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.384 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.398 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.400 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.408 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.412 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.413 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.415 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.416 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.417 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.425 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.426 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.427 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.429 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.430 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.231.189 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.335.055 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.358.619 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.358.631 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.358.632 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.358.633 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.358.635 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.358.636 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.358.638 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.358.643 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.358.644 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.358.646 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.358.647 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.358.649 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.358.659 I llama_model_loader: - type  f32:   37 tensors
0.00.358.662 I llama_model_loader: - type q8_0:  127 tensors
0.00.602.429 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.673.532 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.674.583 I llm_load_vocab: special tokens cache size = 5
0.00.883.274 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.883.347 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.883.348 I llm_load_print_meta: arch             = gemma
0.00.883.349 I llm_load_print_meta: vocab type       = SPM
0.00.883.350 I llm_load_print_meta: n_vocab          = 256000
0.00.883.352 I llm_load_print_meta: n_merges         = 0
0.00.883.352 I llm_load_print_meta: vocab_only       = 0
0.00.883.353 I llm_load_print_meta: n_ctx_train      = 8192
0.00.883.353 I llm_load_print_meta: n_embd           = 2048
0.00.883.353 I llm_load_print_meta: n_layer          = 18
0.00.883.417 I llm_load_print_meta: n_head           = 8
0.00.883.425 I llm_load_print_meta: n_head_kv        = 1
0.00.883.425 I llm_load_print_meta: n_rot            = 256
0.00.883.425 I llm_load_print_meta: n_swa            = 0
0.00.883.426 I llm_load_print_meta: n_embd_head_k    = 256
0.00.883.426 I llm_load_print_meta: n_embd_head_v    = 256
0.00.883.431 I llm_load_print_meta: n_gqa            = 8
0.00.883.436 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.883.441 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.883.442 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.883.443 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.883.444 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.883.444 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.883.444 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.883.449 I llm_load_print_meta: n_ff             = 16384
0.00.883.450 I llm_load_print_meta: n_expert         = 0
0.00.883.451 I llm_load_print_meta: n_expert_used    = 0
0.00.883.452 I llm_load_print_meta: causal attn      = 1
0.00.883.457 I llm_load_print_meta: pooling type     = 0
0.00.883.458 I llm_load_print_meta: rope type        = 2
0.00.883.458 I llm_load_print_meta: rope scaling     = linear
0.00.883.460 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.883.460 I llm_load_print_meta: freq_scale_train = 1
0.00.883.461 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.883.462 I llm_load_print_meta: rope_finetuned   = unknown
0.00.883.462 I llm_load_print_meta: ssm_d_conv       = 0
0.00.883.462 I llm_load_print_meta: ssm_d_inner      = 0
0.00.883.463 I llm_load_print_meta: ssm_d_state      = 0
0.00.883.463 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.883.464 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.883.465 I llm_load_print_meta: model type       = 2B
0.00.883.466 I llm_load_print_meta: model ftype      = Q8_0
0.00.883.466 I llm_load_print_meta: model params     = 2.51 B
0.00.883.467 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.883.471 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.883.472 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.883.472 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.883.473 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.883.473 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.883.473 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.883.474 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.883.490 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.883.492 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.883.496 I llm_load_print_meta: max token length = 93
0.00.957.083 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.957.096 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.962.901 I llama_new_context_with_model: n_seq_max     = 1
0.00.962.909 I llama_new_context_with_model: n_ctx         = 4096
0.00.962.909 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.962.909 I llama_new_context_with_model: n_batch       = 2048
0.00.962.910 I llama_new_context_with_model: n_ubatch      = 512
0.00.962.910 I llama_new_context_with_model: flash_attn    = 0
0.00.962.913 I llama_new_context_with_model: freq_base     = 10000.0
0.00.962.925 I llama_new_context_with_model: freq_scale    = 1
0.00.962.925 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.979.275 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.979.316 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.979.442 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.982.107 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.982.111 I llama_new_context_with_model: graph nodes  = 601
0.00.982.111 I llama_new_context_with_model: graph splits = 1
0.00.982.135 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.592.857 I main: llama threadpool init, n_threads = 4
0.01.592.872 I 
0.01.592.992 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.01.592.996 I 
0.01.593.238 I sampler seed: 1049775520
0.01.593.252 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.593.278 I sampler chain: logits -> logit-bias -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.593.282 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.593.283 I 
 increasels, who are the bane of the young heroes' journey.

**Challenge:**

- Create a map of the world where the young heroes journey takes

0.15.278.778 I llama_perf_sampler_print:    sampling time =      49.49 ms /    33 runs   (    1.50 ms per token,   666.81 tokens per second)
0.15.278.781 I llama_perf_context_print:        load time =    1591.91 ms
0.15.278.783 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.278.784 I llama_perf_context_print:        eval time =   13593.75 ms /    32 runs   (  424.80 ms per token,     2.35 tokens per second)
0.15.278.799 I llama_perf_context_print:       total time =   13685.93 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m10.978s
user	3m52.559s
sys	0m9.516s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4316 (ce9b965c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 185991.11 ms
main:    total time = 185991.11 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.637 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.829 I main: llama backend init
0.00.000.837 I main: load the model and apply lora adapter, if any
0.00.023.348 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.360 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.461 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.473 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.476 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.483 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.491 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.492 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.493 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.494 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.496 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.507 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.508 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.510 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.511 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.512 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.229.727 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.332.828 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.356.339 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.356.349 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.356.351 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.356.352 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.356.354 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.356.355 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.356.357 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.356.361 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.356.362 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.356.364 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.356.365 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.356.367 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.356.375 I llama_model_loader: - type  f32:   37 tensors
0.00.356.378 I llama_model_loader: - type q4_K:  108 tensors
0.00.356.378 I llama_model_loader: - type q6_K:   19 tensors
0.00.591.038 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.657.672 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.658.674 I llm_load_vocab: special tokens cache size = 5
0.00.863.037 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.863.108 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.863.109 I llm_load_print_meta: arch             = gemma
0.00.863.109 I llm_load_print_meta: vocab type       = SPM
0.00.863.110 I llm_load_print_meta: n_vocab          = 256000
0.00.863.112 I llm_load_print_meta: n_merges         = 0
0.00.863.113 I llm_load_print_meta: vocab_only       = 0
0.00.863.113 I llm_load_print_meta: n_ctx_train      = 8192
0.00.863.114 I llm_load_print_meta: n_embd           = 2048
0.00.863.114 I llm_load_print_meta: n_layer          = 18
0.00.863.179 I llm_load_print_meta: n_head           = 8
0.00.863.186 I llm_load_print_meta: n_head_kv        = 1
0.00.863.186 I llm_load_print_meta: n_rot            = 256
0.00.863.186 I llm_load_print_meta: n_swa            = 0
0.00.863.188 I llm_load_print_meta: n_embd_head_k    = 256
0.00.863.189 I llm_load_print_meta: n_embd_head_v    = 256
0.00.863.193 I llm_load_print_meta: n_gqa            = 8
0.00.863.198 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.863.203 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.863.224 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.863.226 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.863.237 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.863.241 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.863.241 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.863.246 I llm_load_print_meta: n_ff             = 16384
0.00.863.247 I llm_load_print_meta: n_expert         = 0
0.00.863.248 I llm_load_print_meta: n_expert_used    = 0
0.00.863.249 I llm_load_print_meta: causal attn      = 1
0.00.863.249 I llm_load_print_meta: pooling type     = 0
0.00.863.249 I llm_load_print_meta: rope type        = 2
0.00.863.251 I llm_load_print_meta: rope scaling     = linear
0.00.863.252 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.863.253 I llm_load_print_meta: freq_scale_train = 1
0.00.863.254 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.863.254 I llm_load_print_meta: rope_finetuned   = unknown
0.00.863.255 I llm_load_print_meta: ssm_d_conv       = 0
0.00.863.255 I llm_load_print_meta: ssm_d_inner      = 0
0.00.863.256 I llm_load_print_meta: ssm_d_state      = 0
0.00.863.256 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.863.256 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.863.257 I llm_load_print_meta: model type       = 2B
0.00.863.258 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.863.259 I llm_load_print_meta: model params     = 2.51 B
0.00.863.263 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.863.263 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.863.264 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.863.264 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.863.265 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.863.265 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.863.265 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.863.266 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.863.272 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.863.273 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.863.274 I llm_load_print_meta: max token length = 93
0.00.924.658 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.924.669 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.924.670 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.924.671 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.924.672 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.924.672 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.930.473 I llama_new_context_with_model: n_seq_max     = 1
0.00.930.481 I llama_new_context_with_model: n_ctx         = 4096
0.00.930.481 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.930.481 I llama_new_context_with_model: n_batch       = 2048
0.00.930.482 I llama_new_context_with_model: n_ubatch      = 512
0.00.930.482 I llama_new_context_with_model: flash_attn    = 0
0.00.930.485 I llama_new_context_with_model: freq_base     = 10000.0
0.00.930.486 I llama_new_context_with_model: freq_scale    = 1
0.00.930.486 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.945.372 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.945.411 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.945.529 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.948.197 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.948.200 I llama_new_context_with_model: graph nodes  = 601
0.00.948.201 I llama_new_context_with_model: graph splits = 1
0.00.948.225 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.531.946 I main: llama threadpool init, n_threads = 4
0.01.531.961 I 
0.01.532.083 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.01.532.087 I 
0.01.532.321 I sampler seed: 3967245959
0.01.532.335 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.532.344 I sampler chain: logits -> logit-bias -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.532.348 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.532.348 I 
 encompsively, the main points of the article on the dangers of artificial intelligence.

**Dangers of Artificial Intelligence**

**1. Job displacement:**


0.12.687.045 I llama_perf_sampler_print:    sampling time =      49.14 ms /    33 runs   (    1.49 ms per token,   671.50 tokens per second)
0.12.687.059 I llama_perf_context_print:        load time =    1531.02 ms
0.12.687.061 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.687.064 I llama_perf_context_print:        eval time =   11065.54 ms /    32 runs   (  345.80 ms per token,     2.89 tokens per second)
0.12.687.065 I llama_perf_context_print:       total time =   11155.11 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4316 (ce9b965c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 185883.98 ms
main:    total time = 185883.98 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.709 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.921 I main: llama backend init
0.00.000.930 I main: load the model and apply lora adapter, if any
0.00.023.429 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.536 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.551 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.553 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.560 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.562 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.563 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.565 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.566 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.567 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.580 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.582 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.583 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.585 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.586 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.231.529 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.336.837 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.360.369 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.360.381 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.360.382 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.360.384 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.360.385 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.360.386 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.360.388 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.360.392 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.360.393 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.360.404 I llama_model_loader: - type  f32:   37 tensors
0.00.360.406 I llama_model_loader: - type q4_K:  108 tensors
0.00.360.407 I llama_model_loader: - type q6_K:   19 tensors
0.00.613.140 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.679.570 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.680.514 I llm_load_vocab: special tokens cache size = 5
0.00.882.598 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.882.671 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.882.672 I llm_load_print_meta: arch             = gemma
0.00.882.673 I llm_load_print_meta: vocab type       = SPM
0.00.882.674 I llm_load_print_meta: n_vocab          = 256000
0.00.882.676 I llm_load_print_meta: n_merges         = 0
0.00.882.676 I llm_load_print_meta: vocab_only       = 0
0.00.882.677 I llm_load_print_meta: n_ctx_train      = 8192
0.00.882.677 I llm_load_print_meta: n_embd           = 2048
0.00.882.678 I llm_load_print_meta: n_layer          = 18
0.00.882.744 I llm_load_print_meta: n_head           = 8
0.00.882.751 I llm_load_print_meta: n_head_kv        = 1
0.00.882.752 I llm_load_print_meta: n_rot            = 256
0.00.882.752 I llm_load_print_meta: n_swa            = 0
0.00.882.753 I llm_load_print_meta: n_embd_head_k    = 256
0.00.882.753 I llm_load_print_meta: n_embd_head_v    = 256
0.00.882.758 I llm_load_print_meta: n_gqa            = 8
0.00.882.762 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.882.768 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.882.769 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.882.771 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.882.771 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.882.772 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.882.773 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.882.778 I llm_load_print_meta: n_ff             = 16384
0.00.882.779 I llm_load_print_meta: n_expert         = 0
0.00.882.779 I llm_load_print_meta: n_expert_used    = 0
0.00.882.780 I llm_load_print_meta: causal attn      = 1
0.00.882.780 I llm_load_print_meta: pooling type     = 0
0.00.882.782 I llm_load_print_meta: rope type        = 2
0.00.882.782 I llm_load_print_meta: rope scaling     = linear
0.00.882.784 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.882.785 I llm_load_print_meta: freq_scale_train = 1
0.00.882.785 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.882.786 I llm_load_print_meta: rope_finetuned   = unknown
0.00.882.788 I llm_load_print_meta: ssm_d_conv       = 0
0.00.882.788 I llm_load_print_meta: ssm_d_inner      = 0
0.00.882.788 I llm_load_print_meta: ssm_d_state      = 0
0.00.882.815 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.882.816 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.882.816 I llm_load_print_meta: model type       = 2B
0.00.882.817 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.882.818 I llm_load_print_meta: model params     = 2.51 B
0.00.882.819 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.882.820 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.882.820 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.882.830 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.882.831 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.882.831 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.882.831 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.882.839 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.882.845 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.882.847 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.882.847 I llm_load_print_meta: max token length = 93
0.00.941.973 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.947.845 I llama_new_context_with_model: n_seq_max     = 1
0.00.947.852 I llama_new_context_with_model: n_ctx         = 4096
0.00.947.853 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.947.853 I llama_new_context_with_model: n_batch       = 2048
0.00.947.853 I llama_new_context_with_model: n_ubatch      = 512
0.00.947.854 I llama_new_context_with_model: flash_attn    = 0
0.00.947.857 I llama_new_context_with_model: freq_base     = 10000.0
0.00.947.858 I llama_new_context_with_model: freq_scale    = 1
0.00.947.859 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.963.356 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.963.399 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.963.521 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.966.148 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.966.152 I llama_new_context_with_model: graph nodes  = 601
0.00.966.153 I llama_new_context_with_model: graph splits = 1
0.00.966.175 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.546.625 I main: llama threadpool init, n_threads = 4
0.01.546.641 I 
0.01.546.770 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.01.546.774 I 
0.01.547.012 I sampler seed: 2874222302
0.01.547.029 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.547.048 I sampler chain: logits -> logit-bias -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.547.049 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.547.050 I 
 seconally.

I'm not sure if I should delete the file or not. What should I do?

**1. Assess the file:**


0.12.716.585 I llama_perf_sampler_print:    sampling time =      49.12 ms /    33 runs   (    1.49 ms per token,   671.82 tokens per second)
0.12.716.589 I llama_perf_context_print:        load time =    1545.58 ms
0.12.716.590 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.716.604 I llama_perf_context_print:        eval time =   11080.23 ms /    32 runs   (  346.26 ms per token,     2.89 tokens per second)
0.12.716.605 I llama_perf_context_print:       total time =   11169.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m40.233s
user	46m45.091s
sys	0m6.392s
```

### test_scripts_release

Runs test scripts in release mode
- status: 0
```
+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.534 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.720 I main: llama backend init
0.00.000.728 I main: load the model and apply lora adapter, if any
0.00.021.088 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.099 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.107 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.111 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.113 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.116 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.117 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.118 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.118 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.119 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.120 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.124 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.125 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.125 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.126 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.126 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.110 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.998 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.939 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.946 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.947 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.947 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.948 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.949 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.950 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.953 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.954 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.956 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.956 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.957 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.960 I llama_model_loader: - type  f32:   37 tensors
0.00.131.961 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.719 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.425 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.986 I llm_load_vocab: special tokens cache size = 5
0.00.268.883 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.902 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.903 I llm_load_print_meta: arch             = gemma
0.00.268.903 I llm_load_print_meta: vocab type       = SPM
0.00.268.904 I llm_load_print_meta: n_vocab          = 256000
0.00.268.904 I llm_load_print_meta: n_merges         = 0
0.00.268.904 I llm_load_print_meta: vocab_only       = 0
0.00.268.905 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.905 I llm_load_print_meta: n_embd           = 2048
0.00.268.905 I llm_load_print_meta: n_layer          = 18
0.00.268.916 I llm_load_print_meta: n_head           = 8
0.00.268.917 I llm_load_print_meta: n_head_kv        = 1
0.00.268.917 I llm_load_print_meta: n_rot            = 256
0.00.268.917 I llm_load_print_meta: n_swa            = 0
0.00.268.918 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.918 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.919 I llm_load_print_meta: n_gqa            = 8
0.00.268.920 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.921 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.922 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.923 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.924 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.924 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.924 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.925 I llm_load_print_meta: n_ff             = 16384
0.00.268.925 I llm_load_print_meta: n_expert         = 0
0.00.268.926 I llm_load_print_meta: n_expert_used    = 0
0.00.268.926 I llm_load_print_meta: causal attn      = 1
0.00.268.926 I llm_load_print_meta: pooling type     = 0
0.00.268.927 I llm_load_print_meta: rope type        = 2
0.00.268.927 I llm_load_print_meta: rope scaling     = linear
0.00.268.928 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.929 I llm_load_print_meta: freq_scale_train = 1
0.00.268.929 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.930 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.930 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.930 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.930 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.931 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.931 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.931 I llm_load_print_meta: model type       = 2B
0.00.268.932 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.932 I llm_load_print_meta: model params     = 2.51 B
0.00.268.933 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.934 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.934 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.934 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.935 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.935 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.936 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.936 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.937 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.937 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.937 I llm_load_print_meta: max token length = 93
0.00.369.217 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.369.225 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.369.226 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.369.227 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.369.227 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.369.228 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.374.403 I llama_new_context_with_model: n_seq_max     = 1
0.00.374.409 I llama_new_context_with_model: n_ctx         = 4096
0.00.374.409 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.374.410 I llama_new_context_with_model: n_batch       = 2048
0.00.374.410 I llama_new_context_with_model: n_ubatch      = 512
0.00.374.411 I llama_new_context_with_model: flash_attn    = 0
0.00.374.413 I llama_new_context_with_model: freq_base     = 10000.0
0.00.374.414 I llama_new_context_with_model: freq_scale    = 1
0.00.374.415 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.389.532 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.389.547 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.389.642 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.390.913 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.390.920 I llama_new_context_with_model: graph nodes  = 601
0.00.390.921 I llama_new_context_with_model: graph splits = 1
0.00.390.923 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.480.429 I main: llama threadpool init, n_threads = 4
0.00.480.446 I 
0.00.480.519 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.480.523 I 
0.00.480.568 I sampler seed: 342161787
0.00.480.579 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.480.592 I sampler chain: logits -> logit-bias -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.480.596 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.480.596 I 
 increasities can be resolved by using the following methods:

A) Mediation
B) Arbitration
C) Compromise
D) All of the above


The

0.02.778.780 I llama_perf_sampler_print:    sampling time =       4.89 ms /    33 runs   (    0.15 ms per token,  6752.61 tokens per second)
0.02.778.783 I llama_perf_context_print:        load time =     479.68 ms
0.02.778.784 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.778.785 I llama_perf_context_print:        eval time =    2279.43 ms /    32 runs   (   71.23 ms per token,    14.04 tokens per second)
0.02.778.786 I llama_perf_context_print:       total time =    2298.36 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.587 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.800 I main: llama backend init
0.00.000.808 I main: load the model and apply lora adapter, if any
0.00.021.425 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.443 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.450 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.451 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.456 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.456 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.458 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.459 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.459 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.460 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.464 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.465 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.465 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.466 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.467 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.883 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.218 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.197 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.204 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.205 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.206 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.207 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.207 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.208 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.211 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.211 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.212 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.213 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.214 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.217 I llama_model_loader: - type  f32:   37 tensors
0.00.133.218 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.948 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.136 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.260.888 I llm_load_vocab: special tokens cache size = 5
0.00.282.249 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.271 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.272 I llm_load_print_meta: arch             = gemma
0.00.282.273 I llm_load_print_meta: vocab type       = SPM
0.00.282.273 I llm_load_print_meta: n_vocab          = 256000
0.00.282.274 I llm_load_print_meta: n_merges         = 0
0.00.282.274 I llm_load_print_meta: vocab_only       = 0
0.00.282.275 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.275 I llm_load_print_meta: n_embd           = 2048
0.00.282.275 I llm_load_print_meta: n_layer          = 18
0.00.282.289 I llm_load_print_meta: n_head           = 8
0.00.282.290 I llm_load_print_meta: n_head_kv        = 1
0.00.282.290 I llm_load_print_meta: n_rot            = 256
0.00.282.291 I llm_load_print_meta: n_swa            = 0
0.00.282.291 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.291 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.292 I llm_load_print_meta: n_gqa            = 8
0.00.282.293 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.294 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.295 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.296 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.297 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.297 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.297 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.298 I llm_load_print_meta: n_ff             = 16384
0.00.282.298 I llm_load_print_meta: n_expert         = 0
0.00.282.299 I llm_load_print_meta: n_expert_used    = 0
0.00.282.299 I llm_load_print_meta: causal attn      = 1
0.00.282.299 I llm_load_print_meta: pooling type     = 0
0.00.282.300 I llm_load_print_meta: rope type        = 2
0.00.282.300 I llm_load_print_meta: rope scaling     = linear
0.00.282.301 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.302 I llm_load_print_meta: freq_scale_train = 1
0.00.282.303 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.303 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.303 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.304 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.304 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.304 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.304 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.305 I llm_load_print_meta: model type       = 2B
0.00.282.305 I llm_load_print_meta: model ftype      = Q8_0
0.00.282.306 I llm_load_print_meta: model params     = 2.51 B
0.00.282.307 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.282.307 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.308 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.309 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.309 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.310 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.310 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.311 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.311 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.311 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.312 I llm_load_print_meta: max token length = 93
0.00.374.580 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.380.128 I llama_new_context_with_model: n_seq_max     = 1
0.00.380.135 I llama_new_context_with_model: n_ctx         = 4096
0.00.380.136 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.380.136 I llama_new_context_with_model: n_batch       = 2048
0.00.380.137 I llama_new_context_with_model: n_ubatch      = 512
0.00.380.137 I llama_new_context_with_model: flash_attn    = 0
0.00.380.141 I llama_new_context_with_model: freq_base     = 10000.0
0.00.380.142 I llama_new_context_with_model: freq_scale    = 1
0.00.380.143 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.395.443 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.395.461 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.395.575 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.396.840 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.396.847 I llama_new_context_with_model: graph nodes  = 601
0.00.396.847 I llama_new_context_with_model: graph splits = 1
0.00.396.850 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.478.552 I main: llama threadpool init, n_threads = 4
0.00.478.572 I 
0.00.478.647 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.478.651 I 
0.00.478.699 I sampler seed: 1390777605
0.00.478.712 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.478.715 I sampler chain: logits -> logit-bias -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.478.715 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.478.715 I 
 increasities, but it is not clear how they are resolved in practice.

**Discussion:**

The resolution of incongruities in narratives relies heavily on the narrative

0.02.704.034 I llama_perf_sampler_print:    sampling time =       4.92 ms /    33 runs   (    0.15 ms per token,  6700.51 tokens per second)
0.02.704.036 I llama_perf_context_print:        load time =     477.73 ms
0.02.704.038 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.704.039 I llama_perf_context_print:        eval time =    2206.14 ms /    32 runs   (   68.94 ms per token,    14.51 tokens per second)
0.02.704.040 I llama_perf_context_print:       total time =    2225.49 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.179 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.390 I main: llama backend init
0.00.000.397 I main: load the model and apply lora adapter, if any
0.00.020.709 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.020.720 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.020.729 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.734 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.735 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.741 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.742 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.742 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.743 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.743 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.744 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.749 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.750 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.750 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.751 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.751 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.816 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.175 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.102 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.108 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.109 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.110 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.111 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.112 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.113 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.117 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.118 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.119 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.119 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.132.121 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.124 I llama_model_loader: - type  f32:   37 tensors
0.00.132.125 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.295 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.444 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.083 I llm_load_vocab: special tokens cache size = 5
0.00.277.050 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.067 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.067 I llm_load_print_meta: arch             = gemma
0.00.277.068 I llm_load_print_meta: vocab type       = SPM
0.00.277.068 I llm_load_print_meta: n_vocab          = 256000
0.00.277.069 I llm_load_print_meta: n_merges         = 0
0.00.277.069 I llm_load_print_meta: vocab_only       = 0
0.00.277.069 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.070 I llm_load_print_meta: n_embd           = 2048
0.00.277.070 I llm_load_print_meta: n_layer          = 18
0.00.277.083 I llm_load_print_meta: n_head           = 8
0.00.277.084 I llm_load_print_meta: n_head_kv        = 1
0.00.277.084 I llm_load_print_meta: n_rot            = 256
0.00.277.084 I llm_load_print_meta: n_swa            = 0
0.00.277.084 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.085 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.086 I llm_load_print_meta: n_gqa            = 8
0.00.277.087 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.087 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.088 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.090 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.090 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.090 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.091 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.092 I llm_load_print_meta: n_ff             = 16384
0.00.277.092 I llm_load_print_meta: n_expert         = 0
0.00.277.092 I llm_load_print_meta: n_expert_used    = 0
0.00.277.092 I llm_load_print_meta: causal attn      = 1
0.00.277.093 I llm_load_print_meta: pooling type     = 0
0.00.277.093 I llm_load_print_meta: rope type        = 2
0.00.277.093 I llm_load_print_meta: rope scaling     = linear
0.00.277.095 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.095 I llm_load_print_meta: freq_scale_train = 1
0.00.277.095 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.096 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.096 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.096 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.097 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.097 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.097 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.097 I llm_load_print_meta: model type       = 2B
0.00.277.098 I llm_load_print_meta: model ftype      = Q8_0
0.00.277.099 I llm_load_print_meta: model params     = 2.51 B
0.00.277.099 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.277.100 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.100 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.101 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.101 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.101 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.102 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.102 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.102 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.103 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.103 I llm_load_print_meta: max token length = 93
0.00.353.596 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.353.603 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.353.604 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.353.604 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.353.605 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.353.605 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.358.964 I llama_new_context_with_model: n_seq_max     = 1
0.00.358.970 I llama_new_context_with_model: n_ctx         = 4096
0.00.358.971 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.358.971 I llama_new_context_with_model: n_batch       = 2048
0.00.358.972 I llama_new_context_with_model: n_ubatch      = 512
0.00.358.972 I llama_new_context_with_model: flash_attn    = 0
0.00.358.974 I llama_new_context_with_model: freq_base     = 10000.0
0.00.358.975 I llama_new_context_with_model: freq_scale    = 1
0.00.358.976 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.373.215 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.373.230 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.373.333 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.658 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.374.662 I llama_new_context_with_model: graph nodes  = 601
0.00.374.662 I llama_new_context_with_model: graph splits = 1
0.00.374.664 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.206 I main: llama threadpool init, n_threads = 4
0.00.460.224 I 
0.00.460.305 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.460.309 I 
0.00.460.366 I sampler seed: 1496115668
0.00.460.377 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.380 I sampler chain: logits -> logit-bias -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.460.381 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.381 I 
 increably with excitement.

I am ecstatic to share this incredible news with you all.

I have been working tirelessly to achieve this goal, and it feels

0.02.737.656 I llama_perf_sampler_print:    sampling time =       4.89 ms /    33 runs   (    0.15 ms per token,  6749.85 tokens per second)
0.02.737.658 I llama_perf_context_print:        load time =     459.70 ms
0.02.737.660 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.737.661 I llama_perf_context_print:        eval time =    2257.72 ms /    32 runs   (   70.55 ms per token,    14.17 tokens per second)
0.02.737.662 I llama_perf_context_print:       total time =    2277.46 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.563 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.782 I main: llama backend init
0.00.000.789 I main: load the model and apply lora adapter, if any
0.00.020.979 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.020.990 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.020.998 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.003 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.005 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.010 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.011 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.013 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.014 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.016 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.017 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.023 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.024 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.025 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.026 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.027 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.021 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.137 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.089 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.096 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.097 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.098 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.099 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.100 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.101 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.105 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.106 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.107 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.108 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.136.110 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.136.115 I llama_model_loader: - type  f32:   37 tensors
0.00.136.116 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.177 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.258.062 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.731 I llm_load_vocab: special tokens cache size = 5
0.00.279.663 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.678 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.679 I llm_load_print_meta: arch             = gemma
0.00.279.679 I llm_load_print_meta: vocab type       = SPM
0.00.279.680 I llm_load_print_meta: n_vocab          = 256000
0.00.279.680 I llm_load_print_meta: n_merges         = 0
0.00.279.681 I llm_load_print_meta: vocab_only       = 0
0.00.279.681 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.681 I llm_load_print_meta: n_embd           = 2048
0.00.279.682 I llm_load_print_meta: n_layer          = 18
0.00.279.694 I llm_load_print_meta: n_head           = 8
0.00.279.695 I llm_load_print_meta: n_head_kv        = 1
0.00.279.695 I llm_load_print_meta: n_rot            = 256
0.00.279.695 I llm_load_print_meta: n_swa            = 0
0.00.279.696 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.696 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.697 I llm_load_print_meta: n_gqa            = 8
0.00.279.698 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.699 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.700 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.701 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.702 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.702 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.702 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.703 I llm_load_print_meta: n_ff             = 16384
0.00.279.703 I llm_load_print_meta: n_expert         = 0
0.00.279.704 I llm_load_print_meta: n_expert_used    = 0
0.00.279.704 I llm_load_print_meta: causal attn      = 1
0.00.279.705 I llm_load_print_meta: pooling type     = 0
0.00.279.705 I llm_load_print_meta: rope type        = 2
0.00.279.705 I llm_load_print_meta: rope scaling     = linear
0.00.279.707 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.708 I llm_load_print_meta: freq_scale_train = 1
0.00.279.708 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.708 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.709 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.709 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.709 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.709 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.710 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.710 I llm_load_print_meta: model type       = 2B
0.00.279.711 I llm_load_print_meta: model ftype      = Q8_0
0.00.279.711 I llm_load_print_meta: model params     = 2.51 B
0.00.279.712 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.279.713 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.713 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.714 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.714 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.715 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.715 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.715 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.716 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.716 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.716 I llm_load_print_meta: max token length = 93
0.00.351.670 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.351.675 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.356.871 I llama_new_context_with_model: n_seq_max     = 1
0.00.356.879 I llama_new_context_with_model: n_ctx         = 4096
0.00.356.880 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.356.880 I llama_new_context_with_model: n_batch       = 2048
0.00.356.881 I llama_new_context_with_model: n_ubatch      = 512
0.00.356.881 I llama_new_context_with_model: flash_attn    = 0
0.00.356.885 I llama_new_context_with_model: freq_base     = 10000.0
0.00.356.886 I llama_new_context_with_model: freq_scale    = 1
0.00.356.886 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.371.523 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.371.547 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.371.649 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.372.862 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.372.869 I llama_new_context_with_model: graph nodes  = 601
0.00.372.869 I llama_new_context_with_model: graph splits = 1
0.00.372.871 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.420 I main: llama threadpool init, n_threads = 4
0.00.463.438 I 
0.00.463.520 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.463.525 I 
0.00.463.587 I sampler seed: 4127672289
0.00.463.597 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.463.600 I sampler chain: logits -> logit-bias -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.463.601 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.463.601 I 
 increasities in the ancient city of Pompeii.

**Answer:**

The given text does not contain any information regarding the occurrence of gladiator duels or warlike activities in

0.02.905.292 I llama_perf_sampler_print:    sampling time =       5.57 ms /    33 runs   (    0.17 ms per token,  5926.72 tokens per second)
0.02.905.294 I llama_perf_context_print:        load time =     462.61 ms
0.02.905.295 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.905.297 I llama_perf_context_print:        eval time =    2420.30 ms /    32 runs   (   75.63 ms per token,    13.22 tokens per second)
0.02.905.297 I llama_perf_context_print:       total time =    2441.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m21.030s
user	0m39.861s
sys	0m9.516s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4316 (ce9b965c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40293.24 ms
main:    total time = 40293.24 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.551 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.740 I main: llama backend init
0.00.000.747 I main: load the model and apply lora adapter, if any
0.00.021.592 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.603 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.611 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.619 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.620 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.624 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.625 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.626 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.627 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.627 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.627 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.631 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.632 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.633 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.634 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.634 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.863 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.152 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.290 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.298 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.299 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.299 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.300 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.301 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.302 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.304 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.305 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.306 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.306 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.307 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.311 I llama_model_loader: - type  f32:   37 tensors
0.00.133.313 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.313 I llama_model_loader: - type q6_K:   19 tensors
0.00.209.927 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.156 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.781 I llm_load_vocab: special tokens cache size = 5
0.00.278.878 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.894 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.895 I llm_load_print_meta: arch             = gemma
0.00.278.896 I llm_load_print_meta: vocab type       = SPM
0.00.278.896 I llm_load_print_meta: n_vocab          = 256000
0.00.278.897 I llm_load_print_meta: n_merges         = 0
0.00.278.897 I llm_load_print_meta: vocab_only       = 0
0.00.278.897 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.898 I llm_load_print_meta: n_embd           = 2048
0.00.278.898 I llm_load_print_meta: n_layer          = 18
0.00.278.911 I llm_load_print_meta: n_head           = 8
0.00.278.912 I llm_load_print_meta: n_head_kv        = 1
0.00.278.912 I llm_load_print_meta: n_rot            = 256
0.00.278.912 I llm_load_print_meta: n_swa            = 0
0.00.278.913 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.913 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.914 I llm_load_print_meta: n_gqa            = 8
0.00.278.915 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.916 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.917 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.918 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.918 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.919 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.919 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.920 I llm_load_print_meta: n_ff             = 16384
0.00.278.920 I llm_load_print_meta: n_expert         = 0
0.00.278.921 I llm_load_print_meta: n_expert_used    = 0
0.00.278.921 I llm_load_print_meta: causal attn      = 1
0.00.278.921 I llm_load_print_meta: pooling type     = 0
0.00.278.921 I llm_load_print_meta: rope type        = 2
0.00.278.922 I llm_load_print_meta: rope scaling     = linear
0.00.278.923 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.924 I llm_load_print_meta: freq_scale_train = 1
0.00.278.924 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.925 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.925 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.925 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.925 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.925 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.926 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.926 I llm_load_print_meta: model type       = 2B
0.00.278.926 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.278.927 I llm_load_print_meta: model params     = 2.51 B
0.00.278.928 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.278.929 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.929 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.929 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.930 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.930 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.930 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.930 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.931 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.931 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.932 I llm_load_print_meta: max token length = 93
0.00.339.390 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.339.398 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.339.399 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.339.399 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.339.400 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.339.401 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.344.693 I llama_new_context_with_model: n_seq_max     = 1
0.00.344.700 I llama_new_context_with_model: n_ctx         = 4096
0.00.344.701 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.344.701 I llama_new_context_with_model: n_batch       = 2048
0.00.344.702 I llama_new_context_with_model: n_ubatch      = 512
0.00.344.702 I llama_new_context_with_model: flash_attn    = 0
0.00.344.704 I llama_new_context_with_model: freq_base     = 10000.0
0.00.344.705 I llama_new_context_with_model: freq_scale    = 1
0.00.344.706 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.359.841 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.359.855 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.359.949 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.361.204 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.361.211 I llama_new_context_with_model: graph nodes  = 601
0.00.361.211 I llama_new_context_with_model: graph splits = 1
0.00.361.213 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.438.229 I main: llama threadpool init, n_threads = 4
0.00.438.244 I 
0.00.438.314 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.438.317 I 
0.00.438.358 I sampler seed: 3235917831
0.00.438.370 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.438.382 I sampler chain: logits -> logit-bias -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.438.386 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.438.386 I 
 seconally with the previous answer.

I am not sure if I understand the question. Please provide more context or clarify the request. [end of text]


0.01.876.223 I llama_perf_sampler_print:    sampling time =       4.71 ms /    29 runs   (    0.16 ms per token,  6159.73 tokens per second)
0.01.876.225 I llama_perf_context_print:        load time =     437.47 ms
0.01.876.226 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.876.227 I llama_perf_context_print:        eval time =    1420.65 ms /    28 runs   (   50.74 ms per token,    19.71 tokens per second)
0.01.876.228 I llama_perf_context_print:       total time =    1438.00 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4316 (ce9b965c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40215.47 ms
main:    total time = 40215.47 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.554 I build: 4316 (ce9b965c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.000.758 I main: load the model and apply lora adapter, if any
0.00.021.060 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.074 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.084 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.085 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.089 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.090 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.091 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.092 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.093 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.093 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.097 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.098 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.098 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.099 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.099 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.593 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.509 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.401 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.407 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.408 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.409 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.409 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.410 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.411 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.414 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.416 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.420 I llama_model_loader: - type  f32:   37 tensors
0.00.132.422 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.422 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.340 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.248.060 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.660 I llm_load_vocab: special tokens cache size = 5
0.00.269.598 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.614 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.615 I llm_load_print_meta: arch             = gemma
0.00.269.615 I llm_load_print_meta: vocab type       = SPM
0.00.269.616 I llm_load_print_meta: n_vocab          = 256000
0.00.269.617 I llm_load_print_meta: n_merges         = 0
0.00.269.617 I llm_load_print_meta: vocab_only       = 0
0.00.269.617 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.618 I llm_load_print_meta: n_embd           = 2048
0.00.269.618 I llm_load_print_meta: n_layer          = 18
0.00.269.630 I llm_load_print_meta: n_head           = 8
0.00.269.631 I llm_load_print_meta: n_head_kv        = 1
0.00.269.631 I llm_load_print_meta: n_rot            = 256
0.00.269.631 I llm_load_print_meta: n_swa            = 0
0.00.269.631 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.632 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.633 I llm_load_print_meta: n_gqa            = 8
0.00.269.634 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.634 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.635 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.637 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.637 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.638 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.638 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.639 I llm_load_print_meta: n_ff             = 16384
0.00.269.639 I llm_load_print_meta: n_expert         = 0
0.00.269.639 I llm_load_print_meta: n_expert_used    = 0
0.00.269.639 I llm_load_print_meta: causal attn      = 1
0.00.269.640 I llm_load_print_meta: pooling type     = 0
0.00.269.640 I llm_load_print_meta: rope type        = 2
0.00.269.640 I llm_load_print_meta: rope scaling     = linear
0.00.269.642 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.643 I llm_load_print_meta: freq_scale_train = 1
0.00.269.643 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.644 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.644 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.644 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.644 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.645 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.645 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.645 I llm_load_print_meta: model type       = 2B
0.00.269.646 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.269.646 I llm_load_print_meta: model params     = 2.51 B
0.00.269.647 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.269.647 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.648 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.649 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.649 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.649 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.650 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.651 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.651 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.652 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.652 I llm_load_print_meta: max token length = 93
0.00.325.917 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.331.045 I llama_new_context_with_model: n_seq_max     = 1
0.00.331.052 I llama_new_context_with_model: n_ctx         = 4096
0.00.331.053 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.331.053 I llama_new_context_with_model: n_batch       = 2048
0.00.331.054 I llama_new_context_with_model: n_ubatch      = 512
0.00.331.054 I llama_new_context_with_model: flash_attn    = 0
0.00.331.057 I llama_new_context_with_model: freq_base     = 10000.0
0.00.331.058 I llama_new_context_with_model: freq_scale    = 1
0.00.331.059 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.346.177 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.346.192 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.346.283 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.347.566 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.347.573 I llama_new_context_with_model: graph nodes  = 601
0.00.347.573 I llama_new_context_with_model: graph splits = 1
0.00.347.575 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.422.200 I main: llama threadpool init, n_threads = 4
0.00.422.217 I 
0.00.422.292 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.422.295 I 
0.00.422.336 I sampler seed: 1753090898
0.00.422.347 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.422.358 I sampler chain: logits -> logit-bias -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.422.359 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.422.360 I 
 increasities with a focus on the following:

**1. Psychological and emotional impact:**
- How do these experiences affect the mental and emotional well-being

0.02.016.554 I llama_perf_sampler_print:    sampling time =       5.39 ms /    33 runs   (    0.16 ms per token,  6123.59 tokens per second)
0.02.016.557 I llama_perf_context_print:        load time =     421.43 ms
0.02.016.559 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.016.561 I llama_perf_context_print:        eval time =    1574.62 ms /    32 runs   (   49.21 ms per token,    20.32 tokens per second)
0.02.016.562 I llama_perf_context_print:       total time =    1594.36 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.232s
user	10m23.920s
sys	0m7.056s
```

### pythia_1_4b

Pythia 1.4B:
- status: 1
- perplexity:

- imatrix:
```

```
- f16: 
```
+ ./bin/llama-cli --model ../models-mnt/pythia/1.4B/ggml-model-f16.gguf -ngl 99 -c 0 -s 1234 -n 64 --ignore-eos -p 'I believe the meaning of life is'
warning: no usable GPU found, --gpu-layers option will be ignored
warning: one possible reason is that llama.cpp was compiled without GPU support
warning: consult docs/build.md for compilation instructions
error: invalid argument: --ignore-eos

real	0m0.005s
user	0m0.005s
sys	0m0.000s
```
- q8_0:
```

```
- q4_0:
```

```
- q4_1:
```

```
- q5_0:
```

```
- q5_1:
```

```
- q2_k:
```

```
- q3_k:
```

```
- q4_k:
```

```
- q5_k:
```

```
- q6_k:
```

```
- save-load-state: 
```

```
