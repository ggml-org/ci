+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.657 I build: 4206 (2e752c4c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.876 I main: llama backend init
0.00.000.884 I main: load the model and apply lora adapter, if any
0.00.023.484 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.493 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.580 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.591 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.593 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.598 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.600 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.601 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.602 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.604 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.606 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.612 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.616 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.617 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.618 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.620 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.223.474 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.324.698 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.348.187 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.348.195 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.348.196 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.348.198 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.348.199 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.348.201 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.348.202 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.348.207 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.348.208 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.348.210 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.348.211 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.348.213 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.348.221 I llama_model_loader: - type  f32:   37 tensors
0.00.348.223 I llama_model_loader: - type q8_0:  127 tensors
0.00.574.887 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.633.291 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.634.238 I llm_load_vocab: special tokens cache size = 5
0.00.830.950 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.831.020 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.831.021 I llm_load_print_meta: arch             = gemma
0.00.831.022 I llm_load_print_meta: vocab type       = SPM
0.00.831.023 I llm_load_print_meta: n_vocab          = 256000
0.00.831.026 I llm_load_print_meta: n_merges         = 0
0.00.831.027 I llm_load_print_meta: vocab_only       = 0
0.00.831.027 I llm_load_print_meta: n_ctx_train      = 8192
0.00.831.027 I llm_load_print_meta: n_embd           = 2048
0.00.831.028 I llm_load_print_meta: n_layer          = 18
0.00.831.096 I llm_load_print_meta: n_head           = 8
0.00.831.103 I llm_load_print_meta: n_head_kv        = 1
0.00.831.103 I llm_load_print_meta: n_rot            = 256
0.00.831.105 I llm_load_print_meta: n_swa            = 0
0.00.831.105 I llm_load_print_meta: n_embd_head_k    = 256
0.00.831.105 I llm_load_print_meta: n_embd_head_v    = 256
0.00.831.111 I llm_load_print_meta: n_gqa            = 8
0.00.831.116 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.831.121 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.831.122 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.831.124 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.831.125 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.831.125 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.831.126 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.831.134 I llm_load_print_meta: n_ff             = 16384
0.00.831.134 I llm_load_print_meta: n_expert         = 0
0.00.831.144 I llm_load_print_meta: n_expert_used    = 0
0.00.831.144 I llm_load_print_meta: causal attn      = 1
0.00.831.156 I llm_load_print_meta: pooling type     = 0
0.00.831.157 I llm_load_print_meta: rope type        = 2
0.00.831.157 I llm_load_print_meta: rope scaling     = linear
0.00.831.159 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.831.159 I llm_load_print_meta: freq_scale_train = 1
0.00.831.160 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.831.161 I llm_load_print_meta: rope_finetuned   = unknown
0.00.831.161 I llm_load_print_meta: ssm_d_conv       = 0
0.00.831.161 I llm_load_print_meta: ssm_d_inner      = 0
0.00.831.162 I llm_load_print_meta: ssm_d_state      = 0
0.00.831.162 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.831.163 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.831.163 I llm_load_print_meta: model type       = 2B
0.00.831.164 I llm_load_print_meta: model ftype      = Q8_0
0.00.831.172 I llm_load_print_meta: model params     = 2.51 B
0.00.831.181 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.831.182 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.831.182 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.831.183 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.831.183 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.831.185 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.831.185 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.831.186 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.831.191 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.831.192 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.831.193 I llm_load_print_meta: max token length = 93
0.00.933.613 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.933.625 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.933.626 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.933.627 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.933.628 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.933.628 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.939.578 I llama_new_context_with_model: n_seq_max     = 1
0.00.939.585 I llama_new_context_with_model: n_ctx         = 4096
0.00.939.585 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.939.586 I llama_new_context_with_model: n_batch       = 2048
0.00.939.586 I llama_new_context_with_model: n_ubatch      = 512
0.00.939.587 I llama_new_context_with_model: flash_attn    = 0
0.00.939.589 I llama_new_context_with_model: freq_base     = 10000.0
0.00.939.590 I llama_new_context_with_model: freq_scale    = 1
0.00.939.591 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.954.289 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.954.329 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.954.455 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.956.992 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.956.996 I llama_new_context_with_model: graph nodes  = 601
0.00.956.997 I llama_new_context_with_model: graph splits = 1
0.00.957.019 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.566.474 I main: llama threadpool init, n_threads = 4
0.01.566.491 I 
0.01.566.603 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.566.608 I 
0.01.566.863 I sampler seed: 319924528
0.01.566.876 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.566.886 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.566.889 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.566.889 I 
 increasities with the aim of acquiring new skills, knowledge, and perspectives. [end of text]


0.08.348.956 I llama_perf_sampler_print:    sampling time =      24.57 ms /    17 runs   (    1.45 ms per token,   691.79 tokens per second)
0.08.348.959 I llama_perf_context_print:        load time =    1565.50 ms
0.08.348.960 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.348.962 I llama_perf_context_print:        eval time =    6737.06 ms /    16 runs   (  421.07 ms per token,     2.37 tokens per second)
0.08.348.962 I llama_perf_context_print:       total time =    6782.49 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.675 I build: 4206 (2e752c4c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.900 I main: llama backend init
0.00.000.909 I main: load the model and apply lora adapter, if any
0.00.030.169 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.030.272 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.030.291 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.030.295 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.030.304 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.030.305 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.030.307 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.030.308 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.030.309 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.030.310 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.030.323 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.030.327 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.030.328 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.030.329 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.030.331 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.240.341 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.341.788 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.365.275 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.365.284 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.365.286 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.365.287 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.365.288 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.365.290 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.365.291 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.365.295 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.365.296 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.365.298 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.365.299 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.365.301 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.365.309 I llama_model_loader: - type  f32:   37 tensors
0.00.365.311 I llama_model_loader: - type q8_0:  127 tensors
0.00.593.204 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.648.929 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.649.819 I llm_load_vocab: special tokens cache size = 5
0.00.853.549 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.853.621 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.853.623 I llm_load_print_meta: arch             = gemma
0.00.853.623 I llm_load_print_meta: vocab type       = SPM
0.00.853.624 I llm_load_print_meta: n_vocab          = 256000
0.00.853.627 I llm_load_print_meta: n_merges         = 0
0.00.853.627 I llm_load_print_meta: vocab_only       = 0
0.00.853.628 I llm_load_print_meta: n_ctx_train      = 8192
0.00.853.628 I llm_load_print_meta: n_embd           = 2048
0.00.853.629 I llm_load_print_meta: n_layer          = 18
0.00.853.693 I llm_load_print_meta: n_head           = 8
0.00.853.700 I llm_load_print_meta: n_head_kv        = 1
0.00.853.701 I llm_load_print_meta: n_rot            = 256
0.00.853.702 I llm_load_print_meta: n_swa            = 0
0.00.853.703 I llm_load_print_meta: n_embd_head_k    = 256
0.00.853.703 I llm_load_print_meta: n_embd_head_v    = 256
0.00.853.708 I llm_load_print_meta: n_gqa            = 8
0.00.853.713 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.853.717 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.853.719 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.853.721 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.853.721 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.853.723 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.853.723 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.853.729 I llm_load_print_meta: n_ff             = 16384
0.00.853.729 I llm_load_print_meta: n_expert         = 0
0.00.853.730 I llm_load_print_meta: n_expert_used    = 0
0.00.853.730 I llm_load_print_meta: causal attn      = 1
0.00.853.731 I llm_load_print_meta: pooling type     = 0
0.00.853.735 I llm_load_print_meta: rope type        = 2
0.00.853.736 I llm_load_print_meta: rope scaling     = linear
0.00.853.738 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.853.738 I llm_load_print_meta: freq_scale_train = 1
0.00.853.739 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.853.740 I llm_load_print_meta: rope_finetuned   = unknown
0.00.853.740 I llm_load_print_meta: ssm_d_conv       = 0
0.00.853.740 I llm_load_print_meta: ssm_d_inner      = 0
0.00.853.741 I llm_load_print_meta: ssm_d_state      = 0
0.00.853.742 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.853.742 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.853.743 I llm_load_print_meta: model type       = 2B
0.00.853.743 I llm_load_print_meta: model ftype      = Q8_0
0.00.853.744 I llm_load_print_meta: model params     = 2.51 B
0.00.853.763 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.853.764 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.853.765 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.853.766 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.853.766 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.853.767 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.853.767 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.853.770 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.853.777 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.853.778 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.853.780 I llm_load_print_meta: max token length = 93
0.00.951.062 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.957.125 I llama_new_context_with_model: n_seq_max     = 1
0.00.957.132 I llama_new_context_with_model: n_ctx         = 4096
0.00.957.132 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.957.133 I llama_new_context_with_model: n_batch       = 2048
0.00.957.133 I llama_new_context_with_model: n_ubatch      = 512
0.00.957.134 I llama_new_context_with_model: flash_attn    = 0
0.00.957.137 I llama_new_context_with_model: freq_base     = 10000.0
0.00.957.138 I llama_new_context_with_model: freq_scale    = 1
0.00.957.139 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.973.047 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.973.094 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.973.228 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.975.827 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.975.831 I llama_new_context_with_model: graph nodes  = 601
0.00.975.832 I llama_new_context_with_model: graph splits = 1
0.00.975.855 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.583.503 I main: llama threadpool init, n_threads = 4
0.01.583.520 I 
0.01.583.642 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.583.647 I 
0.01.583.889 I sampler seed: 2240315919
0.01.583.903 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.583.915 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.583.916 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.583.916 I 
 seconally.

I am unable to find the requested information in the provided context. Please check the relevant documentation and provide the requested information. [end of text]


0.14.032.662 I llama_perf_sampler_print:    sampling time =      44.75 ms /    30 runs   (    1.49 ms per token,   670.33 tokens per second)
0.14.032.689 I llama_perf_context_print:        load time =    1582.48 ms
0.14.032.691 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.032.693 I llama_perf_context_print:        eval time =   12367.66 ms /    29 runs   (  426.47 ms per token,     2.34 tokens per second)
0.14.032.693 I llama_perf_context_print:       total time =   12449.17 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.719 I build: 4206 (2e752c4c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.924 I main: llama backend init
0.00.000.932 I main: load the model and apply lora adapter, if any
0.00.023.563 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.574 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.673 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.687 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.690 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.699 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.707 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.709 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.710 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.711 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.713 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.720 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.721 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.723 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.724 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.725 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.230.736 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.332.054 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.355.533 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.355.541 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.355.543 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.355.544 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.355.545 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.355.547 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.355.549 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.355.553 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.355.554 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.355.556 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.355.557 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.355.558 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.355.567 I llama_model_loader: - type  f32:   37 tensors
0.00.355.569 I llama_model_loader: - type q8_0:  127 tensors
0.00.577.243 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.634.893 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.635.872 I llm_load_vocab: special tokens cache size = 5
0.00.826.663 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.826.738 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.826.739 I llm_load_print_meta: arch             = gemma
0.00.826.739 I llm_load_print_meta: vocab type       = SPM
0.00.826.740 I llm_load_print_meta: n_vocab          = 256000
0.00.826.743 I llm_load_print_meta: n_merges         = 0
0.00.826.743 I llm_load_print_meta: vocab_only       = 0
0.00.826.744 I llm_load_print_meta: n_ctx_train      = 8192
0.00.826.744 I llm_load_print_meta: n_embd           = 2048
0.00.826.745 I llm_load_print_meta: n_layer          = 18
0.00.826.810 I llm_load_print_meta: n_head           = 8
0.00.826.818 I llm_load_print_meta: n_head_kv        = 1
0.00.826.818 I llm_load_print_meta: n_rot            = 256
0.00.826.819 I llm_load_print_meta: n_swa            = 0
0.00.826.820 I llm_load_print_meta: n_embd_head_k    = 256
0.00.826.820 I llm_load_print_meta: n_embd_head_v    = 256
0.00.826.825 I llm_load_print_meta: n_gqa            = 8
0.00.826.830 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.826.836 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.826.837 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.826.849 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.826.850 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.826.850 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.826.861 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.826.872 I llm_load_print_meta: n_ff             = 16384
0.00.826.876 I llm_load_print_meta: n_expert         = 0
0.00.826.876 I llm_load_print_meta: n_expert_used    = 0
0.00.826.877 I llm_load_print_meta: causal attn      = 1
0.00.826.878 I llm_load_print_meta: pooling type     = 0
0.00.826.878 I llm_load_print_meta: rope type        = 2
0.00.826.878 I llm_load_print_meta: rope scaling     = linear
0.00.826.880 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.826.881 I llm_load_print_meta: freq_scale_train = 1
0.00.826.881 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.826.882 I llm_load_print_meta: rope_finetuned   = unknown
0.00.826.882 I llm_load_print_meta: ssm_d_conv       = 0
0.00.826.882 I llm_load_print_meta: ssm_d_inner      = 0
0.00.826.883 I llm_load_print_meta: ssm_d_state      = 0
0.00.826.883 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.826.883 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.826.893 I llm_load_print_meta: model type       = 2B
0.00.826.895 I llm_load_print_meta: model ftype      = Q8_0
0.00.826.895 I llm_load_print_meta: model params     = 2.51 B
0.00.826.903 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.826.904 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.826.907 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.826.908 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.826.909 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.826.909 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.826.909 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.826.910 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.826.916 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.826.917 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.826.917 I llm_load_print_meta: max token length = 93
0.00.904.029 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.904.036 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.904.037 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.904.038 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.904.039 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.904.040 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.909.845 I llama_new_context_with_model: n_seq_max     = 1
0.00.909.852 I llama_new_context_with_model: n_ctx         = 4096
0.00.909.852 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.909.852 I llama_new_context_with_model: n_batch       = 2048
0.00.909.853 I llama_new_context_with_model: n_ubatch      = 512
0.00.909.853 I llama_new_context_with_model: flash_attn    = 0
0.00.909.855 I llama_new_context_with_model: freq_base     = 10000.0
0.00.909.856 I llama_new_context_with_model: freq_scale    = 1
0.00.909.857 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.924.619 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.924.658 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.924.794 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.927.358 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.927.362 I llama_new_context_with_model: graph nodes  = 601
0.00.927.362 I llama_new_context_with_model: graph splits = 1
0.00.927.387 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.572.863 I main: llama threadpool init, n_threads = 4
0.01.572.878 I 
0.01.572.995 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.572.999 I 
0.01.573.237 I sampler seed: 342300060
0.01.573.251 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.573.262 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.573.263 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.573.263 I 
 increasities and the importance of considering all relevant stakeholders.

**The Importance of Stakeholder Consideration in Project Planning**

**1. Enhanced Decision-Making:**



0.15.138.236 I llama_perf_sampler_print:    sampling time =      49.08 ms /    33 runs   (    1.49 ms per token,   672.39 tokens per second)
0.15.138.239 I llama_perf_context_print:        load time =    1571.82 ms
0.15.138.240 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.138.255 I llama_perf_context_print:        eval time =   13476.67 ms /    32 runs   (  421.15 ms per token,     2.37 tokens per second)
0.15.138.256 I llama_perf_context_print:       total time =   13565.38 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.629 I build: 4206 (2e752c4c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.825 I main: llama backend init
0.00.000.833 I main: load the model and apply lora adapter, if any
0.00.022.980 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.988 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.082 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.095 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.097 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.103 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.108 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.110 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.112 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.114 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.116 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.128 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.134 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.136 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.138 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.140 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.224.195 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.325.856 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.349.479 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.349.491 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.349.493 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.349.494 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.349.495 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.349.497 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.349.499 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.349.503 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.349.505 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.349.506 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.349.507 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.349.509 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.349.518 I llama_model_loader: - type  f32:   37 tensors
0.00.349.520 I llama_model_loader: - type q8_0:  127 tensors
0.00.576.211 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.634.359 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.635.257 I llm_load_vocab: special tokens cache size = 5
0.00.818.871 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.818.942 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.818.943 I llm_load_print_meta: arch             = gemma
0.00.818.944 I llm_load_print_meta: vocab type       = SPM
0.00.818.945 I llm_load_print_meta: n_vocab          = 256000
0.00.818.947 I llm_load_print_meta: n_merges         = 0
0.00.818.948 I llm_load_print_meta: vocab_only       = 0
0.00.818.948 I llm_load_print_meta: n_ctx_train      = 8192
0.00.818.948 I llm_load_print_meta: n_embd           = 2048
0.00.818.949 I llm_load_print_meta: n_layer          = 18
0.00.819.014 I llm_load_print_meta: n_head           = 8
0.00.819.021 I llm_load_print_meta: n_head_kv        = 1
0.00.819.021 I llm_load_print_meta: n_rot            = 256
0.00.819.022 I llm_load_print_meta: n_swa            = 0
0.00.819.022 I llm_load_print_meta: n_embd_head_k    = 256
0.00.819.022 I llm_load_print_meta: n_embd_head_v    = 256
0.00.819.027 I llm_load_print_meta: n_gqa            = 8
0.00.819.032 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.819.036 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.819.038 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.819.039 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.819.039 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.819.040 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.819.040 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.819.045 I llm_load_print_meta: n_ff             = 16384
0.00.819.046 I llm_load_print_meta: n_expert         = 0
0.00.819.065 I llm_load_print_meta: n_expert_used    = 0
0.00.819.066 I llm_load_print_meta: causal attn      = 1
0.00.819.067 I llm_load_print_meta: pooling type     = 0
0.00.819.067 I llm_load_print_meta: rope type        = 2
0.00.819.068 I llm_load_print_meta: rope scaling     = linear
0.00.819.069 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.819.070 I llm_load_print_meta: freq_scale_train = 1
0.00.819.070 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.819.070 I llm_load_print_meta: rope_finetuned   = unknown
0.00.819.071 I llm_load_print_meta: ssm_d_conv       = 0
0.00.819.071 I llm_load_print_meta: ssm_d_inner      = 0
0.00.819.072 I llm_load_print_meta: ssm_d_state      = 0
0.00.819.072 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.819.072 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.819.073 I llm_load_print_meta: model type       = 2B
0.00.819.074 I llm_load_print_meta: model ftype      = Q8_0
0.00.819.075 I llm_load_print_meta: model params     = 2.51 B
0.00.819.083 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.819.084 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.819.085 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.819.086 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.819.086 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.819.087 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.819.087 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.819.088 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.819.094 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.819.096 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.819.096 I llm_load_print_meta: max token length = 93
0.00.891.575 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.891.584 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.897.817 I llama_new_context_with_model: n_seq_max     = 1
0.00.897.826 I llama_new_context_with_model: n_ctx         = 4096
0.00.897.827 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.897.827 I llama_new_context_with_model: n_batch       = 2048
0.00.897.828 I llama_new_context_with_model: n_ubatch      = 512
0.00.897.829 I llama_new_context_with_model: flash_attn    = 0
0.00.897.832 I llama_new_context_with_model: freq_base     = 10000.0
0.00.897.833 I llama_new_context_with_model: freq_scale    = 1
0.00.897.834 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.913.729 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.913.773 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.913.905 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.916.573 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.916.577 I llama_new_context_with_model: graph nodes  = 601
0.00.916.577 I llama_new_context_with_model: graph splits = 1
0.00.916.601 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.525.925 I main: llama threadpool init, n_threads = 4
0.01.525.943 I 
0.01.526.070 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.526.074 I 
0.01.526.314 I sampler seed: 2049577323
0.01.526.329 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.526.341 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.526.341 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.526.342 I 
 increasities?

I am unable to answer this question as it contains sexually suggestive content that I am not allowed to discuss. [end of text]


0.12.538.246 I llama_perf_sampler_print:    sampling time =      39.91 ms /    27 runs   (    1.48 ms per token,   676.51 tokens per second)
0.12.538.262 I llama_perf_context_print:        load time =    1524.99 ms
0.12.538.264 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.538.266 I llama_perf_context_print:        eval time =   10939.54 ms /    26 runs   (  420.75 ms per token,     2.38 tokens per second)
0.12.538.271 I llama_perf_context_print:       total time =   11012.33 ms /    27 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m59.606s
user	3m8.990s
sys	0m9.246s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4206 (2e752c4c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186369.44 ms
main:    total time = 186369.44 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.621 I build: 4206 (2e752c4c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.839 I main: llama backend init
0.00.000.847 I main: load the model and apply lora adapter, if any
0.00.024.443 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.453 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.541 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.553 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.555 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.561 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.564 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.566 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.567 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.568 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.570 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.579 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.581 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.582 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.583 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.585 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.238.014 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.339.424 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.363.098 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.363.107 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.363.108 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.363.109 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.363.111 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.363.112 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.363.114 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.363.118 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.363.120 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.363.121 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.363.122 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.363.124 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.363.133 I llama_model_loader: - type  f32:   37 tensors
0.00.363.136 I llama_model_loader: - type q4_K:  108 tensors
0.00.363.136 I llama_model_loader: - type q6_K:   19 tensors
0.00.581.607 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.640.925 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.641.842 I llm_load_vocab: special tokens cache size = 5
0.00.843.294 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.843.364 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.843.365 I llm_load_print_meta: arch             = gemma
0.00.843.365 I llm_load_print_meta: vocab type       = SPM
0.00.843.366 I llm_load_print_meta: n_vocab          = 256000
0.00.843.369 I llm_load_print_meta: n_merges         = 0
0.00.843.369 I llm_load_print_meta: vocab_only       = 0
0.00.843.370 I llm_load_print_meta: n_ctx_train      = 8192
0.00.843.370 I llm_load_print_meta: n_embd           = 2048
0.00.843.371 I llm_load_print_meta: n_layer          = 18
0.00.843.437 I llm_load_print_meta: n_head           = 8
0.00.843.445 I llm_load_print_meta: n_head_kv        = 1
0.00.843.445 I llm_load_print_meta: n_rot            = 256
0.00.843.446 I llm_load_print_meta: n_swa            = 0
0.00.843.446 I llm_load_print_meta: n_embd_head_k    = 256
0.00.843.447 I llm_load_print_meta: n_embd_head_v    = 256
0.00.843.452 I llm_load_print_meta: n_gqa            = 8
0.00.843.456 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.843.461 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.843.463 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.843.465 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.843.465 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.843.465 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.843.467 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.843.472 I llm_load_print_meta: n_ff             = 16384
0.00.843.472 I llm_load_print_meta: n_expert         = 0
0.00.843.473 I llm_load_print_meta: n_expert_used    = 0
0.00.843.474 I llm_load_print_meta: causal attn      = 1
0.00.843.474 I llm_load_print_meta: pooling type     = 0
0.00.843.474 I llm_load_print_meta: rope type        = 2
0.00.843.475 I llm_load_print_meta: rope scaling     = linear
0.00.843.476 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.843.477 I llm_load_print_meta: freq_scale_train = 1
0.00.843.478 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.843.478 I llm_load_print_meta: rope_finetuned   = unknown
0.00.843.479 I llm_load_print_meta: ssm_d_conv       = 0
0.00.843.480 I llm_load_print_meta: ssm_d_inner      = 0
0.00.843.480 I llm_load_print_meta: ssm_d_state      = 0
0.00.843.480 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.843.481 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.843.482 I llm_load_print_meta: model type       = 2B
0.00.843.483 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.843.507 I llm_load_print_meta: model params     = 2.51 B
0.00.843.517 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.843.517 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.843.518 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.843.519 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.843.519 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.843.520 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.843.520 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.843.521 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.843.528 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.843.529 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.843.529 I llm_load_print_meta: max token length = 93
0.00.906.805 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.906.817 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.906.818 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.906.819 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.906.819 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.906.820 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.913.609 I llama_new_context_with_model: n_seq_max     = 1
0.00.913.616 I llama_new_context_with_model: n_ctx         = 4096
0.00.913.617 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.913.617 I llama_new_context_with_model: n_batch       = 2048
0.00.913.617 I llama_new_context_with_model: n_ubatch      = 512
0.00.913.618 I llama_new_context_with_model: flash_attn    = 0
0.00.913.620 I llama_new_context_with_model: freq_base     = 10000.0
0.00.913.621 I llama_new_context_with_model: freq_scale    = 1
0.00.913.621 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.927.939 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.927.981 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.928.111 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.930.646 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.930.651 I llama_new_context_with_model: graph nodes  = 601
0.00.930.651 I llama_new_context_with_model: graph splits = 1
0.00.930.675 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.513.859 I main: llama threadpool init, n_threads = 4
0.01.513.875 I 
0.01.513.988 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.513.991 I 
0.01.514.230 I sampler seed: 308622635
0.01.514.244 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.514.255 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.514.256 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.514.257 I 
 increamically.

The answer is slowly.

The answer is slowly because the sentence is describing something that happens over a long period of time. [end of text]


0.11.913.678 I llama_perf_sampler_print:    sampling time =      45.88 ms /    31 runs   (    1.48 ms per token,   675.73 tokens per second)
0.11.913.681 I llama_perf_context_print:        load time =    1512.92 ms
0.11.913.683 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.11.913.685 I llama_perf_context_print:        eval time =   10316.84 ms /    30 runs   (  343.89 ms per token,     2.91 tokens per second)
0.11.913.686 I llama_perf_context_print:       total time =   10399.83 ms /    31 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4206 (2e752c4c)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186408.17 ms
main:    total time = 186408.17 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.657 I build: 4206 (2e752c4c) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.873 I main: llama backend init
0.00.000.881 I main: load the model and apply lora adapter, if any
0.00.022.941 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.042 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.056 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.058 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.063 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.065 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.066 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.067 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.068 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.070 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.075 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.079 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.081 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.082 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.083 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.222.661 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.324.187 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.347.634 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.347.643 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.347.644 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.347.646 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.347.647 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.347.648 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.347.650 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.347.654 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.347.656 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.347.664 I llama_model_loader: - type  f32:   37 tensors
0.00.347.666 I llama_model_loader: - type q4_K:  108 tensors
0.00.347.667 I llama_model_loader: - type q6_K:   19 tensors
0.00.562.080 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.617.844 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.618.782 I llm_load_vocab: special tokens cache size = 5
0.00.818.451 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.818.518 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.818.521 I llm_load_print_meta: arch             = gemma
0.00.818.522 I llm_load_print_meta: vocab type       = SPM
0.00.818.523 I llm_load_print_meta: n_vocab          = 256000
0.00.818.525 I llm_load_print_meta: n_merges         = 0
0.00.818.526 I llm_load_print_meta: vocab_only       = 0
0.00.818.526 I llm_load_print_meta: n_ctx_train      = 8192
0.00.818.527 I llm_load_print_meta: n_embd           = 2048
0.00.818.527 I llm_load_print_meta: n_layer          = 18
0.00.818.593 I llm_load_print_meta: n_head           = 8
0.00.818.603 I llm_load_print_meta: n_head_kv        = 1
0.00.818.604 I llm_load_print_meta: n_rot            = 256
0.00.818.604 I llm_load_print_meta: n_swa            = 0
0.00.818.605 I llm_load_print_meta: n_embd_head_k    = 256
0.00.818.605 I llm_load_print_meta: n_embd_head_v    = 256
0.00.818.610 I llm_load_print_meta: n_gqa            = 8
0.00.818.615 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.818.619 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.818.620 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.818.622 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.818.623 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.818.623 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.818.623 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.818.628 I llm_load_print_meta: n_ff             = 16384
0.00.818.629 I llm_load_print_meta: n_expert         = 0
0.00.818.630 I llm_load_print_meta: n_expert_used    = 0
0.00.818.630 I llm_load_print_meta: causal attn      = 1
0.00.818.631 I llm_load_print_meta: pooling type     = 0
0.00.818.631 I llm_load_print_meta: rope type        = 2
0.00.818.632 I llm_load_print_meta: rope scaling     = linear
0.00.818.633 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.818.635 I llm_load_print_meta: freq_scale_train = 1
0.00.818.635 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.818.636 I llm_load_print_meta: rope_finetuned   = unknown
0.00.818.636 I llm_load_print_meta: ssm_d_conv       = 0
0.00.818.636 I llm_load_print_meta: ssm_d_inner      = 0
0.00.818.637 I llm_load_print_meta: ssm_d_state      = 0
0.00.818.645 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.818.646 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.818.647 I llm_load_print_meta: model type       = 2B
0.00.818.648 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.818.649 I llm_load_print_meta: model params     = 2.51 B
0.00.818.657 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.818.657 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.818.658 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.818.661 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.818.662 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.818.662 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.818.662 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.818.663 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.818.669 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.818.670 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.818.671 I llm_load_print_meta: max token length = 93
0.00.877.636 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.883.329 I llama_new_context_with_model: n_seq_max     = 1
0.00.883.336 I llama_new_context_with_model: n_ctx         = 4096
0.00.883.336 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.883.337 I llama_new_context_with_model: n_batch       = 2048
0.00.883.337 I llama_new_context_with_model: n_ubatch      = 512
0.00.883.337 I llama_new_context_with_model: flash_attn    = 0
0.00.883.340 I llama_new_context_with_model: freq_base     = 10000.0
0.00.883.340 I llama_new_context_with_model: freq_scale    = 1
0.00.883.341 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.898.007 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.898.048 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.898.179 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.900.799 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.900.803 I llama_new_context_with_model: graph nodes  = 601
0.00.900.803 I llama_new_context_with_model: graph splits = 1
0.00.900.826 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.483.078 I main: llama threadpool init, n_threads = 4
0.01.483.095 I 
0.01.483.211 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.01.483.215 I 
0.01.483.456 I sampler seed: 1493827691
0.01.483.470 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.483.482 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.483.483 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.483.483 I 
 squaRE: The Adventure of Squall and the Siren

**Chapter 1: The Call of the Siren**

The sun dipped below the horizon, casting

0.12.570.180 I llama_perf_sampler_print:    sampling time =      49.09 ms /    33 runs   (    1.49 ms per token,   672.17 tokens per second)
0.12.570.193 I llama_perf_context_print:        load time =    1482.09 ms
0.12.570.195 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.570.198 I llama_perf_context_print:        eval time =   10998.55 ms /    32 runs   (  343.70 ms per token,     2.91 tokens per second)
0.12.570.199 I llama_perf_context_print:       total time =   11087.11 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m40.084s
user	46m38.953s
sys	0m6.306s
