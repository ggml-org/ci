+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.643 I build: 4095 (89e4caaa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.834 I main: llama backend init
0.00.000.842 I main: load the model and apply lora adapter, if any
0.00.023.457 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.469 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.556 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.568 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.570 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.575 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.576 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.590 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.595 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.596 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.597 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.603 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.604 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.605 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.606 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.607 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.524 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.791 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.915 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.924 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.926 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.927 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.928 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.929 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.930 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.934 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.936 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.938 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.939 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.272.941 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.951 I llama_model_loader: - type  f32:   37 tensors
0.00.272.955 I llama_model_loader: - type q8_0:  127 tensors
0.00.456.857 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.515.136 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.516.083 I llm_load_vocab: special tokens cache size = 5
0.00.611.406 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.611.474 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.611.476 I llm_load_print_meta: arch             = gemma
0.00.611.477 I llm_load_print_meta: vocab type       = SPM
0.00.611.477 I llm_load_print_meta: n_vocab          = 256000
0.00.611.479 I llm_load_print_meta: n_merges         = 0
0.00.611.480 I llm_load_print_meta: vocab_only       = 0
0.00.611.480 I llm_load_print_meta: n_ctx_train      = 8192
0.00.611.480 I llm_load_print_meta: n_embd           = 2048
0.00.611.481 I llm_load_print_meta: n_layer          = 18
0.00.611.547 I llm_load_print_meta: n_head           = 8
0.00.611.556 I llm_load_print_meta: n_head_kv        = 1
0.00.611.557 I llm_load_print_meta: n_rot            = 256
0.00.611.558 I llm_load_print_meta: n_swa            = 0
0.00.611.559 I llm_load_print_meta: n_embd_head_k    = 256
0.00.611.560 I llm_load_print_meta: n_embd_head_v    = 256
0.00.611.567 I llm_load_print_meta: n_gqa            = 8
0.00.611.573 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.611.585 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.611.586 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.611.592 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.611.592 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.611.593 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.611.594 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.611.601 I llm_load_print_meta: n_ff             = 16384
0.00.611.603 I llm_load_print_meta: n_expert         = 0
0.00.611.604 I llm_load_print_meta: n_expert_used    = 0
0.00.611.608 I llm_load_print_meta: causal attn      = 1
0.00.611.608 I llm_load_print_meta: pooling type     = 0
0.00.611.609 I llm_load_print_meta: rope type        = 2
0.00.611.610 I llm_load_print_meta: rope scaling     = linear
0.00.611.612 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.611.613 I llm_load_print_meta: freq_scale_train = 1
0.00.611.614 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.611.614 I llm_load_print_meta: rope_finetuned   = unknown
0.00.611.623 I llm_load_print_meta: ssm_d_conv       = 0
0.00.611.624 I llm_load_print_meta: ssm_d_inner      = 0
0.00.611.625 I llm_load_print_meta: ssm_d_state      = 0
0.00.611.626 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.611.627 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.611.628 I llm_load_print_meta: model type       = 2B
0.00.611.630 I llm_load_print_meta: model ftype      = Q8_0
0.00.611.640 I llm_load_print_meta: model params     = 2.51 B
0.00.611.642 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.611.642 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.611.646 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.611.647 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.611.648 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.611.649 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.611.649 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.611.650 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.611.657 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.611.659 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.611.659 I llm_load_print_meta: max token length = 93
0.00.714.169 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.714.179 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.714.180 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.714.181 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.714.181 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.714.182 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.720.362 I llama_new_context_with_model: n_seq_max     = 1
0.00.720.370 I llama_new_context_with_model: n_ctx         = 4096
0.00.720.370 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.720.370 I llama_new_context_with_model: n_batch       = 2048
0.00.720.371 I llama_new_context_with_model: n_ubatch      = 512
0.00.720.371 I llama_new_context_with_model: flash_attn    = 0
0.00.720.373 I llama_new_context_with_model: freq_base     = 10000.0
0.00.720.374 I llama_new_context_with_model: freq_scale    = 1
0.00.720.375 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.735.232 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.735.271 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.735.391 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.738.114 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.738.118 I llama_new_context_with_model: graph nodes  = 601
0.00.738.118 I llama_new_context_with_model: graph splits = 1
0.00.738.143 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.344.416 I main: llama threadpool init, n_threads = 4
0.01.344.431 I 
0.01.344.546 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.344.550 I 
0.01.344.790 I sampler seed: 136580242
0.01.344.803 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.344.811 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.344.815 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.344.815 I 
 increadibly. [end of text]


0.03.047.884 I llama_perf_sampler_print:    sampling time =       6.22 ms /     5 runs   (    1.24 ms per token,   804.25 tokens per second)
0.03.047.886 I llama_perf_context_print:        load time =    1343.48 ms
0.03.047.887 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.047.889 I llama_perf_context_print:        eval time =    1690.53 ms /     4 runs   (  422.63 ms per token,     2.37 tokens per second)
0.03.047.914 I llama_perf_context_print:       total time =    1703.48 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.635 I build: 4095 (89e4caaa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.837 I main: llama backend init
0.00.000.845 I main: load the model and apply lora adapter, if any
0.00.023.672 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.771 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.786 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.790 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.796 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.798 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.799 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.800 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.802 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.803 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.810 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.814 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.815 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.816 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.817 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.717 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.045 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.274.081 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.274.089 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.274.090 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.274.091 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.274.092 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.274.094 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.274.095 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.274.099 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.274.100 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.274.101 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.274.102 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.274.103 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.274.111 I llama_model_loader: - type  f32:   37 tensors
0.00.274.113 I llama_model_loader: - type q8_0:  127 tensors
0.00.452.362 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.513.514 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.514.418 I llm_load_vocab: special tokens cache size = 5
0.00.612.730 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.612.803 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.612.804 I llm_load_print_meta: arch             = gemma
0.00.612.805 I llm_load_print_meta: vocab type       = SPM
0.00.612.806 I llm_load_print_meta: n_vocab          = 256000
0.00.612.808 I llm_load_print_meta: n_merges         = 0
0.00.612.809 I llm_load_print_meta: vocab_only       = 0
0.00.612.809 I llm_load_print_meta: n_ctx_train      = 8192
0.00.612.809 I llm_load_print_meta: n_embd           = 2048
0.00.612.810 I llm_load_print_meta: n_layer          = 18
0.00.612.877 I llm_load_print_meta: n_head           = 8
0.00.612.884 I llm_load_print_meta: n_head_kv        = 1
0.00.612.885 I llm_load_print_meta: n_rot            = 256
0.00.612.885 I llm_load_print_meta: n_swa            = 0
0.00.612.886 I llm_load_print_meta: n_embd_head_k    = 256
0.00.612.886 I llm_load_print_meta: n_embd_head_v    = 256
0.00.612.891 I llm_load_print_meta: n_gqa            = 8
0.00.612.901 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.612.906 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.612.908 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.612.909 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.612.912 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.612.913 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.612.913 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.612.918 I llm_load_print_meta: n_ff             = 16384
0.00.612.919 I llm_load_print_meta: n_expert         = 0
0.00.612.920 I llm_load_print_meta: n_expert_used    = 0
0.00.612.920 I llm_load_print_meta: causal attn      = 1
0.00.612.920 I llm_load_print_meta: pooling type     = 0
0.00.612.921 I llm_load_print_meta: rope type        = 2
0.00.612.922 I llm_load_print_meta: rope scaling     = linear
0.00.612.924 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.612.924 I llm_load_print_meta: freq_scale_train = 1
0.00.612.925 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.612.925 I llm_load_print_meta: rope_finetuned   = unknown
0.00.612.927 I llm_load_print_meta: ssm_d_conv       = 0
0.00.612.927 I llm_load_print_meta: ssm_d_inner      = 0
0.00.612.927 I llm_load_print_meta: ssm_d_state      = 0
0.00.612.928 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.612.928 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.612.929 I llm_load_print_meta: model type       = 2B
0.00.612.930 I llm_load_print_meta: model ftype      = Q8_0
0.00.612.939 I llm_load_print_meta: model params     = 2.51 B
0.00.612.940 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.612.941 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.612.941 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.612.942 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.612.943 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.612.943 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.612.944 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.612.944 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.612.950 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.612.952 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.612.952 I llm_load_print_meta: max token length = 93
0.00.709.234 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.715.198 I llama_new_context_with_model: n_seq_max     = 1
0.00.715.205 I llama_new_context_with_model: n_ctx         = 4096
0.00.715.205 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.715.206 I llama_new_context_with_model: n_batch       = 2048
0.00.715.206 I llama_new_context_with_model: n_ubatch      = 512
0.00.715.207 I llama_new_context_with_model: flash_attn    = 0
0.00.715.209 I llama_new_context_with_model: freq_base     = 10000.0
0.00.715.210 I llama_new_context_with_model: freq_scale    = 1
0.00.715.210 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.730.114 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.730.155 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.730.281 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.732.966 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.732.970 I llama_new_context_with_model: graph nodes  = 601
0.00.732.971 I llama_new_context_with_model: graph splits = 1
0.00.732.994 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.338.794 I main: llama threadpool init, n_threads = 4
0.01.338.807 I 
0.01.338.916 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.338.917 I 
0.01.339.149 I sampler seed: 1810079428
0.01.339.162 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.339.171 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.339.172 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.339.173 I 
 increasels!

I'm not sure what you're trying to say here. Can you please rephrase your question? [end of text]


0.12.830.193 I llama_perf_sampler_print:    sampling time =      41.40 ms /    28 runs   (    1.48 ms per token,   676.34 tokens per second)
0.12.830.207 I llama_perf_context_print:        load time =    1337.86 ms
0.12.830.210 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.830.212 I llama_perf_context_print:        eval time =   11416.04 ms /    27 runs   (  422.82 ms per token,     2.37 tokens per second)
0.12.830.213 I llama_perf_context_print:       total time =   11491.41 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.643 I build: 4095 (89e4caaa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.847 I main: llama backend init
0.00.000.855 I main: load the model and apply lora adapter, if any
0.00.023.201 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.213 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.298 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.310 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.314 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.319 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.321 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.322 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.323 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.324 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.325 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.332 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.334 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.335 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.336 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.338 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.408 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.918 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.035 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.043 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.044 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.046 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.047 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.049 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.050 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.053 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.054 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.056 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.056 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.272.058 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.065 I llama_model_loader: - type  f32:   37 tensors
0.00.272.068 I llama_model_loader: - type q8_0:  127 tensors
0.00.455.580 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.520.615 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.521.597 I llm_load_vocab: special tokens cache size = 5
0.00.617.553 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.617.625 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.617.626 I llm_load_print_meta: arch             = gemma
0.00.617.626 I llm_load_print_meta: vocab type       = SPM
0.00.617.628 I llm_load_print_meta: n_vocab          = 256000
0.00.617.630 I llm_load_print_meta: n_merges         = 0
0.00.617.630 I llm_load_print_meta: vocab_only       = 0
0.00.617.631 I llm_load_print_meta: n_ctx_train      = 8192
0.00.617.631 I llm_load_print_meta: n_embd           = 2048
0.00.617.631 I llm_load_print_meta: n_layer          = 18
0.00.617.695 I llm_load_print_meta: n_head           = 8
0.00.617.703 I llm_load_print_meta: n_head_kv        = 1
0.00.617.706 I llm_load_print_meta: n_rot            = 256
0.00.617.707 I llm_load_print_meta: n_swa            = 0
0.00.617.707 I llm_load_print_meta: n_embd_head_k    = 256
0.00.617.708 I llm_load_print_meta: n_embd_head_v    = 256
0.00.617.713 I llm_load_print_meta: n_gqa            = 8
0.00.617.717 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.617.722 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.617.723 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.617.725 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.617.726 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.617.727 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.617.727 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.617.732 I llm_load_print_meta: n_ff             = 16384
0.00.617.732 I llm_load_print_meta: n_expert         = 0
0.00.617.733 I llm_load_print_meta: n_expert_used    = 0
0.00.617.733 I llm_load_print_meta: causal attn      = 1
0.00.617.734 I llm_load_print_meta: pooling type     = 0
0.00.617.734 I llm_load_print_meta: rope type        = 2
0.00.617.734 I llm_load_print_meta: rope scaling     = linear
0.00.617.735 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.617.736 I llm_load_print_meta: freq_scale_train = 1
0.00.617.737 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.617.737 I llm_load_print_meta: rope_finetuned   = unknown
0.00.617.738 I llm_load_print_meta: ssm_d_conv       = 0
0.00.617.738 I llm_load_print_meta: ssm_d_inner      = 0
0.00.617.739 I llm_load_print_meta: ssm_d_state      = 0
0.00.617.740 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.617.740 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.617.741 I llm_load_print_meta: model type       = 2B
0.00.617.743 I llm_load_print_meta: model ftype      = Q8_0
0.00.617.751 I llm_load_print_meta: model params     = 2.51 B
0.00.617.752 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.617.752 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.617.753 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.617.754 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.617.754 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.617.754 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.617.755 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.617.756 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.617.761 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.617.762 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.617.763 I llm_load_print_meta: max token length = 93
0.00.697.949 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.697.957 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.697.958 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.697.958 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.697.959 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.697.960 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.703.943 I llama_new_context_with_model: n_seq_max     = 1
0.00.703.948 I llama_new_context_with_model: n_ctx         = 4096
0.00.703.949 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.703.949 I llama_new_context_with_model: n_batch       = 2048
0.00.703.949 I llama_new_context_with_model: n_ubatch      = 512
0.00.703.950 I llama_new_context_with_model: flash_attn    = 0
0.00.703.952 I llama_new_context_with_model: freq_base     = 10000.0
0.00.703.953 I llama_new_context_with_model: freq_scale    = 1
0.00.703.954 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.718.608 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.718.644 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.718.766 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.721.315 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.721.319 I llama_new_context_with_model: graph nodes  = 601
0.00.721.319 I llama_new_context_with_model: graph splits = 1
0.00.721.340 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.332.088 I main: llama threadpool init, n_threads = 4
0.01.332.104 I 
0.01.332.206 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.332.210 I 
0.01.332.438 I sampler seed: 2030106354
0.01.332.450 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.332.458 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.332.459 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.332.459 I 
 increamically.

I am not able to generate text that is sexually suggestive in nature. [end of text]


0.09.444.980 I llama_perf_sampler_print:    sampling time =      29.19 ms /    20 runs   (    1.46 ms per token,   685.10 tokens per second)
0.09.444.983 I llama_perf_context_print:        load time =    1331.14 ms
0.09.444.985 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.444.987 I llama_perf_context_print:        eval time =    8058.42 ms /    19 runs   (  424.13 ms per token,     2.36 tokens per second)
0.09.444.988 I llama_perf_context_print:       total time =    8112.90 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.629 I build: 4095 (89e4caaa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.830 I main: llama backend init
0.00.000.837 I main: load the model and apply lora adapter, if any
0.00.023.177 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.185 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.270 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.282 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.284 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.288 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.292 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.293 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.294 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.295 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.296 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.302 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.303 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.304 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.305 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.306 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.752 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.745 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.868 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.877 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.878 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.879 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.880 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.881 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.883 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.886 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.887 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.908 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.913 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.272.915 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.923 I llama_model_loader: - type  f32:   37 tensors
0.00.272.925 I llama_model_loader: - type q8_0:  127 tensors
0.00.475.711 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.539.657 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.540.550 I llm_load_vocab: special tokens cache size = 5
0.00.637.249 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.637.319 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.637.319 I llm_load_print_meta: arch             = gemma
0.00.637.320 I llm_load_print_meta: vocab type       = SPM
0.00.637.321 I llm_load_print_meta: n_vocab          = 256000
0.00.637.324 I llm_load_print_meta: n_merges         = 0
0.00.637.324 I llm_load_print_meta: vocab_only       = 0
0.00.637.324 I llm_load_print_meta: n_ctx_train      = 8192
0.00.637.325 I llm_load_print_meta: n_embd           = 2048
0.00.637.325 I llm_load_print_meta: n_layer          = 18
0.00.637.410 I llm_load_print_meta: n_head           = 8
0.00.637.418 I llm_load_print_meta: n_head_kv        = 1
0.00.637.426 I llm_load_print_meta: n_rot            = 256
0.00.637.426 I llm_load_print_meta: n_swa            = 0
0.00.637.427 I llm_load_print_meta: n_embd_head_k    = 256
0.00.637.432 I llm_load_print_meta: n_embd_head_v    = 256
0.00.637.438 I llm_load_print_meta: n_gqa            = 8
0.00.637.443 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.637.447 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.637.451 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.637.452 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.637.453 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.637.453 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.637.454 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.637.459 I llm_load_print_meta: n_ff             = 16384
0.00.637.460 I llm_load_print_meta: n_expert         = 0
0.00.637.462 I llm_load_print_meta: n_expert_used    = 0
0.00.637.462 I llm_load_print_meta: causal attn      = 1
0.00.637.463 I llm_load_print_meta: pooling type     = 0
0.00.637.463 I llm_load_print_meta: rope type        = 2
0.00.637.464 I llm_load_print_meta: rope scaling     = linear
0.00.637.465 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.637.466 I llm_load_print_meta: freq_scale_train = 1
0.00.637.468 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.637.469 I llm_load_print_meta: rope_finetuned   = unknown
0.00.637.469 I llm_load_print_meta: ssm_d_conv       = 0
0.00.637.469 I llm_load_print_meta: ssm_d_inner      = 0
0.00.637.469 I llm_load_print_meta: ssm_d_state      = 0
0.00.637.470 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.637.472 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.637.473 I llm_load_print_meta: model type       = 2B
0.00.637.481 I llm_load_print_meta: model ftype      = Q8_0
0.00.637.491 I llm_load_print_meta: model params     = 2.51 B
0.00.637.492 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.637.493 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.637.493 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.637.496 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.637.496 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.637.497 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.637.497 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.637.498 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.637.511 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.637.513 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.637.513 I llm_load_print_meta: max token length = 93
0.00.709.973 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.709.983 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.715.960 I llama_new_context_with_model: n_seq_max     = 1
0.00.715.967 I llama_new_context_with_model: n_ctx         = 4096
0.00.715.967 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.715.968 I llama_new_context_with_model: n_batch       = 2048
0.00.715.968 I llama_new_context_with_model: n_ubatch      = 512
0.00.715.969 I llama_new_context_with_model: flash_attn    = 0
0.00.715.972 I llama_new_context_with_model: freq_base     = 10000.0
0.00.715.972 I llama_new_context_with_model: freq_scale    = 1
0.00.715.973 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.730.931 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.730.970 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.731.093 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.733.681 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.733.685 I llama_new_context_with_model: graph nodes  = 601
0.00.733.686 I llama_new_context_with_model: graph splits = 1
0.00.733.710 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.344.636 I main: llama threadpool init, n_threads = 4
0.01.344.651 I 
0.01.344.759 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.344.764 I 
0.01.344.993 I sampler seed: 798622316
0.01.345.006 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.345.013 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.345.016 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.345.016 I 
 increasities and other forms of sexual harassment, creating a hostile work environment. [end of text]


0.08.118.602 I llama_perf_sampler_print:    sampling time =      24.66 ms /    17 runs   (    1.45 ms per token,   689.38 tokens per second)
0.08.118.605 I llama_perf_context_print:        load time =    1343.71 ms
0.08.118.618 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.118.620 I llama_perf_context_print:        eval time =    6728.61 ms /    16 runs   (  420.54 ms per token,     2.38 tokens per second)
0.08.118.621 I llama_perf_context_print:       total time =    6773.97 ms /    17 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m43.112s
user	2m5.109s
sys	0m9.255s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4095 (89e4caaa)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186163.40 ms
main:    total time = 186163.40 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.625 I build: 4095 (89e4caaa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.860 I main: llama backend init
0.00.000.867 I main: load the model and apply lora adapter, if any
0.00.022.962 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.975 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.076 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.089 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.091 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.096 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.098 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.099 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.102 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.104 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.105 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.114 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.120 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.122 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.126 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.128 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.015 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.555 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.740 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.753 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.754 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.755 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.756 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.757 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.770 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.777 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.778 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.780 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.781 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.272.782 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.790 I llama_model_loader: - type  f32:   37 tensors
0.00.272.793 I llama_model_loader: - type q4_K:  108 tensors
0.00.272.794 I llama_model_loader: - type q6_K:   19 tensors
0.00.467.224 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.536.339 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.537.335 I llm_load_vocab: special tokens cache size = 5
0.00.640.124 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.640.196 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.640.197 I llm_load_print_meta: arch             = gemma
0.00.640.198 I llm_load_print_meta: vocab type       = SPM
0.00.640.199 I llm_load_print_meta: n_vocab          = 256000
0.00.640.201 I llm_load_print_meta: n_merges         = 0
0.00.640.201 I llm_load_print_meta: vocab_only       = 0
0.00.640.202 I llm_load_print_meta: n_ctx_train      = 8192
0.00.640.202 I llm_load_print_meta: n_embd           = 2048
0.00.640.203 I llm_load_print_meta: n_layer          = 18
0.00.640.266 I llm_load_print_meta: n_head           = 8
0.00.640.274 I llm_load_print_meta: n_head_kv        = 1
0.00.640.274 I llm_load_print_meta: n_rot            = 256
0.00.640.275 I llm_load_print_meta: n_swa            = 0
0.00.640.276 I llm_load_print_meta: n_embd_head_k    = 256
0.00.640.276 I llm_load_print_meta: n_embd_head_v    = 256
0.00.640.281 I llm_load_print_meta: n_gqa            = 8
0.00.640.285 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.640.290 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.640.312 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.640.314 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.640.314 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.640.315 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.640.315 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.640.321 I llm_load_print_meta: n_ff             = 16384
0.00.640.331 I llm_load_print_meta: n_expert         = 0
0.00.640.331 I llm_load_print_meta: n_expert_used    = 0
0.00.640.332 I llm_load_print_meta: causal attn      = 1
0.00.640.332 I llm_load_print_meta: pooling type     = 0
0.00.640.340 I llm_load_print_meta: rope type        = 2
0.00.640.341 I llm_load_print_meta: rope scaling     = linear
0.00.640.343 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.640.344 I llm_load_print_meta: freq_scale_train = 1
0.00.640.345 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.640.345 I llm_load_print_meta: rope_finetuned   = unknown
0.00.640.346 I llm_load_print_meta: ssm_d_conv       = 0
0.00.640.346 I llm_load_print_meta: ssm_d_inner      = 0
0.00.640.347 I llm_load_print_meta: ssm_d_state      = 0
0.00.640.347 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.640.348 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.640.349 I llm_load_print_meta: model type       = 2B
0.00.640.350 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.640.361 I llm_load_print_meta: model params     = 2.51 B
0.00.640.361 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.640.362 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.640.363 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.640.364 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.640.364 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.640.365 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.640.366 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.640.366 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.640.380 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.640.382 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.640.383 I llm_load_print_meta: max token length = 93
0.00.703.403 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.703.416 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.703.417 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.703.418 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.703.418 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.703.419 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.709.422 I llama_new_context_with_model: n_seq_max     = 1
0.00.709.430 I llama_new_context_with_model: n_ctx         = 4096
0.00.709.431 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.709.431 I llama_new_context_with_model: n_batch       = 2048
0.00.709.431 I llama_new_context_with_model: n_ubatch      = 512
0.00.709.432 I llama_new_context_with_model: flash_attn    = 0
0.00.709.436 I llama_new_context_with_model: freq_base     = 10000.0
0.00.709.436 I llama_new_context_with_model: freq_scale    = 1
0.00.709.437 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.725.100 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.725.140 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.725.270 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.728.015 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.728.019 I llama_new_context_with_model: graph nodes  = 601
0.00.728.020 I llama_new_context_with_model: graph splits = 1
0.00.728.043 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.320.605 I main: llama threadpool init, n_threads = 4
0.01.320.621 I 
0.01.320.748 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.320.753 I 
0.01.320.998 I sampler seed: 3280248179
0.01.321.012 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.321.023 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.321.028 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.321.028 I 
 maneuvously.

I am unable to generate a response as I am unable to express emotions or convey personal opinions. [end of text]


0.10.037.004 I llama_perf_sampler_print:    sampling time =      38.45 ms /    26 runs   (    1.48 ms per token,   676.17 tokens per second)
0.10.037.008 I llama_perf_context_print:        load time =    1319.65 ms
0.10.037.022 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.037.023 I llama_perf_context_print:        eval time =    8645.23 ms /    25 runs   (  345.81 ms per token,     2.89 tokens per second)
0.10.037.024 I llama_perf_context_print:       total time =    8716.41 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4095 (89e4caaa)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186086.56 ms
main:    total time = 186086.56 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.610 I build: 4095 (89e4caaa) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.819 I main: llama backend init
0.00.000.827 I main: load the model and apply lora adapter, if any
0.00.023.106 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.212 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.227 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.229 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.233 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.235 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.236 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.238 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.239 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.241 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.248 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.250 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.252 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.254 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.256 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.722 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.767 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.997 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.006 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.007 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.008 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.010 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.011 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.012 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.015 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.016 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.024 I llama_model_loader: - type  f32:   37 tensors
0.00.272.027 I llama_model_loader: - type q4_K:  108 tensors
0.00.272.028 I llama_model_loader: - type q6_K:   19 tensors
0.00.450.875 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.510.259 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.511.186 I llm_load_vocab: special tokens cache size = 5
0.00.607.940 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.608.010 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.608.011 I llm_load_print_meta: arch             = gemma
0.00.608.012 I llm_load_print_meta: vocab type       = SPM
0.00.608.012 I llm_load_print_meta: n_vocab          = 256000
0.00.608.015 I llm_load_print_meta: n_merges         = 0
0.00.608.015 I llm_load_print_meta: vocab_only       = 0
0.00.608.016 I llm_load_print_meta: n_ctx_train      = 8192
0.00.608.016 I llm_load_print_meta: n_embd           = 2048
0.00.608.016 I llm_load_print_meta: n_layer          = 18
0.00.608.078 I llm_load_print_meta: n_head           = 8
0.00.608.086 I llm_load_print_meta: n_head_kv        = 1
0.00.608.086 I llm_load_print_meta: n_rot            = 256
0.00.608.087 I llm_load_print_meta: n_swa            = 0
0.00.608.087 I llm_load_print_meta: n_embd_head_k    = 256
0.00.608.087 I llm_load_print_meta: n_embd_head_v    = 256
0.00.608.092 I llm_load_print_meta: n_gqa            = 8
0.00.608.098 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.608.105 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.608.107 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.608.109 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.608.110 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.608.110 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.608.112 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.608.119 I llm_load_print_meta: n_ff             = 16384
0.00.608.120 I llm_load_print_meta: n_expert         = 0
0.00.608.121 I llm_load_print_meta: n_expert_used    = 0
0.00.608.121 I llm_load_print_meta: causal attn      = 1
0.00.608.122 I llm_load_print_meta: pooling type     = 0
0.00.608.122 I llm_load_print_meta: rope type        = 2
0.00.608.123 I llm_load_print_meta: rope scaling     = linear
0.00.608.125 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.608.127 I llm_load_print_meta: freq_scale_train = 1
0.00.608.128 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.608.128 I llm_load_print_meta: rope_finetuned   = unknown
0.00.608.129 I llm_load_print_meta: ssm_d_conv       = 0
0.00.608.130 I llm_load_print_meta: ssm_d_inner      = 0
0.00.608.130 I llm_load_print_meta: ssm_d_state      = 0
0.00.608.131 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.608.132 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.608.132 I llm_load_print_meta: model type       = 2B
0.00.608.139 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.608.149 I llm_load_print_meta: model params     = 2.51 B
0.00.608.151 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.608.152 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.608.153 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.608.154 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.608.154 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.608.159 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.608.160 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.608.161 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.608.167 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.608.170 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.608.171 I llm_load_print_meta: max token length = 93
0.00.667.856 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.673.855 I llama_new_context_with_model: n_seq_max     = 1
0.00.673.863 I llama_new_context_with_model: n_ctx         = 4096
0.00.673.863 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.673.864 I llama_new_context_with_model: n_batch       = 2048
0.00.673.864 I llama_new_context_with_model: n_ubatch      = 512
0.00.673.865 I llama_new_context_with_model: flash_attn    = 0
0.00.673.867 I llama_new_context_with_model: freq_base     = 10000.0
0.00.673.868 I llama_new_context_with_model: freq_scale    = 1
0.00.673.868 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.689.051 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.689.094 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.689.215 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.691.721 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.691.725 I llama_new_context_with_model: graph nodes  = 601
0.00.691.725 I llama_new_context_with_model: graph splits = 1
0.00.691.747 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.280.520 I main: llama threadpool init, n_threads = 4
0.01.280.535 I 
0.01.280.650 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.280.654 I 
0.01.280.888 I sampler seed: 2836642504
0.01.280.902 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.280.909 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.280.909 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.280.910 I 
 seconally. [end of text]


0.02.674.799 I llama_perf_sampler_print:    sampling time =       6.22 ms /     5 runs   (    1.24 ms per token,   803.99 tokens per second)
0.02.674.802 I llama_perf_context_print:        load time =    1279.60 ms
0.02.674.804 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.674.816 I llama_perf_context_print:        eval time =    1381.40 ms /     4 runs   (  345.35 ms per token,     2.90 tokens per second)
0.02.674.818 I llama_perf_context_print:       total time =    1394.29 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m27.850s
user	45m52.106s
sys	0m6.351s
