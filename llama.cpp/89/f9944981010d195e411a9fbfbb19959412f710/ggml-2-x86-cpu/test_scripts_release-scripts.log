+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.543 I build: 3831 (89f99449) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.763 I main: llama backend init
0.00.001.854 I main: load the model and apply lora adapter, if any
0.00.021.806 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.853 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.860 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.864 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.865 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.868 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.869 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.870 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.870 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.871 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.871 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.875 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.875 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.876 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.877 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.878 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.533 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.403 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.655 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.663 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.663 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.664 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.664 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.665 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.666 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.668 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.669 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.670 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.671 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.672 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.675 I llama_model_loader: - type  f32:   37 tensors
0.00.134.677 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.010 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.210.926 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.551 I llm_load_vocab: special tokens cache size = 5
0.00.229.771 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.229.783 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.229.784 I llm_load_print_meta: arch             = gemma
0.00.229.784 I llm_load_print_meta: vocab type       = SPM
0.00.229.785 I llm_load_print_meta: n_vocab          = 256000
0.00.229.786 I llm_load_print_meta: n_merges         = 0
0.00.229.786 I llm_load_print_meta: vocab_only       = 0
0.00.229.787 I llm_load_print_meta: n_ctx_train      = 8192
0.00.229.787 I llm_load_print_meta: n_embd           = 2048
0.00.229.787 I llm_load_print_meta: n_layer          = 18
0.00.229.799 I llm_load_print_meta: n_head           = 8
0.00.229.800 I llm_load_print_meta: n_head_kv        = 1
0.00.229.800 I llm_load_print_meta: n_rot            = 256
0.00.229.801 I llm_load_print_meta: n_swa            = 0
0.00.229.801 I llm_load_print_meta: n_embd_head_k    = 256
0.00.229.801 I llm_load_print_meta: n_embd_head_v    = 256
0.00.229.802 I llm_load_print_meta: n_gqa            = 8
0.00.229.803 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.229.804 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.229.805 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.229.806 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.229.806 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.229.807 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.229.807 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.229.808 I llm_load_print_meta: n_ff             = 16384
0.00.229.808 I llm_load_print_meta: n_expert         = 0
0.00.229.809 I llm_load_print_meta: n_expert_used    = 0
0.00.229.809 I llm_load_print_meta: causal attn      = 1
0.00.229.809 I llm_load_print_meta: pooling type     = 0
0.00.229.809 I llm_load_print_meta: rope type        = 2
0.00.229.810 I llm_load_print_meta: rope scaling     = linear
0.00.229.811 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.229.812 I llm_load_print_meta: freq_scale_train = 1
0.00.229.812 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.229.812 I llm_load_print_meta: rope_finetuned   = unknown
0.00.229.813 I llm_load_print_meta: ssm_d_conv       = 0
0.00.229.813 I llm_load_print_meta: ssm_d_inner      = 0
0.00.229.813 I llm_load_print_meta: ssm_d_state      = 0
0.00.229.813 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.229.814 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.229.814 I llm_load_print_meta: model type       = 2B
0.00.229.815 I llm_load_print_meta: model ftype      = Q8_0
0.00.229.816 I llm_load_print_meta: model params     = 2.51 B
0.00.229.817 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.229.817 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.229.817 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.229.818 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.229.818 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.229.818 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.229.818 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.229.819 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.229.819 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.229.820 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.229.820 I llm_load_print_meta: max token length = 93
0.00.229.840 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.328.355 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.328.362 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.328.363 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.328.364 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.328.364 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.328.365 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.333.464 I llama_new_context_with_model: n_ctx      = 8192
0.00.333.471 I llama_new_context_with_model: n_batch    = 2048
0.00.333.471 I llama_new_context_with_model: n_ubatch   = 512
0.00.333.472 I llama_new_context_with_model: flash_attn = 0
0.00.333.474 I llama_new_context_with_model: freq_base  = 10000.0
0.00.333.475 I llama_new_context_with_model: freq_scale = 1
0.00.362.301 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.362.317 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.362.407 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.363.256 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.363.264 I llama_new_context_with_model: graph nodes  = 601
0.00.363.265 I llama_new_context_with_model: graph splits = 1
0.00.363.266 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.455.711 I main: llama threadpool init, n_threads = 4
0.00.455.722 I 
0.00.455.788 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.455.791 I 
0.00.455.820 I sampler seed: 2367358008
0.00.455.841 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.455.844 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.455.844 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.455.844 I 
 increasities in a way that promotes empathy and understanding between different groups of people.

**Step 1: Identify common ground and shared experiences.**

* Create

0.02.686.769 I llama_perf_sampler_print:    sampling time =       4.92 ms /    33 runs   (    0.15 ms per token,  6701.87 tokens per second)
0.02.686.771 I llama_perf_context_print:        load time =     453.84 ms
0.02.686.772 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.686.773 I llama_perf_context_print:        eval time =    2212.42 ms /    32 runs   (   69.14 ms per token,    14.46 tokens per second)
0.02.686.774 I llama_perf_context_print:       total time =    2231.06 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.570 I build: 3831 (89f99449) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.774 I main: llama backend init
0.00.001.870 I main: load the model and apply lora adapter, if any
0.00.022.305 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.315 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.322 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.323 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.327 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.327 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.328 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.329 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.329 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.329 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.334 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.335 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.335 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.336 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.337 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.443 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.768 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.651 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.658 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.659 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.660 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.660 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.661 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.662 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.665 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.665 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.666 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.666 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.134.667 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.671 I llama_model_loader: - type  f32:   37 tensors
0.00.134.674 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.967 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.790 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.461 I llm_load_vocab: special tokens cache size = 5
0.00.232.459 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.473 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.473 I llm_load_print_meta: arch             = gemma
0.00.232.474 I llm_load_print_meta: vocab type       = SPM
0.00.232.474 I llm_load_print_meta: n_vocab          = 256000
0.00.232.474 I llm_load_print_meta: n_merges         = 0
0.00.232.475 I llm_load_print_meta: vocab_only       = 0
0.00.232.475 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.475 I llm_load_print_meta: n_embd           = 2048
0.00.232.476 I llm_load_print_meta: n_layer          = 18
0.00.232.487 I llm_load_print_meta: n_head           = 8
0.00.232.488 I llm_load_print_meta: n_head_kv        = 1
0.00.232.488 I llm_load_print_meta: n_rot            = 256
0.00.232.489 I llm_load_print_meta: n_swa            = 0
0.00.232.489 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.489 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.490 I llm_load_print_meta: n_gqa            = 8
0.00.232.491 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.492 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.493 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.495 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.495 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.495 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.496 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.496 I llm_load_print_meta: n_ff             = 16384
0.00.232.497 I llm_load_print_meta: n_expert         = 0
0.00.232.497 I llm_load_print_meta: n_expert_used    = 0
0.00.232.497 I llm_load_print_meta: causal attn      = 1
0.00.232.498 I llm_load_print_meta: pooling type     = 0
0.00.232.498 I llm_load_print_meta: rope type        = 2
0.00.232.498 I llm_load_print_meta: rope scaling     = linear
0.00.232.500 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.500 I llm_load_print_meta: freq_scale_train = 1
0.00.232.501 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.501 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.501 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.501 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.502 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.502 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.502 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.503 I llm_load_print_meta: model type       = 2B
0.00.232.503 I llm_load_print_meta: model ftype      = Q8_0
0.00.232.504 I llm_load_print_meta: model params     = 2.51 B
0.00.232.505 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.232.506 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.506 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.506 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.507 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.507 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.507 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.508 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.508 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.508 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.509 I llm_load_print_meta: max token length = 93
0.00.232.531 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.325.904 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.330.950 I llama_new_context_with_model: n_ctx      = 8192
0.00.330.958 I llama_new_context_with_model: n_batch    = 2048
0.00.330.958 I llama_new_context_with_model: n_ubatch   = 512
0.00.330.959 I llama_new_context_with_model: flash_attn = 0
0.00.330.961 I llama_new_context_with_model: freq_base  = 10000.0
0.00.330.962 I llama_new_context_with_model: freq_scale = 1
0.00.359.864 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.881 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.970 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.828 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.835 I llama_new_context_with_model: graph nodes  = 601
0.00.360.836 I llama_new_context_with_model: graph splits = 1
0.00.360.838 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.447.833 I main: llama threadpool init, n_threads = 4
0.00.447.846 I 
0.00.447.920 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.447.923 I 
0.00.447.953 I sampler seed: 2132484119
0.00.447.961 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.447.964 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.447.964 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.447.965 I 
 maneuvringly to find the answer to this question:

What is the most common cause of dental decay?

a) Poor oral hygiene
b)

0.02.619.450 I llama_perf_sampler_print:    sampling time =       5.33 ms /    33 runs   (    0.16 ms per token,  6192.53 tokens per second)
0.02.619.452 I llama_perf_context_print:        load time =     445.95 ms
0.02.619.454 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.619.455 I llama_perf_context_print:        eval time =    2152.36 ms /    32 runs   (   67.26 ms per token,    14.87 tokens per second)
0.02.619.456 I llama_perf_context_print:       total time =    2171.62 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.597 I build: 3831 (89f99449) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.803 I main: llama backend init
0.00.001.935 I main: load the model and apply lora adapter, if any
0.00.022.184 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.232 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.243 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.248 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.250 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.254 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.254 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.255 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.255 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.256 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.256 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.260 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.261 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.262 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.263 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.263 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.261 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.219 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.057 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.063 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.063 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.064 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.065 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.066 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.066 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.069 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.070 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.071 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.071 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.134.072 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.075 I llama_model_loader: - type  f32:   37 tensors
0.00.134.078 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.517 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.211.466 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.212.096 I llm_load_vocab: special tokens cache size = 5
0.00.230.315 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.328 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.329 I llm_load_print_meta: arch             = gemma
0.00.230.330 I llm_load_print_meta: vocab type       = SPM
0.00.230.330 I llm_load_print_meta: n_vocab          = 256000
0.00.230.331 I llm_load_print_meta: n_merges         = 0
0.00.230.331 I llm_load_print_meta: vocab_only       = 0
0.00.230.331 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.332 I llm_load_print_meta: n_embd           = 2048
0.00.230.332 I llm_load_print_meta: n_layer          = 18
0.00.230.344 I llm_load_print_meta: n_head           = 8
0.00.230.345 I llm_load_print_meta: n_head_kv        = 1
0.00.230.346 I llm_load_print_meta: n_rot            = 256
0.00.230.346 I llm_load_print_meta: n_swa            = 0
0.00.230.347 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.348 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.349 I llm_load_print_meta: n_gqa            = 8
0.00.230.351 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.352 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.353 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.354 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.355 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.355 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.355 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.356 I llm_load_print_meta: n_ff             = 16384
0.00.230.357 I llm_load_print_meta: n_expert         = 0
0.00.230.358 I llm_load_print_meta: n_expert_used    = 0
0.00.230.358 I llm_load_print_meta: causal attn      = 1
0.00.230.358 I llm_load_print_meta: pooling type     = 0
0.00.230.359 I llm_load_print_meta: rope type        = 2
0.00.230.359 I llm_load_print_meta: rope scaling     = linear
0.00.230.360 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.361 I llm_load_print_meta: freq_scale_train = 1
0.00.230.361 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.362 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.362 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.362 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.363 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.363 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.364 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.364 I llm_load_print_meta: model type       = 2B
0.00.230.365 I llm_load_print_meta: model ftype      = Q8_0
0.00.230.366 I llm_load_print_meta: model params     = 2.51 B
0.00.230.367 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.230.367 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.368 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.368 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.368 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.369 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.369 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.370 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.370 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.371 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.371 I llm_load_print_meta: max token length = 93
0.00.230.389 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.306.043 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.306.048 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.306.049 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.306.050 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.306.050 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.306.051 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.311.074 I llama_new_context_with_model: n_ctx      = 8192
0.00.311.080 I llama_new_context_with_model: n_batch    = 2048
0.00.311.080 I llama_new_context_with_model: n_ubatch   = 512
0.00.311.081 I llama_new_context_with_model: flash_attn = 0
0.00.311.083 I llama_new_context_with_model: freq_base  = 10000.0
0.00.311.084 I llama_new_context_with_model: freq_scale = 1
0.00.340.744 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.340.759 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.340.851 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.341.757 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.341.763 I llama_new_context_with_model: graph nodes  = 601
0.00.341.763 I llama_new_context_with_model: graph splits = 1
0.00.341.765 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.433.331 I main: llama threadpool init, n_threads = 4
0.00.433.344 I 
0.00.433.416 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.433.419 I 
0.00.433.456 I sampler seed: 2628253050
0.00.433.466 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.433.468 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.433.470 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.433.471 I 
 increably. 

I have a strong desire to learn more about the science behind language and how it works. I'm particularly interested in how language evolves

0.02.687.964 I llama_perf_sampler_print:    sampling time =       4.94 ms /    33 runs   (    0.15 ms per token,  6674.76 tokens per second)
0.02.687.967 I llama_perf_context_print:        load time =     431.38 ms
0.02.687.968 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.687.969 I llama_perf_context_print:        eval time =    2236.79 ms /    32 runs   (   69.90 ms per token,    14.31 tokens per second)
0.02.687.970 I llama_perf_context_print:       total time =    2254.64 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.594 I build: 3831 (89f99449) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.804 I main: llama backend init
0.00.001.946 I main: load the model and apply lora adapter, if any
0.00.022.025 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.074 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.089 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.098 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.100 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.104 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.108 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.109 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.110 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.113 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.114 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.119 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.120 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.121 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.121 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.122 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.896 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.741 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.590 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.596 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.597 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.597 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.598 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.599 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.599 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.602 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.602 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.603 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.605 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.606 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.610 I llama_model_loader: - type  f32:   37 tensors
0.00.133.613 I llama_model_loader: - type q8_0:  127 tensors
0.00.198.208 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.058 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.212.780 I llm_load_vocab: special tokens cache size = 5
0.00.230.769 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.783 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.783 I llm_load_print_meta: arch             = gemma
0.00.230.784 I llm_load_print_meta: vocab type       = SPM
0.00.230.784 I llm_load_print_meta: n_vocab          = 256000
0.00.230.785 I llm_load_print_meta: n_merges         = 0
0.00.230.785 I llm_load_print_meta: vocab_only       = 0
0.00.230.786 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.786 I llm_load_print_meta: n_embd           = 2048
0.00.230.786 I llm_load_print_meta: n_layer          = 18
0.00.230.798 I llm_load_print_meta: n_head           = 8
0.00.230.799 I llm_load_print_meta: n_head_kv        = 1
0.00.230.799 I llm_load_print_meta: n_rot            = 256
0.00.230.800 I llm_load_print_meta: n_swa            = 0
0.00.230.800 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.800 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.801 I llm_load_print_meta: n_gqa            = 8
0.00.230.802 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.803 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.803 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.805 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.805 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.805 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.806 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.807 I llm_load_print_meta: n_ff             = 16384
0.00.230.807 I llm_load_print_meta: n_expert         = 0
0.00.230.807 I llm_load_print_meta: n_expert_used    = 0
0.00.230.808 I llm_load_print_meta: causal attn      = 1
0.00.230.808 I llm_load_print_meta: pooling type     = 0
0.00.230.808 I llm_load_print_meta: rope type        = 2
0.00.230.808 I llm_load_print_meta: rope scaling     = linear
0.00.230.810 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.811 I llm_load_print_meta: freq_scale_train = 1
0.00.230.811 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.811 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.811 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.812 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.812 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.812 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.813 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.813 I llm_load_print_meta: model type       = 2B
0.00.230.814 I llm_load_print_meta: model ftype      = Q8_0
0.00.230.814 I llm_load_print_meta: model params     = 2.51 B
0.00.230.815 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.230.816 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.816 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.816 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.817 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.817 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.230.817 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.230.817 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.230.818 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.230.818 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.230.819 I llm_load_print_meta: max token length = 93
0.00.230.837 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.300.946 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.300.953 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.306.055 I llama_new_context_with_model: n_ctx      = 8192
0.00.306.061 I llama_new_context_with_model: n_batch    = 2048
0.00.306.062 I llama_new_context_with_model: n_ubatch   = 512
0.00.306.062 I llama_new_context_with_model: flash_attn = 0
0.00.306.064 I llama_new_context_with_model: freq_base  = 10000.0
0.00.306.065 I llama_new_context_with_model: freq_scale = 1
0.00.335.787 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.335.802 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.335.893 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.336.794 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.336.801 I llama_new_context_with_model: graph nodes  = 601
0.00.336.802 I llama_new_context_with_model: graph splits = 1
0.00.336.804 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.431.973 I main: llama threadpool init, n_threads = 4
0.00.431.984 I 
0.00.432.066 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.432.071 I 
0.00.432.116 I sampler seed: 3911892953
0.00.432.125 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.432.129 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.432.129 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.432.129 I 
 increably, seeking to escape the confines of this sterile apartment. The yearning for adventure pulsed within her, a restless current eager to break free from the predictable rhythm

0.02.855.627 I llama_perf_sampler_print:    sampling time =       5.26 ms /    33 runs   (    0.16 ms per token,  6276.15 tokens per second)
0.02.855.630 I llama_perf_context_print:        load time =     430.01 ms
0.02.855.631 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.855.632 I llama_perf_context_print:        eval time =    2403.87 ms /    32 runs   (   75.12 ms per token,    13.31 tokens per second)
0.02.855.633 I llama_perf_context_print:       total time =    2423.66 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.314s
user	0m39.034s
sys	0m9.416s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3831 (89f99449)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31996.46 ms
main:    total time = 31996.46 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.597 I build: 3831 (89f99449) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.800 I main: llama backend init
0.00.001.928 I main: load the model and apply lora adapter, if any
0.00.022.648 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.698 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.712 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.721 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.722 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.726 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.727 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.728 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.728 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.729 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.730 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.734 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.735 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.735 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.736 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.737 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.752 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.128.007 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.807 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.813 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.814 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.815 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.816 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.816 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.817 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.820 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.821 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.823 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.823 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.824 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.828 I llama_model_loader: - type  f32:   37 tensors
0.00.134.833 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.834 I llama_model_loader: - type q6_K:   19 tensors
0.00.199.741 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.213.874 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.214.581 I llm_load_vocab: special tokens cache size = 5
0.00.232.799 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.232.813 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.232.813 I llm_load_print_meta: arch             = gemma
0.00.232.814 I llm_load_print_meta: vocab type       = SPM
0.00.232.815 I llm_load_print_meta: n_vocab          = 256000
0.00.232.815 I llm_load_print_meta: n_merges         = 0
0.00.232.815 I llm_load_print_meta: vocab_only       = 0
0.00.232.816 I llm_load_print_meta: n_ctx_train      = 8192
0.00.232.816 I llm_load_print_meta: n_embd           = 2048
0.00.232.816 I llm_load_print_meta: n_layer          = 18
0.00.232.827 I llm_load_print_meta: n_head           = 8
0.00.232.828 I llm_load_print_meta: n_head_kv        = 1
0.00.232.828 I llm_load_print_meta: n_rot            = 256
0.00.232.829 I llm_load_print_meta: n_swa            = 0
0.00.232.829 I llm_load_print_meta: n_embd_head_k    = 256
0.00.232.829 I llm_load_print_meta: n_embd_head_v    = 256
0.00.232.830 I llm_load_print_meta: n_gqa            = 8
0.00.232.831 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.232.832 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.232.833 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.232.834 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.232.834 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.232.835 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.232.835 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.232.836 I llm_load_print_meta: n_ff             = 16384
0.00.232.836 I llm_load_print_meta: n_expert         = 0
0.00.232.837 I llm_load_print_meta: n_expert_used    = 0
0.00.232.837 I llm_load_print_meta: causal attn      = 1
0.00.232.837 I llm_load_print_meta: pooling type     = 0
0.00.232.837 I llm_load_print_meta: rope type        = 2
0.00.232.838 I llm_load_print_meta: rope scaling     = linear
0.00.232.839 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.232.839 I llm_load_print_meta: freq_scale_train = 1
0.00.232.840 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.232.840 I llm_load_print_meta: rope_finetuned   = unknown
0.00.232.840 I llm_load_print_meta: ssm_d_conv       = 0
0.00.232.840 I llm_load_print_meta: ssm_d_inner      = 0
0.00.232.841 I llm_load_print_meta: ssm_d_state      = 0
0.00.232.841 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.232.841 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.232.842 I llm_load_print_meta: model type       = 2B
0.00.232.842 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.232.843 I llm_load_print_meta: model params     = 2.51 B
0.00.232.844 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.232.844 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.232.845 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.232.845 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.232.845 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.232.846 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.232.846 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.232.846 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.232.847 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.232.847 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.232.848 I llm_load_print_meta: max token length = 93
0.00.232.872 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.290.799 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.290.806 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.290.806 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.290.807 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.290.807 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.290.808 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.295.827 I llama_new_context_with_model: n_ctx      = 8192
0.00.295.833 I llama_new_context_with_model: n_batch    = 2048
0.00.295.833 I llama_new_context_with_model: n_ubatch   = 512
0.00.295.834 I llama_new_context_with_model: flash_attn = 0
0.00.295.836 I llama_new_context_with_model: freq_base  = 10000.0
0.00.295.837 I llama_new_context_with_model: freq_scale = 1
0.00.324.969 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.324.984 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.325.077 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.325.900 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.325.907 I llama_new_context_with_model: graph nodes  = 601
0.00.325.908 I llama_new_context_with_model: graph splits = 1
0.00.325.910 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.407.259 I main: llama threadpool init, n_threads = 4
0.00.407.272 I 
0.00.407.344 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.407.347 I 
0.00.407.376 I sampler seed: 2839479691
0.00.407.385 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.407.388 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.407.389 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.407.389 I 
 affors.**

I am unable to access the requested information, as I do not have access to personally identifiable information or personally sensitive data. [end of text]


0.01.870.296 I llama_perf_sampler_print:    sampling time =       5.14 ms /    30 runs   (    0.17 ms per token,  5841.12 tokens per second)
0.01.870.298 I llama_perf_context_print:        load time =     405.31 ms
0.01.870.299 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.870.302 I llama_perf_context_print:        eval time =    1445.51 ms /    29 runs   (   49.85 ms per token,    20.06 tokens per second)
0.01.870.303 I llama_perf_context_print:       total time =    1463.05 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3831 (89f99449)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32086.38 ms
main:    total time = 32086.38 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.547 I build: 3831 (89f99449) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.748 I main: llama backend init
0.00.001.836 I main: load the model and apply lora adapter, if any
0.00.022.241 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.260 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.266 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.267 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.270 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.271 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.272 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.273 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.273 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.275 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.278 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.279 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.280 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.281 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.282 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.886 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.051 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.874 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.880 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.881 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.881 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.882 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.883 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.883 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.886 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.886 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.890 I llama_model_loader: - type  f32:   37 tensors
0.00.133.893 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.893 I llama_model_loader: - type q6_K:   19 tensors
0.00.198.056 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.211.134 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.211.782 I llm_load_vocab: special tokens cache size = 5
0.00.229.920 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.229.934 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.229.935 I llm_load_print_meta: arch             = gemma
0.00.229.936 I llm_load_print_meta: vocab type       = SPM
0.00.229.936 I llm_load_print_meta: n_vocab          = 256000
0.00.229.937 I llm_load_print_meta: n_merges         = 0
0.00.229.937 I llm_load_print_meta: vocab_only       = 0
0.00.229.938 I llm_load_print_meta: n_ctx_train      = 8192
0.00.229.938 I llm_load_print_meta: n_embd           = 2048
0.00.229.938 I llm_load_print_meta: n_layer          = 18
0.00.229.949 I llm_load_print_meta: n_head           = 8
0.00.229.950 I llm_load_print_meta: n_head_kv        = 1
0.00.229.950 I llm_load_print_meta: n_rot            = 256
0.00.229.951 I llm_load_print_meta: n_swa            = 0
0.00.229.951 I llm_load_print_meta: n_embd_head_k    = 256
0.00.229.951 I llm_load_print_meta: n_embd_head_v    = 256
0.00.229.952 I llm_load_print_meta: n_gqa            = 8
0.00.229.953 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.229.954 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.229.955 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.229.956 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.229.956 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.229.956 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.229.956 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.229.957 I llm_load_print_meta: n_ff             = 16384
0.00.229.958 I llm_load_print_meta: n_expert         = 0
0.00.229.958 I llm_load_print_meta: n_expert_used    = 0
0.00.229.958 I llm_load_print_meta: causal attn      = 1
0.00.229.958 I llm_load_print_meta: pooling type     = 0
0.00.229.959 I llm_load_print_meta: rope type        = 2
0.00.229.959 I llm_load_print_meta: rope scaling     = linear
0.00.229.961 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.229.961 I llm_load_print_meta: freq_scale_train = 1
0.00.229.961 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.229.962 I llm_load_print_meta: rope_finetuned   = unknown
0.00.229.962 I llm_load_print_meta: ssm_d_conv       = 0
0.00.229.962 I llm_load_print_meta: ssm_d_inner      = 0
0.00.229.963 I llm_load_print_meta: ssm_d_state      = 0
0.00.229.963 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.229.963 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.229.964 I llm_load_print_meta: model type       = 2B
0.00.229.964 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.229.965 I llm_load_print_meta: model params     = 2.51 B
0.00.229.966 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.229.966 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.229.966 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.229.967 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.229.967 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.229.967 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.229.968 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.229.968 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.229.968 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.229.969 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.229.969 I llm_load_print_meta: max token length = 93
0.00.229.985 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.285.823 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.290.867 I llama_new_context_with_model: n_ctx      = 8192
0.00.290.873 I llama_new_context_with_model: n_batch    = 2048
0.00.290.874 I llama_new_context_with_model: n_ubatch   = 512
0.00.290.874 I llama_new_context_with_model: flash_attn = 0
0.00.290.877 I llama_new_context_with_model: freq_base  = 10000.0
0.00.290.877 I llama_new_context_with_model: freq_scale = 1
0.00.319.970 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.319.986 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.320.078 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.320.930 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.320.938 I llama_new_context_with_model: graph nodes  = 601
0.00.320.939 I llama_new_context_with_model: graph splits = 1
0.00.320.940 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.401.435 I main: llama threadpool init, n_threads = 4
0.00.401.447 I 
0.00.401.520 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.401.523 I 
0.00.401.564 I sampler seed: 3451902033
0.00.401.573 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.401.575 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.401.576 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.401.576 I 
 encompasing all the possible combinations of the letters A, B, C, and D:

A) AB, AD, BC, CD
B) BA

0.02.010.517 I llama_perf_sampler_print:    sampling time =       4.66 ms /    33 runs   (    0.14 ms per token,  7075.47 tokens per second)
0.02.010.520 I llama_perf_context_print:        load time =     399.58 ms
0.02.010.521 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.010.523 I llama_perf_context_print:        eval time =    1591.30 ms /    32 runs   (   49.73 ms per token,    20.11 tokens per second)
0.02.010.524 I llama_perf_context_print:       total time =    1609.09 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.060s
user	8m14.296s
sys	0m6.827s
