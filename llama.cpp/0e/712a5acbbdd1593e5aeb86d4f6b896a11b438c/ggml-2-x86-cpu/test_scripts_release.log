+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.585 I build: 4071 (0e712a5a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.783 I main: llama backend init
0.00.000.921 I main: load the model and apply lora adapter, if any
0.00.021.505 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.515 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.523 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.532 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.536 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.539 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.540 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.542 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.543 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.543 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.544 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.547 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.548 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.549 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.549 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.550 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.950 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.659 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.504 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.511 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.512 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.513 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.513 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.514 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.515 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.518 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.520 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.521 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.521 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.522 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.526 I llama_model_loader: - type  f32:   37 tensors
0.00.133.527 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.444 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.334 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.888 I llm_load_vocab: special tokens cache size = 5
0.00.266.395 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.410 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.411 I llm_load_print_meta: arch             = gemma
0.00.266.411 I llm_load_print_meta: vocab type       = SPM
0.00.266.412 I llm_load_print_meta: n_vocab          = 256000
0.00.266.412 I llm_load_print_meta: n_merges         = 0
0.00.266.412 I llm_load_print_meta: vocab_only       = 0
0.00.266.413 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.413 I llm_load_print_meta: n_embd           = 2048
0.00.266.413 I llm_load_print_meta: n_layer          = 18
0.00.266.426 I llm_load_print_meta: n_head           = 8
0.00.266.427 I llm_load_print_meta: n_head_kv        = 1
0.00.266.427 I llm_load_print_meta: n_rot            = 256
0.00.266.427 I llm_load_print_meta: n_swa            = 0
0.00.266.428 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.428 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.429 I llm_load_print_meta: n_gqa            = 8
0.00.266.430 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.431 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.432 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.433 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.433 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.434 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.434 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.435 I llm_load_print_meta: n_ff             = 16384
0.00.266.435 I llm_load_print_meta: n_expert         = 0
0.00.266.435 I llm_load_print_meta: n_expert_used    = 0
0.00.266.436 I llm_load_print_meta: causal attn      = 1
0.00.266.436 I llm_load_print_meta: pooling type     = 0
0.00.266.436 I llm_load_print_meta: rope type        = 2
0.00.266.437 I llm_load_print_meta: rope scaling     = linear
0.00.266.438 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.439 I llm_load_print_meta: freq_scale_train = 1
0.00.266.439 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.439 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.440 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.440 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.440 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.440 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.440 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.441 I llm_load_print_meta: model type       = 2B
0.00.266.441 I llm_load_print_meta: model ftype      = Q8_0
0.00.266.442 I llm_load_print_meta: model params     = 2.51 B
0.00.266.443 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.266.443 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.444 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.444 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.444 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.445 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.445 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.445 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.446 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.446 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.446 I llm_load_print_meta: max token length = 93
0.00.367.665 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.367.671 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.367.672 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.367.673 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.367.673 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.367.674 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.373.000 I llama_new_context_with_model: n_seq_max     = 1
0.00.373.006 I llama_new_context_with_model: n_ctx         = 4096
0.00.373.007 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.373.007 I llama_new_context_with_model: n_batch       = 2048
0.00.373.008 I llama_new_context_with_model: n_ubatch      = 512
0.00.373.008 I llama_new_context_with_model: flash_attn    = 0
0.00.373.010 I llama_new_context_with_model: freq_base     = 10000.0
0.00.373.011 I llama_new_context_with_model: freq_scale    = 1
0.00.373.012 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.388.923 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.388.938 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.389.032 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.390.269 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.390.276 I llama_new_context_with_model: graph nodes  = 601
0.00.390.276 I llama_new_context_with_model: graph splits = 1
0.00.390.278 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.478.147 I main: llama threadpool init, n_threads = 4
0.00.478.160 I 
0.00.478.239 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.478.242 I 
0.00.478.284 I sampler seed: 2584191452
0.00.478.296 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.478.299 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.478.300 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.478.311 I 
 increasels of the Middle Ages.

**Answer:** Knights [end of text]


0.01.388.344 I llama_perf_sampler_print:    sampling time =       1.97 ms /    14 runs   (    0.14 ms per token,  7106.60 tokens per second)
0.01.388.346 I llama_perf_context_print:        load time =     477.20 ms
0.01.388.347 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.388.348 I llama_perf_context_print:        eval time =     902.06 ms /    13 runs   (   69.39 ms per token,    14.41 tokens per second)
0.01.388.349 I llama_perf_context_print:       total time =     910.20 ms /    14 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.405 I build: 4071 (0e712a5a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.610 I main: llama backend init
0.00.000.738 I main: load the model and apply lora adapter, if any
0.00.021.224 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.238 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.243 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.245 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.248 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.249 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.249 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.250 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.252 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.252 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.256 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.257 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.257 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.258 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.258 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.731 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.558 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.406 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.412 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.413 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.413 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.414 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.415 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.416 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.418 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.418 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.419 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.419 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.420 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.423 I llama_model_loader: - type  f32:   37 tensors
0.00.131.423 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.226 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.466 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.019 I llm_load_vocab: special tokens cache size = 5
0.00.267.787 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.806 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.807 I llm_load_print_meta: arch             = gemma
0.00.267.808 I llm_load_print_meta: vocab type       = SPM
0.00.267.808 I llm_load_print_meta: n_vocab          = 256000
0.00.267.809 I llm_load_print_meta: n_merges         = 0
0.00.267.809 I llm_load_print_meta: vocab_only       = 0
0.00.267.809 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.810 I llm_load_print_meta: n_embd           = 2048
0.00.267.810 I llm_load_print_meta: n_layer          = 18
0.00.267.823 I llm_load_print_meta: n_head           = 8
0.00.267.824 I llm_load_print_meta: n_head_kv        = 1
0.00.267.825 I llm_load_print_meta: n_rot            = 256
0.00.267.825 I llm_load_print_meta: n_swa            = 0
0.00.267.826 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.826 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.827 I llm_load_print_meta: n_gqa            = 8
0.00.267.828 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.829 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.830 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.831 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.832 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.832 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.832 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.833 I llm_load_print_meta: n_ff             = 16384
0.00.267.833 I llm_load_print_meta: n_expert         = 0
0.00.267.834 I llm_load_print_meta: n_expert_used    = 0
0.00.267.834 I llm_load_print_meta: causal attn      = 1
0.00.267.834 I llm_load_print_meta: pooling type     = 0
0.00.267.835 I llm_load_print_meta: rope type        = 2
0.00.267.835 I llm_load_print_meta: rope scaling     = linear
0.00.267.836 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.837 I llm_load_print_meta: freq_scale_train = 1
0.00.267.837 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.838 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.838 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.838 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.839 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.839 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.839 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.840 I llm_load_print_meta: model type       = 2B
0.00.267.840 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.841 I llm_load_print_meta: model params     = 2.51 B
0.00.267.842 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.842 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.843 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.843 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.843 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.844 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.844 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.844 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.845 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.845 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.846 I llm_load_print_meta: max token length = 93
0.00.367.321 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.372.525 I llama_new_context_with_model: n_seq_max     = 1
0.00.372.531 I llama_new_context_with_model: n_ctx         = 4096
0.00.372.532 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.372.532 I llama_new_context_with_model: n_batch       = 2048
0.00.372.533 I llama_new_context_with_model: n_ubatch      = 512
0.00.372.533 I llama_new_context_with_model: flash_attn    = 0
0.00.372.535 I llama_new_context_with_model: freq_base     = 10000.0
0.00.372.536 I llama_new_context_with_model: freq_scale    = 1
0.00.372.537 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.389.571 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.389.588 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.389.684 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.390.984 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.390.991 I llama_new_context_with_model: graph nodes  = 601
0.00.390.991 I llama_new_context_with_model: graph splits = 1
0.00.390.993 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.472.391 I main: llama threadpool init, n_threads = 4
0.00.472.404 I 
0.00.472.481 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.472.484 I 
0.00.472.530 I sampler seed: 4148872900
0.00.472.541 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.472.544 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.472.545 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.472.545 I 
 increasities,
For those who keep the faith, their souls are in your hands.

What is the meaning of this passage?

The passage appears to

0.02.662.047 I llama_perf_sampler_print:    sampling time =       4.69 ms /    33 runs   (    0.14 ms per token,  7039.25 tokens per second)
0.02.662.049 I llama_perf_context_print:        load time =     471.63 ms
0.02.662.050 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.662.051 I llama_perf_context_print:        eval time =    2170.62 ms /    32 runs   (   67.83 ms per token,    14.74 tokens per second)
0.02.662.052 I llama_perf_context_print:       total time =    2189.66 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.562 I build: 4071 (0e712a5a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.769 I main: llama backend init
0.00.000.914 I main: load the model and apply lora adapter, if any
0.00.021.361 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.371 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.378 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.383 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.385 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.389 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.390 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.391 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.396 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.397 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.397 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.402 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.403 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.404 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.405 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.405 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.099 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.838 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.677 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.683 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.684 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.685 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.686 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.686 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.687 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.689 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.690 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.690 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.691 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.692 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.695 I llama_model_loader: - type  f32:   37 tensors
0.00.131.696 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.575 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.332 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.003 I llm_load_vocab: special tokens cache size = 5
0.00.267.768 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.789 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.789 I llm_load_print_meta: arch             = gemma
0.00.267.790 I llm_load_print_meta: vocab type       = SPM
0.00.267.791 I llm_load_print_meta: n_vocab          = 256000
0.00.267.791 I llm_load_print_meta: n_merges         = 0
0.00.267.792 I llm_load_print_meta: vocab_only       = 0
0.00.267.792 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.792 I llm_load_print_meta: n_embd           = 2048
0.00.267.793 I llm_load_print_meta: n_layer          = 18
0.00.267.812 I llm_load_print_meta: n_head           = 8
0.00.267.814 I llm_load_print_meta: n_head_kv        = 1
0.00.267.814 I llm_load_print_meta: n_rot            = 256
0.00.267.814 I llm_load_print_meta: n_swa            = 0
0.00.267.814 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.815 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.816 I llm_load_print_meta: n_gqa            = 8
0.00.267.817 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.818 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.818 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.820 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.820 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.821 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.821 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.822 I llm_load_print_meta: n_ff             = 16384
0.00.267.822 I llm_load_print_meta: n_expert         = 0
0.00.267.822 I llm_load_print_meta: n_expert_used    = 0
0.00.267.823 I llm_load_print_meta: causal attn      = 1
0.00.267.823 I llm_load_print_meta: pooling type     = 0
0.00.267.823 I llm_load_print_meta: rope type        = 2
0.00.267.824 I llm_load_print_meta: rope scaling     = linear
0.00.267.825 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.826 I llm_load_print_meta: freq_scale_train = 1
0.00.267.826 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.826 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.826 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.827 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.827 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.827 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.827 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.828 I llm_load_print_meta: model type       = 2B
0.00.267.828 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.829 I llm_load_print_meta: model params     = 2.51 B
0.00.267.830 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.831 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.831 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.832 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.832 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.832 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.833 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.833 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.833 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.834 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.834 I llm_load_print_meta: max token length = 93
0.00.348.527 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.348.532 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.348.533 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.348.533 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.348.534 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.348.535 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.353.925 I llama_new_context_with_model: n_seq_max     = 1
0.00.353.931 I llama_new_context_with_model: n_ctx         = 4096
0.00.353.931 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.353.932 I llama_new_context_with_model: n_batch       = 2048
0.00.353.932 I llama_new_context_with_model: n_ubatch      = 512
0.00.353.933 I llama_new_context_with_model: flash_attn    = 0
0.00.353.935 I llama_new_context_with_model: freq_base     = 10000.0
0.00.353.936 I llama_new_context_with_model: freq_scale    = 1
0.00.353.937 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.369.061 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.369.075 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.369.169 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.386 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.370.393 I llama_new_context_with_model: graph nodes  = 601
0.00.370.393 I llama_new_context_with_model: graph splits = 1
0.00.370.395 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.454.699 I main: llama threadpool init, n_threads = 4
0.00.454.712 I 
0.00.454.805 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.454.809 I 
0.00.454.861 I sampler seed: 125689604
0.00.454.872 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.454.876 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.454.877 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.454.878 I 
 increasities are a form of sexual harassment and should not be tolerated. [end of text]


0.01.478.972 I llama_perf_sampler_print:    sampling time =       2.33 ms /    16 runs   (    0.15 ms per token,  6858.12 tokens per second)
0.01.478.975 I llama_perf_context_print:        load time =     453.76 ms
0.01.478.977 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.478.979 I llama_perf_context_print:        eval time =    1014.35 ms /    15 runs   (   67.62 ms per token,    14.79 tokens per second)
0.01.478.979 I llama_perf_context_print:       total time =    1024.28 ms /    16 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.533 I build: 4071 (0e712a5a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.728 I main: llama backend init
0.00.000.890 I main: load the model and apply lora adapter, if any
0.00.021.481 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.490 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.498 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.508 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.509 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.513 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.513 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.514 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.515 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.515 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.516 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.521 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.521 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.522 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.522 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.523 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.777 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.143 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.025 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.031 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.032 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.032 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.033 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.034 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.034 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.036 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.037 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.038 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.038 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.039 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.043 I llama_model_loader: - type  f32:   37 tensors
0.00.132.045 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.263 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.140 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.249.739 I llm_load_vocab: special tokens cache size = 5
0.00.270.681 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.697 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.698 I llm_load_print_meta: arch             = gemma
0.00.270.699 I llm_load_print_meta: vocab type       = SPM
0.00.270.700 I llm_load_print_meta: n_vocab          = 256000
0.00.270.700 I llm_load_print_meta: n_merges         = 0
0.00.270.701 I llm_load_print_meta: vocab_only       = 0
0.00.270.701 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.702 I llm_load_print_meta: n_embd           = 2048
0.00.270.702 I llm_load_print_meta: n_layer          = 18
0.00.270.714 I llm_load_print_meta: n_head           = 8
0.00.270.715 I llm_load_print_meta: n_head_kv        = 1
0.00.270.716 I llm_load_print_meta: n_rot            = 256
0.00.270.716 I llm_load_print_meta: n_swa            = 0
0.00.270.716 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.717 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.718 I llm_load_print_meta: n_gqa            = 8
0.00.270.719 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.720 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.721 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.722 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.722 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.723 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.723 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.724 I llm_load_print_meta: n_ff             = 16384
0.00.270.724 I llm_load_print_meta: n_expert         = 0
0.00.270.724 I llm_load_print_meta: n_expert_used    = 0
0.00.270.725 I llm_load_print_meta: causal attn      = 1
0.00.270.725 I llm_load_print_meta: pooling type     = 0
0.00.270.725 I llm_load_print_meta: rope type        = 2
0.00.270.726 I llm_load_print_meta: rope scaling     = linear
0.00.270.727 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.728 I llm_load_print_meta: freq_scale_train = 1
0.00.270.728 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.728 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.729 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.729 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.729 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.729 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.730 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.730 I llm_load_print_meta: model type       = 2B
0.00.270.731 I llm_load_print_meta: model ftype      = Q8_0
0.00.270.732 I llm_load_print_meta: model params     = 2.51 B
0.00.270.733 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.270.733 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.734 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.734 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.735 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.735 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.735 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.736 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.736 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.736 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.737 I llm_load_print_meta: max token length = 93
0.00.341.930 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.341.937 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.346.970 I llama_new_context_with_model: n_seq_max     = 1
0.00.346.977 I llama_new_context_with_model: n_ctx         = 4096
0.00.346.977 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.346.978 I llama_new_context_with_model: n_batch       = 2048
0.00.346.978 I llama_new_context_with_model: n_ubatch      = 512
0.00.346.978 I llama_new_context_with_model: flash_attn    = 0
0.00.346.980 I llama_new_context_with_model: freq_base     = 10000.0
0.00.346.981 I llama_new_context_with_model: freq_scale    = 1
0.00.346.982 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.361.913 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.361.927 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.362.016 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.363.244 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.363.249 I llama_new_context_with_model: graph nodes  = 601
0.00.363.250 I llama_new_context_with_model: graph splits = 1
0.00.363.252 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.819 I main: llama threadpool init, n_threads = 4
0.00.451.832 I 
0.00.451.908 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.911 I 
0.00.451.958 I sampler seed: 793849568
0.00.451.968 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.971 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.451.971 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.972 I 
 increasities. [end of text]


0.00.754.336 I llama_perf_sampler_print:    sampling time =       0.62 ms /     5 runs   (    0.12 ms per token,  8012.82 tokens per second)
0.00.754.338 I llama_perf_context_print:        load time =     450.91 ms
0.00.754.340 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.754.341 I llama_perf_context_print:        eval time =     299.13 ms /     4 runs   (   74.78 ms per token,    13.37 tokens per second)
0.00.754.341 I llama_perf_context_print:       total time =     302.53 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.078s
user	0m20.586s
sys	0m9.337s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4071 (0e712a5a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32085.71 ms
main:    total time = 32085.71 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.535 I build: 4071 (0e712a5a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.737 I main: llama backend init
0.00.000.867 I main: load the model and apply lora adapter, if any
0.00.021.579 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.589 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.597 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.602 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.603 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.606 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.607 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.608 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.609 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.610 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.611 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.620 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.623 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.624 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.625 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.626 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.817 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.466 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.313 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.319 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.320 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.320 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.321 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.322 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.323 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.325 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.325 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.326 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.328 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.329 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.331 I llama_model_loader: - type  f32:   37 tensors
0.00.131.333 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.333 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.322 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.029 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.599 I llm_load_vocab: special tokens cache size = 5
0.00.266.150 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.168 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.169 I llm_load_print_meta: arch             = gemma
0.00.266.170 I llm_load_print_meta: vocab type       = SPM
0.00.266.170 I llm_load_print_meta: n_vocab          = 256000
0.00.266.171 I llm_load_print_meta: n_merges         = 0
0.00.266.171 I llm_load_print_meta: vocab_only       = 0
0.00.266.172 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.172 I llm_load_print_meta: n_embd           = 2048
0.00.266.172 I llm_load_print_meta: n_layer          = 18
0.00.266.186 I llm_load_print_meta: n_head           = 8
0.00.266.187 I llm_load_print_meta: n_head_kv        = 1
0.00.266.187 I llm_load_print_meta: n_rot            = 256
0.00.266.187 I llm_load_print_meta: n_swa            = 0
0.00.266.188 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.188 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.189 I llm_load_print_meta: n_gqa            = 8
0.00.266.190 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.191 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.191 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.192 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.193 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.193 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.193 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.194 I llm_load_print_meta: n_ff             = 16384
0.00.266.195 I llm_load_print_meta: n_expert         = 0
0.00.266.195 I llm_load_print_meta: n_expert_used    = 0
0.00.266.195 I llm_load_print_meta: causal attn      = 1
0.00.266.196 I llm_load_print_meta: pooling type     = 0
0.00.266.196 I llm_load_print_meta: rope type        = 2
0.00.266.196 I llm_load_print_meta: rope scaling     = linear
0.00.266.198 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.198 I llm_load_print_meta: freq_scale_train = 1
0.00.266.199 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.199 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.199 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.200 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.200 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.200 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.200 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.201 I llm_load_print_meta: model type       = 2B
0.00.266.202 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.266.203 I llm_load_print_meta: model params     = 2.51 B
0.00.266.203 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.266.204 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.204 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.204 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.205 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.205 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.205 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.206 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.206 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.206 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.207 I llm_load_print_meta: max token length = 93
0.00.328.840 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.328.848 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.328.848 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.328.849 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.328.850 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.328.850 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.334.142 I llama_new_context_with_model: n_seq_max     = 1
0.00.334.149 I llama_new_context_with_model: n_ctx         = 4096
0.00.334.149 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.334.149 I llama_new_context_with_model: n_batch       = 2048
0.00.334.150 I llama_new_context_with_model: n_ubatch      = 512
0.00.334.150 I llama_new_context_with_model: flash_attn    = 0
0.00.334.152 I llama_new_context_with_model: freq_base     = 10000.0
0.00.334.153 I llama_new_context_with_model: freq_scale    = 1
0.00.334.154 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.349.775 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.349.790 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.349.878 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.351.123 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.351.128 I llama_new_context_with_model: graph nodes  = 601
0.00.351.128 I llama_new_context_with_model: graph splits = 1
0.00.351.130 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.427.279 I main: llama threadpool init, n_threads = 4
0.00.427.291 I 
0.00.427.375 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.427.379 I 
0.00.427.437 I sampler seed: 548219803
0.00.427.449 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.427.457 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.427.460 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.427.461 I 
 maneuvously. [end of text]


0.00.684.253 I llama_perf_sampler_print:    sampling time =       0.79 ms /     6 runs   (    0.13 ms per token,  7594.94 tokens per second)
0.00.684.256 I llama_perf_context_print:        load time =     426.39 ms
0.00.684.257 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.684.259 I llama_perf_context_print:        eval time =     253.17 ms /     5 runs   (   50.63 ms per token,    19.75 tokens per second)
0.00.684.260 I llama_perf_context_print:       total time =     256.98 ms /     6 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4071 (0e712a5a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32056.27 ms
main:    total time = 32056.27 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.579 I build: 4071 (0e712a5a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.815 I main: llama backend init
0.00.000.954 I main: load the model and apply lora adapter, if any
0.00.021.154 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.173 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.184 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.188 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.192 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.193 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.194 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.195 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.196 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.196 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.201 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.201 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.202 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.202 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.203 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.020 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.110 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.014 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.020 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.021 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.021 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.022 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.023 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.024 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.026 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.027 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.032 I llama_model_loader: - type  f32:   37 tensors
0.00.132.033 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.033 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.983 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.249.779 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.360 I llm_load_vocab: special tokens cache size = 5
0.00.271.156 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.271.176 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.271.177 I llm_load_print_meta: arch             = gemma
0.00.271.177 I llm_load_print_meta: vocab type       = SPM
0.00.271.178 I llm_load_print_meta: n_vocab          = 256000
0.00.271.179 I llm_load_print_meta: n_merges         = 0
0.00.271.179 I llm_load_print_meta: vocab_only       = 0
0.00.271.179 I llm_load_print_meta: n_ctx_train      = 8192
0.00.271.180 I llm_load_print_meta: n_embd           = 2048
0.00.271.180 I llm_load_print_meta: n_layer          = 18
0.00.271.191 I llm_load_print_meta: n_head           = 8
0.00.271.193 I llm_load_print_meta: n_head_kv        = 1
0.00.271.193 I llm_load_print_meta: n_rot            = 256
0.00.271.193 I llm_load_print_meta: n_swa            = 0
0.00.271.194 I llm_load_print_meta: n_embd_head_k    = 256
0.00.271.194 I llm_load_print_meta: n_embd_head_v    = 256
0.00.271.195 I llm_load_print_meta: n_gqa            = 8
0.00.271.196 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.271.197 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.271.197 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.271.199 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.271.199 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.271.200 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.271.200 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.271.201 I llm_load_print_meta: n_ff             = 16384
0.00.271.201 I llm_load_print_meta: n_expert         = 0
0.00.271.201 I llm_load_print_meta: n_expert_used    = 0
0.00.271.202 I llm_load_print_meta: causal attn      = 1
0.00.271.202 I llm_load_print_meta: pooling type     = 0
0.00.271.202 I llm_load_print_meta: rope type        = 2
0.00.271.203 I llm_load_print_meta: rope scaling     = linear
0.00.271.204 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.271.204 I llm_load_print_meta: freq_scale_train = 1
0.00.271.205 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.271.205 I llm_load_print_meta: rope_finetuned   = unknown
0.00.271.206 I llm_load_print_meta: ssm_d_conv       = 0
0.00.271.206 I llm_load_print_meta: ssm_d_inner      = 0
0.00.271.206 I llm_load_print_meta: ssm_d_state      = 0
0.00.271.206 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.271.207 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.271.207 I llm_load_print_meta: model type       = 2B
0.00.271.208 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.271.208 I llm_load_print_meta: model params     = 2.51 B
0.00.271.209 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.271.209 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.271.210 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.271.210 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.271.211 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.271.211 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.271.211 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.271.212 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.271.212 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.271.213 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.271.213 I llm_load_print_meta: max token length = 93
0.00.328.948 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.333.975 I llama_new_context_with_model: n_seq_max     = 1
0.00.333.982 I llama_new_context_with_model: n_ctx         = 4096
0.00.333.982 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.333.982 I llama_new_context_with_model: n_batch       = 2048
0.00.333.983 I llama_new_context_with_model: n_ubatch      = 512
0.00.333.983 I llama_new_context_with_model: flash_attn    = 0
0.00.333.986 I llama_new_context_with_model: freq_base     = 10000.0
0.00.333.987 I llama_new_context_with_model: freq_scale    = 1
0.00.333.988 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.349.657 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.349.671 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.349.766 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.351.005 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.351.012 I llama_new_context_with_model: graph nodes  = 601
0.00.351.012 I llama_new_context_with_model: graph splits = 1
0.00.351.014 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.425.711 I main: llama threadpool init, n_threads = 4
0.00.425.726 I 
0.00.425.804 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.425.807 I 
0.00.425.850 I sampler seed: 2144670108
0.00.425.862 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.425.870 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.425.873 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.425.873 I 
 increasities of the Milky Way, the Andromeda Galaxy and the Magellanic Clouds.

**a) Describe the phenomenon of tidal locking.**

**b)

0.02.004.639 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7004.88 tokens per second)
0.02.004.641 I llama_perf_context_print:        load time =     424.73 ms
0.02.004.643 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.004.646 I llama_perf_context_print:        eval time =    1560.22 ms /    32 runs   (   48.76 ms per token,    20.51 tokens per second)
0.02.004.647 I llama_perf_context_print:       total time =    1578.94 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m9.608s
user	8m9.000s
sys	0m6.869s
