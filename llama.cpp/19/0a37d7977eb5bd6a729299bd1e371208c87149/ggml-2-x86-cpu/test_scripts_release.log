+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.571 I build: 3969 (190a37d7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.001.847 I main: load the model and apply lora adapter, if any
0.00.023.681 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.729 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.737 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.743 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.746 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.750 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.751 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.751 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.752 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.752 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.753 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.757 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.758 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.758 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.759 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.759 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.594 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.775 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.683 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.691 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.692 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.693 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.694 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.695 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.696 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.699 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.700 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.701 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.701 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.702 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.706 I llama_model_loader: - type  f32:   37 tensors
0.00.134.709 I llama_model_loader: - type q8_0:  127 tensors
0.00.224.683 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.278.208 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.278.917 I llm_load_vocab: special tokens cache size = 5
0.00.300.433 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.300.452 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.300.452 I llm_load_print_meta: arch             = gemma
0.00.300.453 I llm_load_print_meta: vocab type       = SPM
0.00.300.453 I llm_load_print_meta: n_vocab          = 256000
0.00.300.454 I llm_load_print_meta: n_merges         = 0
0.00.300.454 I llm_load_print_meta: vocab_only       = 0
0.00.300.455 I llm_load_print_meta: n_ctx_train      = 8192
0.00.300.455 I llm_load_print_meta: n_embd           = 2048
0.00.300.455 I llm_load_print_meta: n_layer          = 18
0.00.300.467 I llm_load_print_meta: n_head           = 8
0.00.300.468 I llm_load_print_meta: n_head_kv        = 1
0.00.300.468 I llm_load_print_meta: n_rot            = 256
0.00.300.469 I llm_load_print_meta: n_swa            = 0
0.00.300.469 I llm_load_print_meta: n_embd_head_k    = 256
0.00.300.469 I llm_load_print_meta: n_embd_head_v    = 256
0.00.300.470 I llm_load_print_meta: n_gqa            = 8
0.00.300.471 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.300.472 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.300.473 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.300.474 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.300.474 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.300.474 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.300.475 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.300.475 I llm_load_print_meta: n_ff             = 16384
0.00.300.476 I llm_load_print_meta: n_expert         = 0
0.00.300.476 I llm_load_print_meta: n_expert_used    = 0
0.00.300.476 I llm_load_print_meta: causal attn      = 1
0.00.300.477 I llm_load_print_meta: pooling type     = 0
0.00.300.477 I llm_load_print_meta: rope type        = 2
0.00.300.477 I llm_load_print_meta: rope scaling     = linear
0.00.300.479 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.300.480 I llm_load_print_meta: freq_scale_train = 1
0.00.300.480 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.300.480 I llm_load_print_meta: rope_finetuned   = unknown
0.00.300.480 I llm_load_print_meta: ssm_d_conv       = 0
0.00.300.481 I llm_load_print_meta: ssm_d_inner      = 0
0.00.300.481 I llm_load_print_meta: ssm_d_state      = 0
0.00.300.481 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.300.481 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.300.482 I llm_load_print_meta: model type       = 2B
0.00.300.482 I llm_load_print_meta: model ftype      = Q8_0
0.00.300.483 I llm_load_print_meta: model params     = 2.51 B
0.00.300.484 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.300.484 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.300.485 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.300.486 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.300.486 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.300.486 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.300.487 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.300.487 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.300.487 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.300.488 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.300.488 I llm_load_print_meta: max token length = 93
0.00.300.516 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.398.789 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.398.797 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.398.798 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.398.798 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.398.799 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.398.800 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.403.962 I llama_new_context_with_model: n_ctx      = 8192
0.00.403.969 I llama_new_context_with_model: n_batch    = 2048
0.00.403.970 I llama_new_context_with_model: n_ubatch   = 512
0.00.403.970 I llama_new_context_with_model: flash_attn = 0
0.00.403.973 I llama_new_context_with_model: freq_base  = 10000.0
0.00.403.973 I llama_new_context_with_model: freq_scale = 1
0.00.433.365 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.433.381 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.433.481 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.434.375 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.434.383 I llama_new_context_with_model: graph nodes  = 601
0.00.434.383 I llama_new_context_with_model: graph splits = 1
0.00.434.385 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.526.140 I main: llama threadpool init, n_threads = 4
0.00.526.156 I 
0.00.526.236 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.526.240 I 
0.00.526.279 I sampler seed: 892413617
0.00.526.289 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.526.292 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.526.293 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.526.293 I 
 increasities, and the allure of the unknown. [end of text]


0.01.310.577 I llama_perf_sampler_print:    sampling time =       1.68 ms /    12 runs   (    0.14 ms per token,  7125.89 tokens per second)
0.01.310.580 I llama_perf_context_print:        load time =     524.27 ms
0.01.310.581 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.310.582 I llama_perf_context_print:        eval time =     777.11 ms /    11 runs   (   70.65 ms per token,    14.15 tokens per second)
0.01.310.583 I llama_perf_context_print:       total time =     784.44 ms /    12 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.546 I build: 3969 (190a37d7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.729 I main: llama backend init
0.00.001.823 I main: load the model and apply lora adapter, if any
0.00.021.706 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.722 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.731 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.732 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.736 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.737 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.737 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.738 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.738 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.739 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.744 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.745 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.745 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.746 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.746 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.697 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.982 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.770 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.777 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.778 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.779 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.780 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.781 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.783 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.786 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.787 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.788 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.788 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.790 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.794 I llama_model_loader: - type  f32:   37 tensors
0.00.132.798 I llama_model_loader: - type q8_0:  127 tensors
0.00.217.500 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.267.415 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.268.025 I llm_load_vocab: special tokens cache size = 5
0.00.289.142 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.289.159 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.289.160 I llm_load_print_meta: arch             = gemma
0.00.289.160 I llm_load_print_meta: vocab type       = SPM
0.00.289.161 I llm_load_print_meta: n_vocab          = 256000
0.00.289.161 I llm_load_print_meta: n_merges         = 0
0.00.289.162 I llm_load_print_meta: vocab_only       = 0
0.00.289.162 I llm_load_print_meta: n_ctx_train      = 8192
0.00.289.162 I llm_load_print_meta: n_embd           = 2048
0.00.289.162 I llm_load_print_meta: n_layer          = 18
0.00.289.174 I llm_load_print_meta: n_head           = 8
0.00.289.175 I llm_load_print_meta: n_head_kv        = 1
0.00.289.175 I llm_load_print_meta: n_rot            = 256
0.00.289.176 I llm_load_print_meta: n_swa            = 0
0.00.289.176 I llm_load_print_meta: n_embd_head_k    = 256
0.00.289.176 I llm_load_print_meta: n_embd_head_v    = 256
0.00.289.177 I llm_load_print_meta: n_gqa            = 8
0.00.289.178 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.289.179 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.289.180 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.289.181 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.289.181 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.289.182 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.289.182 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.289.183 I llm_load_print_meta: n_ff             = 16384
0.00.289.183 I llm_load_print_meta: n_expert         = 0
0.00.289.183 I llm_load_print_meta: n_expert_used    = 0
0.00.289.184 I llm_load_print_meta: causal attn      = 1
0.00.289.184 I llm_load_print_meta: pooling type     = 0
0.00.289.184 I llm_load_print_meta: rope type        = 2
0.00.289.185 I llm_load_print_meta: rope scaling     = linear
0.00.289.186 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.289.187 I llm_load_print_meta: freq_scale_train = 1
0.00.289.187 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.289.188 I llm_load_print_meta: rope_finetuned   = unknown
0.00.289.188 I llm_load_print_meta: ssm_d_conv       = 0
0.00.289.188 I llm_load_print_meta: ssm_d_inner      = 0
0.00.289.188 I llm_load_print_meta: ssm_d_state      = 0
0.00.289.189 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.289.189 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.289.189 I llm_load_print_meta: model type       = 2B
0.00.289.190 I llm_load_print_meta: model ftype      = Q8_0
0.00.289.191 I llm_load_print_meta: model params     = 2.51 B
0.00.289.191 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.289.192 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.289.192 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.289.192 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.289.193 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.289.193 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.289.193 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.289.193 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.289.194 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.289.194 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.289.194 I llm_load_print_meta: max token length = 93
0.00.289.215 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.383.020 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.387.966 I llama_new_context_with_model: n_ctx      = 8192
0.00.387.972 I llama_new_context_with_model: n_batch    = 2048
0.00.387.972 I llama_new_context_with_model: n_ubatch   = 512
0.00.387.973 I llama_new_context_with_model: flash_attn = 0
0.00.387.975 I llama_new_context_with_model: freq_base  = 10000.0
0.00.387.976 I llama_new_context_with_model: freq_scale = 1
0.00.416.783 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.416.800 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.416.900 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.417.757 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.417.765 I llama_new_context_with_model: graph nodes  = 601
0.00.417.765 I llama_new_context_with_model: graph splits = 1
0.00.417.767 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.508.086 I main: llama threadpool init, n_threads = 4
0.00.508.101 I 
0.00.508.178 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.508.181 I 
0.00.508.222 I sampler seed: 3861260103
0.00.508.231 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.508.239 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.508.241 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.508.241 I 
 increasities. [end of text]


0.00.794.322 I llama_perf_sampler_print:    sampling time =       0.63 ms /     5 runs   (    0.13 ms per token,  7974.48 tokens per second)
0.00.794.325 I llama_perf_context_print:        load time =     506.24 ms
0.00.794.327 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.794.328 I llama_perf_context_print:        eval time =     282.61 ms /     4 runs   (   70.65 ms per token,    14.15 tokens per second)
0.00.794.329 I llama_perf_context_print:       total time =     286.25 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.554 I build: 3969 (190a37d7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.001.839 I main: load the model and apply lora adapter, if any
0.00.022.107 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.158 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.169 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.177 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.178 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.184 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.185 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.185 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.186 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.187 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.188 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.193 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.193 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.195 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.195 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.196 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.053 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.349 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.149 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.155 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.156 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.156 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.157 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.158 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.158 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.162 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.162 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.163 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.164 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.164 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.167 I llama_model_loader: - type  f32:   37 tensors
0.00.133.170 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.936 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.266.509 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.267.110 I llm_load_vocab: special tokens cache size = 5
0.00.288.328 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.288.343 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.288.344 I llm_load_print_meta: arch             = gemma
0.00.288.345 I llm_load_print_meta: vocab type       = SPM
0.00.288.346 I llm_load_print_meta: n_vocab          = 256000
0.00.288.346 I llm_load_print_meta: n_merges         = 0
0.00.288.347 I llm_load_print_meta: vocab_only       = 0
0.00.288.347 I llm_load_print_meta: n_ctx_train      = 8192
0.00.288.347 I llm_load_print_meta: n_embd           = 2048
0.00.288.348 I llm_load_print_meta: n_layer          = 18
0.00.288.358 I llm_load_print_meta: n_head           = 8
0.00.288.360 I llm_load_print_meta: n_head_kv        = 1
0.00.288.360 I llm_load_print_meta: n_rot            = 256
0.00.288.360 I llm_load_print_meta: n_swa            = 0
0.00.288.360 I llm_load_print_meta: n_embd_head_k    = 256
0.00.288.361 I llm_load_print_meta: n_embd_head_v    = 256
0.00.288.362 I llm_load_print_meta: n_gqa            = 8
0.00.288.363 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.288.364 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.288.364 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.288.366 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.288.366 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.288.367 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.288.367 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.288.368 I llm_load_print_meta: n_ff             = 16384
0.00.288.368 I llm_load_print_meta: n_expert         = 0
0.00.288.369 I llm_load_print_meta: n_expert_used    = 0
0.00.288.369 I llm_load_print_meta: causal attn      = 1
0.00.288.370 I llm_load_print_meta: pooling type     = 0
0.00.288.370 I llm_load_print_meta: rope type        = 2
0.00.288.371 I llm_load_print_meta: rope scaling     = linear
0.00.288.372 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.288.372 I llm_load_print_meta: freq_scale_train = 1
0.00.288.373 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.288.373 I llm_load_print_meta: rope_finetuned   = unknown
0.00.288.373 I llm_load_print_meta: ssm_d_conv       = 0
0.00.288.373 I llm_load_print_meta: ssm_d_inner      = 0
0.00.288.374 I llm_load_print_meta: ssm_d_state      = 0
0.00.288.374 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.288.374 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.288.375 I llm_load_print_meta: model type       = 2B
0.00.288.375 I llm_load_print_meta: model ftype      = Q8_0
0.00.288.376 I llm_load_print_meta: model params     = 2.51 B
0.00.288.376 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.288.377 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.288.377 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.288.378 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.288.378 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.288.378 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.288.379 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.288.379 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.288.379 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.288.380 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.288.380 I llm_load_print_meta: max token length = 93
0.00.288.401 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.364.411 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.364.419 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.364.420 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.364.420 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.364.421 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.364.422 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.369.625 I llama_new_context_with_model: n_ctx      = 8192
0.00.369.632 I llama_new_context_with_model: n_batch    = 2048
0.00.369.632 I llama_new_context_with_model: n_ubatch   = 512
0.00.369.633 I llama_new_context_with_model: flash_attn = 0
0.00.369.635 I llama_new_context_with_model: freq_base  = 10000.0
0.00.369.637 I llama_new_context_with_model: freq_scale = 1
0.00.399.467 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.399.481 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.399.575 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.400.502 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.400.511 I llama_new_context_with_model: graph nodes  = 601
0.00.400.511 I llama_new_context_with_model: graph splits = 1
0.00.400.514 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.493.840 I main: llama threadpool init, n_threads = 4
0.00.493.853 I 
0.00.493.931 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.493.934 I 
0.00.493.973 I sampler seed: 3378262510
0.00.493.984 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.493.987 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.493.988 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.493.988 I 
 seconded data into the dataframe 'data'.

```
data <- data.frame(id = c(1, 2, 3, 4

0.02.833.774 I llama_perf_sampler_print:    sampling time =       5.03 ms /    33 runs   (    0.15 ms per token,  6555.42 tokens per second)
0.02.833.777 I llama_perf_context_print:        load time =     491.98 ms
0.02.833.778 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.833.779 I llama_perf_context_print:        eval time =    2319.11 ms /    32 runs   (   72.47 ms per token,    13.80 tokens per second)
0.02.833.780 I llama_perf_context_print:       total time =    2339.94 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.586 I build: 3969 (190a37d7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.795 I main: llama backend init
0.00.001.898 I main: load the model and apply lora adapter, if any
0.00.022.164 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.214 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.221 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.227 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.228 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.232 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.233 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.234 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.234 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.235 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.235 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.240 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.240 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.241 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.242 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.242 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.182 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.198 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.112 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.120 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.121 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.121 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.122 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.123 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.123 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.126 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.126 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.127 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.127 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.134.128 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.132 I llama_model_loader: - type  f32:   37 tensors
0.00.134.134 I llama_model_loader: - type q8_0:  127 tensors
0.00.221.650 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.271.792 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.272.397 I llm_load_vocab: special tokens cache size = 5
0.00.293.754 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.293.771 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.293.772 I llm_load_print_meta: arch             = gemma
0.00.293.772 I llm_load_print_meta: vocab type       = SPM
0.00.293.773 I llm_load_print_meta: n_vocab          = 256000
0.00.293.773 I llm_load_print_meta: n_merges         = 0
0.00.293.774 I llm_load_print_meta: vocab_only       = 0
0.00.293.774 I llm_load_print_meta: n_ctx_train      = 8192
0.00.293.774 I llm_load_print_meta: n_embd           = 2048
0.00.293.775 I llm_load_print_meta: n_layer          = 18
0.00.293.787 I llm_load_print_meta: n_head           = 8
0.00.293.788 I llm_load_print_meta: n_head_kv        = 1
0.00.293.788 I llm_load_print_meta: n_rot            = 256
0.00.293.789 I llm_load_print_meta: n_swa            = 0
0.00.293.790 I llm_load_print_meta: n_embd_head_k    = 256
0.00.293.790 I llm_load_print_meta: n_embd_head_v    = 256
0.00.293.791 I llm_load_print_meta: n_gqa            = 8
0.00.293.792 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.293.793 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.293.794 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.293.795 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.293.795 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.293.796 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.293.796 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.293.798 I llm_load_print_meta: n_ff             = 16384
0.00.293.798 I llm_load_print_meta: n_expert         = 0
0.00.293.799 I llm_load_print_meta: n_expert_used    = 0
0.00.293.799 I llm_load_print_meta: causal attn      = 1
0.00.293.800 I llm_load_print_meta: pooling type     = 0
0.00.293.800 I llm_load_print_meta: rope type        = 2
0.00.293.800 I llm_load_print_meta: rope scaling     = linear
0.00.293.802 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.293.802 I llm_load_print_meta: freq_scale_train = 1
0.00.293.803 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.293.803 I llm_load_print_meta: rope_finetuned   = unknown
0.00.293.803 I llm_load_print_meta: ssm_d_conv       = 0
0.00.293.804 I llm_load_print_meta: ssm_d_inner      = 0
0.00.293.804 I llm_load_print_meta: ssm_d_state      = 0
0.00.293.805 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.293.805 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.293.805 I llm_load_print_meta: model type       = 2B
0.00.293.806 I llm_load_print_meta: model ftype      = Q8_0
0.00.293.807 I llm_load_print_meta: model params     = 2.51 B
0.00.293.808 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.293.808 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.293.809 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.293.809 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.293.810 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.293.810 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.293.810 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.293.811 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.293.811 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.293.811 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.293.812 I llm_load_print_meta: max token length = 93
0.00.293.840 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.363.936 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.363.945 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.369.055 I llama_new_context_with_model: n_ctx      = 8192
0.00.369.062 I llama_new_context_with_model: n_batch    = 2048
0.00.369.062 I llama_new_context_with_model: n_ubatch   = 512
0.00.369.063 I llama_new_context_with_model: flash_attn = 0
0.00.369.065 I llama_new_context_with_model: freq_base  = 10000.0
0.00.369.066 I llama_new_context_with_model: freq_scale = 1
0.00.399.411 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.399.423 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.399.514 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.400.387 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.400.393 I llama_new_context_with_model: graph nodes  = 601
0.00.400.394 I llama_new_context_with_model: graph splits = 1
0.00.400.396 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.495.453 I main: llama threadpool init, n_threads = 4
0.00.495.466 I 
0.00.495.542 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.495.546 I 
0.00.495.583 I sampler seed: 997125365
0.00.495.594 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.495.596 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.495.597 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.495.597 I 
 increasities and puns that reveal the speaker's playful nature and lightheartedness.

**Example:**

> Me and my buddy, we're like

0.02.963.717 I llama_perf_sampler_print:    sampling time =       5.11 ms /    33 runs   (    0.15 ms per token,  6461.72 tokens per second)
0.02.963.720 I llama_perf_context_print:        load time =     493.53 ms
0.02.963.721 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.963.723 I llama_perf_context_print:        eval time =    2447.69 ms /    32 runs   (   76.49 ms per token,    13.07 tokens per second)
0.02.963.724 I llama_perf_context_print:       total time =    2468.27 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.569s
user	0m26.520s
sys	0m9.600s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3969 (190a37d7)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32078.44 ms
main:    total time = 32078.44 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.543 I build: 3969 (190a37d7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.763 I main: llama backend init
0.00.001.922 I main: load the model and apply lora adapter, if any
0.00.022.199 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.262 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.274 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.279 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.280 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.284 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.286 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.287 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.289 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.290 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.291 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.295 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.296 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.297 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.298 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.299 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.571 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.672 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.471 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.477 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.478 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.479 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.479 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.480 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.481 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.484 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.484 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.485 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.485 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.486 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.490 I llama_model_loader: - type  f32:   37 tensors
0.00.133.493 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.494 I llama_model_loader: - type q6_K:   19 tensors
0.00.207.815 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.251.293 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.925 I llm_load_vocab: special tokens cache size = 5
0.00.272.992 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.273.013 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.273.014 I llm_load_print_meta: arch             = gemma
0.00.273.015 I llm_load_print_meta: vocab type       = SPM
0.00.273.015 I llm_load_print_meta: n_vocab          = 256000
0.00.273.016 I llm_load_print_meta: n_merges         = 0
0.00.273.016 I llm_load_print_meta: vocab_only       = 0
0.00.273.016 I llm_load_print_meta: n_ctx_train      = 8192
0.00.273.016 I llm_load_print_meta: n_embd           = 2048
0.00.273.017 I llm_load_print_meta: n_layer          = 18
0.00.273.032 I llm_load_print_meta: n_head           = 8
0.00.273.034 I llm_load_print_meta: n_head_kv        = 1
0.00.273.034 I llm_load_print_meta: n_rot            = 256
0.00.273.035 I llm_load_print_meta: n_swa            = 0
0.00.273.035 I llm_load_print_meta: n_embd_head_k    = 256
0.00.273.036 I llm_load_print_meta: n_embd_head_v    = 256
0.00.273.037 I llm_load_print_meta: n_gqa            = 8
0.00.273.039 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.273.040 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.273.041 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.273.043 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.273.044 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.273.045 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.273.045 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.273.047 I llm_load_print_meta: n_ff             = 16384
0.00.273.047 I llm_load_print_meta: n_expert         = 0
0.00.273.048 I llm_load_print_meta: n_expert_used    = 0
0.00.273.049 I llm_load_print_meta: causal attn      = 1
0.00.273.050 I llm_load_print_meta: pooling type     = 0
0.00.273.050 I llm_load_print_meta: rope type        = 2
0.00.273.051 I llm_load_print_meta: rope scaling     = linear
0.00.273.053 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.053 I llm_load_print_meta: freq_scale_train = 1
0.00.273.054 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.054 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.055 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.056 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.057 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.057 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.058 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.059 I llm_load_print_meta: model type       = 2B
0.00.273.060 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.273.061 I llm_load_print_meta: model params     = 2.51 B
0.00.273.062 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.273.065 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.065 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.066 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.066 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.067 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.067 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.068 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.068 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.069 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.070 I llm_load_print_meta: max token length = 93
0.00.273.097 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.331.871 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.331.879 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.331.880 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.331.880 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.331.881 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.331.881 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.337.085 I llama_new_context_with_model: n_ctx      = 8192
0.00.337.092 I llama_new_context_with_model: n_batch    = 2048
0.00.337.092 I llama_new_context_with_model: n_ubatch   = 512
0.00.337.093 I llama_new_context_with_model: flash_attn = 0
0.00.337.095 I llama_new_context_with_model: freq_base  = 10000.0
0.00.337.096 I llama_new_context_with_model: freq_scale = 1
0.00.366.961 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.366.976 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.367.079 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.367.961 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.367.969 I llama_new_context_with_model: graph nodes  = 601
0.00.367.969 I llama_new_context_with_model: graph splits = 1
0.00.367.971 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.482 I main: llama threadpool init, n_threads = 4
0.00.452.496 I 
0.00.452.588 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.452.591 I 
0.00.452.637 I sampler seed: 3222960543
0.00.452.647 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.452.650 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.452.651 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.452.651 I 
 seconally.

**Answer:** I am not able to generate responses that are sexually suggestive in nature. [end of text]


0.01.623.546 I llama_perf_sampler_print:    sampling time =       3.59 ms /    23 runs   (    0.16 ms per token,  6412.04 tokens per second)
0.01.623.548 I llama_perf_context_print:        load time =     450.54 ms
0.01.623.549 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.623.551 I llama_perf_context_print:        eval time =    1156.89 ms /    22 runs   (   52.59 ms per token,    19.02 tokens per second)
0.01.623.552 I llama_perf_context_print:       total time =    1171.07 ms /    23 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3969 (190a37d7)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32122.06 ms
main:    total time = 32122.06 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.553 I build: 3969 (190a37d7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.765 I main: llama backend init
0.00.001.863 I main: load the model and apply lora adapter, if any
0.00.022.273 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.285 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.292 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.293 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.297 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.298 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.298 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.299 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.299 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.300 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.305 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.306 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.307 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.308 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.309 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.587 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.131.787 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.138.616 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.138.622 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.138.623 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.138.624 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.138.625 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.138.626 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.138.627 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.138.631 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.138.632 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.138.636 I llama_model_loader: - type  f32:   37 tensors
0.00.138.639 I llama_model_loader: - type q4_K:  108 tensors
0.00.138.640 I llama_model_loader: - type q6_K:   19 tensors
0.00.213.540 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.264.723 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.265.548 I llm_load_vocab: special tokens cache size = 5
0.00.286.875 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.286.899 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.286.900 I llm_load_print_meta: arch             = gemma
0.00.286.901 I llm_load_print_meta: vocab type       = SPM
0.00.286.902 I llm_load_print_meta: n_vocab          = 256000
0.00.286.902 I llm_load_print_meta: n_merges         = 0
0.00.286.902 I llm_load_print_meta: vocab_only       = 0
0.00.286.903 I llm_load_print_meta: n_ctx_train      = 8192
0.00.286.903 I llm_load_print_meta: n_embd           = 2048
0.00.286.903 I llm_load_print_meta: n_layer          = 18
0.00.286.916 I llm_load_print_meta: n_head           = 8
0.00.286.917 I llm_load_print_meta: n_head_kv        = 1
0.00.286.917 I llm_load_print_meta: n_rot            = 256
0.00.286.917 I llm_load_print_meta: n_swa            = 0
0.00.286.918 I llm_load_print_meta: n_embd_head_k    = 256
0.00.286.918 I llm_load_print_meta: n_embd_head_v    = 256
0.00.286.919 I llm_load_print_meta: n_gqa            = 8
0.00.286.920 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.286.921 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.286.922 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.286.924 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.286.924 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.286.924 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.286.925 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.286.925 I llm_load_print_meta: n_ff             = 16384
0.00.286.926 I llm_load_print_meta: n_expert         = 0
0.00.286.926 I llm_load_print_meta: n_expert_used    = 0
0.00.286.926 I llm_load_print_meta: causal attn      = 1
0.00.286.927 I llm_load_print_meta: pooling type     = 0
0.00.286.927 I llm_load_print_meta: rope type        = 2
0.00.286.927 I llm_load_print_meta: rope scaling     = linear
0.00.286.929 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.286.929 I llm_load_print_meta: freq_scale_train = 1
0.00.286.929 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.286.930 I llm_load_print_meta: rope_finetuned   = unknown
0.00.286.930 I llm_load_print_meta: ssm_d_conv       = 0
0.00.286.930 I llm_load_print_meta: ssm_d_inner      = 0
0.00.286.931 I llm_load_print_meta: ssm_d_state      = 0
0.00.286.931 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.286.931 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.286.931 I llm_load_print_meta: model type       = 2B
0.00.286.932 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.286.933 I llm_load_print_meta: model params     = 2.51 B
0.00.286.933 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.286.934 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.286.934 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.286.935 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.286.935 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.286.935 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.286.935 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.286.936 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.286.936 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.286.937 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.286.937 I llm_load_print_meta: max token length = 93
0.00.286.968 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.345.179 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.350.320 I llama_new_context_with_model: n_ctx      = 8192
0.00.350.327 I llama_new_context_with_model: n_batch    = 2048
0.00.350.328 I llama_new_context_with_model: n_ubatch   = 512
0.00.350.328 I llama_new_context_with_model: flash_attn = 0
0.00.350.331 I llama_new_context_with_model: freq_base  = 10000.0
0.00.350.331 I llama_new_context_with_model: freq_scale = 1
0.00.380.085 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.380.104 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.380.204 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.381.082 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.381.089 I llama_new_context_with_model: graph nodes  = 601
0.00.381.090 I llama_new_context_with_model: graph splits = 1
0.00.381.092 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.462.068 I main: llama threadpool init, n_threads = 4
0.00.462.081 I 
0.00.462.178 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.462.182 I 
0.00.462.229 I sampler seed: 2260753164
0.00.462.240 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.462.243 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.462.243 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.462.244 I 
 increamically and sarcastically.

I am unable to generate a response as the prompt requests me to express emotions or sarcasms, which is beyond my capabilities.

0.02.098.370 I llama_perf_sampler_print:    sampling time =       4.80 ms /    33 runs   (    0.15 ms per token,  6875.00 tokens per second)
0.02.098.372 I llama_perf_context_print:        load time =     460.18 ms
0.02.098.373 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.098.374 I llama_perf_context_print:        eval time =    1616.70 ms /    32 runs   (   50.52 ms per token,    19.79 tokens per second)
0.02.098.375 I llama_perf_context_print:       total time =    1636.31 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.796s
user	8m12.926s
sys	0m7.090s
