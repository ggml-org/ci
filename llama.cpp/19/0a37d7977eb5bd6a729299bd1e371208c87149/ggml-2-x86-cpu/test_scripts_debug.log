+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.703 I build: 3969 (190a37d7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.905 I main: llama backend init
0.00.002.868 I main: load the model and apply lora adapter, if any
0.00.025.119 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.340 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.438 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.451 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.453 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.458 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.459 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.460 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.461 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.463 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.464 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.472 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.476 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.477 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.478 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.479 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.907 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.253.029 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.629 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.640 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.641 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.642 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.643 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.644 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.645 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.649 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.651 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.653 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.654 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.271.655 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.665 I llama_model_loader: - type  f32:   37 tensors
0.00.271.670 I llama_model_loader: - type q8_0:  127 tensors
0.00.460.595 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.529.054 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.530.115 I llm_load_vocab: special tokens cache size = 5
0.00.633.005 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.633.078 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.633.078 I llm_load_print_meta: arch             = gemma
0.00.633.079 I llm_load_print_meta: vocab type       = SPM
0.00.633.080 I llm_load_print_meta: n_vocab          = 256000
0.00.633.082 I llm_load_print_meta: n_merges         = 0
0.00.633.083 I llm_load_print_meta: vocab_only       = 0
0.00.633.083 I llm_load_print_meta: n_ctx_train      = 8192
0.00.633.084 I llm_load_print_meta: n_embd           = 2048
0.00.633.084 I llm_load_print_meta: n_layer          = 18
0.00.633.149 I llm_load_print_meta: n_head           = 8
0.00.633.156 I llm_load_print_meta: n_head_kv        = 1
0.00.633.156 I llm_load_print_meta: n_rot            = 256
0.00.633.157 I llm_load_print_meta: n_swa            = 0
0.00.633.157 I llm_load_print_meta: n_embd_head_k    = 256
0.00.633.158 I llm_load_print_meta: n_embd_head_v    = 256
0.00.633.162 I llm_load_print_meta: n_gqa            = 8
0.00.633.167 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.633.171 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.633.173 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.633.175 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.633.175 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.633.176 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.633.176 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.633.181 I llm_load_print_meta: n_ff             = 16384
0.00.633.181 I llm_load_print_meta: n_expert         = 0
0.00.633.182 I llm_load_print_meta: n_expert_used    = 0
0.00.633.182 I llm_load_print_meta: causal attn      = 1
0.00.633.182 I llm_load_print_meta: pooling type     = 0
0.00.633.183 I llm_load_print_meta: rope type        = 2
0.00.633.183 I llm_load_print_meta: rope scaling     = linear
0.00.633.184 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.633.185 I llm_load_print_meta: freq_scale_train = 1
0.00.633.185 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.633.186 I llm_load_print_meta: rope_finetuned   = unknown
0.00.633.186 I llm_load_print_meta: ssm_d_conv       = 0
0.00.633.186 I llm_load_print_meta: ssm_d_inner      = 0
0.00.633.186 I llm_load_print_meta: ssm_d_state      = 0
0.00.633.187 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.633.187 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.633.188 I llm_load_print_meta: model type       = 2B
0.00.633.188 I llm_load_print_meta: model ftype      = Q8_0
0.00.633.189 I llm_load_print_meta: model params     = 2.51 B
0.00.633.190 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.633.190 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.633.191 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.633.191 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.633.192 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.633.192 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.633.193 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.633.193 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.633.199 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.633.200 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.633.201 I llm_load_print_meta: max token length = 93
0.00.633.368 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.734.793 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.734.802 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.734.803 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.734.804 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.734.805 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.734.805 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.740.422 I llama_new_context_with_model: n_ctx      = 8192
0.00.740.429 I llama_new_context_with_model: n_batch    = 2048
0.00.740.430 I llama_new_context_with_model: n_ubatch   = 512
0.00.740.430 I llama_new_context_with_model: flash_attn = 0
0.00.740.433 I llama_new_context_with_model: freq_base  = 10000.0
0.00.740.433 I llama_new_context_with_model: freq_scale = 1
0.00.771.760 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.771.804 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.771.919 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.773.356 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.773.361 I llama_new_context_with_model: graph nodes  = 601
0.00.773.362 I llama_new_context_with_model: graph splits = 1
0.00.773.378 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.384.984 I main: llama threadpool init, n_threads = 4
0.01.384.998 I 
0.01.385.113 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.385.117 I 
0.01.385.308 I sampler seed: 181220628
0.01.385.320 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.385.327 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.385.328 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.385.328 I 
 increadibly, and her hair turned white.

This passage describes a scene from a story. It provides a brief overview of the situation, but it lacks specific

0.14.811.749 I llama_perf_sampler_print:    sampling time =      49.95 ms /    33 runs   (    1.51 ms per token,   660.62 tokens per second)
0.14.811.753 I llama_perf_context_print:        load time =    1382.02 ms
0.14.811.754 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.811.755 I llama_perf_context_print:        eval time =   13330.56 ms /    32 runs   (  416.58 ms per token,     2.40 tokens per second)
0.14.811.756 I llama_perf_context_print:       total time =   13426.78 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.648 I build: 3969 (190a37d7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.850 I main: llama backend init
0.00.002.803 I main: load the model and apply lora adapter, if any
0.00.024.918 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.013 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.028 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.029 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.033 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.035 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.036 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.038 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.039 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.047 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.055 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.056 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.057 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.059 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.060 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.350 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.252.338 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.662 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.672 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.673 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.674 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.675 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.676 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.677 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.681 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.692 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.694 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.270.695 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.270.696 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.270.706 I llama_model_loader: - type  f32:   37 tensors
0.00.270.710 I llama_model_loader: - type q8_0:  127 tensors
0.00.478.296 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.548.838 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.549.821 I llm_load_vocab: special tokens cache size = 5
0.00.645.401 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.645.477 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.645.478 I llm_load_print_meta: arch             = gemma
0.00.645.478 I llm_load_print_meta: vocab type       = SPM
0.00.645.479 I llm_load_print_meta: n_vocab          = 256000
0.00.645.482 I llm_load_print_meta: n_merges         = 0
0.00.645.482 I llm_load_print_meta: vocab_only       = 0
0.00.645.482 I llm_load_print_meta: n_ctx_train      = 8192
0.00.645.483 I llm_load_print_meta: n_embd           = 2048
0.00.645.483 I llm_load_print_meta: n_layer          = 18
0.00.645.549 I llm_load_print_meta: n_head           = 8
0.00.645.556 I llm_load_print_meta: n_head_kv        = 1
0.00.645.557 I llm_load_print_meta: n_rot            = 256
0.00.645.557 I llm_load_print_meta: n_swa            = 0
0.00.645.558 I llm_load_print_meta: n_embd_head_k    = 256
0.00.645.558 I llm_load_print_meta: n_embd_head_v    = 256
0.00.645.563 I llm_load_print_meta: n_gqa            = 8
0.00.645.567 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.645.572 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.645.574 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.645.574 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.645.575 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.645.575 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.645.576 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.645.580 I llm_load_print_meta: n_ff             = 16384
0.00.645.581 I llm_load_print_meta: n_expert         = 0
0.00.645.581 I llm_load_print_meta: n_expert_used    = 0
0.00.645.582 I llm_load_print_meta: causal attn      = 1
0.00.645.582 I llm_load_print_meta: pooling type     = 0
0.00.645.582 I llm_load_print_meta: rope type        = 2
0.00.645.583 I llm_load_print_meta: rope scaling     = linear
0.00.645.584 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.645.585 I llm_load_print_meta: freq_scale_train = 1
0.00.645.585 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.645.585 I llm_load_print_meta: rope_finetuned   = unknown
0.00.645.586 I llm_load_print_meta: ssm_d_conv       = 0
0.00.645.586 I llm_load_print_meta: ssm_d_inner      = 0
0.00.645.586 I llm_load_print_meta: ssm_d_state      = 0
0.00.645.586 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.645.587 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.645.588 I llm_load_print_meta: model type       = 2B
0.00.645.589 I llm_load_print_meta: model ftype      = Q8_0
0.00.645.590 I llm_load_print_meta: model params     = 2.51 B
0.00.645.590 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.645.591 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.645.591 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.645.592 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.645.592 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.645.592 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.645.593 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.645.617 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.645.624 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.645.625 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.645.626 I llm_load_print_meta: max token length = 93
0.00.645.795 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.740.773 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.746.511 I llama_new_context_with_model: n_ctx      = 8192
0.00.746.520 I llama_new_context_with_model: n_batch    = 2048
0.00.746.520 I llama_new_context_with_model: n_ubatch   = 512
0.00.746.521 I llama_new_context_with_model: flash_attn = 0
0.00.746.523 I llama_new_context_with_model: freq_base  = 10000.0
0.00.746.524 I llama_new_context_with_model: freq_scale = 1
0.00.777.263 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.777.309 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.777.426 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.778.816 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.778.821 I llama_new_context_with_model: graph nodes  = 601
0.00.778.821 I llama_new_context_with_model: graph splits = 1
0.00.778.837 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.390.670 I main: llama threadpool init, n_threads = 4
0.01.390.683 I 
0.01.390.801 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.390.805 I 
0.01.390.986 I sampler seed: 1985062231
0.01.390.997 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.391.005 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.391.006 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.391.006 I 
 increasities. 

I cannot find the requested information in the provided context. [end of text]


0.08.624.341 I llama_perf_sampler_print:    sampling time =      26.14 ms /    18 runs   (    1.45 ms per token,   688.71 tokens per second)
0.08.624.345 I llama_perf_context_print:        load time =    1387.78 ms
0.08.624.346 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.624.358 I llama_perf_context_print:        eval time =    7182.15 ms /    17 runs   (  422.48 ms per token,     2.37 tokens per second)
0.08.624.360 I llama_perf_context_print:       total time =    7233.68 ms /    18 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.637 I build: 3969 (190a37d7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.850 I main: llama backend init
0.00.002.798 I main: load the model and apply lora adapter, if any
0.00.024.500 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.708 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.804 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.816 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.818 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.823 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.828 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.830 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.831 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.833 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.835 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.843 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.846 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.848 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.849 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.851 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.152.321 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.070 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.413 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.423 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.424 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.425 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.426 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.428 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.429 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.433 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.434 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.435 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.436 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.269.437 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.446 I llama_model_loader: - type  f32:   37 tensors
0.00.269.451 I llama_model_loader: - type q8_0:  127 tensors
0.00.456.991 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.526.113 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.527.266 I llm_load_vocab: special tokens cache size = 5
0.00.622.447 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.622.519 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.622.520 I llm_load_print_meta: arch             = gemma
0.00.622.521 I llm_load_print_meta: vocab type       = SPM
0.00.622.522 I llm_load_print_meta: n_vocab          = 256000
0.00.622.524 I llm_load_print_meta: n_merges         = 0
0.00.622.525 I llm_load_print_meta: vocab_only       = 0
0.00.622.526 I llm_load_print_meta: n_ctx_train      = 8192
0.00.622.526 I llm_load_print_meta: n_embd           = 2048
0.00.622.526 I llm_load_print_meta: n_layer          = 18
0.00.622.592 I llm_load_print_meta: n_head           = 8
0.00.622.599 I llm_load_print_meta: n_head_kv        = 1
0.00.622.600 I llm_load_print_meta: n_rot            = 256
0.00.622.600 I llm_load_print_meta: n_swa            = 0
0.00.622.601 I llm_load_print_meta: n_embd_head_k    = 256
0.00.622.601 I llm_load_print_meta: n_embd_head_v    = 256
0.00.622.606 I llm_load_print_meta: n_gqa            = 8
0.00.622.610 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.622.615 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.622.616 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.622.618 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.622.619 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.622.619 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.622.620 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.622.627 I llm_load_print_meta: n_ff             = 16384
0.00.622.629 I llm_load_print_meta: n_expert         = 0
0.00.622.630 I llm_load_print_meta: n_expert_used    = 0
0.00.622.631 I llm_load_print_meta: causal attn      = 1
0.00.622.632 I llm_load_print_meta: pooling type     = 0
0.00.622.633 I llm_load_print_meta: rope type        = 2
0.00.622.634 I llm_load_print_meta: rope scaling     = linear
0.00.622.636 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.622.637 I llm_load_print_meta: freq_scale_train = 1
0.00.622.650 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.622.650 I llm_load_print_meta: rope_finetuned   = unknown
0.00.622.652 I llm_load_print_meta: ssm_d_conv       = 0
0.00.622.653 I llm_load_print_meta: ssm_d_inner      = 0
0.00.622.653 I llm_load_print_meta: ssm_d_state      = 0
0.00.622.655 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.622.655 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.622.656 I llm_load_print_meta: model type       = 2B
0.00.622.657 I llm_load_print_meta: model ftype      = Q8_0
0.00.622.658 I llm_load_print_meta: model params     = 2.51 B
0.00.622.660 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.622.660 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.622.662 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.622.662 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.622.663 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.622.664 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.622.665 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.622.665 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.622.674 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.622.675 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.622.677 I llm_load_print_meta: max token length = 93
0.00.622.852 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.699.959 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.699.972 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.699.973 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.699.973 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.699.974 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.699.975 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.705.957 I llama_new_context_with_model: n_ctx      = 8192
0.00.705.967 I llama_new_context_with_model: n_batch    = 2048
0.00.705.967 I llama_new_context_with_model: n_ubatch   = 512
0.00.705.968 I llama_new_context_with_model: flash_attn = 0
0.00.705.971 I llama_new_context_with_model: freq_base  = 10000.0
0.00.705.972 I llama_new_context_with_model: freq_scale = 1
0.00.736.970 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.737.015 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.737.129 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.738.543 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.738.548 I llama_new_context_with_model: graph nodes  = 601
0.00.738.548 I llama_new_context_with_model: graph splits = 1
0.00.738.565 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.352.318 I main: llama threadpool init, n_threads = 4
0.01.352.331 I 
0.01.352.452 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.352.456 I 
0.01.352.651 I sampler seed: 481521263
0.01.352.664 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.352.672 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.352.676 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.352.677 I 
 increasities on a cold winter night. [end of text]


0.05.137.739 I llama_perf_sampler_print:    sampling time =      13.93 ms /    10 runs   (    1.39 ms per token,   717.98 tokens per second)
0.05.137.742 I llama_perf_context_print:        load time =    1349.42 ms
0.05.137.744 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.05.137.745 I llama_perf_context_print:        eval time =    3757.27 ms /     9 runs   (  417.47 ms per token,     2.40 tokens per second)
0.05.137.759 I llama_perf_context_print:       total time =    3785.43 ms /    10 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.675 I build: 3969 (190a37d7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.861 I main: llama backend init
0.00.002.790 I main: load the model and apply lora adapter, if any
0.00.024.350 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.554 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.647 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.660 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.661 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.666 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.670 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.671 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.672 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.673 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.674 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.681 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.682 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.683 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.685 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.686 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.787 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.493 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.269.737 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.269.749 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.269.750 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.269.751 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.269.752 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.269.753 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.269.755 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.269.759 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.269.760 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.269.761 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.269.762 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.269.764 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.269.774 I llama_model_loader: - type  f32:   37 tensors
0.00.269.777 I llama_model_loader: - type q8_0:  127 tensors
0.00.449.821 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.517.812 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.518.851 I llm_load_vocab: special tokens cache size = 5
0.00.614.303 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.614.377 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.614.378 I llm_load_print_meta: arch             = gemma
0.00.614.379 I llm_load_print_meta: vocab type       = SPM
0.00.614.379 I llm_load_print_meta: n_vocab          = 256000
0.00.614.382 I llm_load_print_meta: n_merges         = 0
0.00.614.382 I llm_load_print_meta: vocab_only       = 0
0.00.614.383 I llm_load_print_meta: n_ctx_train      = 8192
0.00.614.384 I llm_load_print_meta: n_embd           = 2048
0.00.614.384 I llm_load_print_meta: n_layer          = 18
0.00.614.448 I llm_load_print_meta: n_head           = 8
0.00.614.455 I llm_load_print_meta: n_head_kv        = 1
0.00.614.455 I llm_load_print_meta: n_rot            = 256
0.00.614.455 I llm_load_print_meta: n_swa            = 0
0.00.614.456 I llm_load_print_meta: n_embd_head_k    = 256
0.00.614.456 I llm_load_print_meta: n_embd_head_v    = 256
0.00.614.460 I llm_load_print_meta: n_gqa            = 8
0.00.614.487 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.614.494 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.614.496 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.614.498 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.614.498 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.614.498 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.614.499 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.614.508 I llm_load_print_meta: n_ff             = 16384
0.00.614.508 I llm_load_print_meta: n_expert         = 0
0.00.614.509 I llm_load_print_meta: n_expert_used    = 0
0.00.614.510 I llm_load_print_meta: causal attn      = 1
0.00.614.511 I llm_load_print_meta: pooling type     = 0
0.00.614.511 I llm_load_print_meta: rope type        = 2
0.00.614.518 I llm_load_print_meta: rope scaling     = linear
0.00.614.520 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.614.520 I llm_load_print_meta: freq_scale_train = 1
0.00.614.521 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.614.522 I llm_load_print_meta: rope_finetuned   = unknown
0.00.614.522 I llm_load_print_meta: ssm_d_conv       = 0
0.00.614.522 I llm_load_print_meta: ssm_d_inner      = 0
0.00.614.523 I llm_load_print_meta: ssm_d_state      = 0
0.00.614.523 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.614.523 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.614.524 I llm_load_print_meta: model type       = 2B
0.00.614.525 I llm_load_print_meta: model ftype      = Q8_0
0.00.614.535 I llm_load_print_meta: model params     = 2.51 B
0.00.614.543 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.614.551 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.614.559 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.614.560 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.614.561 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.614.561 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.614.562 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.614.563 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.614.569 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.614.570 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.614.570 I llm_load_print_meta: max token length = 93
0.00.614.743 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.686.291 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.686.301 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.691.746 I llama_new_context_with_model: n_ctx      = 8192
0.00.691.753 I llama_new_context_with_model: n_batch    = 2048
0.00.691.753 I llama_new_context_with_model: n_ubatch   = 512
0.00.691.754 I llama_new_context_with_model: flash_attn = 0
0.00.691.756 I llama_new_context_with_model: freq_base  = 10000.0
0.00.691.757 I llama_new_context_with_model: freq_scale = 1
0.00.720.598 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.720.641 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.720.759 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.722.101 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.722.106 I llama_new_context_with_model: graph nodes  = 601
0.00.722.107 I llama_new_context_with_model: graph splits = 1
0.00.722.122 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.334.382 I main: llama threadpool init, n_threads = 4
0.01.334.396 I 
0.01.334.511 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.334.515 I 
0.01.334.697 I sampler seed: 3626727635
0.01.334.708 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.334.715 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.334.717 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.334.717 I 
 increably! [end of text]


0.03.017.845 I llama_perf_sampler_print:    sampling time =       6.24 ms /     5 runs   (    1.25 ms per token,   801.41 tokens per second)
0.03.017.849 I llama_perf_context_print:        load time =    1331.50 ms
0.03.017.850 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.017.851 I llama_perf_context_print:        eval time =    1669.82 ms /     4 runs   (  417.46 ms per token,     2.40 tokens per second)
0.03.017.852 I llama_perf_context_print:       total time =    1683.47 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m41.420s
user	1m57.279s
sys	0m9.637s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3969 (190a37d7)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199244.29 ms
main:    total time = 199244.29 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.672 I build: 3969 (190a37d7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.862 I main: llama backend init
0.00.002.800 I main: load the model and apply lora adapter, if any
0.00.024.951 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.168 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.263 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.275 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.276 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.281 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.285 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.286 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.287 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.288 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.289 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.296 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.297 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.299 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.300 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.309 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.154.011 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.254.026 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.311 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.322 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.323 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.324 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.325 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.326 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.327 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.331 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.332 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.333 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.334 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.272.335 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.344 I llama_model_loader: - type  f32:   37 tensors
0.00.272.347 I llama_model_loader: - type q4_K:  108 tensors
0.00.272.348 I llama_model_loader: - type q6_K:   19 tensors
0.00.461.816 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.528.763 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.529.724 I llm_load_vocab: special tokens cache size = 5
0.00.629.379 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.629.447 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.629.449 I llm_load_print_meta: arch             = gemma
0.00.629.449 I llm_load_print_meta: vocab type       = SPM
0.00.629.450 I llm_load_print_meta: n_vocab          = 256000
0.00.629.453 I llm_load_print_meta: n_merges         = 0
0.00.629.453 I llm_load_print_meta: vocab_only       = 0
0.00.629.453 I llm_load_print_meta: n_ctx_train      = 8192
0.00.629.454 I llm_load_print_meta: n_embd           = 2048
0.00.629.454 I llm_load_print_meta: n_layer          = 18
0.00.629.517 I llm_load_print_meta: n_head           = 8
0.00.629.524 I llm_load_print_meta: n_head_kv        = 1
0.00.629.525 I llm_load_print_meta: n_rot            = 256
0.00.629.525 I llm_load_print_meta: n_swa            = 0
0.00.629.526 I llm_load_print_meta: n_embd_head_k    = 256
0.00.629.527 I llm_load_print_meta: n_embd_head_v    = 256
0.00.629.531 I llm_load_print_meta: n_gqa            = 8
0.00.629.536 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.629.541 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.629.542 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.629.543 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.629.544 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.629.544 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.629.545 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.629.550 I llm_load_print_meta: n_ff             = 16384
0.00.629.552 I llm_load_print_meta: n_expert         = 0
0.00.629.552 I llm_load_print_meta: n_expert_used    = 0
0.00.629.553 I llm_load_print_meta: causal attn      = 1
0.00.629.554 I llm_load_print_meta: pooling type     = 0
0.00.629.554 I llm_load_print_meta: rope type        = 2
0.00.629.554 I llm_load_print_meta: rope scaling     = linear
0.00.629.557 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.629.558 I llm_load_print_meta: freq_scale_train = 1
0.00.629.558 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.629.559 I llm_load_print_meta: rope_finetuned   = unknown
0.00.629.570 I llm_load_print_meta: ssm_d_conv       = 0
0.00.629.571 I llm_load_print_meta: ssm_d_inner      = 0
0.00.629.572 I llm_load_print_meta: ssm_d_state      = 0
0.00.629.573 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.629.577 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.629.578 I llm_load_print_meta: model type       = 2B
0.00.629.582 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.629.586 I llm_load_print_meta: model params     = 2.51 B
0.00.629.587 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.629.587 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.629.588 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.629.588 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.629.588 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.629.589 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.629.589 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.629.589 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.629.597 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.629.598 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.629.599 I llm_load_print_meta: max token length = 93
0.00.629.759 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.690.502 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.690.510 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.690.511 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.690.512 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.690.512 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.690.513 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.696.063 I llama_new_context_with_model: n_ctx      = 8192
0.00.696.069 I llama_new_context_with_model: n_batch    = 2048
0.00.696.069 I llama_new_context_with_model: n_ubatch   = 512
0.00.696.070 I llama_new_context_with_model: flash_attn = 0
0.00.696.072 I llama_new_context_with_model: freq_base  = 10000.0
0.00.696.073 I llama_new_context_with_model: freq_scale = 1
0.00.725.576 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.725.618 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.725.733 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.727.122 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.727.128 I llama_new_context_with_model: graph nodes  = 601
0.00.727.129 I llama_new_context_with_model: graph splits = 1
0.00.727.145 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.317.245 I main: llama threadpool init, n_threads = 4
0.01.317.260 I 
0.01.317.371 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.317.375 I 
0.01.317.555 I sampler seed: 1279797398
0.01.317.566 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.317.582 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.317.586 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.317.587 I 
 increasities in the process of respiration, which result in the production of carbon dioxide.

**a)** Explain the process of glycolysis in detail.
**

0.12.280.091 I llama_perf_sampler_print:    sampling time =      49.12 ms /    33 runs   (    1.49 ms per token,   671.77 tokens per second)
0.12.280.094 I llama_perf_context_print:        load time =    1314.36 ms
0.12.280.095 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.280.110 I llama_perf_context_print:        eval time =   10867.78 ms /    32 runs   (  339.62 ms per token,     2.94 tokens per second)
0.12.280.111 I llama_perf_context_print:       total time =   10962.86 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3969 (190a37d7)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199210.48 ms
main:    total time = 199210.48 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.698 I build: 3969 (190a37d7) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.908 I main: llama backend init
0.00.002.857 I main: load the model and apply lora adapter, if any
0.00.024.506 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.606 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.622 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.627 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.633 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.636 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.640 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.642 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.647 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.652 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.660 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.662 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.664 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.666 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.668 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.932 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.251.878 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.270.243 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.270.252 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.270.253 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.270.255 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.270.256 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.270.257 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.270.258 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.270.262 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.270.263 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.270.272 I llama_model_loader: - type  f32:   37 tensors
0.00.270.276 I llama_model_loader: - type q4_K:  108 tensors
0.00.270.276 I llama_model_loader: - type q6_K:   19 tensors
0.00.439.156 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.501.177 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.502.142 I llm_load_vocab: special tokens cache size = 5
0.00.602.870 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.602.941 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.602.942 I llm_load_print_meta: arch             = gemma
0.00.602.943 I llm_load_print_meta: vocab type       = SPM
0.00.602.943 I llm_load_print_meta: n_vocab          = 256000
0.00.602.946 I llm_load_print_meta: n_merges         = 0
0.00.602.946 I llm_load_print_meta: vocab_only       = 0
0.00.602.946 I llm_load_print_meta: n_ctx_train      = 8192
0.00.602.947 I llm_load_print_meta: n_embd           = 2048
0.00.602.947 I llm_load_print_meta: n_layer          = 18
0.00.603.012 I llm_load_print_meta: n_head           = 8
0.00.603.021 I llm_load_print_meta: n_head_kv        = 1
0.00.603.022 I llm_load_print_meta: n_rot            = 256
0.00.603.023 I llm_load_print_meta: n_swa            = 0
0.00.603.025 I llm_load_print_meta: n_embd_head_k    = 256
0.00.603.026 I llm_load_print_meta: n_embd_head_v    = 256
0.00.603.033 I llm_load_print_meta: n_gqa            = 8
0.00.603.039 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.603.050 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.603.052 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.603.054 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.603.055 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.603.055 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.603.056 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.603.064 I llm_load_print_meta: n_ff             = 16384
0.00.603.064 I llm_load_print_meta: n_expert         = 0
0.00.603.066 I llm_load_print_meta: n_expert_used    = 0
0.00.603.066 I llm_load_print_meta: causal attn      = 1
0.00.603.067 I llm_load_print_meta: pooling type     = 0
0.00.603.068 I llm_load_print_meta: rope type        = 2
0.00.603.069 I llm_load_print_meta: rope scaling     = linear
0.00.603.074 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.603.075 I llm_load_print_meta: freq_scale_train = 1
0.00.603.076 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.603.076 I llm_load_print_meta: rope_finetuned   = unknown
0.00.603.077 I llm_load_print_meta: ssm_d_conv       = 0
0.00.603.077 I llm_load_print_meta: ssm_d_inner      = 0
0.00.603.078 I llm_load_print_meta: ssm_d_state      = 0
0.00.603.079 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.603.079 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.603.080 I llm_load_print_meta: model type       = 2B
0.00.603.081 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.603.084 I llm_load_print_meta: model params     = 2.51 B
0.00.603.085 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.603.086 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.603.087 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.603.090 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.603.091 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.603.092 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.603.092 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.603.093 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.603.100 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.603.102 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.603.103 I llm_load_print_meta: max token length = 93
0.00.603.280 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.662.385 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.668.012 I llama_new_context_with_model: n_ctx      = 8192
0.00.668.020 I llama_new_context_with_model: n_batch    = 2048
0.00.668.020 I llama_new_context_with_model: n_ubatch   = 512
0.00.668.021 I llama_new_context_with_model: flash_attn = 0
0.00.668.023 I llama_new_context_with_model: freq_base  = 10000.0
0.00.668.024 I llama_new_context_with_model: freq_scale = 1
0.00.697.629 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.697.675 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.697.789 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.699.128 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.699.133 I llama_new_context_with_model: graph nodes  = 601
0.00.699.134 I llama_new_context_with_model: graph splits = 1
0.00.699.151 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.279.110 I main: llama threadpool init, n_threads = 4
0.01.279.124 I 
0.01.279.248 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.279.252 I 
0.01.279.449 I sampler seed: 730166483
0.01.279.461 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.279.468 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.279.469 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.279.471 I 
 fufilling music.

I'm not sure what genre this music is, but it has a calming and soothing effect on me. I'm hoping you

0.12.234.603 I llama_perf_sampler_print:    sampling time =      49.14 ms /    33 runs   (    1.49 ms per token,   671.51 tokens per second)
0.12.234.606 I llama_perf_context_print:        load time =    1276.16 ms
0.12.234.608 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.234.609 I llama_perf_context_print:        eval time =   10860.26 ms /    32 runs   (  339.38 ms per token,     2.95 tokens per second)
0.12.234.623 I llama_perf_context_print:       total time =   10955.50 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m5.846s
user	50m10.950s
sys	0m6.421s
