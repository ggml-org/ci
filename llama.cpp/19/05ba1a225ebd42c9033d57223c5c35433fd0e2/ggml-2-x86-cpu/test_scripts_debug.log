+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.646 I build: 3964 (1905ba1a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.865 I main: llama backend init
0.00.002.805 I main: load the model and apply lora adapter, if any
0.00.024.738 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.937 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.027 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.039 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.041 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.045 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.046 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.047 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.048 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.049 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.050 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.058 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.059 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.060 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.061 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.062 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.156.184 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.256.602 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.274.872 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.274.880 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.274.881 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.274.882 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.274.883 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.274.884 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.274.885 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.274.889 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.274.890 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.274.891 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.274.892 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.274.893 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.274.902 I llama_model_loader: - type  f32:   37 tensors
0.00.274.906 I llama_model_loader: - type q8_0:  127 tensors
0.00.453.751 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.515.984 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.516.939 I llm_load_vocab: special tokens cache size = 5
0.00.616.169 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.616.240 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.616.241 I llm_load_print_meta: arch             = gemma
0.00.616.242 I llm_load_print_meta: vocab type       = SPM
0.00.616.243 I llm_load_print_meta: n_vocab          = 256000
0.00.616.245 I llm_load_print_meta: n_merges         = 0
0.00.616.246 I llm_load_print_meta: vocab_only       = 0
0.00.616.246 I llm_load_print_meta: n_ctx_train      = 8192
0.00.616.246 I llm_load_print_meta: n_embd           = 2048
0.00.616.247 I llm_load_print_meta: n_layer          = 18
0.00.616.311 I llm_load_print_meta: n_head           = 8
0.00.616.318 I llm_load_print_meta: n_head_kv        = 1
0.00.616.320 I llm_load_print_meta: n_rot            = 256
0.00.616.320 I llm_load_print_meta: n_swa            = 0
0.00.616.321 I llm_load_print_meta: n_embd_head_k    = 256
0.00.616.321 I llm_load_print_meta: n_embd_head_v    = 256
0.00.616.326 I llm_load_print_meta: n_gqa            = 8
0.00.616.330 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.616.338 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.616.341 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.616.343 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.616.343 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.616.343 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.616.344 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.616.349 I llm_load_print_meta: n_ff             = 16384
0.00.616.350 I llm_load_print_meta: n_expert         = 0
0.00.616.350 I llm_load_print_meta: n_expert_used    = 0
0.00.616.352 I llm_load_print_meta: causal attn      = 1
0.00.616.352 I llm_load_print_meta: pooling type     = 0
0.00.616.352 I llm_load_print_meta: rope type        = 2
0.00.616.353 I llm_load_print_meta: rope scaling     = linear
0.00.616.355 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.616.356 I llm_load_print_meta: freq_scale_train = 1
0.00.616.365 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.616.366 I llm_load_print_meta: rope_finetuned   = unknown
0.00.616.367 I llm_load_print_meta: ssm_d_conv       = 0
0.00.616.367 I llm_load_print_meta: ssm_d_inner      = 0
0.00.616.368 I llm_load_print_meta: ssm_d_state      = 0
0.00.616.368 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.616.369 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.616.370 I llm_load_print_meta: model type       = 2B
0.00.616.371 I llm_load_print_meta: model ftype      = Q8_0
0.00.616.371 I llm_load_print_meta: model params     = 2.51 B
0.00.616.372 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.616.373 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.616.373 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.616.374 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.616.375 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.616.375 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.616.376 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.616.377 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.616.382 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.616.383 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.616.384 I llm_load_print_meta: max token length = 93
0.00.616.552 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.719.278 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.719.288 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.719.289 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.719.289 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.719.290 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.719.291 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.725.088 I llama_new_context_with_model: n_ctx      = 8192
0.00.725.096 I llama_new_context_with_model: n_batch    = 2048
0.00.725.096 I llama_new_context_with_model: n_ubatch   = 512
0.00.725.097 I llama_new_context_with_model: flash_attn = 0
0.00.725.099 I llama_new_context_with_model: freq_base  = 10000.0
0.00.725.100 I llama_new_context_with_model: freq_scale = 1
0.00.755.573 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.755.619 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.755.735 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.757.173 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.757.178 I llama_new_context_with_model: graph nodes  = 601
0.00.757.178 I llama_new_context_with_model: graph splits = 1
0.00.757.195 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.367.011 I main: llama threadpool init, n_threads = 4
0.01.367.023 I 
0.01.367.125 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.367.129 I 
0.01.367.309 I sampler seed: 825672323
0.01.367.320 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.367.327 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.367.328 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.367.328 I 
 increably. I am an AI language model, and I am trained to understand and respond to your queries.

I am unable to physically interact with you,

0.14.794.112 I llama_perf_sampler_print:    sampling time =      49.11 ms /    33 runs   (    1.49 ms per token,   671.92 tokens per second)
0.14.794.126 I llama_perf_context_print:        load time =    1364.12 ms
0.14.794.128 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.794.130 I llama_perf_context_print:        eval time =   13332.51 ms /    32 runs   (  416.64 ms per token,     2.40 tokens per second)
0.14.794.131 I llama_perf_context_print:       total time =   13427.11 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.643 I build: 3964 (1905ba1a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.865 I main: llama backend init
0.00.002.806 I main: load the model and apply lora adapter, if any
0.00.025.290 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.025.412 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.428 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.431 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.440 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.442 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.444 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.446 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.448 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.450 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.460 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.465 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.467 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.469 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.471 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.157.882 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.258.291 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.276.735 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.276.745 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.276.747 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.276.748 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.276.749 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.276.750 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.276.752 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.276.755 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.276.757 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.276.760 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.276.761 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.276.762 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.276.773 I llama_model_loader: - type  f32:   37 tensors
0.00.276.778 I llama_model_loader: - type q8_0:  127 tensors
0.00.459.636 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.530.572 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.531.606 I llm_load_vocab: special tokens cache size = 5
0.00.641.672 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.641.745 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.641.749 I llm_load_print_meta: arch             = gemma
0.00.641.750 I llm_load_print_meta: vocab type       = SPM
0.00.641.751 I llm_load_print_meta: n_vocab          = 256000
0.00.641.754 I llm_load_print_meta: n_merges         = 0
0.00.641.754 I llm_load_print_meta: vocab_only       = 0
0.00.641.755 I llm_load_print_meta: n_ctx_train      = 8192
0.00.641.755 I llm_load_print_meta: n_embd           = 2048
0.00.641.756 I llm_load_print_meta: n_layer          = 18
0.00.641.819 I llm_load_print_meta: n_head           = 8
0.00.641.828 I llm_load_print_meta: n_head_kv        = 1
0.00.641.829 I llm_load_print_meta: n_rot            = 256
0.00.641.829 I llm_load_print_meta: n_swa            = 0
0.00.641.830 I llm_load_print_meta: n_embd_head_k    = 256
0.00.641.830 I llm_load_print_meta: n_embd_head_v    = 256
0.00.641.835 I llm_load_print_meta: n_gqa            = 8
0.00.641.840 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.641.845 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.641.846 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.641.848 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.641.848 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.641.850 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.641.850 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.641.855 I llm_load_print_meta: n_ff             = 16384
0.00.641.856 I llm_load_print_meta: n_expert         = 0
0.00.641.857 I llm_load_print_meta: n_expert_used    = 0
0.00.641.858 I llm_load_print_meta: causal attn      = 1
0.00.641.859 I llm_load_print_meta: pooling type     = 0
0.00.641.861 I llm_load_print_meta: rope type        = 2
0.00.641.861 I llm_load_print_meta: rope scaling     = linear
0.00.641.864 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.641.868 I llm_load_print_meta: freq_scale_train = 1
0.00.641.868 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.641.869 I llm_load_print_meta: rope_finetuned   = unknown
0.00.641.869 I llm_load_print_meta: ssm_d_conv       = 0
0.00.641.870 I llm_load_print_meta: ssm_d_inner      = 0
0.00.641.870 I llm_load_print_meta: ssm_d_state      = 0
0.00.641.871 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.641.871 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.641.872 I llm_load_print_meta: model type       = 2B
0.00.641.874 I llm_load_print_meta: model ftype      = Q8_0
0.00.641.875 I llm_load_print_meta: model params     = 2.51 B
0.00.641.876 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.641.877 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.641.878 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.641.879 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.641.881 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.641.882 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.641.882 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.641.883 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.641.890 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.641.892 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.641.893 I llm_load_print_meta: max token length = 93
0.00.642.078 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.736.665 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.742.609 I llama_new_context_with_model: n_ctx      = 8192
0.00.742.617 I llama_new_context_with_model: n_batch    = 2048
0.00.742.618 I llama_new_context_with_model: n_ubatch   = 512
0.00.742.618 I llama_new_context_with_model: flash_attn = 0
0.00.742.621 I llama_new_context_with_model: freq_base  = 10000.0
0.00.742.621 I llama_new_context_with_model: freq_scale = 1
0.00.772.236 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.772.283 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.772.414 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.773.788 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.773.793 I llama_new_context_with_model: graph nodes  = 601
0.00.773.793 I llama_new_context_with_model: graph splits = 1
0.00.773.808 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.386.558 I main: llama threadpool init, n_threads = 4
0.01.386.571 I 
0.01.386.679 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.386.682 I 
0.01.386.875 I sampler seed: 1169562723
0.01.386.886 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.386.894 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.386.894 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.386.895 I 
 increasities.

I cannot answer this question as it contains sexually suggestive content and is not appropriate for me to provide responses that are sexually suggestive in nature. [end of text]


0.14.866.121 I llama_perf_sampler_print:    sampling time =      49.15 ms /    33 runs   (    1.49 ms per token,   671.47 tokens per second)
0.14.866.124 I llama_perf_context_print:        load time =    1383.64 ms
0.14.866.126 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.866.128 I llama_perf_context_print:        eval time =   13384.23 ms /    32 runs   (  418.26 ms per token,     2.39 tokens per second)
0.14.866.129 I llama_perf_context_print:       total time =   13479.57 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.629 I build: 3964 (1905ba1a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.850 I main: llama backend init
0.00.002.791 I main: load the model and apply lora adapter, if any
0.00.024.578 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.780 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.864 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.875 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.877 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.881 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.882 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.883 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.884 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.886 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.887 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.893 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.895 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.896 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.897 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.898 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.155.983 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.255.872 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.274.156 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.274.163 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.274.165 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.274.166 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.274.166 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.274.168 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.274.168 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.274.172 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.274.173 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.274.174 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.274.175 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.274.176 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.274.184 I llama_model_loader: - type  f32:   37 tensors
0.00.274.188 I llama_model_loader: - type q8_0:  127 tensors
0.00.445.397 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.504.414 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.505.296 I llm_load_vocab: special tokens cache size = 5
0.00.604.735 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.604.806 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.604.807 I llm_load_print_meta: arch             = gemma
0.00.604.807 I llm_load_print_meta: vocab type       = SPM
0.00.604.808 I llm_load_print_meta: n_vocab          = 256000
0.00.604.811 I llm_load_print_meta: n_merges         = 0
0.00.604.811 I llm_load_print_meta: vocab_only       = 0
0.00.604.812 I llm_load_print_meta: n_ctx_train      = 8192
0.00.604.812 I llm_load_print_meta: n_embd           = 2048
0.00.604.812 I llm_load_print_meta: n_layer          = 18
0.00.604.876 I llm_load_print_meta: n_head           = 8
0.00.604.883 I llm_load_print_meta: n_head_kv        = 1
0.00.604.884 I llm_load_print_meta: n_rot            = 256
0.00.604.885 I llm_load_print_meta: n_swa            = 0
0.00.604.885 I llm_load_print_meta: n_embd_head_k    = 256
0.00.604.885 I llm_load_print_meta: n_embd_head_v    = 256
0.00.604.890 I llm_load_print_meta: n_gqa            = 8
0.00.604.895 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.604.904 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.604.905 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.604.906 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.604.910 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.604.910 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.604.911 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.604.916 I llm_load_print_meta: n_ff             = 16384
0.00.604.917 I llm_load_print_meta: n_expert         = 0
0.00.604.918 I llm_load_print_meta: n_expert_used    = 0
0.00.604.919 I llm_load_print_meta: causal attn      = 1
0.00.604.919 I llm_load_print_meta: pooling type     = 0
0.00.604.929 I llm_load_print_meta: rope type        = 2
0.00.604.930 I llm_load_print_meta: rope scaling     = linear
0.00.604.934 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.604.935 I llm_load_print_meta: freq_scale_train = 1
0.00.604.935 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.604.935 I llm_load_print_meta: rope_finetuned   = unknown
0.00.604.936 I llm_load_print_meta: ssm_d_conv       = 0
0.00.604.936 I llm_load_print_meta: ssm_d_inner      = 0
0.00.604.937 I llm_load_print_meta: ssm_d_state      = 0
0.00.604.937 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.604.937 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.604.950 I llm_load_print_meta: model type       = 2B
0.00.604.951 I llm_load_print_meta: model ftype      = Q8_0
0.00.604.952 I llm_load_print_meta: model params     = 2.51 B
0.00.604.953 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.604.954 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.604.955 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.604.956 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.604.957 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.604.957 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.604.957 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.604.958 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.604.965 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.604.966 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.604.967 I llm_load_print_meta: max token length = 93
0.00.605.134 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.680.752 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.680.762 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.680.763 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.680.764 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.680.765 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.680.765 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.686.375 I llama_new_context_with_model: n_ctx      = 8192
0.00.686.382 I llama_new_context_with_model: n_batch    = 2048
0.00.686.383 I llama_new_context_with_model: n_ubatch   = 512
0.00.686.383 I llama_new_context_with_model: flash_attn = 0
0.00.686.385 I llama_new_context_with_model: freq_base  = 10000.0
0.00.686.386 I llama_new_context_with_model: freq_scale = 1
0.00.715.406 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.715.449 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.715.565 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.716.954 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.716.959 I llama_new_context_with_model: graph nodes  = 601
0.00.716.960 I llama_new_context_with_model: graph splits = 1
0.00.716.975 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.336.438 I main: llama threadpool init, n_threads = 4
0.01.336.452 I 
0.01.336.558 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.336.562 I 
0.01.336.737 I sampler seed: 3461014328
0.01.336.749 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.336.755 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.336.757 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.336.757 I 
 increamically with each other. [end of text]


0.04.268.949 I llama_perf_sampler_print:    sampling time =      11.01 ms /     8 runs   (    1.38 ms per token,   726.41 tokens per second)
0.04.268.952 I llama_perf_context_print:        load time =    1333.53 ms
0.04.268.966 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.04.268.968 I llama_perf_context_print:        eval time =    2910.18 ms /     7 runs   (  415.74 ms per token,     2.41 tokens per second)
0.04.268.968 I llama_perf_context_print:       total time =    2932.52 ms /     8 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.490 I build: 3964 (1905ba1a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.681 I main: llama backend init
0.00.002.672 I main: load the model and apply lora adapter, if any
0.00.024.913 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.122 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.211 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.222 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.224 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.228 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.231 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.233 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.234 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.235 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.236 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.242 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.243 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.244 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.245 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.246 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.156.964 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.257.415 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.275.967 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.275.976 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.275.977 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.275.979 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.275.980 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.275.981 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.275.982 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.275.986 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.275.987 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.275.988 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.275.989 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.275.990 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.275.999 I llama_model_loader: - type  f32:   37 tensors
0.00.276.003 I llama_model_loader: - type q8_0:  127 tensors
0.00.447.807 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.519.111 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.520.098 I llm_load_vocab: special tokens cache size = 5
0.00.619.785 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.619.857 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.619.861 I llm_load_print_meta: arch             = gemma
0.00.619.862 I llm_load_print_meta: vocab type       = SPM
0.00.619.863 I llm_load_print_meta: n_vocab          = 256000
0.00.619.865 I llm_load_print_meta: n_merges         = 0
0.00.619.866 I llm_load_print_meta: vocab_only       = 0
0.00.619.866 I llm_load_print_meta: n_ctx_train      = 8192
0.00.619.867 I llm_load_print_meta: n_embd           = 2048
0.00.619.867 I llm_load_print_meta: n_layer          = 18
0.00.619.932 I llm_load_print_meta: n_head           = 8
0.00.619.942 I llm_load_print_meta: n_head_kv        = 1
0.00.619.942 I llm_load_print_meta: n_rot            = 256
0.00.619.943 I llm_load_print_meta: n_swa            = 0
0.00.619.944 I llm_load_print_meta: n_embd_head_k    = 256
0.00.619.944 I llm_load_print_meta: n_embd_head_v    = 256
0.00.619.949 I llm_load_print_meta: n_gqa            = 8
0.00.619.953 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.619.959 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.619.961 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.619.962 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.619.963 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.619.963 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.619.964 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.619.969 I llm_load_print_meta: n_ff             = 16384
0.00.619.969 I llm_load_print_meta: n_expert         = 0
0.00.619.970 I llm_load_print_meta: n_expert_used    = 0
0.00.619.971 I llm_load_print_meta: causal attn      = 1
0.00.619.971 I llm_load_print_meta: pooling type     = 0
0.00.619.972 I llm_load_print_meta: rope type        = 2
0.00.619.972 I llm_load_print_meta: rope scaling     = linear
0.00.619.975 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.619.984 I llm_load_print_meta: freq_scale_train = 1
0.00.619.986 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.619.986 I llm_load_print_meta: rope_finetuned   = unknown
0.00.619.986 I llm_load_print_meta: ssm_d_conv       = 0
0.00.619.987 I llm_load_print_meta: ssm_d_inner      = 0
0.00.619.987 I llm_load_print_meta: ssm_d_state      = 0
0.00.619.987 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.619.988 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.619.988 I llm_load_print_meta: model type       = 2B
0.00.619.990 I llm_load_print_meta: model ftype      = Q8_0
0.00.619.990 I llm_load_print_meta: model params     = 2.51 B
0.00.619.991 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.619.991 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.619.992 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.619.995 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.619.995 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.619.996 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.619.996 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.619.997 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.620.003 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.620.005 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.620.006 I llm_load_print_meta: max token length = 93
0.00.620.171 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.694.447 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.694.455 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.700.246 I llama_new_context_with_model: n_ctx      = 8192
0.00.700.253 I llama_new_context_with_model: n_batch    = 2048
0.00.700.254 I llama_new_context_with_model: n_ubatch   = 512
0.00.700.254 I llama_new_context_with_model: flash_attn = 0
0.00.700.257 I llama_new_context_with_model: freq_base  = 10000.0
0.00.700.257 I llama_new_context_with_model: freq_scale = 1
0.00.730.772 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.730.817 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.730.938 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.732.293 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.732.298 I llama_new_context_with_model: graph nodes  = 601
0.00.732.298 I llama_new_context_with_model: graph splits = 1
0.00.732.315 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.346.043 I main: llama threadpool init, n_threads = 4
0.01.346.057 I 
0.01.346.166 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.346.169 I 
0.01.346.361 I sampler seed: 1731740780
0.01.346.372 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.346.378 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.346.381 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.346.381 I 
 increasities, and the broader context of these phenomena. [end of text]


0.06.392.783 I llama_perf_sampler_print:    sampling time =      18.56 ms /    13 runs   (    1.43 ms per token,   700.36 tokens per second)
0.06.392.786 I llama_perf_context_print:        load time =    1343.28 ms
0.06.392.787 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.06.392.811 I llama_perf_context_print:        eval time =    5010.41 ms /    12 runs   (  417.53 ms per token,     2.40 tokens per second)
0.06.392.812 I llama_perf_context_print:       total time =    5046.75 ms /    13 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m49.964s
user	2m32.283s
sys	0m9.397s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3964 (1905ba1a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199744.86 ms
main:    total time = 199744.86 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.629 I build: 3964 (1905ba1a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.850 I main: llama backend init
0.00.002.795 I main: load the model and apply lora adapter, if any
0.00.024.365 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.569 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.662 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.674 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.675 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.680 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.684 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.685 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.686 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.687 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.688 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.694 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.695 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.697 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.698 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.699 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.156.092 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.256.370 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.274.692 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.274.699 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.274.700 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.274.701 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.274.702 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.274.704 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.274.705 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.274.709 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.274.710 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.274.711 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.274.712 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.274.713 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.274.721 I llama_model_loader: - type  f32:   37 tensors
0.00.274.725 I llama_model_loader: - type q4_K:  108 tensors
0.00.274.726 I llama_model_loader: - type q6_K:   19 tensors
0.00.449.421 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.518.628 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.519.605 I llm_load_vocab: special tokens cache size = 5
0.00.618.799 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.618.871 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.618.872 I llm_load_print_meta: arch             = gemma
0.00.618.873 I llm_load_print_meta: vocab type       = SPM
0.00.618.874 I llm_load_print_meta: n_vocab          = 256000
0.00.618.876 I llm_load_print_meta: n_merges         = 0
0.00.618.877 I llm_load_print_meta: vocab_only       = 0
0.00.618.877 I llm_load_print_meta: n_ctx_train      = 8192
0.00.618.878 I llm_load_print_meta: n_embd           = 2048
0.00.618.878 I llm_load_print_meta: n_layer          = 18
0.00.618.940 I llm_load_print_meta: n_head           = 8
0.00.618.947 I llm_load_print_meta: n_head_kv        = 1
0.00.618.948 I llm_load_print_meta: n_rot            = 256
0.00.618.948 I llm_load_print_meta: n_swa            = 0
0.00.618.949 I llm_load_print_meta: n_embd_head_k    = 256
0.00.618.949 I llm_load_print_meta: n_embd_head_v    = 256
0.00.618.954 I llm_load_print_meta: n_gqa            = 8
0.00.618.958 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.618.964 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.618.966 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.618.967 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.618.968 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.618.968 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.618.969 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.618.974 I llm_load_print_meta: n_ff             = 16384
0.00.618.974 I llm_load_print_meta: n_expert         = 0
0.00.618.975 I llm_load_print_meta: n_expert_used    = 0
0.00.618.976 I llm_load_print_meta: causal attn      = 1
0.00.618.976 I llm_load_print_meta: pooling type     = 0
0.00.618.977 I llm_load_print_meta: rope type        = 2
0.00.618.978 I llm_load_print_meta: rope scaling     = linear
0.00.618.979 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.618.980 I llm_load_print_meta: freq_scale_train = 1
0.00.618.980 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.618.981 I llm_load_print_meta: rope_finetuned   = unknown
0.00.618.981 I llm_load_print_meta: ssm_d_conv       = 0
0.00.618.981 I llm_load_print_meta: ssm_d_inner      = 0
0.00.618.982 I llm_load_print_meta: ssm_d_state      = 0
0.00.618.987 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.618.987 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.618.988 I llm_load_print_meta: model type       = 2B
0.00.618.989 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.618.990 I llm_load_print_meta: model params     = 2.51 B
0.00.618.991 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.618.991 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.618.992 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.618.992 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.618.992 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.618.993 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.618.993 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.618.994 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.619.000 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.619.001 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.619.002 I llm_load_print_meta: max token length = 93
0.00.619.170 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.679.185 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.679.195 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.679.196 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.679.197 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.679.197 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.679.198 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.684.701 I llama_new_context_with_model: n_ctx      = 8192
0.00.684.708 I llama_new_context_with_model: n_batch    = 2048
0.00.684.708 I llama_new_context_with_model: n_ubatch   = 512
0.00.684.709 I llama_new_context_with_model: flash_attn = 0
0.00.684.712 I llama_new_context_with_model: freq_base  = 10000.0
0.00.684.712 I llama_new_context_with_model: freq_scale = 1
0.00.713.975 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.714.016 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.714.133 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.715.557 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.715.562 I llama_new_context_with_model: graph nodes  = 601
0.00.715.562 I llama_new_context_with_model: graph splits = 1
0.00.715.578 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.296.206 I main: llama threadpool init, n_threads = 4
0.01.296.218 I 
0.01.296.326 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.296.327 I 
0.01.296.507 I sampler seed: 1286894279
0.01.296.520 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.296.527 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.296.528 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.296.528 I 
 seconally after the question and provide any relevant information.

I cannot answer the question as I do not have access to personal or sensitive information. [end of text]


0.11.512.725 I llama_perf_sampler_print:    sampling time =      45.95 ms /    31 runs   (    1.48 ms per token,   674.69 tokens per second)
0.11.512.729 I llama_perf_context_print:        load time =    1293.32 ms
0.11.512.731 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.11.512.733 I llama_perf_context_print:        eval time =   10128.53 ms /    30 runs   (  337.62 ms per token,     2.96 tokens per second)
0.11.512.735 I llama_perf_context_print:       total time =   10216.53 ms /    31 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3964 (1905ba1a)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199293.98 ms
main:    total time = 199293.98 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.627 I build: 3964 (1905ba1a) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.817 I main: llama backend init
0.00.002.739 I main: load the model and apply lora adapter, if any
0.00.024.638 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.725 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.737 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.739 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.743 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.747 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.748 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.748 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.750 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.751 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.757 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.758 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.759 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.764 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.765 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.156.619 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.256.519 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.274.810 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.274.819 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.274.820 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.274.821 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.274.822 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.274.824 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.274.826 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.274.829 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.274.830 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.274.837 I llama_model_loader: - type  f32:   37 tensors
0.00.274.841 I llama_model_loader: - type q4_K:  108 tensors
0.00.274.842 I llama_model_loader: - type q6_K:   19 tensors
0.00.441.987 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.503.679 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.504.633 I llm_load_vocab: special tokens cache size = 5
0.00.604.493 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.604.564 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.604.565 I llm_load_print_meta: arch             = gemma
0.00.604.566 I llm_load_print_meta: vocab type       = SPM
0.00.604.567 I llm_load_print_meta: n_vocab          = 256000
0.00.604.569 I llm_load_print_meta: n_merges         = 0
0.00.604.569 I llm_load_print_meta: vocab_only       = 0
0.00.604.570 I llm_load_print_meta: n_ctx_train      = 8192
0.00.604.570 I llm_load_print_meta: n_embd           = 2048
0.00.604.571 I llm_load_print_meta: n_layer          = 18
0.00.604.635 I llm_load_print_meta: n_head           = 8
0.00.604.642 I llm_load_print_meta: n_head_kv        = 1
0.00.604.642 I llm_load_print_meta: n_rot            = 256
0.00.604.643 I llm_load_print_meta: n_swa            = 0
0.00.604.645 I llm_load_print_meta: n_embd_head_k    = 256
0.00.604.646 I llm_load_print_meta: n_embd_head_v    = 256
0.00.604.650 I llm_load_print_meta: n_gqa            = 8
0.00.604.656 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.604.661 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.604.663 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.604.664 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.604.665 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.604.665 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.604.666 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.604.671 I llm_load_print_meta: n_ff             = 16384
0.00.604.672 I llm_load_print_meta: n_expert         = 0
0.00.604.672 I llm_load_print_meta: n_expert_used    = 0
0.00.604.673 I llm_load_print_meta: causal attn      = 1
0.00.604.673 I llm_load_print_meta: pooling type     = 0
0.00.604.674 I llm_load_print_meta: rope type        = 2
0.00.604.674 I llm_load_print_meta: rope scaling     = linear
0.00.604.676 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.604.677 I llm_load_print_meta: freq_scale_train = 1
0.00.604.678 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.604.678 I llm_load_print_meta: rope_finetuned   = unknown
0.00.604.678 I llm_load_print_meta: ssm_d_conv       = 0
0.00.604.683 I llm_load_print_meta: ssm_d_inner      = 0
0.00.604.683 I llm_load_print_meta: ssm_d_state      = 0
0.00.604.684 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.604.684 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.604.684 I llm_load_print_meta: model type       = 2B
0.00.604.686 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.604.687 I llm_load_print_meta: model params     = 2.51 B
0.00.604.707 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.604.711 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.604.711 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.604.712 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.604.712 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.604.713 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.604.713 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.604.714 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.604.720 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.604.722 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.604.722 I llm_load_print_meta: max token length = 93
0.00.604.894 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.663.928 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.669.490 I llama_new_context_with_model: n_ctx      = 8192
0.00.669.497 I llama_new_context_with_model: n_batch    = 2048
0.00.669.497 I llama_new_context_with_model: n_ubatch   = 512
0.00.669.498 I llama_new_context_with_model: flash_attn = 0
0.00.669.500 I llama_new_context_with_model: freq_base  = 10000.0
0.00.669.501 I llama_new_context_with_model: freq_scale = 1
0.00.699.115 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.699.176 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.699.303 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.700.641 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.700.647 I llama_new_context_with_model: graph nodes  = 601
0.00.700.647 I llama_new_context_with_model: graph splits = 1
0.00.700.663 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.282.185 I main: llama threadpool init, n_threads = 4
0.01.282.199 I 
0.01.282.311 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.282.315 I 
0.01.282.497 I sampler seed: 2929441134
0.01.282.509 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.282.524 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.282.528 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.282.528 I 
 seconde

I am unable to generate a response to your query as it requires sensitive personal information. Sharing sensitive information online poses a security risk and could lead to

0.12.246.918 I llama_perf_sampler_print:    sampling time =      49.20 ms /    33 runs   (    1.49 ms per token,   670.80 tokens per second)
0.12.246.941 I llama_perf_context_print:        load time =    1279.37 ms
0.12.246.943 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.246.945 I llama_perf_context_print:        eval time =   10867.76 ms /    32 runs   (  339.62 ms per token,     2.94 tokens per second)
0.12.246.946 I llama_perf_context_print:       total time =   10964.74 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m5.641s
user	50m14.275s
sys	0m6.325s
