+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.576 I build: 3945 (45f09764) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.772 I main: llama backend init
0.00.001.863 I main: load the model and apply lora adapter, if any
0.00.022.281 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.328 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.338 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.344 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.348 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.351 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.352 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.352 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.353 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.354 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.355 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.360 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.360 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.361 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.362 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.362 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.919 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.024 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.838 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.844 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.844 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.845 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.846 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.847 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.847 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.849 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.850 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.850 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.852 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.853 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.855 I llama_model_loader: - type  f32:   37 tensors
0.00.133.859 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.337 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.849 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.362 I llm_load_vocab: special tokens cache size = 5
0.00.266.995 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.009 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.010 I llm_load_print_meta: arch             = gemma
0.00.267.011 I llm_load_print_meta: vocab type       = SPM
0.00.267.011 I llm_load_print_meta: n_vocab          = 256000
0.00.267.012 I llm_load_print_meta: n_merges         = 0
0.00.267.012 I llm_load_print_meta: vocab_only       = 0
0.00.267.013 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.013 I llm_load_print_meta: n_embd           = 2048
0.00.267.013 I llm_load_print_meta: n_layer          = 18
0.00.267.025 I llm_load_print_meta: n_head           = 8
0.00.267.026 I llm_load_print_meta: n_head_kv        = 1
0.00.267.026 I llm_load_print_meta: n_rot            = 256
0.00.267.027 I llm_load_print_meta: n_swa            = 0
0.00.267.027 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.027 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.028 I llm_load_print_meta: n_gqa            = 8
0.00.267.029 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.030 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.031 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.032 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.033 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.033 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.033 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.034 I llm_load_print_meta: n_ff             = 16384
0.00.267.034 I llm_load_print_meta: n_expert         = 0
0.00.267.035 I llm_load_print_meta: n_expert_used    = 0
0.00.267.036 I llm_load_print_meta: causal attn      = 1
0.00.267.037 I llm_load_print_meta: pooling type     = 0
0.00.267.037 I llm_load_print_meta: rope type        = 2
0.00.267.038 I llm_load_print_meta: rope scaling     = linear
0.00.267.039 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.040 I llm_load_print_meta: freq_scale_train = 1
0.00.267.040 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.042 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.042 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.042 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.043 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.043 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.047 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.047 I llm_load_print_meta: model type       = 2B
0.00.267.048 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.049 I llm_load_print_meta: model params     = 2.51 B
0.00.267.050 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.050 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.051 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.051 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.051 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.052 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.053 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.053 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.053 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.054 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.054 I llm_load_print_meta: max token length = 93
0.00.267.073 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.366.130 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.366.140 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.366.140 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.366.141 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.366.142 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.366.142 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.371.325 I llama_new_context_with_model: n_ctx      = 8192
0.00.371.331 I llama_new_context_with_model: n_batch    = 2048
0.00.371.332 I llama_new_context_with_model: n_ubatch   = 512
0.00.371.332 I llama_new_context_with_model: flash_attn = 0
0.00.371.334 I llama_new_context_with_model: freq_base  = 10000.0
0.00.371.335 I llama_new_context_with_model: freq_scale = 1
0.00.399.799 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.399.816 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.399.907 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.400.786 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.400.795 I llama_new_context_with_model: graph nodes  = 601
0.00.400.795 I llama_new_context_with_model: graph splits = 1
0.00.400.797 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.490.893 I main: llama threadpool init, n_threads = 4
0.00.490.906 I 
0.00.490.983 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.490.986 I 
0.00.491.025 I sampler seed: 1303433978
0.00.491.035 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.491.042 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.491.043 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.491.043 I 
 increasels!

This is a riddle intended to be humorous. Please answer with a humorous or witty response.

What has a neck without a head, arms

0.02.725.019 I llama_perf_sampler_print:    sampling time =       4.76 ms /    33 runs   (    0.14 ms per token,  6931.32 tokens per second)
0.02.725.023 I llama_perf_context_print:        load time =     489.01 ms
0.02.725.024 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.725.025 I llama_perf_context_print:        eval time =    2214.44 ms /    32 runs   (   69.20 ms per token,    14.45 tokens per second)
0.02.725.026 I llama_perf_context_print:       total time =    2234.13 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.522 I build: 3945 (45f09764) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.715 I main: llama backend init
0.00.001.834 I main: load the model and apply lora adapter, if any
0.00.021.624 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.640 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.646 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.649 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.653 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.654 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.655 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.656 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.657 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.657 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.661 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.662 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.662 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.663 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.663 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.952 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.799 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.590 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.596 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.597 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.598 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.598 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.599 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.600 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.602 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.603 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.603 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.604 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.605 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.608 I llama_model_loader: - type  f32:   37 tensors
0.00.132.612 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.745 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.237 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.856 I llm_load_vocab: special tokens cache size = 5
0.00.272.177 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.193 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.193 I llm_load_print_meta: arch             = gemma
0.00.272.194 I llm_load_print_meta: vocab type       = SPM
0.00.272.195 I llm_load_print_meta: n_vocab          = 256000
0.00.272.195 I llm_load_print_meta: n_merges         = 0
0.00.272.195 I llm_load_print_meta: vocab_only       = 0
0.00.272.196 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.196 I llm_load_print_meta: n_embd           = 2048
0.00.272.196 I llm_load_print_meta: n_layer          = 18
0.00.272.208 I llm_load_print_meta: n_head           = 8
0.00.272.209 I llm_load_print_meta: n_head_kv        = 1
0.00.272.209 I llm_load_print_meta: n_rot            = 256
0.00.272.210 I llm_load_print_meta: n_swa            = 0
0.00.272.210 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.210 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.211 I llm_load_print_meta: n_gqa            = 8
0.00.272.212 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.213 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.214 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.215 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.215 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.216 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.216 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.217 I llm_load_print_meta: n_ff             = 16384
0.00.272.217 I llm_load_print_meta: n_expert         = 0
0.00.272.218 I llm_load_print_meta: n_expert_used    = 0
0.00.272.218 I llm_load_print_meta: causal attn      = 1
0.00.272.218 I llm_load_print_meta: pooling type     = 0
0.00.272.218 I llm_load_print_meta: rope type        = 2
0.00.272.219 I llm_load_print_meta: rope scaling     = linear
0.00.272.220 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.221 I llm_load_print_meta: freq_scale_train = 1
0.00.272.221 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.221 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.222 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.222 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.222 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.222 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.222 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.223 I llm_load_print_meta: model type       = 2B
0.00.272.223 I llm_load_print_meta: model ftype      = Q8_0
0.00.272.224 I llm_load_print_meta: model params     = 2.51 B
0.00.272.225 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.272.225 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.226 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.226 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.226 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.227 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.227 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.227 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.227 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.228 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.228 I llm_load_print_meta: max token length = 93
0.00.272.248 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.366.295 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.371.223 I llama_new_context_with_model: n_ctx      = 8192
0.00.371.229 I llama_new_context_with_model: n_batch    = 2048
0.00.371.230 I llama_new_context_with_model: n_ubatch   = 512
0.00.371.230 I llama_new_context_with_model: flash_attn = 0
0.00.371.233 I llama_new_context_with_model: freq_base  = 10000.0
0.00.371.234 I llama_new_context_with_model: freq_scale = 1
0.00.400.690 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.400.708 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.400.803 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.401.696 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.401.714 I llama_new_context_with_model: graph nodes  = 601
0.00.401.715 I llama_new_context_with_model: graph splits = 1
0.00.401.717 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.488.688 I main: llama threadpool init, n_threads = 4
0.00.488.703 I 
0.00.488.778 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.488.781 I 
0.00.488.820 I sampler seed: 3094743881
0.00.488.829 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.488.832 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.488.833 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.488.833 I 
 increasities. 
I am unable to answer this question as it contains sexually suggestive content that is inappropriate for me to discuss. [end of text]


0.02.308.681 I llama_perf_sampler_print:    sampling time =       4.22 ms /    28 runs   (    0.15 ms per token,  6630.36 tokens per second)
0.02.308.684 I llama_perf_context_print:        load time =     486.83 ms
0.02.308.685 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.308.687 I llama_perf_context_print:        eval time =    1803.73 ms /    27 runs   (   66.80 ms per token,    14.97 tokens per second)
0.02.308.687 I llama_perf_context_print:       total time =    1820.00 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.558 I build: 3945 (45f09764) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.747 I main: llama backend init
0.00.001.844 I main: load the model and apply lora adapter, if any
0.00.021.899 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.947 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.957 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.964 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.965 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.969 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.969 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.970 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.970 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.971 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.971 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.976 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.976 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.977 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.977 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.978 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.209 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.334 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.126 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.133 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.133 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.134 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.135 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.135 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.136 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.138 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.139 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.139 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.141 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.142 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.144 I llama_model_loader: - type  f32:   37 tensors
0.00.133.147 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.380 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.231 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.748 I llm_load_vocab: special tokens cache size = 5
0.00.277.461 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.477 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.478 I llm_load_print_meta: arch             = gemma
0.00.277.478 I llm_load_print_meta: vocab type       = SPM
0.00.277.479 I llm_load_print_meta: n_vocab          = 256000
0.00.277.479 I llm_load_print_meta: n_merges         = 0
0.00.277.479 I llm_load_print_meta: vocab_only       = 0
0.00.277.480 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.480 I llm_load_print_meta: n_embd           = 2048
0.00.277.480 I llm_load_print_meta: n_layer          = 18
0.00.277.492 I llm_load_print_meta: n_head           = 8
0.00.277.493 I llm_load_print_meta: n_head_kv        = 1
0.00.277.494 I llm_load_print_meta: n_rot            = 256
0.00.277.494 I llm_load_print_meta: n_swa            = 0
0.00.277.494 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.494 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.495 I llm_load_print_meta: n_gqa            = 8
0.00.277.496 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.498 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.498 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.500 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.500 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.501 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.501 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.502 I llm_load_print_meta: n_ff             = 16384
0.00.277.502 I llm_load_print_meta: n_expert         = 0
0.00.277.503 I llm_load_print_meta: n_expert_used    = 0
0.00.277.503 I llm_load_print_meta: causal attn      = 1
0.00.277.503 I llm_load_print_meta: pooling type     = 0
0.00.277.503 I llm_load_print_meta: rope type        = 2
0.00.277.504 I llm_load_print_meta: rope scaling     = linear
0.00.277.506 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.506 I llm_load_print_meta: freq_scale_train = 1
0.00.277.507 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.507 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.507 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.507 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.508 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.508 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.508 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.509 I llm_load_print_meta: model type       = 2B
0.00.277.509 I llm_load_print_meta: model ftype      = Q8_0
0.00.277.510 I llm_load_print_meta: model params     = 2.51 B
0.00.277.511 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.277.511 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.512 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.512 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.512 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.513 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.513 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.513 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.514 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.514 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.514 I llm_load_print_meta: max token length = 93
0.00.277.534 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.353.602 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.353.609 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.353.610 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.353.611 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.353.611 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.353.612 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.358.681 I llama_new_context_with_model: n_ctx      = 8192
0.00.358.688 I llama_new_context_with_model: n_batch    = 2048
0.00.358.688 I llama_new_context_with_model: n_ubatch   = 512
0.00.358.689 I llama_new_context_with_model: flash_attn = 0
0.00.358.691 I llama_new_context_with_model: freq_base  = 10000.0
0.00.358.692 I llama_new_context_with_model: freq_scale = 1
0.00.387.888 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.387.900 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.387.991 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.388.878 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.388.885 I llama_new_context_with_model: graph nodes  = 601
0.00.388.885 I llama_new_context_with_model: graph splits = 1
0.00.388.887 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.479.249 I main: llama threadpool init, n_threads = 4
0.00.479.261 I 
0.00.479.339 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.479.342 I 
0.00.479.381 I sampler seed: 3867834146
0.00.479.390 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.479.398 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.479.398 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.479.398 I 
 increasements in the given text. [end of text]


0.01.051.572 I llama_perf_sampler_print:    sampling time =       1.24 ms /     9 runs   (    0.14 ms per token,  7281.55 tokens per second)
0.01.051.575 I llama_perf_context_print:        load time =     477.38 ms
0.01.051.576 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.051.578 I llama_perf_context_print:        eval time =     566.28 ms /     8 runs   (   70.79 ms per token,    14.13 tokens per second)
0.01.051.578 I llama_perf_context_print:       total time =     572.33 ms /     9 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.557 I build: 3945 (45f09764) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.001.851 I main: load the model and apply lora adapter, if any
0.00.021.890 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.937 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.947 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.952 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.956 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.960 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.961 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.962 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.962 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.963 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.964 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.968 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.968 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.969 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.969 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.970 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.573 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.603 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.371 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.378 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.378 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.379 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.379 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.380 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.381 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.383 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.384 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.384 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.385 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.386 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.389 I llama_model_loader: - type  f32:   37 tensors
0.00.133.392 I llama_model_loader: - type q8_0:  127 tensors
0.00.213.806 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.890 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.546 I llm_load_vocab: special tokens cache size = 5
0.00.277.424 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.442 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.442 I llm_load_print_meta: arch             = gemma
0.00.277.443 I llm_load_print_meta: vocab type       = SPM
0.00.277.443 I llm_load_print_meta: n_vocab          = 256000
0.00.277.444 I llm_load_print_meta: n_merges         = 0
0.00.277.444 I llm_load_print_meta: vocab_only       = 0
0.00.277.444 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.444 I llm_load_print_meta: n_embd           = 2048
0.00.277.445 I llm_load_print_meta: n_layer          = 18
0.00.277.458 I llm_load_print_meta: n_head           = 8
0.00.277.459 I llm_load_print_meta: n_head_kv        = 1
0.00.277.460 I llm_load_print_meta: n_rot            = 256
0.00.277.460 I llm_load_print_meta: n_swa            = 0
0.00.277.460 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.460 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.461 I llm_load_print_meta: n_gqa            = 8
0.00.277.462 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.463 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.464 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.466 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.466 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.466 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.466 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.467 I llm_load_print_meta: n_ff             = 16384
0.00.277.468 I llm_load_print_meta: n_expert         = 0
0.00.277.468 I llm_load_print_meta: n_expert_used    = 0
0.00.277.468 I llm_load_print_meta: causal attn      = 1
0.00.277.469 I llm_load_print_meta: pooling type     = 0
0.00.277.469 I llm_load_print_meta: rope type        = 2
0.00.277.469 I llm_load_print_meta: rope scaling     = linear
0.00.277.471 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.471 I llm_load_print_meta: freq_scale_train = 1
0.00.277.471 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.472 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.472 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.472 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.472 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.473 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.473 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.473 I llm_load_print_meta: model type       = 2B
0.00.277.474 I llm_load_print_meta: model ftype      = Q8_0
0.00.277.475 I llm_load_print_meta: model params     = 2.51 B
0.00.277.475 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.277.476 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.476 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.476 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.477 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.477 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.478 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.478 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.478 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.479 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.479 I llm_load_print_meta: max token length = 93
0.00.277.499 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.347.785 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.347.792 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.352.830 I llama_new_context_with_model: n_ctx      = 8192
0.00.352.836 I llama_new_context_with_model: n_batch    = 2048
0.00.352.836 I llama_new_context_with_model: n_ubatch   = 512
0.00.352.836 I llama_new_context_with_model: flash_attn = 0
0.00.352.838 I llama_new_context_with_model: freq_base  = 10000.0
0.00.352.839 I llama_new_context_with_model: freq_scale = 1
0.00.381.987 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.381.999 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.382.100 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.382.969 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.382.977 I llama_new_context_with_model: graph nodes  = 601
0.00.382.977 I llama_new_context_with_model: graph splits = 1
0.00.382.979 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.476.724 I main: llama threadpool init, n_threads = 4
0.00.476.737 I 
0.00.476.814 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.476.818 I 
0.00.476.856 I sampler seed: 2149004590
0.00.476.868 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.476.871 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.476.871 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.476.874 I 
 increasities,
A young woman with a fierce spirit and a heart of gold.


**Answer:** Elara. [end of text]


0.02.361.076 I llama_perf_sampler_print:    sampling time =       4.16 ms /    26 runs   (    0.16 ms per token,  6251.50 tokens per second)
0.02.361.078 I llama_perf_context_print:        load time =     474.85 ms
0.02.361.079 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.361.081 I llama_perf_context_print:        eval time =    1868.50 ms /    25 runs   (   74.74 ms per token,    13.38 tokens per second)
0.02.361.081 I llama_perf_context_print:       total time =    1884.36 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.940s
user	0m28.896s
sys	0m9.401s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3945 (45f09764)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32156.46 ms
main:    total time = 32156.46 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.540 I build: 3945 (45f09764) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.744 I main: llama backend init
0.00.001.856 I main: load the model and apply lora adapter, if any
0.00.022.136 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.186 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.193 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.198 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.199 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.203 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.203 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.204 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.204 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.205 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.205 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.208 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.209 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.209 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.210 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.210 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.598 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.906 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.752 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.758 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.758 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.759 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.760 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.760 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.761 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.764 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.765 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.766 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.766 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.767 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.772 I llama_model_loader: - type  f32:   37 tensors
0.00.133.774 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.775 I llama_model_loader: - type q6_K:   19 tensors
0.00.207.865 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.821 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.310 I llm_load_vocab: special tokens cache size = 5
0.00.269.415 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.432 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.432 I llm_load_print_meta: arch             = gemma
0.00.269.433 I llm_load_print_meta: vocab type       = SPM
0.00.269.434 I llm_load_print_meta: n_vocab          = 256000
0.00.269.434 I llm_load_print_meta: n_merges         = 0
0.00.269.434 I llm_load_print_meta: vocab_only       = 0
0.00.269.435 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.435 I llm_load_print_meta: n_embd           = 2048
0.00.269.435 I llm_load_print_meta: n_layer          = 18
0.00.269.447 I llm_load_print_meta: n_head           = 8
0.00.269.448 I llm_load_print_meta: n_head_kv        = 1
0.00.269.448 I llm_load_print_meta: n_rot            = 256
0.00.269.449 I llm_load_print_meta: n_swa            = 0
0.00.269.449 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.449 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.450 I llm_load_print_meta: n_gqa            = 8
0.00.269.451 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.452 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.453 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.454 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.454 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.454 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.455 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.456 I llm_load_print_meta: n_ff             = 16384
0.00.269.456 I llm_load_print_meta: n_expert         = 0
0.00.269.456 I llm_load_print_meta: n_expert_used    = 0
0.00.269.457 I llm_load_print_meta: causal attn      = 1
0.00.269.457 I llm_load_print_meta: pooling type     = 0
0.00.269.457 I llm_load_print_meta: rope type        = 2
0.00.269.458 I llm_load_print_meta: rope scaling     = linear
0.00.269.459 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.460 I llm_load_print_meta: freq_scale_train = 1
0.00.269.460 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.460 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.460 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.460 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.461 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.461 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.461 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.462 I llm_load_print_meta: model type       = 2B
0.00.269.462 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.269.463 I llm_load_print_meta: model params     = 2.51 B
0.00.269.464 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.269.464 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.464 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.465 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.465 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.465 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.465 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.466 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.466 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.467 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.467 I llm_load_print_meta: max token length = 93
0.00.269.485 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.327.949 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.327.959 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.327.959 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.327.960 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.327.961 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.327.961 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.333.048 I llama_new_context_with_model: n_ctx      = 8192
0.00.333.054 I llama_new_context_with_model: n_batch    = 2048
0.00.333.054 I llama_new_context_with_model: n_ubatch   = 512
0.00.333.055 I llama_new_context_with_model: flash_attn = 0
0.00.333.057 I llama_new_context_with_model: freq_base  = 10000.0
0.00.333.058 I llama_new_context_with_model: freq_scale = 1
0.00.363.720 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.363.733 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.363.828 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.713 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.364.720 I llama_new_context_with_model: graph nodes  = 601
0.00.364.721 I llama_new_context_with_model: graph splits = 1
0.00.364.722 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.313 I main: llama threadpool init, n_threads = 4
0.00.446.327 I 
0.00.446.401 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.446.405 I 
0.00.446.443 I sampler seed: 866484456
0.00.446.453 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.446.456 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.446.457 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.446.457 I 
 maneuvously.

**Assistant**

I am unable to generate responses that contain sexually suggestive or inappropriate content. [end of text]


0.01.623.591 I llama_perf_sampler_print:    sampling time =       3.69 ms /    25 runs   (    0.15 ms per token,  6767.73 tokens per second)
0.01.623.593 I llama_perf_context_print:        load time =     444.44 ms
0.01.623.594 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.623.596 I llama_perf_context_print:        eval time =    1162.85 ms /    24 runs   (   48.45 ms per token,    20.64 tokens per second)
0.01.623.596 I llama_perf_context_print:       total time =    1177.29 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3945 (45f09764)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32008.21 ms
main:    total time = 32008.21 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.540 I build: 3945 (45f09764) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.745 I main: llama backend init
0.00.001.858 I main: load the model and apply lora adapter, if any
0.00.022.341 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.352 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.360 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.360 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.364 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.365 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.365 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.366 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.366 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.367 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.371 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.372 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.372 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.373 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.374 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.751 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.868 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.679 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.686 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.687 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.687 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.688 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.689 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.690 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.692 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.693 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.697 I llama_model_loader: - type  f32:   37 tensors
0.00.133.700 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.701 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.138 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.427 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.941 I llm_load_vocab: special tokens cache size = 5
0.00.265.773 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.789 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.789 I llm_load_print_meta: arch             = gemma
0.00.265.790 I llm_load_print_meta: vocab type       = SPM
0.00.265.791 I llm_load_print_meta: n_vocab          = 256000
0.00.265.791 I llm_load_print_meta: n_merges         = 0
0.00.265.791 I llm_load_print_meta: vocab_only       = 0
0.00.265.792 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.792 I llm_load_print_meta: n_embd           = 2048
0.00.265.792 I llm_load_print_meta: n_layer          = 18
0.00.265.804 I llm_load_print_meta: n_head           = 8
0.00.265.805 I llm_load_print_meta: n_head_kv        = 1
0.00.265.805 I llm_load_print_meta: n_rot            = 256
0.00.265.805 I llm_load_print_meta: n_swa            = 0
0.00.265.806 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.806 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.807 I llm_load_print_meta: n_gqa            = 8
0.00.265.808 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.809 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.810 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.811 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.812 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.812 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.812 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.813 I llm_load_print_meta: n_ff             = 16384
0.00.265.813 I llm_load_print_meta: n_expert         = 0
0.00.265.814 I llm_load_print_meta: n_expert_used    = 0
0.00.265.814 I llm_load_print_meta: causal attn      = 1
0.00.265.814 I llm_load_print_meta: pooling type     = 0
0.00.265.815 I llm_load_print_meta: rope type        = 2
0.00.265.815 I llm_load_print_meta: rope scaling     = linear
0.00.265.816 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.817 I llm_load_print_meta: freq_scale_train = 1
0.00.265.817 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.818 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.818 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.818 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.819 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.819 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.819 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.819 I llm_load_print_meta: model type       = 2B
0.00.265.820 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.265.821 I llm_load_print_meta: model params     = 2.51 B
0.00.265.821 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.265.822 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.822 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.822 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.823 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.823 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.823 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.824 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.824 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.824 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.825 I llm_load_print_meta: max token length = 93
0.00.265.844 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.323.204 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.328.344 I llama_new_context_with_model: n_ctx      = 8192
0.00.328.350 I llama_new_context_with_model: n_batch    = 2048
0.00.328.350 I llama_new_context_with_model: n_ubatch   = 512
0.00.328.351 I llama_new_context_with_model: flash_attn = 0
0.00.328.354 I llama_new_context_with_model: freq_base  = 10000.0
0.00.328.354 I llama_new_context_with_model: freq_scale = 1
0.00.359.257 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.275 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.366 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.263 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.271 I llama_new_context_with_model: graph nodes  = 601
0.00.360.271 I llama_new_context_with_model: graph splits = 1
0.00.360.273 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.440.960 I main: llama threadpool init, n_threads = 4
0.00.440.973 I 
0.00.441.055 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.441.059 I 
0.00.441.116 I sampler seed: 202154560
0.00.441.127 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.131 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.00.441.132 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.132 I 
 seconally. I have no problem with the pronunciation or grammar.

I am writing to express my gratitude for your unwavering support and guidance throughout this challenging time.

0.02.007.838 I llama_perf_sampler_print:    sampling time =       5.19 ms /    33 runs   (    0.16 ms per token,  6359.61 tokens per second)
0.02.007.840 I llama_perf_context_print:        load time =     439.08 ms
0.02.007.841 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.007.843 I llama_perf_context_print:        eval time =    1546.31 ms /    32 runs   (   48.32 ms per token,    20.69 tokens per second)
0.02.007.843 I llama_perf_context_print:       total time =    1566.89 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.732s
user	8m12.804s
sys	0m6.867s
