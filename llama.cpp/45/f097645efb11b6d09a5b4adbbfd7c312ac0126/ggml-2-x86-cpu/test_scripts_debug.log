+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.636 I build: 3945 (45f09764) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.832 I main: llama backend init
0.00.002.766 I main: load the model and apply lora adapter, if any
0.00.024.990 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.207 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.300 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.312 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.314 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.318 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.322 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.323 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.324 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.325 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.326 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.333 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.334 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.335 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.337 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.338 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.465 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.512 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.951 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.960 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.961 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.962 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.963 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.964 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.965 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.266.968 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.266.969 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.266.970 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.266.972 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.266.973 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.266.982 I llama_model_loader: - type  f32:   37 tensors
0.00.266.986 I llama_model_loader: - type q8_0:  127 tensors
0.00.439.126 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.497.792 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.498.742 I llm_load_vocab: special tokens cache size = 5
0.00.605.748 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.605.819 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.605.820 I llm_load_print_meta: arch             = gemma
0.00.605.821 I llm_load_print_meta: vocab type       = SPM
0.00.605.822 I llm_load_print_meta: n_vocab          = 256000
0.00.605.824 I llm_load_print_meta: n_merges         = 0
0.00.605.824 I llm_load_print_meta: vocab_only       = 0
0.00.605.825 I llm_load_print_meta: n_ctx_train      = 8192
0.00.605.825 I llm_load_print_meta: n_embd           = 2048
0.00.605.825 I llm_load_print_meta: n_layer          = 18
0.00.605.890 I llm_load_print_meta: n_head           = 8
0.00.605.897 I llm_load_print_meta: n_head_kv        = 1
0.00.605.898 I llm_load_print_meta: n_rot            = 256
0.00.605.898 I llm_load_print_meta: n_swa            = 0
0.00.605.898 I llm_load_print_meta: n_embd_head_k    = 256
0.00.605.899 I llm_load_print_meta: n_embd_head_v    = 256
0.00.605.904 I llm_load_print_meta: n_gqa            = 8
0.00.605.909 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.605.914 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.605.916 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.605.917 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.605.918 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.605.941 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.605.945 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.605.952 I llm_load_print_meta: n_ff             = 16384
0.00.605.953 I llm_load_print_meta: n_expert         = 0
0.00.605.954 I llm_load_print_meta: n_expert_used    = 0
0.00.605.954 I llm_load_print_meta: causal attn      = 1
0.00.605.955 I llm_load_print_meta: pooling type     = 0
0.00.605.955 I llm_load_print_meta: rope type        = 2
0.00.605.956 I llm_load_print_meta: rope scaling     = linear
0.00.605.957 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.605.958 I llm_load_print_meta: freq_scale_train = 1
0.00.605.959 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.605.959 I llm_load_print_meta: rope_finetuned   = unknown
0.00.605.959 I llm_load_print_meta: ssm_d_conv       = 0
0.00.605.960 I llm_load_print_meta: ssm_d_inner      = 0
0.00.605.960 I llm_load_print_meta: ssm_d_state      = 0
0.00.605.967 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.605.968 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.605.969 I llm_load_print_meta: model type       = 2B
0.00.605.971 I llm_load_print_meta: model ftype      = Q8_0
0.00.605.972 I llm_load_print_meta: model params     = 2.51 B
0.00.605.975 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.605.976 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.605.976 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.605.977 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.605.977 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.605.977 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.605.978 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.605.978 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.605.984 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.605.986 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.605.988 I llm_load_print_meta: max token length = 93
0.00.606.157 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.707.020 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.707.028 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.707.028 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.707.029 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.707.030 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.707.030 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.712.802 I llama_new_context_with_model: n_ctx      = 8192
0.00.712.812 I llama_new_context_with_model: n_batch    = 2048
0.00.712.812 I llama_new_context_with_model: n_ubatch   = 512
0.00.712.813 I llama_new_context_with_model: flash_attn = 0
0.00.712.817 I llama_new_context_with_model: freq_base  = 10000.0
0.00.712.818 I llama_new_context_with_model: freq_scale = 1
0.00.744.200 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.744.243 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.744.355 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.745.784 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.745.789 I llama_new_context_with_model: graph nodes  = 601
0.00.745.789 I llama_new_context_with_model: graph splits = 1
0.00.745.805 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.355.481 I main: llama threadpool init, n_threads = 4
0.01.355.493 I 
0.01.355.599 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.355.605 I 
0.01.355.787 I sampler seed: 1262033708
0.01.355.799 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.355.806 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.355.807 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.355.808 I 
 increamically.

I am not able to access the content of your reply due to privacy restrictions. [end of text]


0.10.159.576 I llama_perf_sampler_print:    sampling time =      32.43 ms /    22 runs   (    1.47 ms per token,   678.43 tokens per second)
0.10.159.579 I llama_perf_context_print:        load time =    1352.63 ms
0.10.159.580 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.159.581 I llama_perf_context_print:        eval time =    8741.08 ms /    21 runs   (  416.24 ms per token,     2.40 tokens per second)
0.10.159.582 I llama_perf_context_print:       total time =    8804.10 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.667 I build: 3945 (45f09764) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.871 I main: llama backend init
0.00.002.810 I main: load the model and apply lora adapter, if any
0.00.026.621 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.026.713 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.026.727 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.026.729 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.026.732 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.026.736 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.026.737 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.026.738 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.026.739 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.026.740 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.026.747 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.026.748 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.026.749 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.026.750 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.026.754 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.473 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.417 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.808 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.817 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.818 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.819 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.820 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.821 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.822 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.826 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.827 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.827 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.268.828 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.268.830 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.838 I llama_model_loader: - type  f32:   37 tensors
0.00.268.842 I llama_model_loader: - type q8_0:  127 tensors
0.00.431.957 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.500.458 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.501.396 I llm_load_vocab: special tokens cache size = 5
0.00.595.139 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.595.206 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.595.207 I llm_load_print_meta: arch             = gemma
0.00.595.207 I llm_load_print_meta: vocab type       = SPM
0.00.595.208 I llm_load_print_meta: n_vocab          = 256000
0.00.595.210 I llm_load_print_meta: n_merges         = 0
0.00.595.210 I llm_load_print_meta: vocab_only       = 0
0.00.595.211 I llm_load_print_meta: n_ctx_train      = 8192
0.00.595.211 I llm_load_print_meta: n_embd           = 2048
0.00.595.212 I llm_load_print_meta: n_layer          = 18
0.00.595.275 I llm_load_print_meta: n_head           = 8
0.00.595.285 I llm_load_print_meta: n_head_kv        = 1
0.00.595.286 I llm_load_print_meta: n_rot            = 256
0.00.595.286 I llm_load_print_meta: n_swa            = 0
0.00.595.287 I llm_load_print_meta: n_embd_head_k    = 256
0.00.595.287 I llm_load_print_meta: n_embd_head_v    = 256
0.00.595.291 I llm_load_print_meta: n_gqa            = 8
0.00.595.296 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.595.302 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.595.304 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.595.305 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.595.306 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.595.306 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.595.316 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.595.321 I llm_load_print_meta: n_ff             = 16384
0.00.595.324 I llm_load_print_meta: n_expert         = 0
0.00.595.324 I llm_load_print_meta: n_expert_used    = 0
0.00.595.325 I llm_load_print_meta: causal attn      = 1
0.00.595.325 I llm_load_print_meta: pooling type     = 0
0.00.595.325 I llm_load_print_meta: rope type        = 2
0.00.595.326 I llm_load_print_meta: rope scaling     = linear
0.00.595.327 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.595.328 I llm_load_print_meta: freq_scale_train = 1
0.00.595.328 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.595.329 I llm_load_print_meta: rope_finetuned   = unknown
0.00.595.329 I llm_load_print_meta: ssm_d_conv       = 0
0.00.595.329 I llm_load_print_meta: ssm_d_inner      = 0
0.00.595.329 I llm_load_print_meta: ssm_d_state      = 0
0.00.595.330 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.595.330 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.595.343 I llm_load_print_meta: model type       = 2B
0.00.595.344 I llm_load_print_meta: model ftype      = Q8_0
0.00.595.353 I llm_load_print_meta: model params     = 2.51 B
0.00.595.355 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.595.355 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.595.356 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.595.357 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.595.357 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.595.365 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.595.365 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.595.366 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.595.372 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.595.374 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.595.374 I llm_load_print_meta: max token length = 93
0.00.595.541 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.691.048 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.696.668 I llama_new_context_with_model: n_ctx      = 8192
0.00.696.674 I llama_new_context_with_model: n_batch    = 2048
0.00.696.675 I llama_new_context_with_model: n_ubatch   = 512
0.00.696.675 I llama_new_context_with_model: flash_attn = 0
0.00.696.677 I llama_new_context_with_model: freq_base  = 10000.0
0.00.696.678 I llama_new_context_with_model: freq_scale = 1
0.00.726.069 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.726.111 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.726.222 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.727.628 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.727.633 I llama_new_context_with_model: graph nodes  = 601
0.00.727.633 I llama_new_context_with_model: graph splits = 1
0.00.727.648 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.339.192 I main: llama threadpool init, n_threads = 4
0.01.339.204 I 
0.01.339.309 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.339.313 I 
0.01.339.488 I sampler seed: 3243459898
0.01.339.499 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.339.507 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.339.507 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.339.507 I 
 increasities with a hint of the unexpected. [end of text]


0.05.557.303 I llama_perf_sampler_print:    sampling time =      15.54 ms /    11 runs   (    1.41 ms per token,   707.76 tokens per second)
0.05.557.325 I llama_perf_context_print:        load time =    1336.30 ms
0.05.557.327 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.05.557.328 I llama_perf_context_print:        eval time =    4187.31 ms /    10 runs   (  418.73 ms per token,     2.39 tokens per second)
0.05.557.329 I llama_perf_context_print:       total time =    4218.12 ms /    11 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.624 I build: 3945 (45f09764) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.834 I main: llama backend init
0.00.002.798 I main: load the model and apply lora adapter, if any
0.00.024.420 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.637 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.732 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.743 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.745 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.749 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.753 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.754 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.756 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.758 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.759 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.767 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.769 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.771 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.772 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.774 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.680 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.482 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.935 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.942 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.943 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.944 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.945 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.946 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.947 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.266.951 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.266.952 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.266.953 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.266.954 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.266.955 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.266.964 I llama_model_loader: - type  f32:   37 tensors
0.00.266.968 I llama_model_loader: - type q8_0:  127 tensors
0.00.432.636 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.493.610 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.494.604 I llm_load_vocab: special tokens cache size = 5
0.00.588.544 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.588.615 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.588.616 I llm_load_print_meta: arch             = gemma
0.00.588.617 I llm_load_print_meta: vocab type       = SPM
0.00.588.618 I llm_load_print_meta: n_vocab          = 256000
0.00.588.621 I llm_load_print_meta: n_merges         = 0
0.00.588.621 I llm_load_print_meta: vocab_only       = 0
0.00.588.622 I llm_load_print_meta: n_ctx_train      = 8192
0.00.588.622 I llm_load_print_meta: n_embd           = 2048
0.00.588.622 I llm_load_print_meta: n_layer          = 18
0.00.588.686 I llm_load_print_meta: n_head           = 8
0.00.588.693 I llm_load_print_meta: n_head_kv        = 1
0.00.588.693 I llm_load_print_meta: n_rot            = 256
0.00.588.694 I llm_load_print_meta: n_swa            = 0
0.00.588.694 I llm_load_print_meta: n_embd_head_k    = 256
0.00.588.694 I llm_load_print_meta: n_embd_head_v    = 256
0.00.588.699 I llm_load_print_meta: n_gqa            = 8
0.00.588.704 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.588.709 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.588.710 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.588.712 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.588.712 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.588.713 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.588.713 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.588.718 I llm_load_print_meta: n_ff             = 16384
0.00.588.719 I llm_load_print_meta: n_expert         = 0
0.00.588.719 I llm_load_print_meta: n_expert_used    = 0
0.00.588.720 I llm_load_print_meta: causal attn      = 1
0.00.588.720 I llm_load_print_meta: pooling type     = 0
0.00.588.720 I llm_load_print_meta: rope type        = 2
0.00.588.721 I llm_load_print_meta: rope scaling     = linear
0.00.588.722 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.588.723 I llm_load_print_meta: freq_scale_train = 1
0.00.588.723 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.588.723 I llm_load_print_meta: rope_finetuned   = unknown
0.00.588.724 I llm_load_print_meta: ssm_d_conv       = 0
0.00.588.724 I llm_load_print_meta: ssm_d_inner      = 0
0.00.588.724 I llm_load_print_meta: ssm_d_state      = 0
0.00.588.724 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.588.725 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.588.725 I llm_load_print_meta: model type       = 2B
0.00.588.726 I llm_load_print_meta: model ftype      = Q8_0
0.00.588.727 I llm_load_print_meta: model params     = 2.51 B
0.00.588.728 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.588.729 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.588.749 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.588.750 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.588.750 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.588.751 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.588.752 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.588.752 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.588.758 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.588.761 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.588.770 I llm_load_print_meta: max token length = 93
0.00.588.955 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.764.486 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.764.497 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.764.498 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.764.499 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.764.500 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.764.501 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.770.247 I llama_new_context_with_model: n_ctx      = 8192
0.00.770.254 I llama_new_context_with_model: n_batch    = 2048
0.00.770.255 I llama_new_context_with_model: n_ubatch   = 512
0.00.770.255 I llama_new_context_with_model: flash_attn = 0
0.00.770.257 I llama_new_context_with_model: freq_base  = 10000.0
0.00.770.258 I llama_new_context_with_model: freq_scale = 1
0.00.799.074 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.799.119 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.799.231 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.800.648 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.800.652 I llama_new_context_with_model: graph nodes  = 601
0.00.800.653 I llama_new_context_with_model: graph splits = 1
0.00.800.668 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.416.138 I main: llama threadpool init, n_threads = 4
0.01.416.154 I 
0.01.416.269 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.416.269 I 
0.01.416.465 I sampler seed: 1237063110
0.01.416.478 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.416.485 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.416.486 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.416.494 I 
 increasities with the following context:

**1. The Context:**

- The context is a fictional universe with sentient machines, humans, and other species interacting

0.14.954.550 I llama_perf_sampler_print:    sampling time =      49.53 ms /    33 runs   (    1.50 ms per token,   666.26 tokens per second)
0.14.954.554 I llama_perf_context_print:        load time =    1413.25 ms
0.14.954.555 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.954.568 I llama_perf_context_print:        eval time =   13443.58 ms /    32 runs   (  420.11 ms per token,     2.38 tokens per second)
0.14.954.570 I llama_perf_context_print:       total time =   13538.42 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.657 I build: 3945 (45f09764) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.864 I main: llama backend init
0.00.002.802 I main: load the model and apply lora adapter, if any
0.00.024.753 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.024.956 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.047 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.059 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.061 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.065 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.066 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.067 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.069 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.070 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.071 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.079 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.087 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.088 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.089 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.090 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.671 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.286 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.601 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.609 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.610 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.611 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.612 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.613 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.614 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.266.618 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.266.619 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.266.620 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.266.621 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.266.622 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.266.631 I llama_model_loader: - type  f32:   37 tensors
0.00.266.635 I llama_model_loader: - type q8_0:  127 tensors
0.00.442.012 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.501.698 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.502.633 I llm_load_vocab: special tokens cache size = 5
0.00.612.219 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.612.288 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.612.288 I llm_load_print_meta: arch             = gemma
0.00.612.289 I llm_load_print_meta: vocab type       = SPM
0.00.612.290 I llm_load_print_meta: n_vocab          = 256000
0.00.612.292 I llm_load_print_meta: n_merges         = 0
0.00.612.293 I llm_load_print_meta: vocab_only       = 0
0.00.612.293 I llm_load_print_meta: n_ctx_train      = 8192
0.00.612.293 I llm_load_print_meta: n_embd           = 2048
0.00.612.294 I llm_load_print_meta: n_layer          = 18
0.00.612.355 I llm_load_print_meta: n_head           = 8
0.00.612.362 I llm_load_print_meta: n_head_kv        = 1
0.00.612.363 I llm_load_print_meta: n_rot            = 256
0.00.612.363 I llm_load_print_meta: n_swa            = 0
0.00.612.363 I llm_load_print_meta: n_embd_head_k    = 256
0.00.612.364 I llm_load_print_meta: n_embd_head_v    = 256
0.00.612.368 I llm_load_print_meta: n_gqa            = 8
0.00.612.373 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.612.378 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.612.379 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.612.380 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.612.380 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.612.381 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.612.381 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.612.386 I llm_load_print_meta: n_ff             = 16384
0.00.612.388 I llm_load_print_meta: n_expert         = 0
0.00.612.388 I llm_load_print_meta: n_expert_used    = 0
0.00.612.389 I llm_load_print_meta: causal attn      = 1
0.00.612.390 I llm_load_print_meta: pooling type     = 0
0.00.612.390 I llm_load_print_meta: rope type        = 2
0.00.612.391 I llm_load_print_meta: rope scaling     = linear
0.00.612.393 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.612.393 I llm_load_print_meta: freq_scale_train = 1
0.00.612.394 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.612.394 I llm_load_print_meta: rope_finetuned   = unknown
0.00.612.395 I llm_load_print_meta: ssm_d_conv       = 0
0.00.612.395 I llm_load_print_meta: ssm_d_inner      = 0
0.00.612.395 I llm_load_print_meta: ssm_d_state      = 0
0.00.612.395 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.612.414 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.612.415 I llm_load_print_meta: model type       = 2B
0.00.612.416 I llm_load_print_meta: model ftype      = Q8_0
0.00.612.417 I llm_load_print_meta: model params     = 2.51 B
0.00.612.418 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.612.419 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.612.420 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.612.420 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.612.421 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.612.422 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.612.422 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.612.422 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.612.428 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.612.430 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.612.430 I llm_load_print_meta: max token length = 93
0.00.612.595 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.684.116 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.684.126 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.689.694 I llama_new_context_with_model: n_ctx      = 8192
0.00.689.702 I llama_new_context_with_model: n_batch    = 2048
0.00.689.702 I llama_new_context_with_model: n_ubatch   = 512
0.00.689.702 I llama_new_context_with_model: flash_attn = 0
0.00.689.705 I llama_new_context_with_model: freq_base  = 10000.0
0.00.689.705 I llama_new_context_with_model: freq_scale = 1
0.00.718.813 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.718.857 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.718.968 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.720.316 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.720.322 I llama_new_context_with_model: graph nodes  = 601
0.00.720.322 I llama_new_context_with_model: graph splits = 1
0.00.720.338 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.332.844 I main: llama threadpool init, n_threads = 4
0.01.332.855 I 
0.01.332.966 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.332.970 I 
0.01.333.174 I sampler seed: 424427987
0.01.333.185 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.333.191 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.333.192 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.333.193 I 
 increamically!

I'm so sorry, but I cannot generate responses that are inappropriate or harmful in nature. [end of text]


0.11.518.553 I llama_perf_sampler_print:    sampling time =      37.03 ms /    25 runs   (    1.48 ms per token,   675.15 tokens per second)
0.11.518.556 I llama_perf_context_print:        load time =    1329.94 ms
0.11.518.558 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.11.518.571 I llama_perf_context_print:        eval time =   10114.22 ms /    24 runs   (  421.43 ms per token,     2.37 tokens per second)
0.11.518.573 I llama_perf_context_print:       total time =   10185.72 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m51.808s
user	2m39.666s
sys	0m9.359s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3945 (45f09764)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198383.38 ms
main:    total time = 198383.38 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.685 I build: 3945 (45f09764) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.911 I main: llama backend init
0.00.002.887 I main: load the model and apply lora adapter, if any
0.00.024.840 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.025.044 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.133 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.144 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.145 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.150 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.151 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.152 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.154 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.154 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.155 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.162 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.166 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.167 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.168 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.169 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.788 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.401 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.755 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.764 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.765 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.766 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.767 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.768 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.769 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.266.773 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.266.774 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.266.775 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.266.776 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.266.777 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.266.785 I llama_model_loader: - type  f32:   37 tensors
0.00.266.790 I llama_model_loader: - type q4_K:  108 tensors
0.00.266.791 I llama_model_loader: - type q6_K:   19 tensors
0.00.442.027 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.502.407 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.503.320 I llm_load_vocab: special tokens cache size = 5
0.00.597.882 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.597.952 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.597.953 I llm_load_print_meta: arch             = gemma
0.00.597.954 I llm_load_print_meta: vocab type       = SPM
0.00.597.955 I llm_load_print_meta: n_vocab          = 256000
0.00.597.957 I llm_load_print_meta: n_merges         = 0
0.00.597.958 I llm_load_print_meta: vocab_only       = 0
0.00.597.958 I llm_load_print_meta: n_ctx_train      = 8192
0.00.597.958 I llm_load_print_meta: n_embd           = 2048
0.00.597.959 I llm_load_print_meta: n_layer          = 18
0.00.598.023 I llm_load_print_meta: n_head           = 8
0.00.598.030 I llm_load_print_meta: n_head_kv        = 1
0.00.598.031 I llm_load_print_meta: n_rot            = 256
0.00.598.031 I llm_load_print_meta: n_swa            = 0
0.00.598.031 I llm_load_print_meta: n_embd_head_k    = 256
0.00.598.032 I llm_load_print_meta: n_embd_head_v    = 256
0.00.598.036 I llm_load_print_meta: n_gqa            = 8
0.00.598.041 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.598.046 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.598.049 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.598.050 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.598.051 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.598.051 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.598.051 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.598.056 I llm_load_print_meta: n_ff             = 16384
0.00.598.057 I llm_load_print_meta: n_expert         = 0
0.00.598.057 I llm_load_print_meta: n_expert_used    = 0
0.00.598.058 I llm_load_print_meta: causal attn      = 1
0.00.598.062 I llm_load_print_meta: pooling type     = 0
0.00.598.062 I llm_load_print_meta: rope type        = 2
0.00.598.063 I llm_load_print_meta: rope scaling     = linear
0.00.598.065 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.598.065 I llm_load_print_meta: freq_scale_train = 1
0.00.598.066 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.598.066 I llm_load_print_meta: rope_finetuned   = unknown
0.00.598.067 I llm_load_print_meta: ssm_d_conv       = 0
0.00.598.067 I llm_load_print_meta: ssm_d_inner      = 0
0.00.598.067 I llm_load_print_meta: ssm_d_state      = 0
0.00.598.068 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.598.077 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.598.079 I llm_load_print_meta: model type       = 2B
0.00.598.081 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.598.081 I llm_load_print_meta: model params     = 2.51 B
0.00.598.082 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.598.083 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.598.084 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.598.085 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.598.085 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.598.086 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.598.086 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.598.086 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.598.093 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.598.095 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.598.095 I llm_load_print_meta: max token length = 93
0.00.598.261 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.658.883 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.658.889 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.658.890 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.658.890 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.658.891 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.658.892 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.664.590 I llama_new_context_with_model: n_ctx      = 8192
0.00.664.596 I llama_new_context_with_model: n_batch    = 2048
0.00.664.597 I llama_new_context_with_model: n_ubatch   = 512
0.00.664.598 I llama_new_context_with_model: flash_attn = 0
0.00.664.600 I llama_new_context_with_model: freq_base  = 10000.0
0.00.664.601 I llama_new_context_with_model: freq_scale = 1
0.00.693.126 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.693.169 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.693.282 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.694.689 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.694.695 I llama_new_context_with_model: graph nodes  = 601
0.00.694.695 I llama_new_context_with_model: graph splits = 1
0.00.694.711 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.276.368 I main: llama threadpool init, n_threads = 4
0.01.276.381 I 
0.01.276.487 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.276.487 I 
0.01.276.666 I sampler seed: 1043552225
0.01.276.679 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.276.688 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.276.689 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.276.691 I 
 increamically!

I am unable to generate a response that includes offensive or inappropriate language. [end of text]


0.07.796.308 I llama_perf_sampler_print:    sampling time =      29.41 ms /    20 runs   (    1.47 ms per token,   680.13 tokens per second)
0.07.796.323 I llama_perf_context_print:        load time =    1273.39 ms
0.07.796.324 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.07.796.326 I llama_perf_context_print:        eval time =    6462.75 ms /    19 runs   (  340.14 ms per token,     2.94 tokens per second)
0.07.796.326 I llama_perf_context_print:       total time =    6519.95 ms /    20 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3945 (45f09764)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 198474.70 ms
main:    total time = 198474.70 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.617 I build: 3945 (45f09764) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.812 I main: llama backend init
0.00.002.768 I main: load the model and apply lora adapter, if any
0.00.024.354 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.443 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.456 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.458 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.462 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.466 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.467 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.468 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.469 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.470 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.476 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.477 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.479 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.480 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.481 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.061 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.220 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.724 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.732 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.733 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.735 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.736 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.737 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.738 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.266.742 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.266.743 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.266.750 I llama_model_loader: - type  f32:   37 tensors
0.00.266.754 I llama_model_loader: - type q4_K:  108 tensors
0.00.266.755 I llama_model_loader: - type q6_K:   19 tensors
0.00.436.144 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.492.129 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.493.026 I llm_load_vocab: special tokens cache size = 5
0.00.587.352 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.587.421 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.587.422 I llm_load_print_meta: arch             = gemma
0.00.587.423 I llm_load_print_meta: vocab type       = SPM
0.00.587.424 I llm_load_print_meta: n_vocab          = 256000
0.00.587.426 I llm_load_print_meta: n_merges         = 0
0.00.587.426 I llm_load_print_meta: vocab_only       = 0
0.00.587.427 I llm_load_print_meta: n_ctx_train      = 8192
0.00.587.427 I llm_load_print_meta: n_embd           = 2048
0.00.587.427 I llm_load_print_meta: n_layer          = 18
0.00.587.491 I llm_load_print_meta: n_head           = 8
0.00.587.498 I llm_load_print_meta: n_head_kv        = 1
0.00.587.499 I llm_load_print_meta: n_rot            = 256
0.00.587.499 I llm_load_print_meta: n_swa            = 0
0.00.587.499 I llm_load_print_meta: n_embd_head_k    = 256
0.00.587.501 I llm_load_print_meta: n_embd_head_v    = 256
0.00.587.505 I llm_load_print_meta: n_gqa            = 8
0.00.587.511 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.587.516 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.587.517 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.587.519 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.587.519 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.587.519 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.587.520 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.587.524 I llm_load_print_meta: n_ff             = 16384
0.00.587.525 I llm_load_print_meta: n_expert         = 0
0.00.587.526 I llm_load_print_meta: n_expert_used    = 0
0.00.587.526 I llm_load_print_meta: causal attn      = 1
0.00.587.526 I llm_load_print_meta: pooling type     = 0
0.00.587.527 I llm_load_print_meta: rope type        = 2
0.00.587.527 I llm_load_print_meta: rope scaling     = linear
0.00.587.529 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.587.529 I llm_load_print_meta: freq_scale_train = 1
0.00.587.530 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.587.531 I llm_load_print_meta: rope_finetuned   = unknown
0.00.587.531 I llm_load_print_meta: ssm_d_conv       = 0
0.00.587.532 I llm_load_print_meta: ssm_d_inner      = 0
0.00.587.533 I llm_load_print_meta: ssm_d_state      = 0
0.00.587.533 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.587.533 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.587.534 I llm_load_print_meta: model type       = 2B
0.00.587.535 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.587.536 I llm_load_print_meta: model params     = 2.51 B
0.00.587.536 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.587.538 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.587.538 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.587.539 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.587.539 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.587.540 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.587.540 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.587.540 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.587.546 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.587.547 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.587.547 I llm_load_print_meta: max token length = 93
0.00.587.710 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.645.905 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.651.321 I llama_new_context_with_model: n_ctx      = 8192
0.00.651.328 I llama_new_context_with_model: n_batch    = 2048
0.00.651.329 I llama_new_context_with_model: n_ubatch   = 512
0.00.651.330 I llama_new_context_with_model: flash_attn = 0
0.00.651.332 I llama_new_context_with_model: freq_base  = 10000.0
0.00.651.333 I llama_new_context_with_model: freq_scale = 1
0.00.680.543 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.680.587 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.680.696 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.682.033 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.682.038 I llama_new_context_with_model: graph nodes  = 601
0.00.682.038 I llama_new_context_with_model: graph splits = 1
0.00.682.054 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.261.601 I main: llama threadpool init, n_threads = 4
0.01.261.615 I 
0.01.261.725 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.261.736 I 
0.01.261.919 I sampler seed: 1694664027
0.01.261.933 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.261.941 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> softmax -> dist 
0.01.261.942 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.261.942 I 
 seconde.

I am unable to access the specified file.

**Possible causes:**

* The file may have been deleted.
* The file may

0.12.153.329 I llama_perf_sampler_print:    sampling time =      49.31 ms /    33 runs   (    1.49 ms per token,   669.24 tokens per second)
0.12.153.333 I llama_perf_context_print:        load time =    1258.75 ms
0.12.153.345 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.153.347 I llama_perf_context_print:        eval time =   10797.46 ms /    32 runs   (  337.42 ms per token,     2.96 tokens per second)
0.12.153.348 I llama_perf_context_print:       total time =   10891.74 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m59.668s
user	49m49.140s
sys	0m6.271s
