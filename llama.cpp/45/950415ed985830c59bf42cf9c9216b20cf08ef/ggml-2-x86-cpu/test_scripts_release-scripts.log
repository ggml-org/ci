+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.560 I build: 4015 (45950415) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.001.881 I main: load the model and apply lora adapter, if any
0.00.022.426 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.435 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.442 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.447 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.449 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.453 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.456 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.457 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.457 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.457 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.458 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.461 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.462 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.462 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.463 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.464 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.577 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.197 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.146 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.152 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.153 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.154 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.154 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.155 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.156 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.158 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.158 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.159 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.160 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.162 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.166 I llama_model_loader: - type  f32:   37 tensors
0.00.132.167 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.510 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.261 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.801 I llm_load_vocab: special tokens cache size = 5
0.00.267.481 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.498 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.499 I llm_load_print_meta: arch             = gemma
0.00.267.499 I llm_load_print_meta: vocab type       = SPM
0.00.267.500 I llm_load_print_meta: n_vocab          = 256000
0.00.267.500 I llm_load_print_meta: n_merges         = 0
0.00.267.500 I llm_load_print_meta: vocab_only       = 0
0.00.267.501 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.501 I llm_load_print_meta: n_embd           = 2048
0.00.267.501 I llm_load_print_meta: n_layer          = 18
0.00.267.513 I llm_load_print_meta: n_head           = 8
0.00.267.514 I llm_load_print_meta: n_head_kv        = 1
0.00.267.514 I llm_load_print_meta: n_rot            = 256
0.00.267.514 I llm_load_print_meta: n_swa            = 0
0.00.267.515 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.515 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.516 I llm_load_print_meta: n_gqa            = 8
0.00.267.517 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.518 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.519 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.520 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.520 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.521 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.521 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.522 I llm_load_print_meta: n_ff             = 16384
0.00.267.522 I llm_load_print_meta: n_expert         = 0
0.00.267.522 I llm_load_print_meta: n_expert_used    = 0
0.00.267.523 I llm_load_print_meta: causal attn      = 1
0.00.267.523 I llm_load_print_meta: pooling type     = 0
0.00.267.523 I llm_load_print_meta: rope type        = 2
0.00.267.524 I llm_load_print_meta: rope scaling     = linear
0.00.267.525 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.526 I llm_load_print_meta: freq_scale_train = 1
0.00.267.526 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.527 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.527 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.527 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.527 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.527 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.528 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.528 I llm_load_print_meta: model type       = 2B
0.00.267.529 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.529 I llm_load_print_meta: model params     = 2.51 B
0.00.267.530 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.530 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.531 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.531 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.532 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.532 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.533 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.533 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.534 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.534 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.534 I llm_load_print_meta: max token length = 93
0.00.370.261 I llm_load_tensors: CPU_Mapped model buffer size =   865.98 MiB
0.00.370.270 I llm_load_tensors: CPU_Mapped model buffer size =   334.74 MiB
0.00.370.271 I llm_load_tensors: CPU_Mapped model buffer size =   402.73 MiB
0.00.370.271 I llm_load_tensors: CPU_Mapped model buffer size =   335.27 MiB
0.00.370.272 I llm_load_tensors: CPU_Mapped model buffer size =   338.98 MiB
0.00.370.272 I llm_load_tensors: CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.375.442 I llama_new_context_with_model: n_seq_max     = 1
0.00.375.447 I llama_new_context_with_model: n_ctx         = 4096
0.00.375.448 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.375.448 I llama_new_context_with_model: n_batch       = 2048
0.00.375.448 I llama_new_context_with_model: n_ubatch      = 512
0.00.375.449 I llama_new_context_with_model: flash_attn    = 0
0.00.375.451 I llama_new_context_with_model: freq_base     = 10000.0
0.00.375.452 I llama_new_context_with_model: freq_scale    = 1
0.00.375.453 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.391.011 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.391.025 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.391.116 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.392.356 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.392.362 I llama_new_context_with_model: graph nodes  = 601
0.00.392.362 I llama_new_context_with_model: graph splits = 1
0.00.392.364 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.478.049 I main: llama threadpool init, n_threads = 4
0.00.478.063 I 
0.00.478.138 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.478.141 I 
0.00.478.183 I sampler seed: 158615066
0.00.478.194 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.478.197 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.478.198 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.478.198 I 
 increamically, as the following factors are increased:

(a) Temperature

(b) Pressure

(c) Volume

(d) Amount of substance

0.02.742.394 I llama_perf_sampler_print:    sampling time =       4.95 ms /    33 runs   (    0.15 ms per token,  6669.36 tokens per second)
0.02.742.396 I llama_perf_context_print:        load time =     476.15 ms
0.02.742.397 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.742.399 I llama_perf_context_print:        eval time =    2245.30 ms /    32 runs   (   70.17 ms per token,    14.25 tokens per second)
0.02.742.399 I llama_perf_context_print:       total time =    2264.35 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.547 I build: 4015 (45950415) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.759 I main: llama backend init
0.00.001.842 I main: load the model and apply lora adapter, if any
0.00.022.252 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.266 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.273 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.276 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.280 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.281 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.282 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.282 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.283 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.284 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.288 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.289 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.290 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.290 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.290 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.674 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.060 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.852 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.858 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.859 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.860 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.861 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.862 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.863 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.866 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.867 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.868 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.869 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.870 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.873 I llama_model_loader: - type  f32:   37 tensors
0.00.131.874 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.280 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.941 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.544 I llm_load_vocab: special tokens cache size = 5
0.00.266.215 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.236 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.237 I llm_load_print_meta: arch             = gemma
0.00.266.237 I llm_load_print_meta: vocab type       = SPM
0.00.266.238 I llm_load_print_meta: n_vocab          = 256000
0.00.266.238 I llm_load_print_meta: n_merges         = 0
0.00.266.239 I llm_load_print_meta: vocab_only       = 0
0.00.266.239 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.240 I llm_load_print_meta: n_embd           = 2048
0.00.266.240 I llm_load_print_meta: n_layer          = 18
0.00.266.253 I llm_load_print_meta: n_head           = 8
0.00.266.254 I llm_load_print_meta: n_head_kv        = 1
0.00.266.255 I llm_load_print_meta: n_rot            = 256
0.00.266.255 I llm_load_print_meta: n_swa            = 0
0.00.266.255 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.256 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.257 I llm_load_print_meta: n_gqa            = 8
0.00.266.258 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.259 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.259 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.261 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.261 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.261 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.262 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.262 I llm_load_print_meta: n_ff             = 16384
0.00.266.263 I llm_load_print_meta: n_expert         = 0
0.00.266.263 I llm_load_print_meta: n_expert_used    = 0
0.00.266.264 I llm_load_print_meta: causal attn      = 1
0.00.266.264 I llm_load_print_meta: pooling type     = 0
0.00.266.265 I llm_load_print_meta: rope type        = 2
0.00.266.265 I llm_load_print_meta: rope scaling     = linear
0.00.266.266 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.267 I llm_load_print_meta: freq_scale_train = 1
0.00.266.268 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.268 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.268 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.268 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.269 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.269 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.269 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.270 I llm_load_print_meta: model type       = 2B
0.00.266.270 I llm_load_print_meta: model ftype      = Q8_0
0.00.266.271 I llm_load_print_meta: model params     = 2.51 B
0.00.266.272 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.266.272 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.273 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.273 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.274 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.274 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.274 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.275 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.275 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.275 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.276 I llm_load_print_meta: max token length = 93
0.00.366.301 I llm_load_tensors: CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.372.568 I llama_new_context_with_model: n_seq_max     = 1
0.00.372.574 I llama_new_context_with_model: n_ctx         = 4096
0.00.372.574 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.372.575 I llama_new_context_with_model: n_batch       = 2048
0.00.372.575 I llama_new_context_with_model: n_ubatch      = 512
0.00.372.575 I llama_new_context_with_model: flash_attn    = 0
0.00.372.579 I llama_new_context_with_model: freq_base     = 10000.0
0.00.372.579 I llama_new_context_with_model: freq_scale    = 1
0.00.372.580 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.387.297 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.387.311 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.387.401 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.388.643 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.388.648 I llama_new_context_with_model: graph nodes  = 601
0.00.388.648 I llama_new_context_with_model: graph splits = 1
0.00.388.650 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.471.413 I main: llama threadpool init, n_threads = 4
0.00.471.426 I 
0.00.471.497 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.471.500 I 
0.00.471.544 I sampler seed: 4050620044
0.00.471.554 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.471.558 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.471.558 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.471.560 I 
 seconally.

The provided text contains a statement about a future event. Therefore, it is important to consider the potential implications of that statement.

**Potential

0.02.684.425 I llama_perf_sampler_print:    sampling time =       5.03 ms /    33 runs   (    0.15 ms per token,  6558.03 tokens per second)
0.02.684.428 I llama_perf_context_print:        load time =     469.55 ms
0.02.684.429 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.684.431 I llama_perf_context_print:        eval time =    2193.46 ms /    32 runs   (   68.55 ms per token,    14.59 tokens per second)
0.02.684.432 I llama_perf_context_print:       total time =    2213.02 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.567 I build: 4015 (45950415) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.770 I main: llama backend init
0.00.001.859 I main: load the model and apply lora adapter, if any
0.00.022.607 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.620 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.627 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.637 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.638 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.643 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.643 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.644 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.645 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.645 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.646 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.651 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.652 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.652 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.654 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.654 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.837 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.298 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.159 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.165 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.166 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.166 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.167 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.168 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.169 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.172 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.172 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.173 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.173 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.174 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.177 I llama_model_loader: - type  f32:   37 tensors
0.00.133.178 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.887 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.241.239 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.740 I llm_load_vocab: special tokens cache size = 5
0.00.262.285 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.300 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.301 I llm_load_print_meta: arch             = gemma
0.00.262.302 I llm_load_print_meta: vocab type       = SPM
0.00.262.303 I llm_load_print_meta: n_vocab          = 256000
0.00.262.303 I llm_load_print_meta: n_merges         = 0
0.00.262.303 I llm_load_print_meta: vocab_only       = 0
0.00.262.304 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.304 I llm_load_print_meta: n_embd           = 2048
0.00.262.304 I llm_load_print_meta: n_layer          = 18
0.00.262.316 I llm_load_print_meta: n_head           = 8
0.00.262.317 I llm_load_print_meta: n_head_kv        = 1
0.00.262.318 I llm_load_print_meta: n_rot            = 256
0.00.262.318 I llm_load_print_meta: n_swa            = 0
0.00.262.318 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.319 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.320 I llm_load_print_meta: n_gqa            = 8
0.00.262.321 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.322 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.322 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.323 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.324 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.324 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.324 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.325 I llm_load_print_meta: n_ff             = 16384
0.00.262.326 I llm_load_print_meta: n_expert         = 0
0.00.262.326 I llm_load_print_meta: n_expert_used    = 0
0.00.262.326 I llm_load_print_meta: causal attn      = 1
0.00.262.327 I llm_load_print_meta: pooling type     = 0
0.00.262.327 I llm_load_print_meta: rope type        = 2
0.00.262.327 I llm_load_print_meta: rope scaling     = linear
0.00.262.329 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.329 I llm_load_print_meta: freq_scale_train = 1
0.00.262.329 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.330 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.330 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.330 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.331 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.331 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.331 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.332 I llm_load_print_meta: model type       = 2B
0.00.262.332 I llm_load_print_meta: model ftype      = Q8_0
0.00.262.333 I llm_load_print_meta: model params     = 2.51 B
0.00.262.334 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.262.334 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.334 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.335 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.335 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.336 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.336 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.336 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.336 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.337 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.337 I llm_load_print_meta: max token length = 93
0.00.358.335 I llm_load_tensors: CPU_Mapped model buffer size =   967.99 MiB
0.00.358.342 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.358.342 I llm_load_tensors: CPU_Mapped model buffer size =   411.77 MiB
0.00.358.343 I llm_load_tensors: CPU_Mapped model buffer size =   437.27 MiB
0.00.358.344 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.358.344 I llm_load_tensors: CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.363.556 I llama_new_context_with_model: n_seq_max     = 1
0.00.363.561 I llama_new_context_with_model: n_ctx         = 4096
0.00.363.562 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.363.562 I llama_new_context_with_model: n_batch       = 2048
0.00.363.563 I llama_new_context_with_model: n_ubatch      = 512
0.00.363.563 I llama_new_context_with_model: flash_attn    = 0
0.00.363.566 I llama_new_context_with_model: freq_base     = 10000.0
0.00.363.567 I llama_new_context_with_model: freq_scale    = 1
0.00.363.568 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.378.009 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.378.022 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.378.112 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.379.373 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.379.377 I llama_new_context_with_model: graph nodes  = 601
0.00.379.377 I llama_new_context_with_model: graph splits = 1
0.00.379.379 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.788 I main: llama threadpool init, n_threads = 4
0.00.464.800 I 
0.00.464.879 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.883 I 
0.00.464.921 I sampler seed: 1194239624
0.00.464.933 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.941 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.464.941 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.942 I 
 increasities.

The provided text contains an error. It appears to be missing punctuation. The corrected version would read as follows:

"The provided text contains

0.02.623.823 I llama_perf_sampler_print:    sampling time =       4.75 ms /    33 runs   (    0.14 ms per token,  6942.98 tokens per second)
0.02.623.825 I llama_perf_context_print:        load time =     462.91 ms
0.02.623.827 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.623.828 I llama_perf_context_print:        eval time =    2139.88 ms /    32 runs   (   66.87 ms per token,    14.95 tokens per second)
0.02.623.829 I llama_perf_context_print:       total time =    2159.04 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.528 I build: 4015 (45950415) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.001.882 I main: load the model and apply lora adapter, if any
0.00.022.142 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.151 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.159 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.168 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.172 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.177 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.178 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.180 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.181 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.183 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.184 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.189 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.190 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.191 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.192 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.193 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.415 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.894 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.693 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.699 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.700 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.701 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.702 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.703 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.704 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.708 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.709 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.709 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.710 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.711 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.715 I llama_model_loader: - type  f32:   37 tensors
0.00.131.717 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.419 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.336 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.240.854 I llm_load_vocab: special tokens cache size = 5
0.00.261.399 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.261.414 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.261.414 I llm_load_print_meta: arch             = gemma
0.00.261.416 I llm_load_print_meta: vocab type       = SPM
0.00.261.416 I llm_load_print_meta: n_vocab          = 256000
0.00.261.417 I llm_load_print_meta: n_merges         = 0
0.00.261.417 I llm_load_print_meta: vocab_only       = 0
0.00.261.418 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.418 I llm_load_print_meta: n_embd           = 2048
0.00.261.419 I llm_load_print_meta: n_layer          = 18
0.00.261.430 I llm_load_print_meta: n_head           = 8
0.00.261.431 I llm_load_print_meta: n_head_kv        = 1
0.00.261.431 I llm_load_print_meta: n_rot            = 256
0.00.261.432 I llm_load_print_meta: n_swa            = 0
0.00.261.433 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.433 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.434 I llm_load_print_meta: n_gqa            = 8
0.00.261.436 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.437 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.438 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.439 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.440 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.440 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.440 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.442 I llm_load_print_meta: n_ff             = 16384
0.00.261.442 I llm_load_print_meta: n_expert         = 0
0.00.261.442 I llm_load_print_meta: n_expert_used    = 0
0.00.261.443 I llm_load_print_meta: causal attn      = 1
0.00.261.446 I llm_load_print_meta: pooling type     = 0
0.00.261.446 I llm_load_print_meta: rope type        = 2
0.00.261.447 I llm_load_print_meta: rope scaling     = linear
0.00.261.448 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.449 I llm_load_print_meta: freq_scale_train = 1
0.00.261.449 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.449 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.449 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.450 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.450 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.450 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.450 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.451 I llm_load_print_meta: model type       = 2B
0.00.261.451 I llm_load_print_meta: model ftype      = Q8_0
0.00.261.452 I llm_load_print_meta: model params     = 2.51 B
0.00.261.453 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.261.454 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.454 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.454 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.455 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.455 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.456 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.457 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.457 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.458 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.458 I llm_load_print_meta: max token length = 93
0.00.333.485 I llm_load_tensors: CPU_Mapped model buffer size =  1904.18 MiB
0.00.333.492 I llm_load_tensors: CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.338.918 I llama_new_context_with_model: n_seq_max     = 1
0.00.338.924 I llama_new_context_with_model: n_ctx         = 4096
0.00.338.924 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.338.924 I llama_new_context_with_model: n_batch       = 2048
0.00.338.925 I llama_new_context_with_model: n_ubatch      = 512
0.00.338.925 I llama_new_context_with_model: flash_attn    = 0
0.00.338.927 I llama_new_context_with_model: freq_base     = 10000.0
0.00.338.928 I llama_new_context_with_model: freq_scale    = 1
0.00.338.929 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.353.243 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.353.256 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.353.353 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.581 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.354.585 I llama_new_context_with_model: graph nodes  = 601
0.00.354.586 I llama_new_context_with_model: graph splits = 1
0.00.354.588 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.442.690 I main: llama threadpool init, n_threads = 4
0.00.442.704 I 
0.00.442.783 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.442.787 I 
0.00.442.836 I sampler seed: 525062362
0.00.442.851 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.442.856 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.442.857 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.442.857 I 
 increably!

I am unable to generate a response that contains inappropriate or sexually suggestive language. My purpose is to assist with tasks and questions that comply with ethical

0.02.762.800 I llama_perf_sampler_print:    sampling time =       5.03 ms /    33 runs   (    0.15 ms per token,  6559.33 tokens per second)
0.02.762.803 I llama_perf_context_print:        load time =     440.79 ms
0.02.762.804 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.762.805 I llama_perf_context_print:        eval time =    2301.10 ms /    32 runs   (   71.91 ms per token,    13.91 tokens per second)
0.02.762.806 I llama_perf_context_print:       total time =    2320.12 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.270s
user	0m38.700s
sys	0m9.351s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4015 (45950415)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31965.57 ms
main:    total time = 31965.57 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.532 I build: 4015 (45950415) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.742 I main: llama backend init
0.00.001.851 I main: load the model and apply lora adapter, if any
0.00.022.570 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.578 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.586 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.591 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.592 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.597 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.597 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.598 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.599 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.599 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.600 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.603 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.604 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.605 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.605 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.606 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.826 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.210 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.017 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.024 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.025 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.026 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.027 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.028 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.029 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.032 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.033 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.034 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.034 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.035 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.039 I llama_model_loader: - type  f32:   37 tensors
0.00.132.040 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.040 I llama_model_loader: - type q6_K:   19 tensors
0.00.201.914 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.239.596 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.240.142 I llm_load_vocab: special tokens cache size = 5
0.00.261.744 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.261.762 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.261.763 I llm_load_print_meta: arch             = gemma
0.00.261.763 I llm_load_print_meta: vocab type       = SPM
0.00.261.764 I llm_load_print_meta: n_vocab          = 256000
0.00.261.765 I llm_load_print_meta: n_merges         = 0
0.00.261.765 I llm_load_print_meta: vocab_only       = 0
0.00.261.765 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.766 I llm_load_print_meta: n_embd           = 2048
0.00.261.766 I llm_load_print_meta: n_layer          = 18
0.00.261.778 I llm_load_print_meta: n_head           = 8
0.00.261.779 I llm_load_print_meta: n_head_kv        = 1
0.00.261.779 I llm_load_print_meta: n_rot            = 256
0.00.261.780 I llm_load_print_meta: n_swa            = 0
0.00.261.780 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.781 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.782 I llm_load_print_meta: n_gqa            = 8
0.00.261.783 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.784 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.785 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.786 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.787 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.787 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.787 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.788 I llm_load_print_meta: n_ff             = 16384
0.00.261.788 I llm_load_print_meta: n_expert         = 0
0.00.261.789 I llm_load_print_meta: n_expert_used    = 0
0.00.261.789 I llm_load_print_meta: causal attn      = 1
0.00.261.789 I llm_load_print_meta: pooling type     = 0
0.00.261.790 I llm_load_print_meta: rope type        = 2
0.00.261.790 I llm_load_print_meta: rope scaling     = linear
0.00.261.791 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.792 I llm_load_print_meta: freq_scale_train = 1
0.00.261.792 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.792 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.793 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.793 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.793 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.793 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.794 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.794 I llm_load_print_meta: model type       = 2B
0.00.261.795 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.261.796 I llm_load_print_meta: model params     = 2.51 B
0.00.261.796 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.261.797 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.797 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.797 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.798 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.798 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.798 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.799 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.799 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.799 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.799 I llm_load_print_meta: max token length = 93
0.00.324.224 I llm_load_tensors: CPU_Mapped model buffer size =   604.15 MiB
0.00.324.231 I llm_load_tensors: CPU_Mapped model buffer size =   185.62 MiB
0.00.324.231 I llm_load_tensors: CPU_Mapped model buffer size =   221.61 MiB
0.00.324.232 I llm_load_tensors: CPU_Mapped model buffer size =   185.89 MiB
0.00.324.232 I llm_load_tensors: CPU_Mapped model buffer size =   187.86 MiB
0.00.324.233 I llm_load_tensors: CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.329.508 I llama_new_context_with_model: n_seq_max     = 1
0.00.329.515 I llama_new_context_with_model: n_ctx         = 4096
0.00.329.515 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.329.516 I llama_new_context_with_model: n_batch       = 2048
0.00.329.516 I llama_new_context_with_model: n_ubatch      = 512
0.00.329.516 I llama_new_context_with_model: flash_attn    = 0
0.00.329.519 I llama_new_context_with_model: freq_base     = 10000.0
0.00.329.520 I llama_new_context_with_model: freq_scale    = 1
0.00.329.521 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.344.207 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.344.222 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.344.313 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.345.543 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.345.548 I llama_new_context_with_model: graph nodes  = 601
0.00.345.549 I llama_new_context_with_model: graph splits = 1
0.00.345.550 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.421.393 I main: llama threadpool init, n_threads = 4
0.00.421.406 I 
0.00.421.476 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.421.479 I 
0.00.421.519 I sampler seed: 3019383709
0.00.421.530 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.421.534 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.421.535 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.421.535 I 
 encompasses the most profound question of the human condition: what does it mean to be human?

This question has vexed philosophers and theologians for centuries, and has

0.02.076.731 I llama_perf_sampler_print:    sampling time =       5.35 ms /    33 runs   (    0.16 ms per token,  6171.69 tokens per second)
0.02.076.733 I llama_perf_context_print:        load time =     419.52 ms
0.02.076.734 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.076.736 I llama_perf_context_print:        eval time =    1635.46 ms /    32 runs   (   51.11 ms per token,    19.57 tokens per second)
0.02.076.736 I llama_perf_context_print:       total time =    1655.35 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4015 (45950415)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32045.90 ms
main:    total time = 32045.90 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.554 I build: 4015 (45950415) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.760 I main: llama backend init
0.00.001.862 I main: load the model and apply lora adapter, if any
0.00.022.346 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.362 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.373 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.374 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.378 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.378 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.379 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.380 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.381 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.382 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.386 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.387 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.388 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.388 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.389 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.693 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.216 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.080 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.086 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.087 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.087 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.088 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.089 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.089 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.092 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.092 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.095 I llama_model_loader: - type  f32:   37 tensors
0.00.132.096 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.097 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.015 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.246.887 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.421 I llm_load_vocab: special tokens cache size = 5
0.00.268.074 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.090 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.090 I llm_load_print_meta: arch             = gemma
0.00.268.091 I llm_load_print_meta: vocab type       = SPM
0.00.268.092 I llm_load_print_meta: n_vocab          = 256000
0.00.268.093 I llm_load_print_meta: n_merges         = 0
0.00.268.093 I llm_load_print_meta: vocab_only       = 0
0.00.268.094 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.094 I llm_load_print_meta: n_embd           = 2048
0.00.268.095 I llm_load_print_meta: n_layer          = 18
0.00.268.106 I llm_load_print_meta: n_head           = 8
0.00.268.107 I llm_load_print_meta: n_head_kv        = 1
0.00.268.107 I llm_load_print_meta: n_rot            = 256
0.00.268.107 I llm_load_print_meta: n_swa            = 0
0.00.268.108 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.109 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.110 I llm_load_print_meta: n_gqa            = 8
0.00.268.112 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.113 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.114 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.116 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.116 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.117 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.117 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.118 I llm_load_print_meta: n_ff             = 16384
0.00.268.119 I llm_load_print_meta: n_expert         = 0
0.00.268.120 I llm_load_print_meta: n_expert_used    = 0
0.00.268.120 I llm_load_print_meta: causal attn      = 1
0.00.268.120 I llm_load_print_meta: pooling type     = 0
0.00.268.121 I llm_load_print_meta: rope type        = 2
0.00.268.121 I llm_load_print_meta: rope scaling     = linear
0.00.268.123 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.124 I llm_load_print_meta: freq_scale_train = 1
0.00.268.124 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.125 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.126 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.126 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.127 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.127 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.127 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.128 I llm_load_print_meta: model type       = 2B
0.00.268.129 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.268.129 I llm_load_print_meta: model params     = 2.51 B
0.00.268.130 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.268.131 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.131 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.131 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.132 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.133 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.133 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.133 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.134 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.136 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.137 I llm_load_print_meta: max token length = 93
0.00.327.766 I llm_load_tensors: CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.332.893 I llama_new_context_with_model: n_seq_max     = 1
0.00.332.899 I llama_new_context_with_model: n_ctx         = 4096
0.00.332.900 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.332.900 I llama_new_context_with_model: n_batch       = 2048
0.00.332.901 I llama_new_context_with_model: n_ubatch      = 512
0.00.332.901 I llama_new_context_with_model: flash_attn    = 0
0.00.332.903 I llama_new_context_with_model: freq_base     = 10000.0
0.00.332.904 I llama_new_context_with_model: freq_scale    = 1
0.00.332.905 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.347.764 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.347.779 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.347.867 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.349.104 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.349.111 I llama_new_context_with_model: graph nodes  = 601
0.00.349.111 I llama_new_context_with_model: graph splits = 1
0.00.349.113 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.423.115 I main: llama threadpool init, n_threads = 4
0.00.423.128 I 
0.00.423.212 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.423.216 I 
0.00.423.257 I sampler seed: 2522752777
0.00.423.267 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.423.274 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.423.277 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.423.278 I 
 increasities in the anime My Hero Academia.

**Answer:** I am unable to provide sexually suggestive or inappropriate information or answer questions related to sensitive topics. [end of text]


0.02.027.263 I llama_perf_sampler_print:    sampling time =       4.82 ms /    33 runs   (    0.15 ms per token,  6852.16 tokens per second)
0.02.027.266 I llama_perf_context_print:        load time =     421.23 ms
0.02.027.268 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.027.270 I llama_perf_context_print:        eval time =    1585.52 ms /    32 runs   (   49.55 ms per token,    20.18 tokens per second)
0.02.027.270 I llama_perf_context_print:       total time =    1604.16 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.155s
user	8m14.871s
sys	0m6.795s
