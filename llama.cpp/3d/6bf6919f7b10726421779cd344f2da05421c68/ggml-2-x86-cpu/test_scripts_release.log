+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.552 I build: 3823 (3d6bf691) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.756 I main: llama backend init
0.00.001.893 I main: load the model and apply lora adapter, if any
0.00.022.216 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.274 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.284 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.292 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.297 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.302 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.303 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.304 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.305 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.306 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.307 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.313 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.314 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.314 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.315 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.316 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.906 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.314 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.215 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.222 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.223 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.224 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.225 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.226 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.228 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.231 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.232 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.233 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.234 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.134.235 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.239 I llama_model_loader: - type  f32:   37 tensors
0.00.134.242 I llama_model_loader: - type q8_0:  127 tensors
0.00.199.017 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.421 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.115 I llm_load_vocab: special tokens cache size = 5
0.00.231.151 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.231.163 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.231.164 I llm_load_print_meta: arch             = gemma
0.00.231.164 I llm_load_print_meta: vocab type       = SPM
0.00.231.165 I llm_load_print_meta: n_vocab          = 256000
0.00.231.165 I llm_load_print_meta: n_merges         = 0
0.00.231.166 I llm_load_print_meta: vocab_only       = 0
0.00.231.166 I llm_load_print_meta: n_ctx_train      = 8192
0.00.231.167 I llm_load_print_meta: n_embd           = 2048
0.00.231.167 I llm_load_print_meta: n_layer          = 18
0.00.231.179 I llm_load_print_meta: n_head           = 8
0.00.231.180 I llm_load_print_meta: n_head_kv        = 1
0.00.231.180 I llm_load_print_meta: n_rot            = 256
0.00.231.180 I llm_load_print_meta: n_swa            = 0
0.00.231.181 I llm_load_print_meta: n_embd_head_k    = 256
0.00.231.181 I llm_load_print_meta: n_embd_head_v    = 256
0.00.231.182 I llm_load_print_meta: n_gqa            = 8
0.00.231.183 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.231.184 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.231.184 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.231.186 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.231.186 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.231.187 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.231.187 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.231.188 I llm_load_print_meta: n_ff             = 16384
0.00.231.188 I llm_load_print_meta: n_expert         = 0
0.00.231.189 I llm_load_print_meta: n_expert_used    = 0
0.00.231.189 I llm_load_print_meta: causal attn      = 1
0.00.231.189 I llm_load_print_meta: pooling type     = 0
0.00.231.189 I llm_load_print_meta: rope type        = 2
0.00.231.190 I llm_load_print_meta: rope scaling     = linear
0.00.231.191 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.231.191 I llm_load_print_meta: freq_scale_train = 1
0.00.231.192 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.231.192 I llm_load_print_meta: rope_finetuned   = unknown
0.00.231.193 I llm_load_print_meta: ssm_d_conv       = 0
0.00.231.193 I llm_load_print_meta: ssm_d_inner      = 0
0.00.231.193 I llm_load_print_meta: ssm_d_state      = 0
0.00.231.193 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.231.194 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.231.194 I llm_load_print_meta: model type       = 2B
0.00.231.194 I llm_load_print_meta: model ftype      = Q8_0
0.00.231.195 I llm_load_print_meta: model params     = 2.51 B
0.00.231.196 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.231.196 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.231.197 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.231.197 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.231.198 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.231.198 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.231.199 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.231.199 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.231.199 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.231.200 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.231.200 I llm_load_print_meta: max token length = 93
0.00.231.221 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.327.944 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.327.954 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.327.955 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.327.955 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.327.956 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.327.956 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.333.272 I llama_new_context_with_model: n_ctx      = 8192
0.00.333.280 I llama_new_context_with_model: n_batch    = 2048
0.00.333.281 I llama_new_context_with_model: n_ubatch   = 512
0.00.333.282 I llama_new_context_with_model: flash_attn = 0
0.00.333.285 I llama_new_context_with_model: freq_base  = 10000.0
0.00.333.286 I llama_new_context_with_model: freq_scale = 1
0.00.361.843 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.361.861 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.361.951 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.848 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.362.854 I llama_new_context_with_model: graph nodes  = 601
0.00.362.854 I llama_new_context_with_model: graph splits = 1
0.00.362.856 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.452.913 I main: llama threadpool init, n_threads = 4
0.00.452.924 I 
0.00.453.003 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.453.008 I 
0.00.453.047 I sampler seed: 354164558
0.00.453.059 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.453.066 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.453.067 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.453.067 I 
 increasities in the anime My Hero Academia.

**Answer:**

I am unable to provide sexually suggestive or inappropriate responses. My purpose is to assist with tasks

0.02.682.752 I llama_perf_sampler_print:    sampling time =       5.01 ms /    33 runs   (    0.15 ms per token,  6586.83 tokens per second)
0.02.682.755 I llama_perf_context_print:        load time =     451.00 ms
0.02.682.756 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.682.757 I llama_perf_context_print:        eval time =    2210.74 ms /    32 runs   (   69.09 ms per token,    14.47 tokens per second)
0.02.682.758 I llama_perf_context_print:       total time =    2229.85 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.538 I build: 3823 (3d6bf691) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.752 I main: llama backend init
0.00.001.909 I main: load the model and apply lora adapter, if any
0.00.022.229 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.240 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.247 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.248 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.253 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.254 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.255 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.256 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.257 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.258 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.263 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.264 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.265 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.265 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.266 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.917 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.708 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.584 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.591 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.592 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.592 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.593 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.594 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.595 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.597 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.606 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.606 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.607 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.608 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.612 I llama_model_loader: - type  f32:   37 tensors
0.00.133.614 I llama_model_loader: - type q8_0:  127 tensors
0.00.200.813 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.215.842 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.216.693 I llm_load_vocab: special tokens cache size = 5
0.00.235.110 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.235.126 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.235.127 I llm_load_print_meta: arch             = gemma
0.00.235.128 I llm_load_print_meta: vocab type       = SPM
0.00.235.129 I llm_load_print_meta: n_vocab          = 256000
0.00.235.129 I llm_load_print_meta: n_merges         = 0
0.00.235.129 I llm_load_print_meta: vocab_only       = 0
0.00.235.130 I llm_load_print_meta: n_ctx_train      = 8192
0.00.235.130 I llm_load_print_meta: n_embd           = 2048
0.00.235.130 I llm_load_print_meta: n_layer          = 18
0.00.235.144 I llm_load_print_meta: n_head           = 8
0.00.235.145 I llm_load_print_meta: n_head_kv        = 1
0.00.235.145 I llm_load_print_meta: n_rot            = 256
0.00.235.146 I llm_load_print_meta: n_swa            = 0
0.00.235.146 I llm_load_print_meta: n_embd_head_k    = 256
0.00.235.146 I llm_load_print_meta: n_embd_head_v    = 256
0.00.235.147 I llm_load_print_meta: n_gqa            = 8
0.00.235.148 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.235.149 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.235.150 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.235.151 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.235.151 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.235.152 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.235.152 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.235.153 I llm_load_print_meta: n_ff             = 16384
0.00.235.153 I llm_load_print_meta: n_expert         = 0
0.00.235.154 I llm_load_print_meta: n_expert_used    = 0
0.00.235.154 I llm_load_print_meta: causal attn      = 1
0.00.235.154 I llm_load_print_meta: pooling type     = 0
0.00.235.154 I llm_load_print_meta: rope type        = 2
0.00.235.155 I llm_load_print_meta: rope scaling     = linear
0.00.235.156 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.235.157 I llm_load_print_meta: freq_scale_train = 1
0.00.235.158 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.235.158 I llm_load_print_meta: rope_finetuned   = unknown
0.00.235.159 I llm_load_print_meta: ssm_d_conv       = 0
0.00.235.160 I llm_load_print_meta: ssm_d_inner      = 0
0.00.235.161 I llm_load_print_meta: ssm_d_state      = 0
0.00.235.161 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.235.162 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.235.163 I llm_load_print_meta: model type       = 2B
0.00.235.164 I llm_load_print_meta: model ftype      = Q8_0
0.00.235.165 I llm_load_print_meta: model params     = 2.51 B
0.00.235.166 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.235.167 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.235.168 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.235.168 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.235.169 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.235.174 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.235.174 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.235.175 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.235.175 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.235.176 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.235.176 I llm_load_print_meta: max token length = 93
0.00.235.201 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.327.397 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.332.429 I llama_new_context_with_model: n_ctx      = 8192
0.00.332.436 I llama_new_context_with_model: n_batch    = 2048
0.00.332.436 I llama_new_context_with_model: n_ubatch   = 512
0.00.332.437 I llama_new_context_with_model: flash_attn = 0
0.00.332.440 I llama_new_context_with_model: freq_base  = 10000.0
0.00.332.441 I llama_new_context_with_model: freq_scale = 1
0.00.361.744 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.361.760 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.361.848 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.691 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.362.699 I llama_new_context_with_model: graph nodes  = 601
0.00.362.700 I llama_new_context_with_model: graph splits = 1
0.00.362.702 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.450.258 I main: llama threadpool init, n_threads = 4
0.00.450.271 I 
0.00.450.358 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.450.364 I 
0.00.450.399 I sampler seed: 1521921627
0.00.450.417 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.450.420 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.450.420 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.450.421 I 
 increasities, and other forms of flattery are inappropriate in the workplace.

**True or False**

This statement is true. [end of text]


0.02.288.529 I llama_perf_sampler_print:    sampling time =       4.02 ms /    28 runs   (    0.14 ms per token,  6965.17 tokens per second)
0.02.288.531 I llama_perf_context_print:        load time =     448.33 ms
0.02.288.533 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.288.534 I llama_perf_context_print:        eval time =    1822.72 ms /    27 runs   (   67.51 ms per token,    14.81 tokens per second)
0.02.288.535 I llama_perf_context_print:       total time =    1838.28 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.650 I build: 3823 (3d6bf691) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.891 I main: llama backend init
0.00.002.631 I main: load the model and apply lora adapter, if any
0.00.027.310 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.027.360 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.027.367 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.372 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.373 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.376 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.377 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.378 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.379 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.380 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.380 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.384 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.385 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.386 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.386 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.387 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.056.052 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.137.915 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.144.734 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.144.740 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.144.741 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.144.741 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.144.742 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.144.743 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.144.744 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.144.746 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.144.747 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.144.748 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.144.749 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.144.749 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.144.752 I llama_model_loader: - type  f32:   37 tensors
0.00.144.755 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.411 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.236.358 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.237.128 I llm_load_vocab: special tokens cache size = 5
0.00.255.269 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.255.284 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.255.285 I llm_load_print_meta: arch             = gemma
0.00.255.286 I llm_load_print_meta: vocab type       = SPM
0.00.255.286 I llm_load_print_meta: n_vocab          = 256000
0.00.255.287 I llm_load_print_meta: n_merges         = 0
0.00.255.287 I llm_load_print_meta: vocab_only       = 0
0.00.255.288 I llm_load_print_meta: n_ctx_train      = 8192
0.00.255.288 I llm_load_print_meta: n_embd           = 2048
0.00.255.288 I llm_load_print_meta: n_layer          = 18
0.00.255.300 I llm_load_print_meta: n_head           = 8
0.00.255.301 I llm_load_print_meta: n_head_kv        = 1
0.00.255.302 I llm_load_print_meta: n_rot            = 256
0.00.255.302 I llm_load_print_meta: n_swa            = 0
0.00.255.303 I llm_load_print_meta: n_embd_head_k    = 256
0.00.255.303 I llm_load_print_meta: n_embd_head_v    = 256
0.00.255.304 I llm_load_print_meta: n_gqa            = 8
0.00.255.305 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.255.307 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.255.307 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.255.309 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.255.309 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.255.310 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.255.310 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.255.311 I llm_load_print_meta: n_ff             = 16384
0.00.255.311 I llm_load_print_meta: n_expert         = 0
0.00.255.311 I llm_load_print_meta: n_expert_used    = 0
0.00.255.311 I llm_load_print_meta: causal attn      = 1
0.00.255.312 I llm_load_print_meta: pooling type     = 0
0.00.255.312 I llm_load_print_meta: rope type        = 2
0.00.255.312 I llm_load_print_meta: rope scaling     = linear
0.00.255.314 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.255.314 I llm_load_print_meta: freq_scale_train = 1
0.00.255.315 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.255.315 I llm_load_print_meta: rope_finetuned   = unknown
0.00.255.316 I llm_load_print_meta: ssm_d_conv       = 0
0.00.255.317 I llm_load_print_meta: ssm_d_inner      = 0
0.00.255.317 I llm_load_print_meta: ssm_d_state      = 0
0.00.255.317 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.255.318 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.255.318 I llm_load_print_meta: model type       = 2B
0.00.255.319 I llm_load_print_meta: model ftype      = Q8_0
0.00.255.320 I llm_load_print_meta: model params     = 2.51 B
0.00.255.321 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.255.321 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.255.321 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.255.322 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.255.322 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.255.322 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.255.323 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.255.324 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.255.324 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.255.325 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.255.325 I llm_load_print_meta: max token length = 93
0.00.255.345 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.336.593 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.336.600 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.336.601 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.336.601 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.336.602 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.336.602 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.341.572 I llama_new_context_with_model: n_ctx      = 8192
0.00.341.578 I llama_new_context_with_model: n_batch    = 2048
0.00.341.579 I llama_new_context_with_model: n_ubatch   = 512
0.00.341.579 I llama_new_context_with_model: flash_attn = 0
0.00.341.581 I llama_new_context_with_model: freq_base  = 10000.0
0.00.341.582 I llama_new_context_with_model: freq_scale = 1
0.00.370.615 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.370.629 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.370.720 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.594 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.371.602 I llama_new_context_with_model: graph nodes  = 601
0.00.371.602 I llama_new_context_with_model: graph splits = 1
0.00.371.604 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.464.004 I main: llama threadpool init, n_threads = 4
0.00.464.016 I 
0.00.464.090 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.464.093 I 
0.00.464.145 I sampler seed: 4005518336
0.00.464.154 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.464.164 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.464.165 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.464.165 I 
 increasities. 

I do not understand. Can you please explain?

I am unable to provide an explanation as the provided context does not contain any information

0.02.732.772 I llama_perf_sampler_print:    sampling time =       4.71 ms /    33 runs   (    0.14 ms per token,  7001.91 tokens per second)
0.02.732.775 I llama_perf_context_print:        load time =     461.35 ms
0.02.732.776 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.732.777 I llama_perf_context_print:        eval time =    2249.86 ms /    32 runs   (   70.31 ms per token,    14.22 tokens per second)
0.02.732.778 I llama_perf_context_print:       total time =    2268.78 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.589 I build: 3823 (3d6bf691) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.814 I main: llama backend init
0.00.001.955 I main: load the model and apply lora adapter, if any
0.00.022.339 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.399 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.411 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.421 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.426 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.431 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.432 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.433 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.434 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.434 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.435 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.441 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.442 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.443 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.444 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.446 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.227 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.133.702 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.140.619 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.140.627 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.140.628 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.140.629 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.140.630 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.140.630 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.140.631 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.140.635 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.140.635 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.140.636 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.140.636 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.140.637 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.140.642 I llama_model_loader: - type  f32:   37 tensors
0.00.140.645 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.086 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.223.247 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.223.938 I llm_load_vocab: special tokens cache size = 5
0.00.241.915 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.241.930 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.241.930 I llm_load_print_meta: arch             = gemma
0.00.241.931 I llm_load_print_meta: vocab type       = SPM
0.00.241.931 I llm_load_print_meta: n_vocab          = 256000
0.00.241.932 I llm_load_print_meta: n_merges         = 0
0.00.241.932 I llm_load_print_meta: vocab_only       = 0
0.00.241.932 I llm_load_print_meta: n_ctx_train      = 8192
0.00.241.933 I llm_load_print_meta: n_embd           = 2048
0.00.241.933 I llm_load_print_meta: n_layer          = 18
0.00.241.946 I llm_load_print_meta: n_head           = 8
0.00.241.947 I llm_load_print_meta: n_head_kv        = 1
0.00.241.947 I llm_load_print_meta: n_rot            = 256
0.00.241.948 I llm_load_print_meta: n_swa            = 0
0.00.241.948 I llm_load_print_meta: n_embd_head_k    = 256
0.00.241.948 I llm_load_print_meta: n_embd_head_v    = 256
0.00.241.949 I llm_load_print_meta: n_gqa            = 8
0.00.241.950 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.241.951 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.241.952 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.241.953 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.241.954 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.241.954 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.241.954 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.241.955 I llm_load_print_meta: n_ff             = 16384
0.00.241.955 I llm_load_print_meta: n_expert         = 0
0.00.241.956 I llm_load_print_meta: n_expert_used    = 0
0.00.241.956 I llm_load_print_meta: causal attn      = 1
0.00.241.956 I llm_load_print_meta: pooling type     = 0
0.00.241.956 I llm_load_print_meta: rope type        = 2
0.00.241.956 I llm_load_print_meta: rope scaling     = linear
0.00.241.958 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.241.958 I llm_load_print_meta: freq_scale_train = 1
0.00.241.958 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.241.959 I llm_load_print_meta: rope_finetuned   = unknown
0.00.241.959 I llm_load_print_meta: ssm_d_conv       = 0
0.00.241.960 I llm_load_print_meta: ssm_d_inner      = 0
0.00.241.960 I llm_load_print_meta: ssm_d_state      = 0
0.00.241.960 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.241.960 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.241.961 I llm_load_print_meta: model type       = 2B
0.00.241.962 I llm_load_print_meta: model ftype      = Q8_0
0.00.241.962 I llm_load_print_meta: model params     = 2.51 B
0.00.241.963 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.241.963 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.241.963 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.241.964 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.241.964 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.241.964 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.241.965 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.241.965 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.241.965 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.241.966 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.241.966 I llm_load_print_meta: max token length = 93
0.00.241.981 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.318.160 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.318.168 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.323.230 I llama_new_context_with_model: n_ctx      = 8192
0.00.323.236 I llama_new_context_with_model: n_batch    = 2048
0.00.323.237 I llama_new_context_with_model: n_ubatch   = 512
0.00.323.237 I llama_new_context_with_model: flash_attn = 0
0.00.323.239 I llama_new_context_with_model: freq_base  = 10000.0
0.00.323.240 I llama_new_context_with_model: freq_scale = 1
0.00.354.065 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.354.089 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.354.194 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.355.276 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.355.285 I llama_new_context_with_model: graph nodes  = 601
0.00.355.285 I llama_new_context_with_model: graph splits = 1
0.00.355.288 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.450.549 I main: llama threadpool init, n_threads = 4
0.00.450.566 I 
0.00.450.655 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.450.659 I 
0.00.450.704 I sampler seed: 247330412
0.00.450.717 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.450.722 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.450.723 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.450.723 I 
 seconary lymphoid organs (sgLOs) are lymphoid follicles that contain plasma cells, T cells, and dendritic cells. sgLOs are found in various tissues

0.02.884.216 I llama_perf_sampler_print:    sampling time =       4.95 ms /    33 runs   (    0.15 ms per token,  6669.36 tokens per second)
0.02.884.218 I llama_perf_context_print:        load time =     448.57 ms
0.02.884.219 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.884.221 I llama_perf_context_print:        eval time =    2414.94 ms /    32 runs   (   75.47 ms per token,    13.25 tokens per second)
0.02.884.221 I llama_perf_context_print:       total time =    2433.68 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.214s
user	0m37.831s
sys	0m9.381s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3823 (3d6bf691)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32010.79 ms
main:    total time = 32010.79 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.571 I build: 3823 (3d6bf691) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.775 I main: llama backend init
0.00.002.025 I main: load the model and apply lora adapter, if any
0.00.022.505 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.555 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.563 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.567 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.568 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.572 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.573 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.574 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.574 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.575 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.575 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.578 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.579 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.579 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.580 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.580 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.200 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.890 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.710 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.716 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.717 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.718 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.718 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.719 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.720 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.722 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.723 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.724 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.725 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.725 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.729 I llama_model_loader: - type  f32:   37 tensors
0.00.133.731 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.731 I llama_model_loader: - type q6_K:   19 tensors
0.00.198.217 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.212.678 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.213.433 I llm_load_vocab: special tokens cache size = 5
0.00.231.595 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.231.608 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.231.609 I llm_load_print_meta: arch             = gemma
0.00.231.609 I llm_load_print_meta: vocab type       = SPM
0.00.231.610 I llm_load_print_meta: n_vocab          = 256000
0.00.231.611 I llm_load_print_meta: n_merges         = 0
0.00.231.611 I llm_load_print_meta: vocab_only       = 0
0.00.231.612 I llm_load_print_meta: n_ctx_train      = 8192
0.00.231.612 I llm_load_print_meta: n_embd           = 2048
0.00.231.612 I llm_load_print_meta: n_layer          = 18
0.00.231.625 I llm_load_print_meta: n_head           = 8
0.00.231.626 I llm_load_print_meta: n_head_kv        = 1
0.00.231.626 I llm_load_print_meta: n_rot            = 256
0.00.231.627 I llm_load_print_meta: n_swa            = 0
0.00.231.627 I llm_load_print_meta: n_embd_head_k    = 256
0.00.231.627 I llm_load_print_meta: n_embd_head_v    = 256
0.00.231.628 I llm_load_print_meta: n_gqa            = 8
0.00.231.629 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.231.630 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.231.631 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.231.632 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.231.633 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.231.633 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.231.633 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.231.634 I llm_load_print_meta: n_ff             = 16384
0.00.231.634 I llm_load_print_meta: n_expert         = 0
0.00.231.634 I llm_load_print_meta: n_expert_used    = 0
0.00.231.635 I llm_load_print_meta: causal attn      = 1
0.00.231.635 I llm_load_print_meta: pooling type     = 0
0.00.231.635 I llm_load_print_meta: rope type        = 2
0.00.231.635 I llm_load_print_meta: rope scaling     = linear
0.00.231.637 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.231.637 I llm_load_print_meta: freq_scale_train = 1
0.00.231.638 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.231.638 I llm_load_print_meta: rope_finetuned   = unknown
0.00.231.639 I llm_load_print_meta: ssm_d_conv       = 0
0.00.231.639 I llm_load_print_meta: ssm_d_inner      = 0
0.00.231.639 I llm_load_print_meta: ssm_d_state      = 0
0.00.231.639 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.231.640 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.231.640 I llm_load_print_meta: model type       = 2B
0.00.231.641 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.231.641 I llm_load_print_meta: model params     = 2.51 B
0.00.231.642 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.231.642 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.231.643 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.231.643 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.231.643 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.231.643 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.231.644 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.231.644 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.231.645 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.231.645 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.231.645 I llm_load_print_meta: max token length = 93
0.00.231.666 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.289.042 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.289.049 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.289.050 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.289.051 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.289.051 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.289.052 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.294.180 I llama_new_context_with_model: n_ctx      = 8192
0.00.294.186 I llama_new_context_with_model: n_batch    = 2048
0.00.294.186 I llama_new_context_with_model: n_ubatch   = 512
0.00.294.187 I llama_new_context_with_model: flash_attn = 0
0.00.294.189 I llama_new_context_with_model: freq_base  = 10000.0
0.00.294.190 I llama_new_context_with_model: freq_scale = 1
0.00.323.000 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.323.016 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.323.105 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.323.962 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.323.970 I llama_new_context_with_model: graph nodes  = 601
0.00.323.970 I llama_new_context_with_model: graph splits = 1
0.00.323.972 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.405.689 I main: llama threadpool init, n_threads = 4
0.00.405.701 I 
0.00.405.778 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.405.781 I 
0.00.405.812 I sampler seed: 1744968430
0.00.405.823 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.405.826 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.405.827 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.405.827 I 
 seconally with the response.

**Question:** What is the significance of the concept of entropy in physics?

**Answer:**

Entropy is significant in physics

0.02.041.618 I llama_perf_sampler_print:    sampling time =       4.98 ms /    33 runs   (    0.15 ms per token,  6633.17 tokens per second)
0.02.041.621 I llama_perf_context_print:        load time =     403.65 ms
0.02.041.622 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.041.623 I llama_perf_context_print:        eval time =    1616.88 ms /    32 runs   (   50.53 ms per token,    19.79 tokens per second)
0.02.041.624 I llama_perf_context_print:       total time =    1635.94 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3823 (3d6bf691)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32098.15 ms
main:    total time = 32098.15 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.552 I build: 3823 (3d6bf691) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.755 I main: llama backend init
0.00.001.866 I main: load the model and apply lora adapter, if any
0.00.022.385 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.396 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.403 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.404 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.408 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.408 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.409 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.409 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.410 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.411 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.415 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.415 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.416 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.417 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.417 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.111 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.036 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.858 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.864 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.865 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.866 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.867 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.868 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.869 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.873 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.874 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.877 I llama_model_loader: - type  f32:   37 tensors
0.00.133.880 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.881 I llama_model_loader: - type q6_K:   19 tensors
0.00.199.460 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.214.722 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.215.492 I llm_load_vocab: special tokens cache size = 5
0.00.233.728 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.233.742 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.233.743 I llm_load_print_meta: arch             = gemma
0.00.233.744 I llm_load_print_meta: vocab type       = SPM
0.00.233.745 I llm_load_print_meta: n_vocab          = 256000
0.00.233.745 I llm_load_print_meta: n_merges         = 0
0.00.233.745 I llm_load_print_meta: vocab_only       = 0
0.00.233.746 I llm_load_print_meta: n_ctx_train      = 8192
0.00.233.746 I llm_load_print_meta: n_embd           = 2048
0.00.233.746 I llm_load_print_meta: n_layer          = 18
0.00.233.758 I llm_load_print_meta: n_head           = 8
0.00.233.760 I llm_load_print_meta: n_head_kv        = 1
0.00.233.760 I llm_load_print_meta: n_rot            = 256
0.00.233.760 I llm_load_print_meta: n_swa            = 0
0.00.233.761 I llm_load_print_meta: n_embd_head_k    = 256
0.00.233.761 I llm_load_print_meta: n_embd_head_v    = 256
0.00.233.762 I llm_load_print_meta: n_gqa            = 8
0.00.233.763 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.233.764 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.233.765 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.233.767 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.233.767 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.233.768 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.233.768 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.233.769 I llm_load_print_meta: n_ff             = 16384
0.00.233.769 I llm_load_print_meta: n_expert         = 0
0.00.233.770 I llm_load_print_meta: n_expert_used    = 0
0.00.233.771 I llm_load_print_meta: causal attn      = 1
0.00.233.771 I llm_load_print_meta: pooling type     = 0
0.00.233.771 I llm_load_print_meta: rope type        = 2
0.00.233.772 I llm_load_print_meta: rope scaling     = linear
0.00.233.773 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.233.775 I llm_load_print_meta: freq_scale_train = 1
0.00.233.775 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.233.775 I llm_load_print_meta: rope_finetuned   = unknown
0.00.233.776 I llm_load_print_meta: ssm_d_conv       = 0
0.00.233.776 I llm_load_print_meta: ssm_d_inner      = 0
0.00.233.776 I llm_load_print_meta: ssm_d_state      = 0
0.00.233.776 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.233.777 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.233.777 I llm_load_print_meta: model type       = 2B
0.00.233.778 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.233.779 I llm_load_print_meta: model params     = 2.51 B
0.00.233.780 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.233.781 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.233.781 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.233.782 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.233.782 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.233.782 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.233.783 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.233.783 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.233.785 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.233.785 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.233.786 I llm_load_print_meta: max token length = 93
0.00.233.811 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.290.003 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.295.001 I llama_new_context_with_model: n_ctx      = 8192
0.00.295.007 I llama_new_context_with_model: n_batch    = 2048
0.00.295.008 I llama_new_context_with_model: n_ubatch   = 512
0.00.295.008 I llama_new_context_with_model: flash_attn = 0
0.00.295.010 I llama_new_context_with_model: freq_base  = 10000.0
0.00.295.011 I llama_new_context_with_model: freq_scale = 1
0.00.324.407 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.324.424 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.324.514 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.325.359 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.325.367 I llama_new_context_with_model: graph nodes  = 601
0.00.325.367 I llama_new_context_with_model: graph splits = 1
0.00.325.369 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.406.403 I main: llama threadpool init, n_threads = 4
0.00.406.415 I 
0.00.406.489 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.406.492 I 
0.00.406.521 I sampler seed: 1425315498
0.00.406.530 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.406.534 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.406.535 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.406.535 I 
 fufilling to the moon and leaving a trail of stardust.

This is a metaphor for:
A) Personal growth
B) Scientific exploration
C

0.02.006.228 I llama_perf_sampler_print:    sampling time =       4.73 ms /    33 runs   (    0.14 ms per token,  6973.80 tokens per second)
0.02.006.230 I llama_perf_context_print:        load time =     404.52 ms
0.02.006.233 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.006.235 I llama_perf_context_print:        eval time =    1581.48 ms /    32 runs   (   49.42 ms per token,    20.23 tokens per second)
0.02.006.235 I llama_perf_context_print:       total time =    1599.83 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.951s
user	8m14.612s
sys	0m6.969s
