+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.424 I build: 4102 (3d9b733e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.615 I main: llama backend init
0.00.000.622 I main: load the model and apply lora adapter, if any
0.00.021.862 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.872 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.880 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.885 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.889 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.894 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.895 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.896 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.896 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.897 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.897 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.901 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.902 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.902 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.903 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.903 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.411 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.530 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.333 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.338 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.339 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.340 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.340 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.341 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.342 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.344 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.344 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.345 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.346 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.346 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.350 I llama_model_loader: - type  f32:   37 tensors
0.00.131.351 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.174 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.994 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.241.516 I llm_load_vocab: special tokens cache size = 5
0.00.262.371 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.262.387 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.262.387 I llm_load_print_meta: arch             = gemma
0.00.262.388 I llm_load_print_meta: vocab type       = SPM
0.00.262.388 I llm_load_print_meta: n_vocab          = 256000
0.00.262.389 I llm_load_print_meta: n_merges         = 0
0.00.262.389 I llm_load_print_meta: vocab_only       = 0
0.00.262.389 I llm_load_print_meta: n_ctx_train      = 8192
0.00.262.390 I llm_load_print_meta: n_embd           = 2048
0.00.262.390 I llm_load_print_meta: n_layer          = 18
0.00.262.401 I llm_load_print_meta: n_head           = 8
0.00.262.402 I llm_load_print_meta: n_head_kv        = 1
0.00.262.402 I llm_load_print_meta: n_rot            = 256
0.00.262.402 I llm_load_print_meta: n_swa            = 0
0.00.262.403 I llm_load_print_meta: n_embd_head_k    = 256
0.00.262.403 I llm_load_print_meta: n_embd_head_v    = 256
0.00.262.404 I llm_load_print_meta: n_gqa            = 8
0.00.262.405 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.262.406 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.262.407 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.262.408 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.262.408 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.262.409 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.262.409 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.262.410 I llm_load_print_meta: n_ff             = 16384
0.00.262.410 I llm_load_print_meta: n_expert         = 0
0.00.262.410 I llm_load_print_meta: n_expert_used    = 0
0.00.262.411 I llm_load_print_meta: causal attn      = 1
0.00.262.411 I llm_load_print_meta: pooling type     = 0
0.00.262.411 I llm_load_print_meta: rope type        = 2
0.00.262.412 I llm_load_print_meta: rope scaling     = linear
0.00.262.413 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.262.414 I llm_load_print_meta: freq_scale_train = 1
0.00.262.414 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.262.414 I llm_load_print_meta: rope_finetuned   = unknown
0.00.262.415 I llm_load_print_meta: ssm_d_conv       = 0
0.00.262.415 I llm_load_print_meta: ssm_d_inner      = 0
0.00.262.415 I llm_load_print_meta: ssm_d_state      = 0
0.00.262.415 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.262.415 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.262.416 I llm_load_print_meta: model type       = 2B
0.00.262.417 I llm_load_print_meta: model ftype      = Q8_0
0.00.262.418 I llm_load_print_meta: model params     = 2.51 B
0.00.262.419 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.262.419 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.262.420 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.262.420 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.262.420 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.262.421 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.262.421 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.262.421 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.262.421 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.262.422 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.262.422 I llm_load_print_meta: max token length = 93
0.00.362.770 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.362.778 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.362.779 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.362.779 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.362.780 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.362.780 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.368.062 I llama_new_context_with_model: n_seq_max     = 1
0.00.368.069 I llama_new_context_with_model: n_ctx         = 4096
0.00.368.069 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.368.069 I llama_new_context_with_model: n_batch       = 2048
0.00.368.070 I llama_new_context_with_model: n_ubatch      = 512
0.00.368.070 I llama_new_context_with_model: flash_attn    = 0
0.00.368.073 I llama_new_context_with_model: freq_base     = 10000.0
0.00.368.074 I llama_new_context_with_model: freq_scale    = 1
0.00.368.074 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.382.284 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.382.297 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.382.386 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.383.721 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.383.727 I llama_new_context_with_model: graph nodes  = 601
0.00.383.728 I llama_new_context_with_model: graph splits = 1
0.00.383.730 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.469.088 I main: llama threadpool init, n_threads = 4
0.00.469.103 I 
0.00.469.177 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.469.180 I 
0.00.469.225 I sampler seed: 2760756950
0.00.469.235 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.469.238 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.469.241 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.469.241 I 
 increadibly in popularity, particularly among the younger generation.

The rise of social media platforms has played a major role in this popularity surge, allowing users to connect

0.02.696.581 I llama_perf_sampler_print:    sampling time =       4.69 ms /    33 runs   (    0.14 ms per token,  7030.25 tokens per second)
0.02.696.584 I llama_perf_context_print:        load time =     468.45 ms
0.02.696.585 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.696.587 I llama_perf_context_print:        eval time =    2209.36 ms /    32 runs   (   69.04 ms per token,    14.48 tokens per second)
0.02.696.587 I llama_perf_context_print:       total time =    2227.50 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.587 I build: 4102 (3d9b733e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.782 I main: llama backend init
0.00.000.789 I main: load the model and apply lora adapter, if any
0.00.021.497 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.514 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.525 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.526 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.530 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.531 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.532 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.533 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.533 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.534 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.538 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.539 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.539 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.540 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.541 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.174 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.920 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.663 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.669 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.670 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.670 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.671 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.671 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.672 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.675 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.675 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.676 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.676 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.677 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.680 I llama_model_loader: - type  f32:   37 tensors
0.00.131.681 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.148 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.239.417 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.239.959 I llm_load_vocab: special tokens cache size = 5
0.00.260.595 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.260.611 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.260.611 I llm_load_print_meta: arch             = gemma
0.00.260.612 I llm_load_print_meta: vocab type       = SPM
0.00.260.613 I llm_load_print_meta: n_vocab          = 256000
0.00.260.613 I llm_load_print_meta: n_merges         = 0
0.00.260.613 I llm_load_print_meta: vocab_only       = 0
0.00.260.614 I llm_load_print_meta: n_ctx_train      = 8192
0.00.260.614 I llm_load_print_meta: n_embd           = 2048
0.00.260.614 I llm_load_print_meta: n_layer          = 18
0.00.260.625 I llm_load_print_meta: n_head           = 8
0.00.260.626 I llm_load_print_meta: n_head_kv        = 1
0.00.260.627 I llm_load_print_meta: n_rot            = 256
0.00.260.627 I llm_load_print_meta: n_swa            = 0
0.00.260.627 I llm_load_print_meta: n_embd_head_k    = 256
0.00.260.628 I llm_load_print_meta: n_embd_head_v    = 256
0.00.260.628 I llm_load_print_meta: n_gqa            = 8
0.00.260.629 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.260.630 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.260.631 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.260.632 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.260.633 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.260.633 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.260.633 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.260.634 I llm_load_print_meta: n_ff             = 16384
0.00.260.634 I llm_load_print_meta: n_expert         = 0
0.00.260.635 I llm_load_print_meta: n_expert_used    = 0
0.00.260.635 I llm_load_print_meta: causal attn      = 1
0.00.260.635 I llm_load_print_meta: pooling type     = 0
0.00.260.636 I llm_load_print_meta: rope type        = 2
0.00.260.636 I llm_load_print_meta: rope scaling     = linear
0.00.260.637 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.260.638 I llm_load_print_meta: freq_scale_train = 1
0.00.260.638 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.260.638 I llm_load_print_meta: rope_finetuned   = unknown
0.00.260.639 I llm_load_print_meta: ssm_d_conv       = 0
0.00.260.639 I llm_load_print_meta: ssm_d_inner      = 0
0.00.260.639 I llm_load_print_meta: ssm_d_state      = 0
0.00.260.639 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.260.640 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.260.640 I llm_load_print_meta: model type       = 2B
0.00.260.640 I llm_load_print_meta: model ftype      = Q8_0
0.00.260.641 I llm_load_print_meta: model params     = 2.51 B
0.00.260.642 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.260.642 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.260.643 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.260.643 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.260.644 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.260.644 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.260.644 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.260.645 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.260.645 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.260.645 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.260.646 I llm_load_print_meta: max token length = 93
0.00.355.560 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.360.849 I llama_new_context_with_model: n_seq_max     = 1
0.00.360.855 I llama_new_context_with_model: n_ctx         = 4096
0.00.360.856 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.360.856 I llama_new_context_with_model: n_batch       = 2048
0.00.360.857 I llama_new_context_with_model: n_ubatch      = 512
0.00.360.857 I llama_new_context_with_model: flash_attn    = 0
0.00.360.860 I llama_new_context_with_model: freq_base     = 10000.0
0.00.360.860 I llama_new_context_with_model: freq_scale    = 1
0.00.360.861 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.375.272 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.375.287 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.375.379 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.376.712 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.376.718 I llama_new_context_with_model: graph nodes  = 601
0.00.376.719 I llama_new_context_with_model: graph splits = 1
0.00.376.720 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.457.396 I main: llama threadpool init, n_threads = 4
0.00.457.409 I 
0.00.457.483 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.457.486 I 
0.00.457.527 I sampler seed: 456127160
0.00.457.538 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.457.545 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.457.548 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.457.549 I 
 increasities. [end of text]


0.00.729.867 I llama_perf_sampler_print:    sampling time =       0.61 ms /     5 runs   (    0.12 ms per token,  8156.61 tokens per second)
0.00.729.869 I llama_perf_context_print:        load time =     456.59 ms
0.00.729.870 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.729.871 I llama_perf_context_print:        eval time =     269.29 ms /     4 runs   (   67.32 ms per token,    14.85 tokens per second)
0.00.729.872 I llama_perf_context_print:       total time =     272.48 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.542 I build: 4102 (3d9b733e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.738 I main: llama backend init
0.00.000.745 I main: load the model and apply lora adapter, if any
0.00.027.057 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.027.068 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.027.075 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.080 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.080 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.086 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.090 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.090 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.091 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.091 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.092 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.096 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.096 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.097 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.097 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.098 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.054.519 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.136.100 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.142.924 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.142.931 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.142.932 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.142.933 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.142.934 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.142.935 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.142.936 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.142.939 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.142.939 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.142.940 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.142.941 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.142.942 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.142.946 I llama_model_loader: - type  f32:   37 tensors
0.00.142.948 I llama_model_loader: - type q8_0:  127 tensors
0.00.220.221 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.273.100 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.273.810 I llm_load_vocab: special tokens cache size = 5
0.00.295.173 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.295.192 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.295.193 I llm_load_print_meta: arch             = gemma
0.00.295.194 I llm_load_print_meta: vocab type       = SPM
0.00.295.194 I llm_load_print_meta: n_vocab          = 256000
0.00.295.195 I llm_load_print_meta: n_merges         = 0
0.00.295.195 I llm_load_print_meta: vocab_only       = 0
0.00.295.195 I llm_load_print_meta: n_ctx_train      = 8192
0.00.295.196 I llm_load_print_meta: n_embd           = 2048
0.00.295.196 I llm_load_print_meta: n_layer          = 18
0.00.295.208 I llm_load_print_meta: n_head           = 8
0.00.295.210 I llm_load_print_meta: n_head_kv        = 1
0.00.295.210 I llm_load_print_meta: n_rot            = 256
0.00.295.210 I llm_load_print_meta: n_swa            = 0
0.00.295.211 I llm_load_print_meta: n_embd_head_k    = 256
0.00.295.211 I llm_load_print_meta: n_embd_head_v    = 256
0.00.295.212 I llm_load_print_meta: n_gqa            = 8
0.00.295.213 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.295.214 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.295.215 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.295.216 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.295.216 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.295.217 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.295.217 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.295.218 I llm_load_print_meta: n_ff             = 16384
0.00.295.218 I llm_load_print_meta: n_expert         = 0
0.00.295.218 I llm_load_print_meta: n_expert_used    = 0
0.00.295.219 I llm_load_print_meta: causal attn      = 1
0.00.295.219 I llm_load_print_meta: pooling type     = 0
0.00.295.219 I llm_load_print_meta: rope type        = 2
0.00.295.220 I llm_load_print_meta: rope scaling     = linear
0.00.295.221 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.295.222 I llm_load_print_meta: freq_scale_train = 1
0.00.295.222 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.295.223 I llm_load_print_meta: rope_finetuned   = unknown
0.00.295.223 I llm_load_print_meta: ssm_d_conv       = 0
0.00.295.223 I llm_load_print_meta: ssm_d_inner      = 0
0.00.295.223 I llm_load_print_meta: ssm_d_state      = 0
0.00.295.224 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.295.224 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.295.224 I llm_load_print_meta: model type       = 2B
0.00.295.225 I llm_load_print_meta: model ftype      = Q8_0
0.00.295.226 I llm_load_print_meta: model params     = 2.51 B
0.00.295.227 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.295.227 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.295.228 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.295.228 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.295.228 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.295.229 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.295.229 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.295.230 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.295.230 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.295.231 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.295.231 I llm_load_print_meta: max token length = 93
0.00.372.670 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.372.679 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.372.679 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.372.680 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.372.681 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.372.681 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.377.793 I llama_new_context_with_model: n_seq_max     = 1
0.00.377.800 I llama_new_context_with_model: n_ctx         = 4096
0.00.377.800 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.377.800 I llama_new_context_with_model: n_batch       = 2048
0.00.377.801 I llama_new_context_with_model: n_ubatch      = 512
0.00.377.801 I llama_new_context_with_model: flash_attn    = 0
0.00.377.804 I llama_new_context_with_model: freq_base     = 10000.0
0.00.377.805 I llama_new_context_with_model: freq_scale    = 1
0.00.377.806 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.392.138 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.392.153 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.392.245 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.393.470 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.393.477 I llama_new_context_with_model: graph nodes  = 601
0.00.393.477 I llama_new_context_with_model: graph splits = 1
0.00.393.479 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.477.770 I main: llama threadpool init, n_threads = 4
0.00.477.785 I 
0.00.477.861 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.477.864 I 
0.00.477.907 I sampler seed: 2663355718
0.00.477.917 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.477.920 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.477.921 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.477.921 I 
 increasities:

1. **The Great Firewall of Australia**
2. **The Great Barrier Reef Marine Park**
3. **The Great Barrier Reef

0.02.713.164 I llama_perf_sampler_print:    sampling time =       5.04 ms /    33 runs   (    0.15 ms per token,  6552.82 tokens per second)
0.02.713.166 I llama_perf_context_print:        load time =     477.00 ms
0.02.713.167 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.713.169 I llama_perf_context_print:        eval time =    2215.50 ms /    32 runs   (   69.23 ms per token,    14.44 tokens per second)
0.02.713.169 I llama_perf_context_print:       total time =    2235.40 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.531 I build: 4102 (3d9b733e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.725 I main: llama backend init
0.00.000.732 I main: load the model and apply lora adapter, if any
0.00.021.107 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.118 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.126 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.132 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.133 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.139 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.140 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.141 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.141 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.142 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.142 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.146 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.147 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.147 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.148 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.148 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.562 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.058 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.849 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.854 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.855 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.856 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.856 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.857 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.858 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.861 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.861 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.862 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.863 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.130.864 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.868 I llama_model_loader: - type  f32:   37 tensors
0.00.130.869 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.913 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.331 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.921 I llm_load_vocab: special tokens cache size = 5
0.00.266.945 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.963 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.963 I llm_load_print_meta: arch             = gemma
0.00.266.964 I llm_load_print_meta: vocab type       = SPM
0.00.266.964 I llm_load_print_meta: n_vocab          = 256000
0.00.266.965 I llm_load_print_meta: n_merges         = 0
0.00.266.965 I llm_load_print_meta: vocab_only       = 0
0.00.266.966 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.966 I llm_load_print_meta: n_embd           = 2048
0.00.266.966 I llm_load_print_meta: n_layer          = 18
0.00.266.980 I llm_load_print_meta: n_head           = 8
0.00.266.981 I llm_load_print_meta: n_head_kv        = 1
0.00.266.981 I llm_load_print_meta: n_rot            = 256
0.00.266.981 I llm_load_print_meta: n_swa            = 0
0.00.266.982 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.982 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.983 I llm_load_print_meta: n_gqa            = 8
0.00.266.984 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.985 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.986 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.988 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.988 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.988 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.989 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.990 I llm_load_print_meta: n_ff             = 16384
0.00.266.990 I llm_load_print_meta: n_expert         = 0
0.00.266.990 I llm_load_print_meta: n_expert_used    = 0
0.00.266.991 I llm_load_print_meta: causal attn      = 1
0.00.266.991 I llm_load_print_meta: pooling type     = 0
0.00.266.991 I llm_load_print_meta: rope type        = 2
0.00.266.992 I llm_load_print_meta: rope scaling     = linear
0.00.266.993 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.994 I llm_load_print_meta: freq_scale_train = 1
0.00.266.994 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.995 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.995 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.995 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.995 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.996 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.996 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.996 I llm_load_print_meta: model type       = 2B
0.00.266.997 I llm_load_print_meta: model ftype      = Q8_0
0.00.266.998 I llm_load_print_meta: model params     = 2.51 B
0.00.266.999 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.266.999 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.000 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.000 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.000 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.001 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.001 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.001 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.002 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.002 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.002 I llm_load_print_meta: max token length = 93
0.00.337.924 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.337.932 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.342.979 I llama_new_context_with_model: n_seq_max     = 1
0.00.342.985 I llama_new_context_with_model: n_ctx         = 4096
0.00.342.985 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.342.985 I llama_new_context_with_model: n_batch       = 2048
0.00.342.986 I llama_new_context_with_model: n_ubatch      = 512
0.00.342.986 I llama_new_context_with_model: flash_attn    = 0
0.00.342.988 I llama_new_context_with_model: freq_base     = 10000.0
0.00.342.989 I llama_new_context_with_model: freq_scale    = 1
0.00.342.990 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.356.885 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.356.900 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.356.991 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.358.226 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.358.232 I llama_new_context_with_model: graph nodes  = 601
0.00.358.232 I llama_new_context_with_model: graph splits = 1
0.00.358.233 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.446.360 I main: llama threadpool init, n_threads = 4
0.00.446.374 I 
0.00.446.447 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.446.451 I 
0.00.446.497 I sampler seed: 3812507794
0.00.446.510 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.446.514 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.446.514 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.446.515 I 
 increably, a captivating storyteller.

She possessed a voice that resonated with ancient wisdom and whispered secrets of forgotten lands. Her eyes sparkled with boundless curiosity

0.02.875.890 I llama_perf_sampler_print:    sampling time =       4.97 ms /    33 runs   (    0.15 ms per token,  6634.50 tokens per second)
0.02.875.892 I llama_perf_context_print:        load time =     445.61 ms
0.02.875.893 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.875.895 I llama_perf_context_print:        eval time =    2410.78 ms /    32 runs   (   75.34 ms per token,    13.27 tokens per second)
0.02.875.895 I llama_perf_context_print:       total time =    2429.54 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.336s
user	0m31.477s
sys	0m9.247s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4102 (3d9b733e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40164.02 ms
main:    total time = 40164.02 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.542 I build: 4102 (3d9b733e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.000.758 I main: load the model and apply lora adapter, if any
0.00.021.606 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.617 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.626 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.632 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.632 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.636 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.637 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.638 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.639 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.640 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.640 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.644 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.645 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.645 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.646 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.646 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.720 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.723 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.491 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.497 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.498 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.499 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.500 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.501 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.502 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.505 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.506 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.507 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.507 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.508 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.512 I llama_model_loader: - type  f32:   37 tensors
0.00.130.513 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.514 I llama_model_loader: - type q6_K:   19 tensors
0.00.200.513 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.001 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.238.454 I llm_load_vocab: special tokens cache size = 5
0.00.259.080 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.259.094 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.259.095 I llm_load_print_meta: arch             = gemma
0.00.259.095 I llm_load_print_meta: vocab type       = SPM
0.00.259.096 I llm_load_print_meta: n_vocab          = 256000
0.00.259.097 I llm_load_print_meta: n_merges         = 0
0.00.259.097 I llm_load_print_meta: vocab_only       = 0
0.00.259.098 I llm_load_print_meta: n_ctx_train      = 8192
0.00.259.098 I llm_load_print_meta: n_embd           = 2048
0.00.259.098 I llm_load_print_meta: n_layer          = 18
0.00.259.109 I llm_load_print_meta: n_head           = 8
0.00.259.110 I llm_load_print_meta: n_head_kv        = 1
0.00.259.110 I llm_load_print_meta: n_rot            = 256
0.00.259.111 I llm_load_print_meta: n_swa            = 0
0.00.259.111 I llm_load_print_meta: n_embd_head_k    = 256
0.00.259.111 I llm_load_print_meta: n_embd_head_v    = 256
0.00.259.112 I llm_load_print_meta: n_gqa            = 8
0.00.259.113 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.259.114 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.259.115 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.259.116 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.259.117 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.259.117 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.259.117 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.259.118 I llm_load_print_meta: n_ff             = 16384
0.00.259.118 I llm_load_print_meta: n_expert         = 0
0.00.259.119 I llm_load_print_meta: n_expert_used    = 0
0.00.259.119 I llm_load_print_meta: causal attn      = 1
0.00.259.119 I llm_load_print_meta: pooling type     = 0
0.00.259.119 I llm_load_print_meta: rope type        = 2
0.00.259.120 I llm_load_print_meta: rope scaling     = linear
0.00.259.121 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.259.122 I llm_load_print_meta: freq_scale_train = 1
0.00.259.122 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.259.122 I llm_load_print_meta: rope_finetuned   = unknown
0.00.259.123 I llm_load_print_meta: ssm_d_conv       = 0
0.00.259.123 I llm_load_print_meta: ssm_d_inner      = 0
0.00.259.123 I llm_load_print_meta: ssm_d_state      = 0
0.00.259.123 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.259.124 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.259.124 I llm_load_print_meta: model type       = 2B
0.00.259.125 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.259.125 I llm_load_print_meta: model params     = 2.51 B
0.00.259.126 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.259.126 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.259.127 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.259.127 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.259.127 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.259.128 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.259.128 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.259.128 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.259.128 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.259.130 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.259.130 I llm_load_print_meta: max token length = 93
0.00.319.016 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.319.021 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.319.022 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.319.023 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.319.023 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.319.024 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.324.092 I llama_new_context_with_model: n_seq_max     = 1
0.00.324.098 I llama_new_context_with_model: n_ctx         = 4096
0.00.324.099 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.324.099 I llama_new_context_with_model: n_batch       = 2048
0.00.324.100 I llama_new_context_with_model: n_ubatch      = 512
0.00.324.100 I llama_new_context_with_model: flash_attn    = 0
0.00.324.102 I llama_new_context_with_model: freq_base     = 10000.0
0.00.324.103 I llama_new_context_with_model: freq_scale    = 1
0.00.324.104 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.338.131 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.338.144 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.338.233 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.339.560 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.339.566 I llama_new_context_with_model: graph nodes  = 601
0.00.339.567 I llama_new_context_with_model: graph splits = 1
0.00.339.568 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.413.736 I main: llama threadpool init, n_threads = 4
0.00.413.751 I 
0.00.413.822 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.413.825 I 
0.00.413.866 I sampler seed: 1014198573
0.00.413.877 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.413.880 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.413.881 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.413.881 I 
 maneuvously.

I am unable to provide an answer as the context provided contains sexually suggestive language and inappropriate content. [end of text]


0.01.647.906 I llama_perf_sampler_print:    sampling time =       4.05 ms /    26 runs   (    0.16 ms per token,  6413.42 tokens per second)
0.01.647.909 I llama_perf_context_print:        load time =     412.96 ms
0.01.647.910 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.647.911 I llama_perf_context_print:        eval time =    1218.55 ms /    25 runs   (   48.74 ms per token,    20.52 tokens per second)
0.01.647.912 I llama_perf_context_print:       total time =    1234.18 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4102 (3d9b733e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40150.09 ms
main:    total time = 40150.09 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.540 I build: 4102 (3d9b733e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.734 I main: llama backend init
0.00.000.741 I main: load the model and apply lora adapter, if any
0.00.021.227 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.243 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.250 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.251 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.254 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.255 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.255 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.256 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.256 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.257 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.260 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.260 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.261 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.261 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.262 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.368 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.014 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.129.868 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.129.876 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.129.876 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.129.877 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.129.877 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.129.878 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.129.879 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.129.882 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.129.882 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.129.886 I llama_model_loader: - type  f32:   37 tensors
0.00.129.887 I llama_model_loader: - type q4_K:  108 tensors
0.00.129.888 I llama_model_loader: - type q6_K:   19 tensors
0.00.213.955 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.241 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.722 I llm_load_vocab: special tokens cache size = 5
0.00.277.747 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.764 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.765 I llm_load_print_meta: arch             = gemma
0.00.277.765 I llm_load_print_meta: vocab type       = SPM
0.00.277.766 I llm_load_print_meta: n_vocab          = 256000
0.00.277.767 I llm_load_print_meta: n_merges         = 0
0.00.277.767 I llm_load_print_meta: vocab_only       = 0
0.00.277.767 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.768 I llm_load_print_meta: n_embd           = 2048
0.00.277.768 I llm_load_print_meta: n_layer          = 18
0.00.277.780 I llm_load_print_meta: n_head           = 8
0.00.277.781 I llm_load_print_meta: n_head_kv        = 1
0.00.277.782 I llm_load_print_meta: n_rot            = 256
0.00.277.782 I llm_load_print_meta: n_swa            = 0
0.00.277.782 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.782 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.783 I llm_load_print_meta: n_gqa            = 8
0.00.277.784 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.785 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.786 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.788 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.788 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.788 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.789 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.789 I llm_load_print_meta: n_ff             = 16384
0.00.277.790 I llm_load_print_meta: n_expert         = 0
0.00.277.790 I llm_load_print_meta: n_expert_used    = 0
0.00.277.790 I llm_load_print_meta: causal attn      = 1
0.00.277.791 I llm_load_print_meta: pooling type     = 0
0.00.277.791 I llm_load_print_meta: rope type        = 2
0.00.277.791 I llm_load_print_meta: rope scaling     = linear
0.00.277.793 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.793 I llm_load_print_meta: freq_scale_train = 1
0.00.277.794 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.794 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.794 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.794 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.795 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.795 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.795 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.796 I llm_load_print_meta: model type       = 2B
0.00.277.796 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.277.797 I llm_load_print_meta: model params     = 2.51 B
0.00.277.797 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.277.798 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.798 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.799 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.799 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.799 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.800 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.800 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.800 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.801 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.801 I llm_load_print_meta: max token length = 93
0.00.335.535 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.340.570 I llama_new_context_with_model: n_seq_max     = 1
0.00.340.576 I llama_new_context_with_model: n_ctx         = 4096
0.00.340.576 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.340.577 I llama_new_context_with_model: n_batch       = 2048
0.00.340.577 I llama_new_context_with_model: n_ubatch      = 512
0.00.340.578 I llama_new_context_with_model: flash_attn    = 0
0.00.340.580 I llama_new_context_with_model: freq_base     = 10000.0
0.00.340.581 I llama_new_context_with_model: freq_scale    = 1
0.00.340.582 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.354.836 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.354.850 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.354.937 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.356.127 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.356.132 I llama_new_context_with_model: graph nodes  = 601
0.00.356.133 I llama_new_context_with_model: graph splits = 1
0.00.356.135 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.430.609 I main: llama threadpool init, n_threads = 4
0.00.430.624 I 
0.00.430.705 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.430.708 I 
0.00.430.751 I sampler seed: 1058870086
0.00.430.761 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.430.765 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.430.765 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.430.768 I 
 increasities!

I'm sorry, I am unable to generate sexually suggestive or inappropriate content. [end of text]


0.01.451.712 I llama_perf_sampler_print:    sampling time =       3.20 ms /    22 runs   (    0.15 ms per token,  6868.56 tokens per second)
0.01.451.715 I llama_perf_context_print:        load time =     429.85 ms
0.01.451.716 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.451.718 I llama_perf_context_print:        eval time =    1008.47 ms /    21 runs   (   48.02 ms per token,    20.82 tokens per second)
0.01.451.719 I llama_perf_context_print:       total time =    1021.11 ms /    22 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m26.158s
user	10m20.313s
sys	0m6.853s
