+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.178 I build: 4163 (5931c1f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.879 I main: llama backend init
0.00.000.887 I main: load the model and apply lora adapter, if any
0.00.021.780 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.788 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.796 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.800 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.801 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.806 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.806 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.807 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.807 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.808 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.809 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.813 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.814 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.815 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.815 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.816 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.418 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.592 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.483 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.491 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.492 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.492 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.493 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.494 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.495 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.498 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.499 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.500 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.501 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.502 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.506 I llama_model_loader: - type  f32:   37 tensors
0.00.133.508 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.736 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.836 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.384 I llm_load_vocab: special tokens cache size = 5
0.00.269.028 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.047 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.047 I llm_load_print_meta: arch             = gemma
0.00.269.048 I llm_load_print_meta: vocab type       = SPM
0.00.269.049 I llm_load_print_meta: n_vocab          = 256000
0.00.269.049 I llm_load_print_meta: n_merges         = 0
0.00.269.049 I llm_load_print_meta: vocab_only       = 0
0.00.269.049 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.050 I llm_load_print_meta: n_embd           = 2048
0.00.269.050 I llm_load_print_meta: n_layer          = 18
0.00.269.061 I llm_load_print_meta: n_head           = 8
0.00.269.062 I llm_load_print_meta: n_head_kv        = 1
0.00.269.062 I llm_load_print_meta: n_rot            = 256
0.00.269.063 I llm_load_print_meta: n_swa            = 0
0.00.269.063 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.063 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.064 I llm_load_print_meta: n_gqa            = 8
0.00.269.065 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.066 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.067 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.069 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.069 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.069 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.070 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.071 I llm_load_print_meta: n_ff             = 16384
0.00.269.071 I llm_load_print_meta: n_expert         = 0
0.00.269.072 I llm_load_print_meta: n_expert_used    = 0
0.00.269.072 I llm_load_print_meta: causal attn      = 1
0.00.269.072 I llm_load_print_meta: pooling type     = 0
0.00.269.073 I llm_load_print_meta: rope type        = 2
0.00.269.073 I llm_load_print_meta: rope scaling     = linear
0.00.269.074 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.075 I llm_load_print_meta: freq_scale_train = 1
0.00.269.075 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.075 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.075 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.076 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.076 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.076 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.076 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.077 I llm_load_print_meta: model type       = 2B
0.00.269.078 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.078 I llm_load_print_meta: model params     = 2.51 B
0.00.269.079 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.080 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.080 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.080 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.081 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.081 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.081 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.081 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.082 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.082 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.083 I llm_load_print_meta: max token length = 93
0.00.369.447 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.369.455 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.369.456 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.369.456 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.369.457 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.369.458 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.374.793 I llama_new_context_with_model: n_seq_max     = 1
0.00.374.800 I llama_new_context_with_model: n_ctx         = 4096
0.00.374.800 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.374.801 I llama_new_context_with_model: n_batch       = 2048
0.00.374.801 I llama_new_context_with_model: n_ubatch      = 512
0.00.374.802 I llama_new_context_with_model: flash_attn    = 0
0.00.374.805 I llama_new_context_with_model: freq_base     = 10000.0
0.00.374.806 I llama_new_context_with_model: freq_scale    = 1
0.00.374.807 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.389.079 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.389.092 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.389.179 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.390.419 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.390.425 I llama_new_context_with_model: graph nodes  = 601
0.00.390.426 I llama_new_context_with_model: graph splits = 1
0.00.390.427 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.476.146 I main: llama threadpool init, n_threads = 4
0.00.476.161 I 
0.00.476.234 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.476.237 I 
0.00.476.283 I sampler seed: 2271623820
0.00.476.294 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.476.305 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.476.309 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.476.309 I 
 increasities, and other forms of sexual harassment.

Sexual harassment is a pervasive issue in our workplaces and communities. It is a violation of basic human rights and

0.02.745.860 I llama_perf_sampler_print:    sampling time =       5.13 ms /    33 runs   (    0.16 ms per token,  6431.49 tokens per second)
0.02.745.862 I llama_perf_context_print:        load time =     475.24 ms
0.02.745.863 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.745.865 I llama_perf_context_print:        eval time =    2250.46 ms /    32 runs   (   70.33 ms per token,    14.22 tokens per second)
0.02.745.866 I llama_perf_context_print:       total time =    2269.72 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.573 I build: 4163 (5931c1f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.001.252 I main: llama backend init
0.00.001.259 I main: load the model and apply lora adapter, if any
0.00.022.082 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.096 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.106 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.107 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.112 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.113 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.114 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.114 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.115 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.115 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.120 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.121 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.127 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.128 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.129 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.868 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.273 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.113 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.119 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.120 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.120 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.121 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.122 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.122 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.125 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.125 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.126 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.126 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.128 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.131 I llama_model_loader: - type  f32:   37 tensors
0.00.132.132 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.345 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.259.384 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.260.140 I llm_load_vocab: special tokens cache size = 5
0.00.280.933 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.280.951 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.280.951 I llm_load_print_meta: arch             = gemma
0.00.280.952 I llm_load_print_meta: vocab type       = SPM
0.00.280.952 I llm_load_print_meta: n_vocab          = 256000
0.00.280.953 I llm_load_print_meta: n_merges         = 0
0.00.280.953 I llm_load_print_meta: vocab_only       = 0
0.00.280.953 I llm_load_print_meta: n_ctx_train      = 8192
0.00.280.954 I llm_load_print_meta: n_embd           = 2048
0.00.280.954 I llm_load_print_meta: n_layer          = 18
0.00.280.967 I llm_load_print_meta: n_head           = 8
0.00.280.968 I llm_load_print_meta: n_head_kv        = 1
0.00.280.968 I llm_load_print_meta: n_rot            = 256
0.00.280.969 I llm_load_print_meta: n_swa            = 0
0.00.280.969 I llm_load_print_meta: n_embd_head_k    = 256
0.00.280.969 I llm_load_print_meta: n_embd_head_v    = 256
0.00.280.970 I llm_load_print_meta: n_gqa            = 8
0.00.280.971 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.280.972 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.280.973 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.280.974 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.280.974 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.280.975 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.280.975 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.280.976 I llm_load_print_meta: n_ff             = 16384
0.00.280.976 I llm_load_print_meta: n_expert         = 0
0.00.280.977 I llm_load_print_meta: n_expert_used    = 0
0.00.280.977 I llm_load_print_meta: causal attn      = 1
0.00.280.977 I llm_load_print_meta: pooling type     = 0
0.00.280.977 I llm_load_print_meta: rope type        = 2
0.00.280.978 I llm_load_print_meta: rope scaling     = linear
0.00.280.979 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.280.980 I llm_load_print_meta: freq_scale_train = 1
0.00.280.980 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.280.980 I llm_load_print_meta: rope_finetuned   = unknown
0.00.280.980 I llm_load_print_meta: ssm_d_conv       = 0
0.00.280.981 I llm_load_print_meta: ssm_d_inner      = 0
0.00.280.981 I llm_load_print_meta: ssm_d_state      = 0
0.00.280.981 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.280.981 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.280.982 I llm_load_print_meta: model type       = 2B
0.00.280.982 I llm_load_print_meta: model ftype      = Q8_0
0.00.280.983 I llm_load_print_meta: model params     = 2.51 B
0.00.280.984 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.280.984 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.280.985 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.280.985 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.280.986 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.280.987 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.280.987 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.280.987 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.280.988 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.280.989 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.280.989 I llm_load_print_meta: max token length = 93
0.00.376.403 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.381.588 I llama_new_context_with_model: n_seq_max     = 1
0.00.381.594 I llama_new_context_with_model: n_ctx         = 4096
0.00.381.595 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.381.595 I llama_new_context_with_model: n_batch       = 2048
0.00.381.596 I llama_new_context_with_model: n_ubatch      = 512
0.00.381.596 I llama_new_context_with_model: flash_attn    = 0
0.00.381.599 I llama_new_context_with_model: freq_base     = 10000.0
0.00.381.600 I llama_new_context_with_model: freq_scale    = 1
0.00.381.601 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.396.467 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.396.482 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.396.573 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.397.851 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.397.858 I llama_new_context_with_model: graph nodes  = 601
0.00.397.859 I llama_new_context_with_model: graph splits = 1
0.00.397.861 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.479.445 I main: llama threadpool init, n_threads = 4
0.00.479.460 I 
0.00.479.538 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.479.542 I 
0.00.479.601 I sampler seed: 3082587737
0.00.479.612 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.479.615 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.479.616 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.479.617 I 
 increasities by the hand of a young maiden to a handsome youth, and the maiden's subsequent lament of her own innocence.

This excerpt depicts a scene

0.02.657.437 I llama_perf_sampler_print:    sampling time =       5.06 ms /    33 runs   (    0.15 ms per token,  6523.03 tokens per second)
0.02.657.440 I llama_perf_context_print:        load time =     478.17 ms
0.02.657.441 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.657.443 I llama_perf_context_print:        eval time =    2158.56 ms /    32 runs   (   67.46 ms per token,    14.82 tokens per second)
0.02.657.444 I llama_perf_context_print:       total time =    2178.00 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.570 I build: 4163 (5931c1f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.001.273 I main: llama backend init
0.00.001.281 I main: load the model and apply lora adapter, if any
0.00.027.693 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.027.703 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.027.711 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.027.716 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.027.716 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.027.720 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.027.721 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.027.722 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.027.722 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.027.722 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.027.723 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.027.727 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.027.727 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.027.728 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.027.728 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.027.730 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.055.673 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.134.306 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.141.196 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.141.203 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.141.204 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.141.205 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.141.206 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.141.207 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.141.208 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.141.211 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.141.211 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.141.213 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.141.213 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.141.215 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.141.218 I llama_model_loader: - type  f32:   37 tensors
0.00.141.219 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.904 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.259.220 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.259.827 I llm_load_vocab: special tokens cache size = 5
0.00.280.565 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.280.582 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.280.582 I llm_load_print_meta: arch             = gemma
0.00.280.583 I llm_load_print_meta: vocab type       = SPM
0.00.280.583 I llm_load_print_meta: n_vocab          = 256000
0.00.280.584 I llm_load_print_meta: n_merges         = 0
0.00.280.584 I llm_load_print_meta: vocab_only       = 0
0.00.280.584 I llm_load_print_meta: n_ctx_train      = 8192
0.00.280.585 I llm_load_print_meta: n_embd           = 2048
0.00.280.585 I llm_load_print_meta: n_layer          = 18
0.00.280.598 I llm_load_print_meta: n_head           = 8
0.00.280.599 I llm_load_print_meta: n_head_kv        = 1
0.00.280.599 I llm_load_print_meta: n_rot            = 256
0.00.280.600 I llm_load_print_meta: n_swa            = 0
0.00.280.600 I llm_load_print_meta: n_embd_head_k    = 256
0.00.280.600 I llm_load_print_meta: n_embd_head_v    = 256
0.00.280.601 I llm_load_print_meta: n_gqa            = 8
0.00.280.602 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.280.603 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.280.604 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.280.605 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.280.606 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.280.607 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.280.607 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.280.608 I llm_load_print_meta: n_ff             = 16384
0.00.280.608 I llm_load_print_meta: n_expert         = 0
0.00.280.609 I llm_load_print_meta: n_expert_used    = 0
0.00.280.609 I llm_load_print_meta: causal attn      = 1
0.00.280.609 I llm_load_print_meta: pooling type     = 0
0.00.280.609 I llm_load_print_meta: rope type        = 2
0.00.280.610 I llm_load_print_meta: rope scaling     = linear
0.00.280.612 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.280.612 I llm_load_print_meta: freq_scale_train = 1
0.00.280.612 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.280.613 I llm_load_print_meta: rope_finetuned   = unknown
0.00.280.613 I llm_load_print_meta: ssm_d_conv       = 0
0.00.280.613 I llm_load_print_meta: ssm_d_inner      = 0
0.00.280.613 I llm_load_print_meta: ssm_d_state      = 0
0.00.280.614 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.280.614 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.280.614 I llm_load_print_meta: model type       = 2B
0.00.280.615 I llm_load_print_meta: model ftype      = Q8_0
0.00.280.616 I llm_load_print_meta: model params     = 2.51 B
0.00.280.617 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.280.617 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.280.618 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.280.618 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.280.618 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.280.618 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.280.619 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.280.619 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.280.619 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.280.620 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.280.620 I llm_load_print_meta: max token length = 93
0.00.353.520 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.353.525 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.353.526 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.353.526 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.353.527 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.353.528 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.358.442 I llama_new_context_with_model: n_seq_max     = 1
0.00.358.447 I llama_new_context_with_model: n_ctx         = 4096
0.00.358.448 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.358.448 I llama_new_context_with_model: n_batch       = 2048
0.00.358.449 I llama_new_context_with_model: n_ubatch      = 512
0.00.358.449 I llama_new_context_with_model: flash_attn    = 0
0.00.358.452 I llama_new_context_with_model: freq_base     = 10000.0
0.00.358.453 I llama_new_context_with_model: freq_scale    = 1
0.00.358.454 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.372.987 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.373.000 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.373.091 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.374.337 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.374.343 I llama_new_context_with_model: graph nodes  = 601
0.00.374.343 I llama_new_context_with_model: graph splits = 1
0.00.374.345 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.492 I main: llama threadpool init, n_threads = 4
0.00.460.509 I 
0.00.460.594 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.460.597 I 
0.00.460.642 I sampler seed: 108168609
0.00.460.653 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.656 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.460.658 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.658 I 
 increasively to emphasize the speed of its arrival. [end of text]


0.01.252.531 I llama_perf_sampler_print:    sampling time =       1.78 ms /    12 runs   (    0.15 ms per token,  6726.46 tokens per second)
0.01.252.534 I llama_perf_context_print:        load time =     459.19 ms
0.01.252.535 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.252.537 I llama_perf_context_print:        eval time =     784.75 ms /    11 runs   (   71.34 ms per token,    14.02 tokens per second)
0.01.252.538 I llama_perf_context_print:       total time =     792.05 ms /    12 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.544 I build: 4163 (5931c1f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.001.239 I main: llama backend init
0.00.001.248 I main: load the model and apply lora adapter, if any
0.00.021.789 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.801 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.809 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.815 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.816 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.820 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.821 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.822 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.823 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.824 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.824 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.829 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.830 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.831 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.832 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.833 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.935 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.392 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.226 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.232 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.233 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.234 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.235 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.236 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.237 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.240 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.241 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.241 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.242 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.243 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.246 I llama_model_loader: - type  f32:   37 tensors
0.00.132.248 I llama_model_loader: - type q8_0:  127 tensors
0.00.204.043 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.258.053 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.258.788 I llm_load_vocab: special tokens cache size = 5
0.00.279.812 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.279.838 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.279.838 I llm_load_print_meta: arch             = gemma
0.00.279.839 I llm_load_print_meta: vocab type       = SPM
0.00.279.840 I llm_load_print_meta: n_vocab          = 256000
0.00.279.840 I llm_load_print_meta: n_merges         = 0
0.00.279.841 I llm_load_print_meta: vocab_only       = 0
0.00.279.841 I llm_load_print_meta: n_ctx_train      = 8192
0.00.279.842 I llm_load_print_meta: n_embd           = 2048
0.00.279.842 I llm_load_print_meta: n_layer          = 18
0.00.279.855 I llm_load_print_meta: n_head           = 8
0.00.279.856 I llm_load_print_meta: n_head_kv        = 1
0.00.279.857 I llm_load_print_meta: n_rot            = 256
0.00.279.857 I llm_load_print_meta: n_swa            = 0
0.00.279.857 I llm_load_print_meta: n_embd_head_k    = 256
0.00.279.858 I llm_load_print_meta: n_embd_head_v    = 256
0.00.279.859 I llm_load_print_meta: n_gqa            = 8
0.00.279.860 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.279.861 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.279.861 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.279.863 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.279.864 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.279.864 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.279.864 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.279.865 I llm_load_print_meta: n_ff             = 16384
0.00.279.866 I llm_load_print_meta: n_expert         = 0
0.00.279.866 I llm_load_print_meta: n_expert_used    = 0
0.00.279.866 I llm_load_print_meta: causal attn      = 1
0.00.279.867 I llm_load_print_meta: pooling type     = 0
0.00.279.867 I llm_load_print_meta: rope type        = 2
0.00.279.867 I llm_load_print_meta: rope scaling     = linear
0.00.279.869 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.279.869 I llm_load_print_meta: freq_scale_train = 1
0.00.279.869 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.279.870 I llm_load_print_meta: rope_finetuned   = unknown
0.00.279.870 I llm_load_print_meta: ssm_d_conv       = 0
0.00.279.870 I llm_load_print_meta: ssm_d_inner      = 0
0.00.279.871 I llm_load_print_meta: ssm_d_state      = 0
0.00.279.871 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.279.871 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.279.872 I llm_load_print_meta: model type       = 2B
0.00.279.872 I llm_load_print_meta: model ftype      = Q8_0
0.00.279.873 I llm_load_print_meta: model params     = 2.51 B
0.00.279.874 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.279.874 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.279.875 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.279.875 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.279.876 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.279.876 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.279.876 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.279.876 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.279.877 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.279.878 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.279.878 I llm_load_print_meta: max token length = 93
0.00.351.082 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.351.089 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.356.334 I llama_new_context_with_model: n_seq_max     = 1
0.00.356.339 I llama_new_context_with_model: n_ctx         = 4096
0.00.356.339 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.356.340 I llama_new_context_with_model: n_batch       = 2048
0.00.356.340 I llama_new_context_with_model: n_ubatch      = 512
0.00.356.341 I llama_new_context_with_model: flash_attn    = 0
0.00.356.344 I llama_new_context_with_model: freq_base     = 10000.0
0.00.356.344 I llama_new_context_with_model: freq_scale    = 1
0.00.356.345 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.370.518 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.370.532 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.370.624 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.371.859 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.371.866 I llama_new_context_with_model: graph nodes  = 601
0.00.371.866 I llama_new_context_with_model: graph splits = 1
0.00.371.868 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.479 I main: llama threadpool init, n_threads = 4
0.00.460.495 I 
0.00.460.569 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.460.572 I 
0.00.460.616 I sampler seed: 2156989960
0.00.460.627 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.631 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.460.631 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.631 I 
 increably.

I am unable to generate a response to this query as it contains potentially offensive and inappropriate language. [end of text]


0.02.296.893 I llama_perf_sampler_print:    sampling time =       3.95 ms /    25 runs   (    0.16 ms per token,  6330.72 tokens per second)
0.02.296.896 I llama_perf_context_print:        load time =     459.21 ms
0.02.296.897 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.296.898 I llama_perf_context_print:        eval time =    1821.53 ms /    24 runs   (   75.90 ms per token,    13.18 tokens per second)
0.02.296.899 I llama_perf_context_print:       total time =    1836.42 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.522s
user	0m31.205s
sys	0m9.378s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4163 (5931c1f2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40254.33 ms
main:    total time = 40254.33 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.187 I build: 4163 (5931c1f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.890 I main: llama backend init
0.00.000.897 I main: load the model and apply lora adapter, if any
0.00.021.148 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.158 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.167 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.173 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.174 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.177 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.178 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.178 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.179 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.179 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.180 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.183 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.183 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.184 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.185 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.185 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.119 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.482 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.310 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.317 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.318 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.319 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.320 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.321 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.322 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.326 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.327 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.328 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.328 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.329 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.333 I llama_model_loader: - type  f32:   37 tensors
0.00.131.335 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.335 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.154 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.816 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.338 I llm_load_vocab: special tokens cache size = 5
0.00.265.054 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.265.070 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.265.071 I llm_load_print_meta: arch             = gemma
0.00.265.072 I llm_load_print_meta: vocab type       = SPM
0.00.265.073 I llm_load_print_meta: n_vocab          = 256000
0.00.265.073 I llm_load_print_meta: n_merges         = 0
0.00.265.074 I llm_load_print_meta: vocab_only       = 0
0.00.265.074 I llm_load_print_meta: n_ctx_train      = 8192
0.00.265.074 I llm_load_print_meta: n_embd           = 2048
0.00.265.074 I llm_load_print_meta: n_layer          = 18
0.00.265.086 I llm_load_print_meta: n_head           = 8
0.00.265.087 I llm_load_print_meta: n_head_kv        = 1
0.00.265.088 I llm_load_print_meta: n_rot            = 256
0.00.265.089 I llm_load_print_meta: n_swa            = 0
0.00.265.089 I llm_load_print_meta: n_embd_head_k    = 256
0.00.265.089 I llm_load_print_meta: n_embd_head_v    = 256
0.00.265.090 I llm_load_print_meta: n_gqa            = 8
0.00.265.092 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.265.093 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.265.094 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.265.095 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.265.096 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.265.096 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.265.097 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.265.098 I llm_load_print_meta: n_ff             = 16384
0.00.265.099 I llm_load_print_meta: n_expert         = 0
0.00.265.099 I llm_load_print_meta: n_expert_used    = 0
0.00.265.100 I llm_load_print_meta: causal attn      = 1
0.00.265.100 I llm_load_print_meta: pooling type     = 0
0.00.265.101 I llm_load_print_meta: rope type        = 2
0.00.265.101 I llm_load_print_meta: rope scaling     = linear
0.00.265.102 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.265.103 I llm_load_print_meta: freq_scale_train = 1
0.00.265.103 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.265.104 I llm_load_print_meta: rope_finetuned   = unknown
0.00.265.104 I llm_load_print_meta: ssm_d_conv       = 0
0.00.265.104 I llm_load_print_meta: ssm_d_inner      = 0
0.00.265.105 I llm_load_print_meta: ssm_d_state      = 0
0.00.265.105 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.265.105 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.265.106 I llm_load_print_meta: model type       = 2B
0.00.265.107 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.265.108 I llm_load_print_meta: model params     = 2.51 B
0.00.265.109 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.265.109 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.265.110 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.265.110 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.265.110 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.265.111 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.265.111 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.265.112 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.265.112 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.265.113 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.265.113 I llm_load_print_meta: max token length = 93
0.00.325.692 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.325.700 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.325.700 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.325.701 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.325.701 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.325.702 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.330.861 I llama_new_context_with_model: n_seq_max     = 1
0.00.330.868 I llama_new_context_with_model: n_ctx         = 4096
0.00.330.868 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.330.868 I llama_new_context_with_model: n_batch       = 2048
0.00.330.869 I llama_new_context_with_model: n_ubatch      = 512
0.00.330.869 I llama_new_context_with_model: flash_attn    = 0
0.00.330.871 I llama_new_context_with_model: freq_base     = 10000.0
0.00.330.872 I llama_new_context_with_model: freq_scale    = 1
0.00.330.873 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.345.350 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.345.364 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.345.464 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.346.717 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.346.722 I llama_new_context_with_model: graph nodes  = 601
0.00.346.722 I llama_new_context_with_model: graph splits = 1
0.00.346.725 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.422.204 I main: llama threadpool init, n_threads = 4
0.00.422.219 I 
0.00.422.293 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.422.296 I 
0.00.422.342 I sampler seed: 1739690218
0.00.422.354 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.422.369 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.422.372 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.422.373 I 
 effetica.eu/

The website you provided contains a number of resources related to data science and machine learning. However, I am unable to access the website

0.02.025.508 I llama_perf_sampler_print:    sampling time =       4.96 ms /    33 runs   (    0.15 ms per token,  6658.60 tokens per second)
0.02.025.510 I llama_perf_context_print:        load time =     421.29 ms
0.02.025.511 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.025.512 I llama_perf_context_print:        eval time =    1584.43 ms /    32 runs   (   49.51 ms per token,    20.20 tokens per second)
0.02.025.513 I llama_perf_context_print:       total time =    1603.31 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4163 (5931c1f2)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40188.29 ms
main:    total time = 40188.29 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.526 I build: 4163 (5931c1f2) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.001.219 I main: llama backend init
0.00.001.226 I main: load the model and apply lora adapter, if any
0.00.021.489 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.504 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.510 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.512 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.515 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.516 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.516 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.517 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.517 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.519 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.522 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.523 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.524 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.524 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.525 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.094 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.872 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.727 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.734 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.735 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.735 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.736 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.738 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.739 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.743 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.743 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.746 I llama_model_loader: - type  f32:   37 tensors
0.00.132.748 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.749 I llama_model_loader: - type q6_K:   19 tensors
0.00.207.975 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.015 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.661 I llm_load_vocab: special tokens cache size = 5
0.00.278.473 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.491 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.491 I llm_load_print_meta: arch             = gemma
0.00.278.492 I llm_load_print_meta: vocab type       = SPM
0.00.278.493 I llm_load_print_meta: n_vocab          = 256000
0.00.278.493 I llm_load_print_meta: n_merges         = 0
0.00.278.493 I llm_load_print_meta: vocab_only       = 0
0.00.278.494 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.494 I llm_load_print_meta: n_embd           = 2048
0.00.278.494 I llm_load_print_meta: n_layer          = 18
0.00.278.506 I llm_load_print_meta: n_head           = 8
0.00.278.507 I llm_load_print_meta: n_head_kv        = 1
0.00.278.507 I llm_load_print_meta: n_rot            = 256
0.00.278.507 I llm_load_print_meta: n_swa            = 0
0.00.278.508 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.508 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.509 I llm_load_print_meta: n_gqa            = 8
0.00.278.510 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.511 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.511 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.513 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.513 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.514 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.514 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.515 I llm_load_print_meta: n_ff             = 16384
0.00.278.515 I llm_load_print_meta: n_expert         = 0
0.00.278.515 I llm_load_print_meta: n_expert_used    = 0
0.00.278.516 I llm_load_print_meta: causal attn      = 1
0.00.278.516 I llm_load_print_meta: pooling type     = 0
0.00.278.516 I llm_load_print_meta: rope type        = 2
0.00.278.516 I llm_load_print_meta: rope scaling     = linear
0.00.278.518 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.519 I llm_load_print_meta: freq_scale_train = 1
0.00.278.519 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.519 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.520 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.520 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.520 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.521 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.521 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.521 I llm_load_print_meta: model type       = 2B
0.00.278.522 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.278.523 I llm_load_print_meta: model params     = 2.51 B
0.00.278.523 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.278.524 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.524 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.524 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.525 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.525 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.525 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.526 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.526 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.526 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.527 I llm_load_print_meta: max token length = 93
0.00.332.714 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.338.751 I llama_new_context_with_model: n_seq_max     = 1
0.00.338.758 I llama_new_context_with_model: n_ctx         = 4096
0.00.338.759 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.338.759 I llama_new_context_with_model: n_batch       = 2048
0.00.338.760 I llama_new_context_with_model: n_ubatch      = 512
0.00.338.760 I llama_new_context_with_model: flash_attn    = 0
0.00.338.763 I llama_new_context_with_model: freq_base     = 10000.0
0.00.338.764 I llama_new_context_with_model: freq_scale    = 1
0.00.338.765 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.353.574 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.353.589 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.353.682 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.354.907 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.354.914 I llama_new_context_with_model: graph nodes  = 601
0.00.354.914 I llama_new_context_with_model: graph splits = 1
0.00.354.916 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.430.116 I main: llama threadpool init, n_threads = 4
0.00.430.134 I 
0.00.430.207 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | AARCH64_REPACK = 1 | 
0.00.430.211 I 
0.00.430.256 I sampler seed: 500860431
0.00.430.267 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.430.280 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.430.283 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.430.284 I 
 encompating the needs of patients and healthcare professionals.

**Patient Needs:**

* Access to timely and accurate medical information
* Personalized medical care plans
*

0.02.035.397 I llama_perf_sampler_print:    sampling time =       5.26 ms /    33 runs   (    0.16 ms per token,  6278.54 tokens per second)
0.02.035.399 I llama_perf_context_print:        load time =     428.87 ms
0.02.035.401 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.035.402 I llama_perf_context_print:        eval time =    1585.18 ms /    32 runs   (   49.54 ms per token,    20.19 tokens per second)
0.02.035.403 I llama_perf_context_print:       total time =    1605.29 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.301s
user	10m24.203s
sys	0m7.045s
