+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.570 I build: 3972 (5409a21e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.760 I main: llama backend init
0.00.001.875 I main: load the model and apply lora adapter, if any
0.00.022.225 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.275 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.283 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.288 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.290 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.295 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.296 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.297 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.298 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.298 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.299 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.304 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.304 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.305 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.306 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.306 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.454 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.938 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.806 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.814 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.814 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.815 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.815 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.816 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.817 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.819 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.820 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.821 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.821 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.822 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.826 I llama_model_loader: - type  f32:   37 tensors
0.00.133.828 I llama_model_loader: - type q8_0:  127 tensors
0.00.217.029 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.270.235 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.270.954 I llm_load_vocab: special tokens cache size = 5
0.00.292.253 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.292.272 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.292.272 I llm_load_print_meta: arch             = gemma
0.00.292.273 I llm_load_print_meta: vocab type       = SPM
0.00.292.274 I llm_load_print_meta: n_vocab          = 256000
0.00.292.274 I llm_load_print_meta: n_merges         = 0
0.00.292.274 I llm_load_print_meta: vocab_only       = 0
0.00.292.275 I llm_load_print_meta: n_ctx_train      = 8192
0.00.292.275 I llm_load_print_meta: n_embd           = 2048
0.00.292.275 I llm_load_print_meta: n_layer          = 18
0.00.292.287 I llm_load_print_meta: n_head           = 8
0.00.292.288 I llm_load_print_meta: n_head_kv        = 1
0.00.292.289 I llm_load_print_meta: n_rot            = 256
0.00.292.289 I llm_load_print_meta: n_swa            = 0
0.00.292.290 I llm_load_print_meta: n_embd_head_k    = 256
0.00.292.290 I llm_load_print_meta: n_embd_head_v    = 256
0.00.292.291 I llm_load_print_meta: n_gqa            = 8
0.00.292.292 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.292.293 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.292.294 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.292.295 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.292.296 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.292.296 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.292.296 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.292.297 I llm_load_print_meta: n_ff             = 16384
0.00.292.298 I llm_load_print_meta: n_expert         = 0
0.00.292.298 I llm_load_print_meta: n_expert_used    = 0
0.00.292.298 I llm_load_print_meta: causal attn      = 1
0.00.292.298 I llm_load_print_meta: pooling type     = 0
0.00.292.299 I llm_load_print_meta: rope type        = 2
0.00.292.299 I llm_load_print_meta: rope scaling     = linear
0.00.292.301 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.292.301 I llm_load_print_meta: freq_scale_train = 1
0.00.292.302 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.292.302 I llm_load_print_meta: rope_finetuned   = unknown
0.00.292.303 I llm_load_print_meta: ssm_d_conv       = 0
0.00.292.303 I llm_load_print_meta: ssm_d_inner      = 0
0.00.292.304 I llm_load_print_meta: ssm_d_state      = 0
0.00.292.304 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.292.304 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.292.305 I llm_load_print_meta: model type       = 2B
0.00.292.309 I llm_load_print_meta: model ftype      = Q8_0
0.00.292.310 I llm_load_print_meta: model params     = 2.51 B
0.00.292.311 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.292.311 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.292.312 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.292.312 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.292.312 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.292.313 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.292.313 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.292.313 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.292.314 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.292.315 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.292.315 I llm_load_print_meta: max token length = 93
0.00.292.344 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.390.788 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.390.798 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.390.799 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.390.800 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.390.800 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.390.801 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.395.938 I llama_new_context_with_model: n_ctx      = 8192
0.00.395.944 I llama_new_context_with_model: n_batch    = 2048
0.00.395.944 I llama_new_context_with_model: n_ubatch   = 512
0.00.395.945 I llama_new_context_with_model: flash_attn = 0
0.00.395.947 I llama_new_context_with_model: freq_base  = 10000.0
0.00.395.948 I llama_new_context_with_model: freq_scale = 1
0.00.425.110 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.425.122 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.425.214 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.426.091 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.426.099 I llama_new_context_with_model: graph nodes  = 601
0.00.426.100 I llama_new_context_with_model: graph splits = 1
0.00.426.102 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.521.978 I main: llama threadpool init, n_threads = 4
0.00.521.991 I 
0.00.522.069 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.522.072 I 
0.00.522.112 I sampler seed: 3485560574
0.00.522.123 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.522.125 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.522.126 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.522.126 I 
 increably. [end of text]


0.00.807.656 I llama_perf_sampler_print:    sampling time =       0.63 ms /     5 runs   (    0.13 ms per token,  7911.39 tokens per second)
0.00.807.659 I llama_perf_context_print:        load time =     520.08 ms
0.00.807.660 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.807.663 I llama_perf_context_print:        eval time =     282.39 ms /     4 runs   (   70.60 ms per token,    14.16 tokens per second)
0.00.807.664 I llama_perf_context_print:       total time =     285.69 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.540 I build: 3972 (5409a21e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.001.826 I main: load the model and apply lora adapter, if any
0.00.022.106 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.121 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.129 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.129 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.133 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.134 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.134 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.135 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.135 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.135 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.140 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.140 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.141 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.142 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.142 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.041 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.964 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.771 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.778 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.779 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.779 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.780 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.780 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.781 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.784 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.784 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.785 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.786 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.787 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.792 I llama_model_loader: - type  f32:   37 tensors
0.00.132.794 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.607 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.253.646 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.254.288 I llm_load_vocab: special tokens cache size = 5
0.00.275.584 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.275.601 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.275.601 I llm_load_print_meta: arch             = gemma
0.00.275.602 I llm_load_print_meta: vocab type       = SPM
0.00.275.602 I llm_load_print_meta: n_vocab          = 256000
0.00.275.603 I llm_load_print_meta: n_merges         = 0
0.00.275.603 I llm_load_print_meta: vocab_only       = 0
0.00.275.603 I llm_load_print_meta: n_ctx_train      = 8192
0.00.275.604 I llm_load_print_meta: n_embd           = 2048
0.00.275.604 I llm_load_print_meta: n_layer          = 18
0.00.275.615 I llm_load_print_meta: n_head           = 8
0.00.275.616 I llm_load_print_meta: n_head_kv        = 1
0.00.275.616 I llm_load_print_meta: n_rot            = 256
0.00.275.617 I llm_load_print_meta: n_swa            = 0
0.00.275.617 I llm_load_print_meta: n_embd_head_k    = 256
0.00.275.617 I llm_load_print_meta: n_embd_head_v    = 256
0.00.275.618 I llm_load_print_meta: n_gqa            = 8
0.00.275.619 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.275.620 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.275.621 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.275.622 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.275.622 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.275.623 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.275.623 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.275.624 I llm_load_print_meta: n_ff             = 16384
0.00.275.624 I llm_load_print_meta: n_expert         = 0
0.00.275.624 I llm_load_print_meta: n_expert_used    = 0
0.00.275.625 I llm_load_print_meta: causal attn      = 1
0.00.275.625 I llm_load_print_meta: pooling type     = 0
0.00.275.625 I llm_load_print_meta: rope type        = 2
0.00.275.626 I llm_load_print_meta: rope scaling     = linear
0.00.275.627 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.275.628 I llm_load_print_meta: freq_scale_train = 1
0.00.275.628 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.275.628 I llm_load_print_meta: rope_finetuned   = unknown
0.00.275.629 I llm_load_print_meta: ssm_d_conv       = 0
0.00.275.629 I llm_load_print_meta: ssm_d_inner      = 0
0.00.275.629 I llm_load_print_meta: ssm_d_state      = 0
0.00.275.629 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.275.629 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.275.630 I llm_load_print_meta: model type       = 2B
0.00.275.631 I llm_load_print_meta: model ftype      = Q8_0
0.00.275.631 I llm_load_print_meta: model params     = 2.51 B
0.00.275.632 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.275.633 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.275.633 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.275.633 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.275.634 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.275.634 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.275.634 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.275.635 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.275.635 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.275.635 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.275.635 I llm_load_print_meta: max token length = 93
0.00.275.657 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.369.137 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.374.232 I llama_new_context_with_model: n_ctx      = 8192
0.00.374.238 I llama_new_context_with_model: n_batch    = 2048
0.00.374.238 I llama_new_context_with_model: n_ubatch   = 512
0.00.374.239 I llama_new_context_with_model: flash_attn = 0
0.00.374.241 I llama_new_context_with_model: freq_base  = 10000.0
0.00.374.242 I llama_new_context_with_model: freq_scale = 1
0.00.403.658 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.403.674 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.403.765 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.404.596 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.404.604 I llama_new_context_with_model: graph nodes  = 601
0.00.404.605 I llama_new_context_with_model: graph splits = 1
0.00.404.607 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.494.280 I main: llama threadpool init, n_threads = 4
0.00.494.294 I 
0.00.494.373 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.494.376 I 
0.00.494.416 I sampler seed: 1521649944
0.00.494.426 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.494.433 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.494.434 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.494.434 I 
 maneurors in the Naruto universe.

I'm unable to access the requested content, therefore I am unable to provide information regarding the usage of whiskered

0.02.704.623 I llama_perf_sampler_print:    sampling time =       4.99 ms /    33 runs   (    0.15 ms per token,  6611.90 tokens per second)
0.02.704.625 I llama_perf_context_print:        load time =     492.43 ms
0.02.704.626 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.704.628 I llama_perf_context_print:        eval time =    2190.11 ms /    32 runs   (   68.44 ms per token,    14.61 tokens per second)
0.02.704.628 I llama_perf_context_print:       total time =    2210.35 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.541 I build: 3972 (5409a21e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.001.889 I main: load the model and apply lora adapter, if any
0.00.022.065 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.022.123 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.022.134 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.141 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.143 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.150 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.154 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.156 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.156 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.157 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.158 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.165 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.166 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.167 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.168 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.169 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.051.674 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.129.743 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.566 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.573 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.573 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.574 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.575 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.575 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.576 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.579 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.580 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.581 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.581 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.136.582 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.136.587 I llama_model_loader: - type  f32:   37 tensors
0.00.136.589 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.785 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.267.289 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.267.936 I llm_load_vocab: special tokens cache size = 5
0.00.290.878 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.290.897 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.290.897 I llm_load_print_meta: arch             = gemma
0.00.290.898 I llm_load_print_meta: vocab type       = SPM
0.00.290.899 I llm_load_print_meta: n_vocab          = 256000
0.00.290.899 I llm_load_print_meta: n_merges         = 0
0.00.290.899 I llm_load_print_meta: vocab_only       = 0
0.00.290.900 I llm_load_print_meta: n_ctx_train      = 8192
0.00.290.900 I llm_load_print_meta: n_embd           = 2048
0.00.290.900 I llm_load_print_meta: n_layer          = 18
0.00.290.912 I llm_load_print_meta: n_head           = 8
0.00.290.913 I llm_load_print_meta: n_head_kv        = 1
0.00.290.914 I llm_load_print_meta: n_rot            = 256
0.00.290.914 I llm_load_print_meta: n_swa            = 0
0.00.290.914 I llm_load_print_meta: n_embd_head_k    = 256
0.00.290.915 I llm_load_print_meta: n_embd_head_v    = 256
0.00.290.916 I llm_load_print_meta: n_gqa            = 8
0.00.290.917 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.290.917 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.290.918 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.290.920 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.290.920 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.290.920 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.290.921 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.290.922 I llm_load_print_meta: n_ff             = 16384
0.00.290.923 I llm_load_print_meta: n_expert         = 0
0.00.290.924 I llm_load_print_meta: n_expert_used    = 0
0.00.290.924 I llm_load_print_meta: causal attn      = 1
0.00.290.924 I llm_load_print_meta: pooling type     = 0
0.00.290.925 I llm_load_print_meta: rope type        = 2
0.00.290.926 I llm_load_print_meta: rope scaling     = linear
0.00.290.927 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.290.928 I llm_load_print_meta: freq_scale_train = 1
0.00.290.928 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.290.929 I llm_load_print_meta: rope_finetuned   = unknown
0.00.290.929 I llm_load_print_meta: ssm_d_conv       = 0
0.00.290.929 I llm_load_print_meta: ssm_d_inner      = 0
0.00.290.929 I llm_load_print_meta: ssm_d_state      = 0
0.00.290.929 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.290.930 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.290.930 I llm_load_print_meta: model type       = 2B
0.00.290.931 I llm_load_print_meta: model ftype      = Q8_0
0.00.290.932 I llm_load_print_meta: model params     = 2.51 B
0.00.290.933 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.290.934 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.290.934 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.290.935 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.290.936 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.290.936 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.290.936 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.290.936 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.290.937 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.290.938 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.290.939 I llm_load_print_meta: max token length = 93
0.00.290.975 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.368.484 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.368.493 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.368.493 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.368.494 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.368.494 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.368.495 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.373.549 I llama_new_context_with_model: n_ctx      = 8192
0.00.373.556 I llama_new_context_with_model: n_batch    = 2048
0.00.373.556 I llama_new_context_with_model: n_ubatch   = 512
0.00.373.557 I llama_new_context_with_model: flash_attn = 0
0.00.373.558 I llama_new_context_with_model: freq_base  = 10000.0
0.00.373.560 I llama_new_context_with_model: freq_scale = 1
0.00.402.981 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.402.997 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.403.099 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.404.012 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.404.020 I llama_new_context_with_model: graph nodes  = 601
0.00.404.021 I llama_new_context_with_model: graph splits = 1
0.00.404.023 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.497.210 I main: llama threadpool init, n_threads = 4
0.00.497.224 I 
0.00.497.307 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.497.311 I 
0.00.497.359 I sampler seed: 28816988
0.00.497.371 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.497.373 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.497.374 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.497.374 I 
 increasels, and other small creatures living in the coral reefs.

**a)** Describe the types of organisms found in the coral reefs.
**b)**

0.02.799.072 I llama_perf_sampler_print:    sampling time =       4.85 ms /    33 runs   (    0.15 ms per token,  6798.52 tokens per second)
0.02.799.074 I llama_perf_context_print:        load time =     495.30 ms
0.02.799.075 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.799.077 I llama_perf_context_print:        eval time =    2281.39 ms /    32 runs   (   71.29 ms per token,    14.03 tokens per second)
0.02.799.078 I llama_perf_context_print:       total time =    2301.87 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.559 I build: 3972 (5409a21e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.001.878 I main: load the model and apply lora adapter, if any
0.00.021.852 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.900 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.912 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.920 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.921 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.926 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.929 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.929 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.930 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.931 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.931 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.936 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.936 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.937 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.937 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.938 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.971 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.424 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.481 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.490 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.491 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.492 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.492 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.493 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.494 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.496 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.497 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.498 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.499 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.500 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.504 I llama_model_loader: - type  f32:   37 tensors
0.00.133.508 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.276 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.354 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.260.982 I llm_load_vocab: special tokens cache size = 5
0.00.281.951 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.281.968 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.281.969 I llm_load_print_meta: arch             = gemma
0.00.281.969 I llm_load_print_meta: vocab type       = SPM
0.00.281.970 I llm_load_print_meta: n_vocab          = 256000
0.00.281.970 I llm_load_print_meta: n_merges         = 0
0.00.281.971 I llm_load_print_meta: vocab_only       = 0
0.00.281.971 I llm_load_print_meta: n_ctx_train      = 8192
0.00.281.971 I llm_load_print_meta: n_embd           = 2048
0.00.281.972 I llm_load_print_meta: n_layer          = 18
0.00.281.984 I llm_load_print_meta: n_head           = 8
0.00.281.985 I llm_load_print_meta: n_head_kv        = 1
0.00.281.985 I llm_load_print_meta: n_rot            = 256
0.00.281.986 I llm_load_print_meta: n_swa            = 0
0.00.281.986 I llm_load_print_meta: n_embd_head_k    = 256
0.00.281.986 I llm_load_print_meta: n_embd_head_v    = 256
0.00.281.987 I llm_load_print_meta: n_gqa            = 8
0.00.281.988 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.281.989 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.281.990 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.281.991 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.281.991 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.281.991 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.281.992 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.281.993 I llm_load_print_meta: n_ff             = 16384
0.00.281.993 I llm_load_print_meta: n_expert         = 0
0.00.281.993 I llm_load_print_meta: n_expert_used    = 0
0.00.281.994 I llm_load_print_meta: causal attn      = 1
0.00.281.994 I llm_load_print_meta: pooling type     = 0
0.00.281.994 I llm_load_print_meta: rope type        = 2
0.00.281.995 I llm_load_print_meta: rope scaling     = linear
0.00.281.996 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.281.997 I llm_load_print_meta: freq_scale_train = 1
0.00.281.997 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.281.997 I llm_load_print_meta: rope_finetuned   = unknown
0.00.281.998 I llm_load_print_meta: ssm_d_conv       = 0
0.00.281.998 I llm_load_print_meta: ssm_d_inner      = 0
0.00.281.998 I llm_load_print_meta: ssm_d_state      = 0
0.00.281.998 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.281.999 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.281.999 I llm_load_print_meta: model type       = 2B
0.00.282.000 I llm_load_print_meta: model ftype      = Q8_0
0.00.282.001 I llm_load_print_meta: model params     = 2.51 B
0.00.282.001 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.282.002 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.002 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.002 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.003 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.003 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.003 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.004 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.004 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.004 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.005 I llm_load_print_meta: max token length = 93
0.00.282.026 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.352.916 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.352.924 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.357.801 I llama_new_context_with_model: n_ctx      = 8192
0.00.357.808 I llama_new_context_with_model: n_batch    = 2048
0.00.357.809 I llama_new_context_with_model: n_ubatch   = 512
0.00.357.809 I llama_new_context_with_model: flash_attn = 0
0.00.357.812 I llama_new_context_with_model: freq_base  = 10000.0
0.00.357.813 I llama_new_context_with_model: freq_scale = 1
0.00.387.684 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.387.700 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.387.794 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.388.685 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.388.692 I llama_new_context_with_model: graph nodes  = 601
0.00.388.693 I llama_new_context_with_model: graph splits = 1
0.00.388.694 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.486.592 I main: llama threadpool init, n_threads = 4
0.00.486.607 I 
0.00.486.694 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.486.697 I 
0.00.486.744 I sampler seed: 333617207
0.00.486.754 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.486.757 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.486.757 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.486.757 I 
 increasities. [end of text]


0.00.799.286 I llama_perf_sampler_print:    sampling time =       0.73 ms /     5 runs   (    0.15 ms per token,  6849.32 tokens per second)
0.00.799.288 I llama_perf_context_print:        load time =     484.69 ms
0.00.799.289 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.799.290 I llama_perf_context_print:        eval time =     309.03 ms /     4 runs   (   77.26 ms per token,    12.94 tokens per second)
0.00.799.291 I llama_perf_context_print:       total time =     312.70 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m17.063s
user	0m23.410s
sys	0m9.646s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3972 (5409a21e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32282.60 ms
main:    total time = 32282.60 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.549 I build: 3972 (5409a21e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.751 I main: llama backend init
0.00.001.911 I main: load the model and apply lora adapter, if any
0.00.022.039 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.089 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.099 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.104 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.106 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.111 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.111 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.112 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.112 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.113 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.113 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.118 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.119 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.119 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.120 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.121 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.985 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.600 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.411 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.417 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.418 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.419 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.419 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.420 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.421 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.423 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.424 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.425 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.425 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.426 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.430 I llama_model_loader: - type  f32:   37 tensors
0.00.133.432 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.432 I llama_model_loader: - type q6_K:   19 tensors
0.00.214.257 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.265.240 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.265.905 I llm_load_vocab: special tokens cache size = 5
0.00.286.996 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.287.014 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.287.015 I llm_load_print_meta: arch             = gemma
0.00.287.015 I llm_load_print_meta: vocab type       = SPM
0.00.287.016 I llm_load_print_meta: n_vocab          = 256000
0.00.287.016 I llm_load_print_meta: n_merges         = 0
0.00.287.017 I llm_load_print_meta: vocab_only       = 0
0.00.287.017 I llm_load_print_meta: n_ctx_train      = 8192
0.00.287.017 I llm_load_print_meta: n_embd           = 2048
0.00.287.018 I llm_load_print_meta: n_layer          = 18
0.00.287.030 I llm_load_print_meta: n_head           = 8
0.00.287.031 I llm_load_print_meta: n_head_kv        = 1
0.00.287.031 I llm_load_print_meta: n_rot            = 256
0.00.287.032 I llm_load_print_meta: n_swa            = 0
0.00.287.032 I llm_load_print_meta: n_embd_head_k    = 256
0.00.287.032 I llm_load_print_meta: n_embd_head_v    = 256
0.00.287.033 I llm_load_print_meta: n_gqa            = 8
0.00.287.034 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.287.035 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.287.036 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.287.037 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.287.038 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.287.038 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.287.038 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.287.039 I llm_load_print_meta: n_ff             = 16384
0.00.287.040 I llm_load_print_meta: n_expert         = 0
0.00.287.040 I llm_load_print_meta: n_expert_used    = 0
0.00.287.040 I llm_load_print_meta: causal attn      = 1
0.00.287.041 I llm_load_print_meta: pooling type     = 0
0.00.287.041 I llm_load_print_meta: rope type        = 2
0.00.287.041 I llm_load_print_meta: rope scaling     = linear
0.00.287.043 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.287.044 I llm_load_print_meta: freq_scale_train = 1
0.00.287.044 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.287.045 I llm_load_print_meta: rope_finetuned   = unknown
0.00.287.045 I llm_load_print_meta: ssm_d_conv       = 0
0.00.287.045 I llm_load_print_meta: ssm_d_inner      = 0
0.00.287.045 I llm_load_print_meta: ssm_d_state      = 0
0.00.287.045 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.287.046 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.287.046 I llm_load_print_meta: model type       = 2B
0.00.287.047 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.287.048 I llm_load_print_meta: model params     = 2.51 B
0.00.287.048 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.287.049 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.287.049 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.287.049 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.287.050 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.287.050 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.287.050 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.287.050 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.287.051 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.287.051 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.287.052 I llm_load_print_meta: max token length = 93
0.00.287.079 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.345.573 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.345.581 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.345.582 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.345.583 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.345.583 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.345.584 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.350.671 I llama_new_context_with_model: n_ctx      = 8192
0.00.350.679 I llama_new_context_with_model: n_batch    = 2048
0.00.350.679 I llama_new_context_with_model: n_ubatch   = 512
0.00.350.680 I llama_new_context_with_model: flash_attn = 0
0.00.350.683 I llama_new_context_with_model: freq_base  = 10000.0
0.00.350.684 I llama_new_context_with_model: freq_scale = 1
0.00.380.249 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.380.266 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.380.356 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.381.233 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.381.241 I llama_new_context_with_model: graph nodes  = 601
0.00.381.241 I llama_new_context_with_model: graph splits = 1
0.00.381.243 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.577 I main: llama threadpool init, n_threads = 4
0.00.463.592 I 
0.00.463.669 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.463.673 I 
0.00.463.711 I sampler seed: 3741367685
0.00.463.722 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.463.725 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.463.725 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.463.726 I 
 fufilling to my query about the differences between the two terms.

**1. Evasion**

- Evasion is the intentional or unintentional avoidance of a

0.02.132.479 I llama_perf_sampler_print:    sampling time =       4.90 ms /    33 runs   (    0.15 ms per token,  6737.44 tokens per second)
0.02.132.481 I llama_perf_context_print:        load time =     461.64 ms
0.02.132.482 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.132.484 I llama_perf_context_print:        eval time =    1649.34 ms /    32 runs   (   51.54 ms per token,    19.40 tokens per second)
0.02.132.485 I llama_perf_context_print:       total time =    1668.91 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3972 (5409a21e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32054.85 ms
main:    total time = 32054.85 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.552 I build: 3972 (5409a21e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.886 I main: load the model and apply lora adapter, if any
0.00.022.243 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.261 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.269 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.270 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.275 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.276 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.277 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.278 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.278 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.279 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.284 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.285 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.285 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.287 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.288 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.604 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.147 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.980 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.986 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.987 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.988 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.989 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.990 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.990 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.993 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.993 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.998 I llama_model_loader: - type  f32:   37 tensors
0.00.134.000 I llama_model_loader: - type q4_K:  108 tensors
0.00.134.001 I llama_model_loader: - type q6_K:   19 tensors
0.00.213.412 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.261.269 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.261.836 I llm_load_vocab: special tokens cache size = 5
0.00.282.778 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.795 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.796 I llm_load_print_meta: arch             = gemma
0.00.282.797 I llm_load_print_meta: vocab type       = SPM
0.00.282.797 I llm_load_print_meta: n_vocab          = 256000
0.00.282.797 I llm_load_print_meta: n_merges         = 0
0.00.282.798 I llm_load_print_meta: vocab_only       = 0
0.00.282.798 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.798 I llm_load_print_meta: n_embd           = 2048
0.00.282.799 I llm_load_print_meta: n_layer          = 18
0.00.282.810 I llm_load_print_meta: n_head           = 8
0.00.282.811 I llm_load_print_meta: n_head_kv        = 1
0.00.282.811 I llm_load_print_meta: n_rot            = 256
0.00.282.812 I llm_load_print_meta: n_swa            = 0
0.00.282.812 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.812 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.813 I llm_load_print_meta: n_gqa            = 8
0.00.282.814 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.815 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.816 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.817 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.818 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.818 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.818 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.819 I llm_load_print_meta: n_ff             = 16384
0.00.282.819 I llm_load_print_meta: n_expert         = 0
0.00.282.819 I llm_load_print_meta: n_expert_used    = 0
0.00.282.820 I llm_load_print_meta: causal attn      = 1
0.00.282.820 I llm_load_print_meta: pooling type     = 0
0.00.282.820 I llm_load_print_meta: rope type        = 2
0.00.282.821 I llm_load_print_meta: rope scaling     = linear
0.00.282.822 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.823 I llm_load_print_meta: freq_scale_train = 1
0.00.282.823 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.823 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.824 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.824 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.824 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.824 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.825 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.825 I llm_load_print_meta: model type       = 2B
0.00.282.825 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.282.826 I llm_load_print_meta: model params     = 2.51 B
0.00.282.827 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.282.828 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.828 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.829 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.829 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.829 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.829 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.830 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.830 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.830 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.831 I llm_load_print_meta: max token length = 93
0.00.282.850 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.340.174 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.345.279 I llama_new_context_with_model: n_ctx      = 8192
0.00.345.285 I llama_new_context_with_model: n_batch    = 2048
0.00.345.285 I llama_new_context_with_model: n_ubatch   = 512
0.00.345.286 I llama_new_context_with_model: flash_attn = 0
0.00.345.288 I llama_new_context_with_model: freq_base  = 10000.0
0.00.345.289 I llama_new_context_with_model: freq_scale = 1
0.00.375.705 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.375.724 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.375.821 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.376.673 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.376.681 I llama_new_context_with_model: graph nodes  = 601
0.00.376.681 I llama_new_context_with_model: graph splits = 1
0.00.376.683 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.458.174 I main: llama threadpool init, n_threads = 4
0.00.458.187 I 
0.00.458.265 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.458.268 I 
0.00.458.307 I sampler seed: 611592475
0.00.458.316 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.458.319 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.458.319 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.458.320 I 
 effegously.

Answer the question following the instructions.

**Instructions:** Write a short paragraph using proper grammar and punctuation.

Answer the question following the

0.02.100.950 I llama_perf_sampler_print:    sampling time =       4.68 ms /    33 runs   (    0.14 ms per token,  7054.30 tokens per second)
0.02.100.953 I llama_perf_context_print:        load time =     456.27 ms
0.02.100.954 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.100.956 I llama_perf_context_print:        eval time =    1622.88 ms /    32 runs   (   50.72 ms per token,    19.72 tokens per second)
0.02.100.957 I llama_perf_context_print:       total time =    1642.78 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.850s
user	8m15.450s
sys	0m7.109s
