+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.554 I build: 4291 (b8d1b1a5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.750 I main: llama backend init
0.00.000.756 I main: load the model and apply lora adapter, if any
0.00.020.986 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.020.992 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.000 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.005 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.006 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.010 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.011 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.012 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.012 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.013 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.014 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.019 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.019 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.026 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.027 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.028 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.877 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.865 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.640 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.645 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.646 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.647 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.648 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.649 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.650 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.652 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.652 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.653 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.654 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.655 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.657 I llama_model_loader: - type  f32:   37 tensors
0.00.130.658 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.279 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.256.233 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.961 I llm_load_vocab: special tokens cache size = 5
0.00.277.827 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.848 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.848 I llm_load_print_meta: arch             = gemma
0.00.277.849 I llm_load_print_meta: vocab type       = SPM
0.00.277.849 I llm_load_print_meta: n_vocab          = 256000
0.00.277.850 I llm_load_print_meta: n_merges         = 0
0.00.277.850 I llm_load_print_meta: vocab_only       = 0
0.00.277.850 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.851 I llm_load_print_meta: n_embd           = 2048
0.00.277.851 I llm_load_print_meta: n_layer          = 18
0.00.277.862 I llm_load_print_meta: n_head           = 8
0.00.277.863 I llm_load_print_meta: n_head_kv        = 1
0.00.277.864 I llm_load_print_meta: n_rot            = 256
0.00.277.864 I llm_load_print_meta: n_swa            = 0
0.00.277.864 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.865 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.865 I llm_load_print_meta: n_gqa            = 8
0.00.277.867 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.867 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.868 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.869 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.870 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.870 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.870 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.871 I llm_load_print_meta: n_ff             = 16384
0.00.277.871 I llm_load_print_meta: n_expert         = 0
0.00.277.872 I llm_load_print_meta: n_expert_used    = 0
0.00.277.872 I llm_load_print_meta: causal attn      = 1
0.00.277.872 I llm_load_print_meta: pooling type     = 0
0.00.277.873 I llm_load_print_meta: rope type        = 2
0.00.277.873 I llm_load_print_meta: rope scaling     = linear
0.00.277.874 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.875 I llm_load_print_meta: freq_scale_train = 1
0.00.277.875 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.876 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.876 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.876 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.877 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.877 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.877 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.877 I llm_load_print_meta: model type       = 2B
0.00.277.878 I llm_load_print_meta: model ftype      = Q8_0
0.00.277.879 I llm_load_print_meta: model params     = 2.51 B
0.00.277.880 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.277.880 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.881 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.881 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.881 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.882 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.882 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.882 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.883 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.883 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.883 I llm_load_print_meta: max token length = 93
0.00.378.174 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.378.181 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.378.182 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.378.182 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.378.183 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.378.184 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.383.427 I llama_new_context_with_model: n_seq_max     = 1
0.00.383.433 I llama_new_context_with_model: n_ctx         = 4096
0.00.383.433 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.383.434 I llama_new_context_with_model: n_batch       = 2048
0.00.383.434 I llama_new_context_with_model: n_ubatch      = 512
0.00.383.435 I llama_new_context_with_model: flash_attn    = 0
0.00.383.437 I llama_new_context_with_model: freq_base     = 10000.0
0.00.383.438 I llama_new_context_with_model: freq_scale    = 1
0.00.383.439 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.397.792 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.397.804 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.397.890 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.399.105 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.399.111 I llama_new_context_with_model: graph nodes  = 601
0.00.399.111 I llama_new_context_with_model: graph splits = 1
0.00.399.113 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.483.876 I main: llama threadpool init, n_threads = 4
0.00.483.890 I 
0.00.483.964 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.483.967 I 
0.00.484.017 I sampler seed: 3562565159
0.00.484.027 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.484.039 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.484.043 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.484.043 I 
 increasities. 
I am unable to generate the requested content as it contains sexually suggestive and inappropriate material that is not appropriate for me to provide. [end of text]


0.02.663.368 I llama_perf_sampler_print:    sampling time =       5.22 ms /    32 runs   (    0.16 ms per token,  6125.57 tokens per second)
0.02.663.371 I llama_perf_context_print:        load time =     483.10 ms
0.02.663.373 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.663.375 I llama_perf_context_print:        eval time =    2160.77 ms /    31 runs   (   69.70 ms per token,    14.35 tokens per second)
0.02.663.376 I llama_perf_context_print:       total time =    2179.50 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.171 I build: 4291 (b8d1b1a5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.361 I main: llama backend init
0.00.000.367 I main: load the model and apply lora adapter, if any
0.00.020.851 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.020.862 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.868 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.869 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.872 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.873 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.874 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.874 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.875 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.875 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.879 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.879 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.880 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.880 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.881 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.482 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.788 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.600 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.606 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.607 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.608 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.609 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.610 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.611 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.614 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.615 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.616 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.617 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.618 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.621 I llama_model_loader: - type  f32:   37 tensors
0.00.130.622 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.102 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.240.021 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.240.572 I llm_load_vocab: special tokens cache size = 5
0.00.261.241 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.261.256 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.261.256 I llm_load_print_meta: arch             = gemma
0.00.261.257 I llm_load_print_meta: vocab type       = SPM
0.00.261.258 I llm_load_print_meta: n_vocab          = 256000
0.00.261.258 I llm_load_print_meta: n_merges         = 0
0.00.261.258 I llm_load_print_meta: vocab_only       = 0
0.00.261.259 I llm_load_print_meta: n_ctx_train      = 8192
0.00.261.259 I llm_load_print_meta: n_embd           = 2048
0.00.261.259 I llm_load_print_meta: n_layer          = 18
0.00.261.269 I llm_load_print_meta: n_head           = 8
0.00.261.270 I llm_load_print_meta: n_head_kv        = 1
0.00.261.270 I llm_load_print_meta: n_rot            = 256
0.00.261.271 I llm_load_print_meta: n_swa            = 0
0.00.261.271 I llm_load_print_meta: n_embd_head_k    = 256
0.00.261.271 I llm_load_print_meta: n_embd_head_v    = 256
0.00.261.272 I llm_load_print_meta: n_gqa            = 8
0.00.261.273 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.261.274 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.261.275 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.261.276 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.261.276 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.261.277 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.261.277 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.261.278 I llm_load_print_meta: n_ff             = 16384
0.00.261.278 I llm_load_print_meta: n_expert         = 0
0.00.261.278 I llm_load_print_meta: n_expert_used    = 0
0.00.261.279 I llm_load_print_meta: causal attn      = 1
0.00.261.279 I llm_load_print_meta: pooling type     = 0
0.00.261.279 I llm_load_print_meta: rope type        = 2
0.00.261.279 I llm_load_print_meta: rope scaling     = linear
0.00.261.281 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.261.282 I llm_load_print_meta: freq_scale_train = 1
0.00.261.282 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.261.282 I llm_load_print_meta: rope_finetuned   = unknown
0.00.261.282 I llm_load_print_meta: ssm_d_conv       = 0
0.00.261.283 I llm_load_print_meta: ssm_d_inner      = 0
0.00.261.283 I llm_load_print_meta: ssm_d_state      = 0
0.00.261.283 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.261.283 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.261.284 I llm_load_print_meta: model type       = 2B
0.00.261.284 I llm_load_print_meta: model ftype      = Q8_0
0.00.261.285 I llm_load_print_meta: model params     = 2.51 B
0.00.261.286 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.261.286 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.261.287 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.261.287 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.261.287 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.261.288 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.261.288 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.261.288 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.261.288 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.261.289 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.261.289 I llm_load_print_meta: max token length = 93
0.00.357.114 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.362.206 I llama_new_context_with_model: n_seq_max     = 1
0.00.362.212 I llama_new_context_with_model: n_ctx         = 4096
0.00.362.213 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.362.213 I llama_new_context_with_model: n_batch       = 2048
0.00.362.214 I llama_new_context_with_model: n_ubatch      = 512
0.00.362.214 I llama_new_context_with_model: flash_attn    = 0
0.00.362.216 I llama_new_context_with_model: freq_base     = 10000.0
0.00.362.217 I llama_new_context_with_model: freq_scale    = 1
0.00.362.218 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.376.495 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.376.508 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.376.597 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.377.825 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.377.832 I llama_new_context_with_model: graph nodes  = 601
0.00.377.832 I llama_new_context_with_model: graph splits = 1
0.00.377.834 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.460.433 I main: llama threadpool init, n_threads = 4
0.00.460.451 I 
0.00.460.529 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.460.532 I 
0.00.460.578 I sampler seed: 822913734
0.00.460.589 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.460.592 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.460.593 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.460.593 I 
 increably. [end of text]


0.00.734.253 I llama_perf_sampler_print:    sampling time =       0.69 ms /     5 runs   (    0.14 ms per token,  7204.61 tokens per second)
0.00.734.255 I llama_perf_context_print:        load time =     460.05 ms
0.00.734.256 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.734.257 I llama_perf_context_print:        eval time =     270.67 ms /     4 runs   (   67.67 ms per token,    14.78 tokens per second)
0.00.734.258 I llama_perf_context_print:       total time =     273.83 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.536 I build: 4291 (b8d1b1a5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.000.751 I main: load the model and apply lora adapter, if any
0.00.021.130 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.138 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.145 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.150 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.151 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.154 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.156 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.157 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.158 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.158 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.159 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.162 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.163 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.163 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.164 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.164 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.475 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.949 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.290 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.298 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.299 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.300 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.301 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.302 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.304 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.307 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.308 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.309 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.310 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.134.312 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.316 I llama_model_loader: - type  f32:   37 tensors
0.00.134.317 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.347 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.746 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.376 I llm_load_vocab: special tokens cache size = 5
0.00.267.156 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.172 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.172 I llm_load_print_meta: arch             = gemma
0.00.267.173 I llm_load_print_meta: vocab type       = SPM
0.00.267.173 I llm_load_print_meta: n_vocab          = 256000
0.00.267.174 I llm_load_print_meta: n_merges         = 0
0.00.267.174 I llm_load_print_meta: vocab_only       = 0
0.00.267.175 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.175 I llm_load_print_meta: n_embd           = 2048
0.00.267.176 I llm_load_print_meta: n_layer          = 18
0.00.267.187 I llm_load_print_meta: n_head           = 8
0.00.267.188 I llm_load_print_meta: n_head_kv        = 1
0.00.267.188 I llm_load_print_meta: n_rot            = 256
0.00.267.189 I llm_load_print_meta: n_swa            = 0
0.00.267.189 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.189 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.190 I llm_load_print_meta: n_gqa            = 8
0.00.267.191 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.192 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.193 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.194 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.195 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.195 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.195 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.196 I llm_load_print_meta: n_ff             = 16384
0.00.267.197 I llm_load_print_meta: n_expert         = 0
0.00.267.197 I llm_load_print_meta: n_expert_used    = 0
0.00.267.197 I llm_load_print_meta: causal attn      = 1
0.00.267.198 I llm_load_print_meta: pooling type     = 0
0.00.267.198 I llm_load_print_meta: rope type        = 2
0.00.267.199 I llm_load_print_meta: rope scaling     = linear
0.00.267.200 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.200 I llm_load_print_meta: freq_scale_train = 1
0.00.267.201 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.201 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.201 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.202 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.202 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.202 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.202 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.203 I llm_load_print_meta: model type       = 2B
0.00.267.203 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.204 I llm_load_print_meta: model params     = 2.51 B
0.00.267.205 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.206 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.206 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.207 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.207 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.207 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.207 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.208 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.208 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.208 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.209 I llm_load_print_meta: max token length = 93
0.00.343.564 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.343.570 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.343.571 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.343.571 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.343.572 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.343.573 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.348.813 I llama_new_context_with_model: n_seq_max     = 1
0.00.348.819 I llama_new_context_with_model: n_ctx         = 4096
0.00.348.819 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.348.819 I llama_new_context_with_model: n_batch       = 2048
0.00.348.820 I llama_new_context_with_model: n_ubatch      = 512
0.00.348.820 I llama_new_context_with_model: flash_attn    = 0
0.00.348.822 I llama_new_context_with_model: freq_base     = 10000.0
0.00.348.823 I llama_new_context_with_model: freq_scale    = 1
0.00.348.824 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.362.900 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.362.913 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.363.001 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.364.307 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.364.314 I llama_new_context_with_model: graph nodes  = 601
0.00.364.314 I llama_new_context_with_model: graph splits = 1
0.00.364.316 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.447.368 I main: llama threadpool init, n_threads = 4
0.00.447.383 I 
0.00.447.458 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.447.460 I 
0.00.447.500 I sampler seed: 403174040
0.00.447.511 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.447.518 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.447.521 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.447.521 I 
 increadibly. [end of text]


0.00.736.683 I llama_perf_sampler_print:    sampling time =       0.71 ms /     5 runs   (    0.14 ms per token,  7062.15 tokens per second)
0.00.736.685 I llama_perf_context_print:        load time =     446.60 ms
0.00.736.686 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.736.687 I llama_perf_context_print:        eval time =     285.72 ms /     4 runs   (   71.43 ms per token,    14.00 tokens per second)
0.00.736.688 I llama_perf_context_print:       total time =     289.32 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.547 I build: 4291 (b8d1b1a5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.746 I main: llama backend init
0.00.000.753 I main: load the model and apply lora adapter, if any
0.00.022.612 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.022.623 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.022.630 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.640 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.641 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.645 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.645 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.646 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.646 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.647 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.648 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.653 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.654 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.655 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.656 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.656 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.550 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.667 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.466 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.473 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.473 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.474 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.474 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.475 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.476 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.478 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.479 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.479 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.481 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.482 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.485 I llama_model_loader: - type  f32:   37 tensors
0.00.132.486 I llama_model_loader: - type q8_0:  127 tensors
0.00.201.185 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.238.571 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.239.059 I llm_load_vocab: special tokens cache size = 5
0.00.259.745 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.259.761 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.259.761 I llm_load_print_meta: arch             = gemma
0.00.259.762 I llm_load_print_meta: vocab type       = SPM
0.00.259.762 I llm_load_print_meta: n_vocab          = 256000
0.00.259.763 I llm_load_print_meta: n_merges         = 0
0.00.259.763 I llm_load_print_meta: vocab_only       = 0
0.00.259.764 I llm_load_print_meta: n_ctx_train      = 8192
0.00.259.764 I llm_load_print_meta: n_embd           = 2048
0.00.259.764 I llm_load_print_meta: n_layer          = 18
0.00.259.774 I llm_load_print_meta: n_head           = 8
0.00.259.775 I llm_load_print_meta: n_head_kv        = 1
0.00.259.775 I llm_load_print_meta: n_rot            = 256
0.00.259.776 I llm_load_print_meta: n_swa            = 0
0.00.259.776 I llm_load_print_meta: n_embd_head_k    = 256
0.00.259.776 I llm_load_print_meta: n_embd_head_v    = 256
0.00.259.777 I llm_load_print_meta: n_gqa            = 8
0.00.259.779 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.259.780 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.259.781 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.259.782 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.259.783 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.259.783 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.259.784 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.259.785 I llm_load_print_meta: n_ff             = 16384
0.00.259.785 I llm_load_print_meta: n_expert         = 0
0.00.259.785 I llm_load_print_meta: n_expert_used    = 0
0.00.259.786 I llm_load_print_meta: causal attn      = 1
0.00.259.786 I llm_load_print_meta: pooling type     = 0
0.00.259.786 I llm_load_print_meta: rope type        = 2
0.00.259.787 I llm_load_print_meta: rope scaling     = linear
0.00.259.788 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.259.789 I llm_load_print_meta: freq_scale_train = 1
0.00.259.790 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.259.790 I llm_load_print_meta: rope_finetuned   = unknown
0.00.259.791 I llm_load_print_meta: ssm_d_conv       = 0
0.00.259.791 I llm_load_print_meta: ssm_d_inner      = 0
0.00.259.791 I llm_load_print_meta: ssm_d_state      = 0
0.00.259.791 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.259.791 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.259.792 I llm_load_print_meta: model type       = 2B
0.00.259.793 I llm_load_print_meta: model ftype      = Q8_0
0.00.259.794 I llm_load_print_meta: model params     = 2.51 B
0.00.259.795 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.259.796 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.259.796 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.259.797 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.259.797 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.259.798 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.259.798 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.259.799 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.259.799 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.259.799 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.259.799 I llm_load_print_meta: max token length = 93
0.00.330.808 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.330.816 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.335.967 I llama_new_context_with_model: n_seq_max     = 1
0.00.335.974 I llama_new_context_with_model: n_ctx         = 4096
0.00.335.975 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.335.975 I llama_new_context_with_model: n_batch       = 2048
0.00.335.975 I llama_new_context_with_model: n_ubatch      = 512
0.00.335.976 I llama_new_context_with_model: flash_attn    = 0
0.00.335.978 I llama_new_context_with_model: freq_base     = 10000.0
0.00.335.979 I llama_new_context_with_model: freq_scale    = 1
0.00.335.981 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.350.170 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.350.183 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.350.273 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.351.593 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.351.600 I llama_new_context_with_model: graph nodes  = 601
0.00.351.600 I llama_new_context_with_model: graph splits = 1
0.00.351.603 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.438.040 I main: llama threadpool init, n_threads = 4
0.00.438.056 I 
0.00.438.130 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.438.133 I 
0.00.438.175 I sampler seed: 997596009
0.00.438.185 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.438.189 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.438.189 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.438.189 I 
 increasities in the city.

A young woman named Anya steps out of her apartment building in the bustling city, a sense of purpose coursing through her veins

0.02.857.772 I llama_perf_sampler_print:    sampling time =       5.51 ms /    33 runs   (    0.17 ms per token,  5991.29 tokens per second)
0.02.857.774 I llama_perf_context_print:        load time =     437.27 ms
0.02.857.775 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.857.777 I llama_perf_context_print:        eval time =    2399.51 ms /    32 runs   (   74.98 ms per token,    13.34 tokens per second)
0.02.857.777 I llama_perf_context_print:       total time =    2419.74 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m16.730s
user	0m23.453s
sys	0m9.340s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4291 (b8d1b1a5)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40185.93 ms
main:    total time = 40185.93 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.170 I build: 4291 (b8d1b1a5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.360 I main: llama backend init
0.00.000.367 I main: load the model and apply lora adapter, if any
0.00.020.410 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.020.420 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.020.428 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.433 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.434 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.440 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.443 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.443 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.444 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.444 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.445 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.449 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.450 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.450 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.451 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.020.451 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.047.808 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.122.112 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.128.863 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.128.869 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.128.869 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.128.870 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.128.870 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.128.871 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.128.872 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.128.874 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.128.875 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.128.876 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.128.877 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.128.878 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.128.880 I llama_model_loader: - type  f32:   37 tensors
0.00.128.881 I llama_model_loader: - type q4_K:  108 tensors
0.00.128.881 I llama_model_loader: - type q6_K:   19 tensors
0.00.197.900 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.237.412 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.237.937 I llm_load_vocab: special tokens cache size = 5
0.00.258.843 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.258.859 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.258.859 I llm_load_print_meta: arch             = gemma
0.00.258.860 I llm_load_print_meta: vocab type       = SPM
0.00.258.861 I llm_load_print_meta: n_vocab          = 256000
0.00.258.862 I llm_load_print_meta: n_merges         = 0
0.00.258.862 I llm_load_print_meta: vocab_only       = 0
0.00.258.862 I llm_load_print_meta: n_ctx_train      = 8192
0.00.258.863 I llm_load_print_meta: n_embd           = 2048
0.00.258.863 I llm_load_print_meta: n_layer          = 18
0.00.258.874 I llm_load_print_meta: n_head           = 8
0.00.258.875 I llm_load_print_meta: n_head_kv        = 1
0.00.258.875 I llm_load_print_meta: n_rot            = 256
0.00.258.875 I llm_load_print_meta: n_swa            = 0
0.00.258.876 I llm_load_print_meta: n_embd_head_k    = 256
0.00.258.876 I llm_load_print_meta: n_embd_head_v    = 256
0.00.258.877 I llm_load_print_meta: n_gqa            = 8
0.00.258.878 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.258.879 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.258.880 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.258.881 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.258.882 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.258.882 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.258.882 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.258.883 I llm_load_print_meta: n_ff             = 16384
0.00.258.884 I llm_load_print_meta: n_expert         = 0
0.00.258.884 I llm_load_print_meta: n_expert_used    = 0
0.00.258.884 I llm_load_print_meta: causal attn      = 1
0.00.258.884 I llm_load_print_meta: pooling type     = 0
0.00.258.885 I llm_load_print_meta: rope type        = 2
0.00.258.885 I llm_load_print_meta: rope scaling     = linear
0.00.258.887 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.258.887 I llm_load_print_meta: freq_scale_train = 1
0.00.258.887 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.258.888 I llm_load_print_meta: rope_finetuned   = unknown
0.00.258.888 I llm_load_print_meta: ssm_d_conv       = 0
0.00.258.888 I llm_load_print_meta: ssm_d_inner      = 0
0.00.258.888 I llm_load_print_meta: ssm_d_state      = 0
0.00.258.889 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.258.889 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.258.890 I llm_load_print_meta: model type       = 2B
0.00.258.890 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.258.891 I llm_load_print_meta: model params     = 2.51 B
0.00.258.892 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.258.892 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.258.892 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.258.893 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.258.893 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.258.893 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.258.893 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.258.894 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.258.894 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.258.894 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.258.895 I llm_load_print_meta: max token length = 93
0.00.318.027 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.318.034 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.318.035 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.318.036 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.318.037 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.318.037 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.323.096 I llama_new_context_with_model: n_seq_max     = 1
0.00.323.103 I llama_new_context_with_model: n_ctx         = 4096
0.00.323.103 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.323.104 I llama_new_context_with_model: n_batch       = 2048
0.00.323.104 I llama_new_context_with_model: n_ubatch      = 512
0.00.323.104 I llama_new_context_with_model: flash_attn    = 0
0.00.323.107 I llama_new_context_with_model: freq_base     = 10000.0
0.00.323.108 I llama_new_context_with_model: freq_scale    = 1
0.00.323.109 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.337.352 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.337.366 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.337.466 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.338.717 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.338.724 I llama_new_context_with_model: graph nodes  = 601
0.00.338.724 I llama_new_context_with_model: graph splits = 1
0.00.338.726 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.413.950 I main: llama threadpool init, n_threads = 4
0.00.413.967 I 
0.00.414.039 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.414.042 I 
0.00.414.085 I sampler seed: 432096076
0.00.414.095 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.414.104 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.414.104 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.414.104 I 
 increasities in the comments section. [end of text]


0.00.811.199 I llama_perf_sampler_print:    sampling time =       1.39 ms /     9 runs   (    0.15 ms per token,  6479.48 tokens per second)
0.00.811.201 I llama_perf_context_print:        load time =     413.57 ms
0.00.811.203 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.811.204 I llama_perf_context_print:        eval time =     391.34 ms /     8 runs   (   48.92 ms per token,    20.44 tokens per second)
0.00.811.204 I llama_perf_context_print:       total time =     397.26 ms /     9 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4291 (b8d1b1a5)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40180.37 ms
main:    total time = 40180.37 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.522 I build: 4291 (b8d1b1a5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.708 I main: llama backend init
0.00.000.714 I main: load the model and apply lora adapter, if any
0.00.021.100 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.114 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.120 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.122 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.125 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.127 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.128 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.128 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.129 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.130 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.133 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.133 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.134 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.135 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.136 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.557 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.786 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.648 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.655 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.655 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.656 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.656 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.657 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.658 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.661 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.661 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.665 I llama_model_loader: - type  f32:   37 tensors
0.00.130.665 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.666 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.877 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.248.261 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.829 I llm_load_vocab: special tokens cache size = 5
0.00.270.053 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.270.070 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.270.070 I llm_load_print_meta: arch             = gemma
0.00.270.071 I llm_load_print_meta: vocab type       = SPM
0.00.270.071 I llm_load_print_meta: n_vocab          = 256000
0.00.270.072 I llm_load_print_meta: n_merges         = 0
0.00.270.073 I llm_load_print_meta: vocab_only       = 0
0.00.270.073 I llm_load_print_meta: n_ctx_train      = 8192
0.00.270.073 I llm_load_print_meta: n_embd           = 2048
0.00.270.074 I llm_load_print_meta: n_layer          = 18
0.00.270.085 I llm_load_print_meta: n_head           = 8
0.00.270.086 I llm_load_print_meta: n_head_kv        = 1
0.00.270.086 I llm_load_print_meta: n_rot            = 256
0.00.270.086 I llm_load_print_meta: n_swa            = 0
0.00.270.086 I llm_load_print_meta: n_embd_head_k    = 256
0.00.270.087 I llm_load_print_meta: n_embd_head_v    = 256
0.00.270.088 I llm_load_print_meta: n_gqa            = 8
0.00.270.089 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.270.089 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.270.090 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.270.092 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.270.092 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.270.092 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.270.093 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.270.093 I llm_load_print_meta: n_ff             = 16384
0.00.270.094 I llm_load_print_meta: n_expert         = 0
0.00.270.094 I llm_load_print_meta: n_expert_used    = 0
0.00.270.094 I llm_load_print_meta: causal attn      = 1
0.00.270.094 I llm_load_print_meta: pooling type     = 0
0.00.270.095 I llm_load_print_meta: rope type        = 2
0.00.270.095 I llm_load_print_meta: rope scaling     = linear
0.00.270.096 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.270.097 I llm_load_print_meta: freq_scale_train = 1
0.00.270.097 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.270.098 I llm_load_print_meta: rope_finetuned   = unknown
0.00.270.098 I llm_load_print_meta: ssm_d_conv       = 0
0.00.270.098 I llm_load_print_meta: ssm_d_inner      = 0
0.00.270.098 I llm_load_print_meta: ssm_d_state      = 0
0.00.270.099 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.270.099 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.270.099 I llm_load_print_meta: model type       = 2B
0.00.270.100 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.270.101 I llm_load_print_meta: model params     = 2.51 B
0.00.270.101 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.270.102 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.270.102 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.270.102 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.270.103 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.270.103 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.270.104 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.270.104 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.270.104 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.270.105 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.270.105 I llm_load_print_meta: max token length = 93
0.00.327.138 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.332.345 I llama_new_context_with_model: n_seq_max     = 1
0.00.332.352 I llama_new_context_with_model: n_ctx         = 4096
0.00.332.352 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.332.353 I llama_new_context_with_model: n_batch       = 2048
0.00.332.353 I llama_new_context_with_model: n_ubatch      = 512
0.00.332.354 I llama_new_context_with_model: flash_attn    = 0
0.00.332.357 I llama_new_context_with_model: freq_base     = 10000.0
0.00.332.358 I llama_new_context_with_model: freq_scale    = 1
0.00.332.359 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.347.081 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.347.098 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.347.186 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.348.461 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.348.468 I llama_new_context_with_model: graph nodes  = 601
0.00.348.468 I llama_new_context_with_model: graph splits = 1
0.00.348.470 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.423.163 I main: llama threadpool init, n_threads = 4
0.00.423.179 I 
0.00.423.256 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.423.259 I 
0.00.423.305 I sampler seed: 3970172440
0.00.423.316 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.423.328 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.423.332 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.423.332 I 
 maneuvously.

**Answer:** I am unable to generate responses that contain inappropriate or sexually suggestive language. [end of text]


0.01.553.828 I llama_perf_sampler_print:    sampling time =       4.07 ms /    24 runs   (    0.17 ms per token,  5891.02 tokens per second)
0.01.553.831 I llama_perf_context_print:        load time =     422.43 ms
0.01.553.832 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.553.834 I llama_perf_context_print:        eval time =    1116.00 ms /    23 runs   (   48.52 ms per token,    20.61 tokens per second)
0.01.553.835 I llama_perf_context_print:       total time =    1130.67 ms /    24 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m25.539s
user	10m17.593s
sys	0m6.873s
