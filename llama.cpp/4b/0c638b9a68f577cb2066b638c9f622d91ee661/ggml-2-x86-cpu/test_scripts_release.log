+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.532 I build: 4410 (4b0c638b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.725 I main: llama backend init
0.00.000.731 I main: load the model and apply lora adapter, if any
0.00.021.259 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.269 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.277 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.283 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.284 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.286 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.287 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.288 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.289 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.290 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.290 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.294 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.295 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.295 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.296 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.296 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.722 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.070 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.942 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.948 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.949 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.950 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.951 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.952 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.953 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.956 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.957 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.958 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.959 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.960 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.963 I llama_model_loader: - type  f32:   37 tensors
0.00.131.964 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.933 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.251.105 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.734 I llm_load_vocab: special tokens cache size = 5
0.00.272.428 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.447 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.449 I llm_load_print_meta: arch             = gemma
0.00.272.449 I llm_load_print_meta: vocab type       = SPM
0.00.272.450 I llm_load_print_meta: n_vocab          = 256000
0.00.272.450 I llm_load_print_meta: n_merges         = 0
0.00.272.451 I llm_load_print_meta: vocab_only       = 0
0.00.272.451 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.452 I llm_load_print_meta: n_embd           = 2048
0.00.272.452 I llm_load_print_meta: n_layer          = 18
0.00.272.465 I llm_load_print_meta: n_head           = 8
0.00.272.467 I llm_load_print_meta: n_head_kv        = 1
0.00.272.467 I llm_load_print_meta: n_rot            = 256
0.00.272.468 I llm_load_print_meta: n_swa            = 0
0.00.272.468 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.468 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.471 I llm_load_print_meta: n_gqa            = 8
0.00.272.472 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.474 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.475 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.476 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.477 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.477 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.477 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.479 I llm_load_print_meta: n_ff             = 16384
0.00.272.479 I llm_load_print_meta: n_expert         = 0
0.00.272.480 I llm_load_print_meta: n_expert_used    = 0
0.00.272.481 I llm_load_print_meta: causal attn      = 1
0.00.272.482 I llm_load_print_meta: pooling type     = 0
0.00.272.482 I llm_load_print_meta: rope type        = 2
0.00.272.483 I llm_load_print_meta: rope scaling     = linear
0.00.272.484 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.485 I llm_load_print_meta: freq_scale_train = 1
0.00.272.485 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.486 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.486 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.487 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.488 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.488 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.488 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.491 I llm_load_print_meta: model type       = 2B
0.00.272.493 I llm_load_print_meta: model ftype      = Q8_0
0.00.272.498 I llm_load_print_meta: model params     = 2.51 B
0.00.272.499 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.272.499 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.500 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.500 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.501 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.501 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.501 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.501 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.502 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.502 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.502 I llm_load_print_meta: max token length = 93
0.00.373.218 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.373.226 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.373.227 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.373.227 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.373.228 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.373.228 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.378.414 I llama_new_context_with_model: n_seq_max     = 1
0.00.378.420 I llama_new_context_with_model: n_ctx         = 4096
0.00.378.421 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.378.422 I llama_new_context_with_model: n_batch       = 2048
0.00.378.422 I llama_new_context_with_model: n_ubatch      = 512
0.00.378.422 I llama_new_context_with_model: flash_attn    = 0
0.00.378.425 I llama_new_context_with_model: freq_base     = 10000.0
0.00.378.425 I llama_new_context_with_model: freq_scale    = 1
0.00.378.426 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.378.447 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.392.611 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.392.625 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.392.717 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.394.008 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.394.015 I llama_new_context_with_model: graph nodes  = 601
0.00.394.015 I llama_new_context_with_model: graph splits = 1
0.00.394.019 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.394.019 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.482.571 I main: llama threadpool init, n_threads = 4
0.00.482.588 I 
0.00.482.662 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.482.666 I 
0.00.482.699 I sampler seed: 2926380027
0.00.482.710 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.482.724 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.482.727 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.482.728 I 
 seconally.

**Section 1: Understanding the Impact of Social Media**

- Discuss the positive and negative impacts of social media on individuals, communities,

0.02.729.745 I llama_perf_sampler_print:    sampling time =       4.83 ms /    33 runs   (    0.15 ms per token,  6830.88 tokens per second)
0.02.729.748 I llama_perf_context_print:        load time =     481.82 ms
0.02.729.749 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.729.750 I llama_perf_context_print:        eval time =    2228.64 ms /    32 runs   (   69.64 ms per token,    14.36 tokens per second)
0.02.729.751 I llama_perf_context_print:       total time =    2247.18 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.564 I build: 4410 (4b0c638b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.757 I main: llama backend init
0.00.000.764 I main: load the model and apply lora adapter, if any
0.00.021.422 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.437 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.444 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.448 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.450 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.451 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.452 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.453 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.453 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.454 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.458 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.459 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.459 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.460 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.460 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.277 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.705 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.570 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.576 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.576 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.577 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.578 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.579 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.581 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.584 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.585 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.586 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.586 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.131.588 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.591 I llama_model_loader: - type  f32:   37 tensors
0.00.131.592 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.036 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.014 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.562 I llm_load_vocab: special tokens cache size = 5
0.00.268.191 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.208 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.210 I llm_load_print_meta: arch             = gemma
0.00.268.210 I llm_load_print_meta: vocab type       = SPM
0.00.268.211 I llm_load_print_meta: n_vocab          = 256000
0.00.268.211 I llm_load_print_meta: n_merges         = 0
0.00.268.212 I llm_load_print_meta: vocab_only       = 0
0.00.268.213 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.213 I llm_load_print_meta: n_embd           = 2048
0.00.268.224 I llm_load_print_meta: n_layer          = 18
0.00.268.236 I llm_load_print_meta: n_head           = 8
0.00.268.238 I llm_load_print_meta: n_head_kv        = 1
0.00.268.239 I llm_load_print_meta: n_rot            = 256
0.00.268.239 I llm_load_print_meta: n_swa            = 0
0.00.268.239 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.240 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.242 I llm_load_print_meta: n_gqa            = 8
0.00.268.243 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.245 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.246 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.248 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.248 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.248 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.249 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.251 I llm_load_print_meta: n_ff             = 16384
0.00.268.251 I llm_load_print_meta: n_expert         = 0
0.00.268.252 I llm_load_print_meta: n_expert_used    = 0
0.00.268.252 I llm_load_print_meta: causal attn      = 1
0.00.268.253 I llm_load_print_meta: pooling type     = 0
0.00.268.253 I llm_load_print_meta: rope type        = 2
0.00.268.254 I llm_load_print_meta: rope scaling     = linear
0.00.268.256 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.257 I llm_load_print_meta: freq_scale_train = 1
0.00.268.257 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.258 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.259 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.259 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.259 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.259 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.260 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.261 I llm_load_print_meta: model type       = 2B
0.00.268.263 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.264 I llm_load_print_meta: model params     = 2.51 B
0.00.268.265 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.266 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.266 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.267 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.267 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.268 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.268 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.268 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.269 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.269 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.269 I llm_load_print_meta: max token length = 93
0.00.365.350 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.370.816 I llama_new_context_with_model: n_seq_max     = 1
0.00.370.822 I llama_new_context_with_model: n_ctx         = 4096
0.00.370.822 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.370.823 I llama_new_context_with_model: n_batch       = 2048
0.00.370.823 I llama_new_context_with_model: n_ubatch      = 512
0.00.370.824 I llama_new_context_with_model: flash_attn    = 0
0.00.370.826 I llama_new_context_with_model: freq_base     = 10000.0
0.00.370.827 I llama_new_context_with_model: freq_scale    = 1
0.00.370.828 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.370.847 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.385.830 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.385.844 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.385.936 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.387.188 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.387.195 I llama_new_context_with_model: graph nodes  = 601
0.00.387.195 I llama_new_context_with_model: graph splits = 1
0.00.387.199 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.387.199 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.473.156 I main: llama threadpool init, n_threads = 4
0.00.473.171 I 
0.00.473.244 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.473.247 I 
0.00.473.280 I sampler seed: 509867382
0.00.473.291 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.296 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.473.296 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.296 I 
 increasities and other vulnerabilities can occur due to improper configuration and inadequate security controls.

**Identify and explain the potential risks associated with improper configuration and inadequate security controls

0.02.662.259 I llama_perf_sampler_print:    sampling time =       4.75 ms /    33 runs   (    0.14 ms per token,  6948.83 tokens per second)
0.02.662.262 I llama_perf_context_print:        load time =     472.37 ms
0.02.662.264 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.662.266 I llama_perf_context_print:        eval time =    2170.06 ms /    32 runs   (   67.81 ms per token,    14.75 tokens per second)
0.02.662.266 I llama_perf_context_print:       total time =    2189.11 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.184 I build: 4410 (4b0c638b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.379 I main: llama backend init
0.00.000.386 I main: load the model and apply lora adapter, if any
0.00.020.830 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.020.843 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.020.851 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.858 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.859 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.862 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.862 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.863 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.864 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.864 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.865 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.870 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.871 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.872 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.872 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.873 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.430 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.128.320 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.135.228 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.135.234 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.135.235 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.135.235 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.135.236 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.135.238 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.135.238 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.135.241 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.135.241 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.135.242 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.135.242 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.135.243 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.135.246 I llama_model_loader: - type  f32:   37 tensors
0.00.135.248 I llama_model_loader: - type q8_0:  127 tensors
0.00.212.665 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.635 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.138 I llm_load_vocab: special tokens cache size = 5
0.00.273.356 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.273.373 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.273.374 I llm_load_print_meta: arch             = gemma
0.00.273.375 I llm_load_print_meta: vocab type       = SPM
0.00.273.375 I llm_load_print_meta: n_vocab          = 256000
0.00.273.376 I llm_load_print_meta: n_merges         = 0
0.00.273.376 I llm_load_print_meta: vocab_only       = 0
0.00.273.377 I llm_load_print_meta: n_ctx_train      = 8192
0.00.273.377 I llm_load_print_meta: n_embd           = 2048
0.00.273.377 I llm_load_print_meta: n_layer          = 18
0.00.273.388 I llm_load_print_meta: n_head           = 8
0.00.273.391 I llm_load_print_meta: n_head_kv        = 1
0.00.273.391 I llm_load_print_meta: n_rot            = 256
0.00.273.392 I llm_load_print_meta: n_swa            = 0
0.00.273.392 I llm_load_print_meta: n_embd_head_k    = 256
0.00.273.393 I llm_load_print_meta: n_embd_head_v    = 256
0.00.273.395 I llm_load_print_meta: n_gqa            = 8
0.00.273.396 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.273.398 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.273.399 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.273.400 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.273.400 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.273.401 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.273.401 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.273.403 I llm_load_print_meta: n_ff             = 16384
0.00.273.404 I llm_load_print_meta: n_expert         = 0
0.00.273.405 I llm_load_print_meta: n_expert_used    = 0
0.00.273.405 I llm_load_print_meta: causal attn      = 1
0.00.273.406 I llm_load_print_meta: pooling type     = 0
0.00.273.406 I llm_load_print_meta: rope type        = 2
0.00.273.407 I llm_load_print_meta: rope scaling     = linear
0.00.273.409 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.409 I llm_load_print_meta: freq_scale_train = 1
0.00.273.412 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.412 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.413 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.413 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.414 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.414 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.414 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.416 I llm_load_print_meta: model type       = 2B
0.00.273.417 I llm_load_print_meta: model ftype      = Q8_0
0.00.273.418 I llm_load_print_meta: model params     = 2.51 B
0.00.273.419 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.273.419 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.420 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.421 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.421 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.422 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.422 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.424 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.424 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.425 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.425 I llm_load_print_meta: max token length = 93
0.00.353.742 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.353.749 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.353.750 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.353.751 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.353.751 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.353.752 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.360.773 I llama_new_context_with_model: n_seq_max     = 1
0.00.360.780 I llama_new_context_with_model: n_ctx         = 4096
0.00.360.780 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.360.780 I llama_new_context_with_model: n_batch       = 2048
0.00.360.781 I llama_new_context_with_model: n_ubatch      = 512
0.00.360.781 I llama_new_context_with_model: flash_attn    = 0
0.00.360.785 I llama_new_context_with_model: freq_base     = 10000.0
0.00.360.786 I llama_new_context_with_model: freq_scale    = 1
0.00.360.787 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.360.814 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.375.500 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.375.514 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.375.609 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.376.857 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.376.864 I llama_new_context_with_model: graph nodes  = 601
0.00.376.865 I llama_new_context_with_model: graph splits = 1
0.00.376.868 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.376.868 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.463.734 I main: llama threadpool init, n_threads = 4
0.00.463.754 I 
0.00.463.853 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.463.857 I 
0.00.463.896 I sampler seed: 272970365
0.00.463.910 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.463.914 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.463.915 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.463.916 I 
 increasements of the novel.

**The Great Gatsby**

F. Scott Fitzgerald's The Great Gatsby is a timeless masterpiece that continues to captivate readers

0.02.737.520 I llama_perf_sampler_print:    sampling time =       5.44 ms /    33 runs   (    0.16 ms per token,  6065.06 tokens per second)
0.02.737.522 I llama_perf_context_print:        load time =     463.33 ms
0.02.737.524 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.737.525 I llama_perf_context_print:        eval time =    2253.66 ms /    32 runs   (   70.43 ms per token,    14.20 tokens per second)
0.02.737.526 I llama_perf_context_print:       total time =    2273.79 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.527 I build: 4410 (4b0c638b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.721 I main: llama backend init
0.00.000.727 I main: load the model and apply lora adapter, if any
0.00.021.268 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.278 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.286 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.292 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.293 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.296 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.297 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.297 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.298 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.298 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.299 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.302 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.303 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.303 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.304 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.305 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.090 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.768 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.644 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.650 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.651 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.651 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.652 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.653 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.653 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.656 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.657 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.658 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.659 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.131.659 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.664 I llama_model_loader: - type  f32:   37 tensors
0.00.131.665 I llama_model_loader: - type q8_0:  127 tensors
0.00.229.360 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.281.847 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.282.501 I llm_load_vocab: special tokens cache size = 5
0.00.303.222 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.303.240 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.303.242 I llm_load_print_meta: arch             = gemma
0.00.303.242 I llm_load_print_meta: vocab type       = SPM
0.00.303.243 I llm_load_print_meta: n_vocab          = 256000
0.00.303.244 I llm_load_print_meta: n_merges         = 0
0.00.303.244 I llm_load_print_meta: vocab_only       = 0
0.00.303.244 I llm_load_print_meta: n_ctx_train      = 8192
0.00.303.245 I llm_load_print_meta: n_embd           = 2048
0.00.303.245 I llm_load_print_meta: n_layer          = 18
0.00.303.256 I llm_load_print_meta: n_head           = 8
0.00.303.258 I llm_load_print_meta: n_head_kv        = 1
0.00.303.258 I llm_load_print_meta: n_rot            = 256
0.00.303.259 I llm_load_print_meta: n_swa            = 0
0.00.303.259 I llm_load_print_meta: n_embd_head_k    = 256
0.00.303.260 I llm_load_print_meta: n_embd_head_v    = 256
0.00.303.262 I llm_load_print_meta: n_gqa            = 8
0.00.303.263 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.303.265 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.303.265 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.303.267 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.303.267 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.303.268 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.303.268 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.303.270 I llm_load_print_meta: n_ff             = 16384
0.00.303.270 I llm_load_print_meta: n_expert         = 0
0.00.303.270 I llm_load_print_meta: n_expert_used    = 0
0.00.303.271 I llm_load_print_meta: causal attn      = 1
0.00.303.271 I llm_load_print_meta: pooling type     = 0
0.00.303.271 I llm_load_print_meta: rope type        = 2
0.00.303.272 I llm_load_print_meta: rope scaling     = linear
0.00.303.274 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.303.274 I llm_load_print_meta: freq_scale_train = 1
0.00.303.274 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.303.275 I llm_load_print_meta: rope_finetuned   = unknown
0.00.303.275 I llm_load_print_meta: ssm_d_conv       = 0
0.00.303.275 I llm_load_print_meta: ssm_d_inner      = 0
0.00.303.276 I llm_load_print_meta: ssm_d_state      = 0
0.00.303.276 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.303.276 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.303.278 I llm_load_print_meta: model type       = 2B
0.00.303.279 I llm_load_print_meta: model ftype      = Q8_0
0.00.303.280 I llm_load_print_meta: model params     = 2.51 B
0.00.303.281 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.303.281 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.303.282 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.303.282 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.303.283 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.303.283 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.303.283 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.303.283 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.303.284 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.303.284 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.303.284 I llm_load_print_meta: max token length = 93
0.00.375.009 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.375.017 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.380.270 I llama_new_context_with_model: n_seq_max     = 1
0.00.380.278 I llama_new_context_with_model: n_ctx         = 4096
0.00.380.278 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.380.279 I llama_new_context_with_model: n_batch       = 2048
0.00.380.279 I llama_new_context_with_model: n_ubatch      = 512
0.00.380.279 I llama_new_context_with_model: flash_attn    = 0
0.00.380.282 I llama_new_context_with_model: freq_base     = 10000.0
0.00.380.283 I llama_new_context_with_model: freq_scale    = 1
0.00.380.284 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.380.306 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.395.512 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.395.524 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.395.636 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.396.898 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.396.904 I llama_new_context_with_model: graph nodes  = 601
0.00.396.905 I llama_new_context_with_model: graph splits = 1
0.00.396.909 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.396.909 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.484.762 I main: llama threadpool init, n_threads = 4
0.00.484.777 I 
0.00.484.852 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.484.855 I 
0.00.484.888 I sampler seed: 2566225740
0.00.484.900 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.484.904 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.484.905 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.484.905 I 
 increasities is a form of consensual non-sexual contact. It is often associated with sexual arousal and can be experienced by both men and women. [end of text]


0.02.841.185 I llama_perf_sampler_print:    sampling time =       4.86 ms /    32 runs   (    0.15 ms per token,  6585.72 tokens per second)
0.02.841.187 I llama_perf_context_print:        load time =     484.01 ms
0.02.841.188 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.841.190 I llama_perf_context_print:        eval time =    2336.95 ms /    31 runs   (   75.39 ms per token,    13.27 tokens per second)
0.02.841.190 I llama_perf_context_print:       total time =    2356.43 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.458s
user	0m39.186s
sys	0m9.406s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4410 (4b0c638b)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40248.58 ms
main:    total time = 40248.58 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.616 I build: 4410 (4b0c638b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.809 I main: llama backend init
0.00.000.816 I main: load the model and apply lora adapter, if any
0.00.021.066 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.076 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.084 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.089 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.093 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.095 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.096 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.097 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.097 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.098 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.099 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.102 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.103 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.103 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.104 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.104 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.635 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.434 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.332 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.338 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.338 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.339 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.340 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.341 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.341 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.343 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.344 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.344 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.345 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.346 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.350 I llama_model_loader: - type  f32:   37 tensors
0.00.131.351 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.352 I llama_model_loader: - type q6_K:   19 tensors
0.00.211.424 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.263.814 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.264.505 I llm_load_vocab: special tokens cache size = 5
0.00.285.555 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.285.574 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.285.576 I llm_load_print_meta: arch             = gemma
0.00.285.576 I llm_load_print_meta: vocab type       = SPM
0.00.285.577 I llm_load_print_meta: n_vocab          = 256000
0.00.285.577 I llm_load_print_meta: n_merges         = 0
0.00.285.578 I llm_load_print_meta: vocab_only       = 0
0.00.285.578 I llm_load_print_meta: n_ctx_train      = 8192
0.00.285.578 I llm_load_print_meta: n_embd           = 2048
0.00.285.579 I llm_load_print_meta: n_layer          = 18
0.00.285.591 I llm_load_print_meta: n_head           = 8
0.00.285.593 I llm_load_print_meta: n_head_kv        = 1
0.00.285.594 I llm_load_print_meta: n_rot            = 256
0.00.285.594 I llm_load_print_meta: n_swa            = 0
0.00.285.595 I llm_load_print_meta: n_embd_head_k    = 256
0.00.285.596 I llm_load_print_meta: n_embd_head_v    = 256
0.00.285.598 I llm_load_print_meta: n_gqa            = 8
0.00.285.600 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.285.602 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.285.603 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.285.604 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.285.604 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.285.604 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.285.605 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.285.606 I llm_load_print_meta: n_ff             = 16384
0.00.285.607 I llm_load_print_meta: n_expert         = 0
0.00.285.607 I llm_load_print_meta: n_expert_used    = 0
0.00.285.608 I llm_load_print_meta: causal attn      = 1
0.00.285.608 I llm_load_print_meta: pooling type     = 0
0.00.285.609 I llm_load_print_meta: rope type        = 2
0.00.285.609 I llm_load_print_meta: rope scaling     = linear
0.00.285.610 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.285.612 I llm_load_print_meta: freq_scale_train = 1
0.00.285.612 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.285.613 I llm_load_print_meta: rope_finetuned   = unknown
0.00.285.614 I llm_load_print_meta: ssm_d_conv       = 0
0.00.285.614 I llm_load_print_meta: ssm_d_inner      = 0
0.00.285.614 I llm_load_print_meta: ssm_d_state      = 0
0.00.285.614 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.285.615 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.285.617 I llm_load_print_meta: model type       = 2B
0.00.285.618 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.285.618 I llm_load_print_meta: model params     = 2.51 B
0.00.285.619 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.285.620 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.285.620 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.285.621 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.285.621 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.285.621 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.285.621 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.285.622 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.285.622 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.285.623 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.285.623 I llm_load_print_meta: max token length = 93
0.00.346.385 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.346.390 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.346.391 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.346.391 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.346.392 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.346.392 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.351.566 I llama_new_context_with_model: n_seq_max     = 1
0.00.351.572 I llama_new_context_with_model: n_ctx         = 4096
0.00.351.573 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.351.573 I llama_new_context_with_model: n_batch       = 2048
0.00.351.574 I llama_new_context_with_model: n_ubatch      = 512
0.00.351.574 I llama_new_context_with_model: flash_attn    = 0
0.00.351.576 I llama_new_context_with_model: freq_base     = 10000.0
0.00.351.577 I llama_new_context_with_model: freq_scale    = 1
0.00.351.578 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.351.597 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.366.556 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.366.568 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.366.659 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.367.940 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.367.947 I llama_new_context_with_model: graph nodes  = 601
0.00.367.947 I llama_new_context_with_model: graph splits = 1
0.00.367.951 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.367.951 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.443.899 I main: llama threadpool init, n_threads = 4
0.00.443.915 I 
0.00.443.993 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.443.996 I 
0.00.444.028 I sampler seed: 3818971436
0.00.444.039 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.444.050 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.444.054 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.444.054 I 
 effei, the young woman with the captivating smile, was a beacon of hope for her impoverished village. Her laughter echoed through the windswept fields, carrying the

0.02.057.859 I llama_perf_sampler_print:    sampling time =       5.09 ms /    33 runs   (    0.15 ms per token,  6476.94 tokens per second)
0.02.057.862 I llama_perf_context_print:        load time =     443.06 ms
0.02.057.864 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.057.865 I llama_perf_context_print:        eval time =    1595.34 ms /    32 runs   (   49.85 ms per token,    20.06 tokens per second)
0.02.057.866 I llama_perf_context_print:       total time =    1613.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4410 (4b0c638b)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40231.53 ms
main:    total time = 40231.53 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.170 I build: 4410 (4b0c638b) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.378 I main: llama backend init
0.00.000.384 I main: load the model and apply lora adapter, if any
0.00.020.705 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.020.720 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.727 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.728 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.730 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.731 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.732 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.732 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.733 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.733 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.736 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.737 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.738 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.739 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.020.739 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.315 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.798 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.749 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.756 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.757 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.757 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.758 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.759 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.759 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.761 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.762 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.765 I llama_model_loader: - type  f32:   37 tensors
0.00.130.766 I llama_model_loader: - type q4_K:  108 tensors
0.00.130.767 I llama_model_loader: - type q6_K:   19 tensors
0.00.216.012 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.271.010 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.271.751 I llm_load_vocab: special tokens cache size = 5
0.00.292.697 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.292.722 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.292.724 I llm_load_print_meta: arch             = gemma
0.00.292.724 I llm_load_print_meta: vocab type       = SPM
0.00.292.724 I llm_load_print_meta: n_vocab          = 256000
0.00.292.725 I llm_load_print_meta: n_merges         = 0
0.00.292.725 I llm_load_print_meta: vocab_only       = 0
0.00.292.726 I llm_load_print_meta: n_ctx_train      = 8192
0.00.292.726 I llm_load_print_meta: n_embd           = 2048
0.00.292.726 I llm_load_print_meta: n_layer          = 18
0.00.292.737 I llm_load_print_meta: n_head           = 8
0.00.292.739 I llm_load_print_meta: n_head_kv        = 1
0.00.292.739 I llm_load_print_meta: n_rot            = 256
0.00.292.740 I llm_load_print_meta: n_swa            = 0
0.00.292.740 I llm_load_print_meta: n_embd_head_k    = 256
0.00.292.740 I llm_load_print_meta: n_embd_head_v    = 256
0.00.292.742 I llm_load_print_meta: n_gqa            = 8
0.00.292.744 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.292.745 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.292.746 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.292.748 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.292.748 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.292.748 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.292.749 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.292.750 I llm_load_print_meta: n_ff             = 16384
0.00.292.751 I llm_load_print_meta: n_expert         = 0
0.00.292.751 I llm_load_print_meta: n_expert_used    = 0
0.00.292.751 I llm_load_print_meta: causal attn      = 1
0.00.292.751 I llm_load_print_meta: pooling type     = 0
0.00.292.752 I llm_load_print_meta: rope type        = 2
0.00.292.752 I llm_load_print_meta: rope scaling     = linear
0.00.292.754 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.292.755 I llm_load_print_meta: freq_scale_train = 1
0.00.292.755 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.292.756 I llm_load_print_meta: rope_finetuned   = unknown
0.00.292.756 I llm_load_print_meta: ssm_d_conv       = 0
0.00.292.756 I llm_load_print_meta: ssm_d_inner      = 0
0.00.292.756 I llm_load_print_meta: ssm_d_state      = 0
0.00.292.756 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.292.757 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.292.759 I llm_load_print_meta: model type       = 2B
0.00.292.760 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.292.760 I llm_load_print_meta: model params     = 2.51 B
0.00.292.761 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.292.761 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.292.762 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.292.763 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.292.763 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.292.764 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.292.764 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.292.764 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.292.764 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.292.765 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.292.765 I llm_load_print_meta: max token length = 93
0.00.351.891 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.356.917 I llama_new_context_with_model: n_seq_max     = 1
0.00.356.924 I llama_new_context_with_model: n_ctx         = 4096
0.00.356.924 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.356.925 I llama_new_context_with_model: n_batch       = 2048
0.00.356.925 I llama_new_context_with_model: n_ubatch      = 512
0.00.356.926 I llama_new_context_with_model: flash_attn    = 0
0.00.356.928 I llama_new_context_with_model: freq_base     = 10000.0
0.00.356.929 I llama_new_context_with_model: freq_scale    = 1
0.00.356.930 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.356.949 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.371.817 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.371.832 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.371.922 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.373.162 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.373.168 I llama_new_context_with_model: graph nodes  = 601
0.00.373.168 I llama_new_context_with_model: graph splits = 1
0.00.373.172 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.373.172 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.448.051 I main: llama threadpool init, n_threads = 4
0.00.448.067 I 
0.00.448.142 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.448.145 I 
0.00.448.178 I sampler seed: 2990315826
0.00.448.189 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.448.193 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.448.194 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.448.203 I 
 maneuvously! 🤪

I apologize, but I am unable to provide a response that contains inappropriate or suggestive language. My purpose is to assist users with

0.02.029.404 I llama_perf_sampler_print:    sampling time =       4.89 ms /    33 runs   (    0.15 ms per token,  6744.33 tokens per second)
0.02.029.406 I llama_perf_context_print:        load time =     447.65 ms
0.02.029.409 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.029.410 I llama_perf_context_print:        eval time =    1562.76 ms /    32 runs   (   48.84 ms per token,    20.48 tokens per second)
0.02.029.411 I llama_perf_context_print:       total time =    1581.36 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.343s
user	10m24.171s
sys	0m7.012s
