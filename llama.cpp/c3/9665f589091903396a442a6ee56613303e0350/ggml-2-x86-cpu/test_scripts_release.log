+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.615 I build: 3971 (c39665f5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.840 I main: llama backend init
0.00.002.075 I main: load the model and apply lora adapter, if any
0.00.022.313 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.363 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.370 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.375 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.375 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.379 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.380 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.381 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.381 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.381 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.382 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.386 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.387 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.387 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.388 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.388 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.961 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.112 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.996 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.002 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.003 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.004 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.005 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.005 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.006 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.008 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.009 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.009 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.010 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.011 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.014 I llama_model_loader: - type  f32:   37 tensors
0.00.133.016 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.434 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.991 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.456 I llm_load_vocab: special tokens cache size = 5
0.00.264.272 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.287 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.287 I llm_load_print_meta: arch             = gemma
0.00.264.289 I llm_load_print_meta: vocab type       = SPM
0.00.264.289 I llm_load_print_meta: n_vocab          = 256000
0.00.264.290 I llm_load_print_meta: n_merges         = 0
0.00.264.290 I llm_load_print_meta: vocab_only       = 0
0.00.264.290 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.290 I llm_load_print_meta: n_embd           = 2048
0.00.264.291 I llm_load_print_meta: n_layer          = 18
0.00.264.302 I llm_load_print_meta: n_head           = 8
0.00.264.303 I llm_load_print_meta: n_head_kv        = 1
0.00.264.304 I llm_load_print_meta: n_rot            = 256
0.00.264.304 I llm_load_print_meta: n_swa            = 0
0.00.264.304 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.305 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.306 I llm_load_print_meta: n_gqa            = 8
0.00.264.307 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.308 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.309 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.310 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.311 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.311 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.311 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.312 I llm_load_print_meta: n_ff             = 16384
0.00.264.313 I llm_load_print_meta: n_expert         = 0
0.00.264.313 I llm_load_print_meta: n_expert_used    = 0
0.00.264.313 I llm_load_print_meta: causal attn      = 1
0.00.264.314 I llm_load_print_meta: pooling type     = 0
0.00.264.314 I llm_load_print_meta: rope type        = 2
0.00.264.314 I llm_load_print_meta: rope scaling     = linear
0.00.264.316 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.316 I llm_load_print_meta: freq_scale_train = 1
0.00.264.317 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.317 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.317 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.317 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.317 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.318 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.318 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.318 I llm_load_print_meta: model type       = 2B
0.00.264.319 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.320 I llm_load_print_meta: model params     = 2.51 B
0.00.264.321 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.321 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.322 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.322 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.322 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.322 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.323 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.323 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.324 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.324 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.324 I llm_load_print_meta: max token length = 93
0.00.264.344 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.364.287 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.364.293 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.364.294 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.364.294 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.364.295 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.364.295 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.369.368 I llama_new_context_with_model: n_ctx      = 8192
0.00.369.374 I llama_new_context_with_model: n_batch    = 2048
0.00.369.375 I llama_new_context_with_model: n_ubatch   = 512
0.00.369.375 I llama_new_context_with_model: flash_attn = 0
0.00.369.377 I llama_new_context_with_model: freq_base  = 10000.0
0.00.369.378 I llama_new_context_with_model: freq_scale = 1
0.00.398.043 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.398.058 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.398.150 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.399.018 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.399.025 I llama_new_context_with_model: graph nodes  = 601
0.00.399.026 I llama_new_context_with_model: graph splits = 1
0.00.399.028 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.489.897 I main: llama threadpool init, n_threads = 4
0.00.489.910 I 
0.00.489.986 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.489.991 I 
0.00.490.028 I sampler seed: 1015171145
0.00.490.039 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.490.041 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.490.042 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.490.042 I 
 increably. The sun blazed down, casting an orange glow across the sky, and the wind whistled through the trees, rustling the leaves and sending them spiraling

0.02.742.171 I llama_perf_sampler_print:    sampling time =       4.93 ms /    33 runs   (    0.15 ms per token,  6697.79 tokens per second)
0.02.742.173 I llama_perf_context_print:        load time =     487.80 ms
0.02.742.174 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.742.175 I llama_perf_context_print:        eval time =    2233.12 ms /    32 runs   (   69.78 ms per token,    14.33 tokens per second)
0.02.742.176 I llama_perf_context_print:       total time =    2252.28 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.594 I build: 3971 (c39665f5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.791 I main: llama backend init
0.00.001.886 I main: load the model and apply lora adapter, if any
0.00.022.133 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.147 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.154 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.155 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.159 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.160 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.160 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.161 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.162 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.162 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.167 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.168 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.168 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.169 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.169 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.243 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.719 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.453 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.460 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.461 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.462 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.463 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.464 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.465 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.468 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.469 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.470 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.471 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.472 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.474 I llama_model_loader: - type  f32:   37 tensors
0.00.132.476 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.164 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.858 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.367 I llm_load_vocab: special tokens cache size = 5
0.00.267.131 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.145 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.146 I llm_load_print_meta: arch             = gemma
0.00.267.146 I llm_load_print_meta: vocab type       = SPM
0.00.267.147 I llm_load_print_meta: n_vocab          = 256000
0.00.267.147 I llm_load_print_meta: n_merges         = 0
0.00.267.148 I llm_load_print_meta: vocab_only       = 0
0.00.267.148 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.148 I llm_load_print_meta: n_embd           = 2048
0.00.267.149 I llm_load_print_meta: n_layer          = 18
0.00.267.159 I llm_load_print_meta: n_head           = 8
0.00.267.160 I llm_load_print_meta: n_head_kv        = 1
0.00.267.160 I llm_load_print_meta: n_rot            = 256
0.00.267.161 I llm_load_print_meta: n_swa            = 0
0.00.267.161 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.161 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.162 I llm_load_print_meta: n_gqa            = 8
0.00.267.163 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.164 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.165 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.166 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.166 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.167 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.167 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.168 I llm_load_print_meta: n_ff             = 16384
0.00.267.168 I llm_load_print_meta: n_expert         = 0
0.00.267.169 I llm_load_print_meta: n_expert_used    = 0
0.00.267.169 I llm_load_print_meta: causal attn      = 1
0.00.267.170 I llm_load_print_meta: pooling type     = 0
0.00.267.171 I llm_load_print_meta: rope type        = 2
0.00.267.171 I llm_load_print_meta: rope scaling     = linear
0.00.267.173 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.173 I llm_load_print_meta: freq_scale_train = 1
0.00.267.174 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.175 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.175 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.175 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.175 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.176 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.176 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.178 I llm_load_print_meta: model type       = 2B
0.00.267.178 I llm_load_print_meta: model ftype      = Q8_0
0.00.267.179 I llm_load_print_meta: model params     = 2.51 B
0.00.267.180 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.267.180 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.181 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.181 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.182 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.182 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.182 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.183 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.184 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.184 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.184 I llm_load_print_meta: max token length = 93
0.00.267.202 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.362.897 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.367.923 I llama_new_context_with_model: n_ctx      = 8192
0.00.367.929 I llama_new_context_with_model: n_batch    = 2048
0.00.367.930 I llama_new_context_with_model: n_ubatch   = 512
0.00.367.930 I llama_new_context_with_model: flash_attn = 0
0.00.367.932 I llama_new_context_with_model: freq_base  = 10000.0
0.00.367.933 I llama_new_context_with_model: freq_scale = 1
0.00.396.282 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.396.298 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.396.387 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.397.261 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.397.270 I llama_new_context_with_model: graph nodes  = 601
0.00.397.271 I llama_new_context_with_model: graph splits = 1
0.00.397.272 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.483.512 I main: llama threadpool init, n_threads = 4
0.00.483.524 I 
0.00.483.602 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.483.605 I 
0.00.483.643 I sampler seed: 3643154341
0.00.483.653 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.483.658 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.483.659 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.483.659 I 
 increasities for the chance to win a lottery prize.

**Arguments for:**

* The possibility of winning is relatively high, even if the odds are low

0.02.647.612 I llama_perf_sampler_print:    sampling time =       4.65 ms /    33 runs   (    0.14 ms per token,  7098.30 tokens per second)
0.02.647.615 I llama_perf_context_print:        load time =     481.60 ms
0.02.647.617 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.647.619 I llama_perf_context_print:        eval time =    2144.16 ms /    32 runs   (   67.00 ms per token,    14.92 tokens per second)
0.02.647.621 I llama_perf_context_print:       total time =    2164.11 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.586 I build: 3971 (c39665f5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.772 I main: llama backend init
0.00.001.872 I main: load the model and apply lora adapter, if any
0.00.021.882 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.933 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.945 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.953 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.954 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.959 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.962 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.962 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.963 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.963 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.963 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.969 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.970 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.971 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.971 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.972 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.062 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.313 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.137 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.145 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.146 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.147 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.148 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.149 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.150 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.153 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.154 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.156 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.157 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.133.158 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.162 I llama_model_loader: - type  f32:   37 tensors
0.00.133.165 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.587 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.248.344 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.936 I llm_load_vocab: special tokens cache size = 5
0.00.269.761 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.779 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.780 I llm_load_print_meta: arch             = gemma
0.00.269.780 I llm_load_print_meta: vocab type       = SPM
0.00.269.781 I llm_load_print_meta: n_vocab          = 256000
0.00.269.781 I llm_load_print_meta: n_merges         = 0
0.00.269.781 I llm_load_print_meta: vocab_only       = 0
0.00.269.782 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.782 I llm_load_print_meta: n_embd           = 2048
0.00.269.782 I llm_load_print_meta: n_layer          = 18
0.00.269.794 I llm_load_print_meta: n_head           = 8
0.00.269.796 I llm_load_print_meta: n_head_kv        = 1
0.00.269.796 I llm_load_print_meta: n_rot            = 256
0.00.269.797 I llm_load_print_meta: n_swa            = 0
0.00.269.797 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.797 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.798 I llm_load_print_meta: n_gqa            = 8
0.00.269.799 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.800 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.801 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.802 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.803 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.803 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.803 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.804 I llm_load_print_meta: n_ff             = 16384
0.00.269.805 I llm_load_print_meta: n_expert         = 0
0.00.269.805 I llm_load_print_meta: n_expert_used    = 0
0.00.269.805 I llm_load_print_meta: causal attn      = 1
0.00.269.806 I llm_load_print_meta: pooling type     = 0
0.00.269.806 I llm_load_print_meta: rope type        = 2
0.00.269.807 I llm_load_print_meta: rope scaling     = linear
0.00.269.808 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.809 I llm_load_print_meta: freq_scale_train = 1
0.00.269.809 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.809 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.809 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.810 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.810 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.810 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.810 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.811 I llm_load_print_meta: model type       = 2B
0.00.269.812 I llm_load_print_meta: model ftype      = Q8_0
0.00.269.812 I llm_load_print_meta: model params     = 2.51 B
0.00.269.813 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.269.814 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.814 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.814 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.815 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.815 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.816 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.816 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.816 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.816 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.817 I llm_load_print_meta: max token length = 93
0.00.269.837 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.346.054 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.346.061 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.346.062 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.346.063 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.346.063 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.346.064 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.351.051 I llama_new_context_with_model: n_ctx      = 8192
0.00.351.058 I llama_new_context_with_model: n_batch    = 2048
0.00.351.059 I llama_new_context_with_model: n_ubatch   = 512
0.00.351.059 I llama_new_context_with_model: flash_attn = 0
0.00.351.061 I llama_new_context_with_model: freq_base  = 10000.0
0.00.351.062 I llama_new_context_with_model: freq_scale = 1
0.00.380.143 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.380.157 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.380.250 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.381.133 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.381.141 I llama_new_context_with_model: graph nodes  = 601
0.00.381.142 I llama_new_context_with_model: graph splits = 1
0.00.381.143 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.473.075 I main: llama threadpool init, n_threads = 4
0.00.473.088 I 
0.00.473.162 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.473.165 I 
0.00.473.203 I sampler seed: 2201863993
0.00.473.213 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.215 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.473.216 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.216 I 
 increasities. [end of text]


0.00.758.028 I llama_perf_sampler_print:    sampling time =       0.60 ms /     5 runs   (    0.12 ms per token,  8389.26 tokens per second)
0.00.758.030 I llama_perf_context_print:        load time =     471.18 ms
0.00.758.031 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.00.758.033 I llama_perf_context_print:        eval time =     281.38 ms /     4 runs   (   70.34 ms per token,    14.22 tokens per second)
0.00.758.034 I llama_perf_context_print:       total time =     284.96 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.536 I build: 3971 (c39665f5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.747 I main: llama backend init
0.00.001.839 I main: load the model and apply lora adapter, if any
0.00.021.569 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.619 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.629 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.636 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.640 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.643 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.644 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.645 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.645 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.646 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.646 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.650 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.651 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.652 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.652 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.653 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.368 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.539 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.370 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.377 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.377 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.378 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.378 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.379 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.380 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.383 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.384 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.385 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.385 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.132.386 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.390 I llama_model_loader: - type  f32:   37 tensors
0.00.132.392 I llama_model_loader: - type q8_0:  127 tensors
0.00.206.584 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.255.598 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.256.316 I llm_load_vocab: special tokens cache size = 5
0.00.277.591 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.277.611 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.277.612 I llm_load_print_meta: arch             = gemma
0.00.277.612 I llm_load_print_meta: vocab type       = SPM
0.00.277.613 I llm_load_print_meta: n_vocab          = 256000
0.00.277.613 I llm_load_print_meta: n_merges         = 0
0.00.277.614 I llm_load_print_meta: vocab_only       = 0
0.00.277.614 I llm_load_print_meta: n_ctx_train      = 8192
0.00.277.614 I llm_load_print_meta: n_embd           = 2048
0.00.277.615 I llm_load_print_meta: n_layer          = 18
0.00.277.626 I llm_load_print_meta: n_head           = 8
0.00.277.627 I llm_load_print_meta: n_head_kv        = 1
0.00.277.628 I llm_load_print_meta: n_rot            = 256
0.00.277.628 I llm_load_print_meta: n_swa            = 0
0.00.277.629 I llm_load_print_meta: n_embd_head_k    = 256
0.00.277.630 I llm_load_print_meta: n_embd_head_v    = 256
0.00.277.631 I llm_load_print_meta: n_gqa            = 8
0.00.277.632 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.277.633 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.277.634 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.277.635 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.277.635 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.277.637 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.277.637 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.277.638 I llm_load_print_meta: n_ff             = 16384
0.00.277.639 I llm_load_print_meta: n_expert         = 0
0.00.277.639 I llm_load_print_meta: n_expert_used    = 0
0.00.277.639 I llm_load_print_meta: causal attn      = 1
0.00.277.640 I llm_load_print_meta: pooling type     = 0
0.00.277.640 I llm_load_print_meta: rope type        = 2
0.00.277.641 I llm_load_print_meta: rope scaling     = linear
0.00.277.642 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.277.643 I llm_load_print_meta: freq_scale_train = 1
0.00.277.643 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.277.644 I llm_load_print_meta: rope_finetuned   = unknown
0.00.277.645 I llm_load_print_meta: ssm_d_conv       = 0
0.00.277.645 I llm_load_print_meta: ssm_d_inner      = 0
0.00.277.645 I llm_load_print_meta: ssm_d_state      = 0
0.00.277.646 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.277.646 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.277.647 I llm_load_print_meta: model type       = 2B
0.00.277.648 I llm_load_print_meta: model ftype      = Q8_0
0.00.277.649 I llm_load_print_meta: model params     = 2.51 B
0.00.277.650 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.277.650 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.277.651 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.277.651 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.277.652 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.277.652 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.277.653 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.277.653 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.277.654 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.277.654 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.277.655 I llm_load_print_meta: max token length = 93
0.00.277.677 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.347.764 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.347.771 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.352.630 I llama_new_context_with_model: n_ctx      = 8192
0.00.352.637 I llama_new_context_with_model: n_batch    = 2048
0.00.352.637 I llama_new_context_with_model: n_ubatch   = 512
0.00.352.637 I llama_new_context_with_model: flash_attn = 0
0.00.352.639 I llama_new_context_with_model: freq_base  = 10000.0
0.00.352.640 I llama_new_context_with_model: freq_scale = 1
0.00.382.152 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.382.168 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.382.258 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.383.153 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.383.159 I llama_new_context_with_model: graph nodes  = 601
0.00.383.159 I llama_new_context_with_model: graph splits = 1
0.00.383.161 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.476.876 I main: llama threadpool init, n_threads = 4
0.00.476.892 I 
0.00.476.980 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.476.982 I 
0.00.477.025 I sampler seed: 2455535735
0.00.477.038 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.477.041 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.477.042 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.477.044 I 
 increasities in the workplace, and how to address them.

**1. Understanding the Causes of Workplace Harassment**

- Bullying and harassment are often driven by

0.02.908.207 I llama_perf_sampler_print:    sampling time =       5.08 ms /    33 runs   (    0.15 ms per token,  6499.90 tokens per second)
0.02.908.209 I llama_perf_context_print:        load time =     475.01 ms
0.02.908.210 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.908.212 I llama_perf_context_print:        eval time =    2411.05 ms /    32 runs   (   75.35 ms per token,    13.27 tokens per second)
0.02.908.213 I llama_perf_context_print:       total time =    2431.34 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m18.468s
user	0m31.399s
sys	0m9.377s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3971 (c39665f5)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31983.35 ms
main:    total time = 31983.35 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.538 I build: 3971 (c39665f5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.001.844 I main: load the model and apply lora adapter, if any
0.00.021.797 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.846 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.853 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.858 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.859 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.862 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.863 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.864 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.864 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.865 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.865 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.868 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.869 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.869 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.870 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.870 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.180 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.056 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.838 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.844 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.845 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.846 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.847 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.848 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.849 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.852 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.853 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.854 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.855 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.856 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.860 I llama_model_loader: - type  f32:   37 tensors
0.00.131.862 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.863 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.294 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.935 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.246.482 I llm_load_vocab: special tokens cache size = 5
0.00.267.378 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.267.395 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.267.396 I llm_load_print_meta: arch             = gemma
0.00.267.396 I llm_load_print_meta: vocab type       = SPM
0.00.267.397 I llm_load_print_meta: n_vocab          = 256000
0.00.267.398 I llm_load_print_meta: n_merges         = 0
0.00.267.398 I llm_load_print_meta: vocab_only       = 0
0.00.267.398 I llm_load_print_meta: n_ctx_train      = 8192
0.00.267.399 I llm_load_print_meta: n_embd           = 2048
0.00.267.399 I llm_load_print_meta: n_layer          = 18
0.00.267.411 I llm_load_print_meta: n_head           = 8
0.00.267.412 I llm_load_print_meta: n_head_kv        = 1
0.00.267.412 I llm_load_print_meta: n_rot            = 256
0.00.267.412 I llm_load_print_meta: n_swa            = 0
0.00.267.412 I llm_load_print_meta: n_embd_head_k    = 256
0.00.267.413 I llm_load_print_meta: n_embd_head_v    = 256
0.00.267.414 I llm_load_print_meta: n_gqa            = 8
0.00.267.415 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.267.416 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.267.417 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.267.418 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.267.419 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.267.419 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.267.419 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.267.420 I llm_load_print_meta: n_ff             = 16384
0.00.267.421 I llm_load_print_meta: n_expert         = 0
0.00.267.421 I llm_load_print_meta: n_expert_used    = 0
0.00.267.421 I llm_load_print_meta: causal attn      = 1
0.00.267.422 I llm_load_print_meta: pooling type     = 0
0.00.267.422 I llm_load_print_meta: rope type        = 2
0.00.267.422 I llm_load_print_meta: rope scaling     = linear
0.00.267.424 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.267.424 I llm_load_print_meta: freq_scale_train = 1
0.00.267.424 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.267.425 I llm_load_print_meta: rope_finetuned   = unknown
0.00.267.425 I llm_load_print_meta: ssm_d_conv       = 0
0.00.267.425 I llm_load_print_meta: ssm_d_inner      = 0
0.00.267.425 I llm_load_print_meta: ssm_d_state      = 0
0.00.267.426 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.267.426 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.267.427 I llm_load_print_meta: model type       = 2B
0.00.267.427 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.267.428 I llm_load_print_meta: model params     = 2.51 B
0.00.267.428 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.267.429 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.267.429 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.267.429 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.267.429 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.267.430 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.267.430 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.267.430 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.267.431 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.267.431 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.267.431 I llm_load_print_meta: max token length = 93
0.00.267.458 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.325.711 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.325.716 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.325.717 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.325.717 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.325.718 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.325.718 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.330.734 I llama_new_context_with_model: n_ctx      = 8192
0.00.330.740 I llama_new_context_with_model: n_batch    = 2048
0.00.330.740 I llama_new_context_with_model: n_ubatch   = 512
0.00.330.740 I llama_new_context_with_model: flash_attn = 0
0.00.330.743 I llama_new_context_with_model: freq_base  = 10000.0
0.00.330.743 I llama_new_context_with_model: freq_scale = 1
0.00.359.883 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.359.899 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.359.993 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.360.892 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.360.901 I llama_new_context_with_model: graph nodes  = 601
0.00.360.901 I llama_new_context_with_model: graph splits = 1
0.00.360.903 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.443.497 I main: llama threadpool init, n_threads = 4
0.00.443.511 I 
0.00.443.588 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.443.592 I 
0.00.443.630 I sampler seed: 977810620
0.00.443.640 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.443.642 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.443.642 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.443.642 I 
 seconary information from an interview with a business leader.

**Key points from the interview:**

* The company's mission is to "help people achieve

0.02.042.653 I llama_perf_sampler_print:    sampling time =       5.27 ms /    33 runs   (    0.16 ms per token,  6266.62 tokens per second)
0.02.042.656 I llama_perf_context_print:        load time =     441.63 ms
0.02.042.657 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.042.658 I llama_perf_context_print:        eval time =    1578.26 ms /    32 runs   (   49.32 ms per token,    20.28 tokens per second)
0.02.042.659 I llama_perf_context_print:       total time =    1599.16 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3971 (c39665f5)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32056.69 ms
main:    total time = 32056.69 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.521 I build: 3971 (c39665f5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.711 I main: llama backend init
0.00.001.830 I main: load the model and apply lora adapter, if any
0.00.021.857 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.871 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.877 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.878 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.881 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.882 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.883 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.883 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.884 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.884 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.887 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.888 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.889 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.890 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.890 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.399 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.324 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.051 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.057 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.058 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.059 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.060 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.061 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.062 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.065 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.066 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.069 I llama_model_loader: - type  f32:   37 tensors
0.00.132.071 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.072 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.792 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.276 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.761 I llm_load_vocab: special tokens cache size = 5
0.00.266.777 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.792 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.793 I llm_load_print_meta: arch             = gemma
0.00.266.793 I llm_load_print_meta: vocab type       = SPM
0.00.266.793 I llm_load_print_meta: n_vocab          = 256000
0.00.266.794 I llm_load_print_meta: n_merges         = 0
0.00.266.794 I llm_load_print_meta: vocab_only       = 0
0.00.266.795 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.795 I llm_load_print_meta: n_embd           = 2048
0.00.266.795 I llm_load_print_meta: n_layer          = 18
0.00.266.806 I llm_load_print_meta: n_head           = 8
0.00.266.807 I llm_load_print_meta: n_head_kv        = 1
0.00.266.807 I llm_load_print_meta: n_rot            = 256
0.00.266.808 I llm_load_print_meta: n_swa            = 0
0.00.266.808 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.808 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.809 I llm_load_print_meta: n_gqa            = 8
0.00.266.811 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.812 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.812 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.814 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.814 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.814 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.815 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.816 I llm_load_print_meta: n_ff             = 16384
0.00.266.816 I llm_load_print_meta: n_expert         = 0
0.00.266.817 I llm_load_print_meta: n_expert_used    = 0
0.00.266.817 I llm_load_print_meta: causal attn      = 1
0.00.266.817 I llm_load_print_meta: pooling type     = 0
0.00.266.817 I llm_load_print_meta: rope type        = 2
0.00.266.818 I llm_load_print_meta: rope scaling     = linear
0.00.266.819 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.820 I llm_load_print_meta: freq_scale_train = 1
0.00.266.820 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.820 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.821 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.821 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.821 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.821 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.821 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.822 I llm_load_print_meta: model type       = 2B
0.00.266.822 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.266.823 I llm_load_print_meta: model params     = 2.51 B
0.00.266.824 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.266.824 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.825 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.826 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.826 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.826 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.826 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.827 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.827 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.827 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.828 I llm_load_print_meta: max token length = 93
0.00.266.846 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.324.099 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.329.101 I llama_new_context_with_model: n_ctx      = 8192
0.00.329.107 I llama_new_context_with_model: n_batch    = 2048
0.00.329.107 I llama_new_context_with_model: n_ubatch   = 512
0.00.329.108 I llama_new_context_with_model: flash_attn = 0
0.00.329.110 I llama_new_context_with_model: freq_base  = 10000.0
0.00.329.111 I llama_new_context_with_model: freq_scale = 1
0.00.357.404 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.357.419 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.357.511 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.358.389 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.358.395 I llama_new_context_with_model: graph nodes  = 601
0.00.358.395 I llama_new_context_with_model: graph splits = 1
0.00.358.397 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.439.572 I main: llama threadpool init, n_threads = 4
0.00.439.588 I 
0.00.439.671 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.439.674 I 
0.00.439.714 I sampler seed: 3385070905
0.00.439.726 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.439.730 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.439.731 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.439.731 I 
 seconally.

I am unable to generate a response as requested as I do not have access to personal or sensitive information, and am unable to provide responses that

0.02.026.530 I llama_perf_sampler_print:    sampling time =       5.13 ms /    33 runs   (    0.16 ms per token,  6430.24 tokens per second)
0.02.026.532 I llama_perf_context_print:        load time =     437.72 ms
0.02.026.533 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.026.535 I llama_perf_context_print:        eval time =    1566.99 ms /    32 runs   (   48.97 ms per token,    20.42 tokens per second)
0.02.026.535 I llama_perf_context_print:       total time =    1586.97 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m11.122s
user	8m14.333s
sys	0m7.018s
