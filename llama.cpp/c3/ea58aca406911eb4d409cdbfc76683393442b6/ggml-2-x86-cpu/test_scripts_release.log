+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.552 I build: 4114 (c3ea58ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.757 I main: llama backend init
0.00.000.763 I main: load the model and apply lora adapter, if any
0.00.021.499 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.509 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.516 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.524 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.528 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.532 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.532 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.533 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.534 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.535 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.535 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.539 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.540 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.540 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.541 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.541 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.936 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.813 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.697 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.703 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.704 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.705 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.706 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.707 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.708 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.712 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.712 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.713 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.714 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.130.715 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.718 I llama_model_loader: - type  f32:   37 tensors
0.00.130.720 I llama_model_loader: - type q8_0:  127 tensors
0.00.202.855 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.243.149 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.681 I llm_load_vocab: special tokens cache size = 5
0.00.264.766 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.781 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.781 I llm_load_print_meta: arch             = gemma
0.00.264.782 I llm_load_print_meta: vocab type       = SPM
0.00.264.782 I llm_load_print_meta: n_vocab          = 256000
0.00.264.782 I llm_load_print_meta: n_merges         = 0
0.00.264.783 I llm_load_print_meta: vocab_only       = 0
0.00.264.783 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.783 I llm_load_print_meta: n_embd           = 2048
0.00.264.784 I llm_load_print_meta: n_layer          = 18
0.00.264.795 I llm_load_print_meta: n_head           = 8
0.00.264.795 I llm_load_print_meta: n_head_kv        = 1
0.00.264.796 I llm_load_print_meta: n_rot            = 256
0.00.264.796 I llm_load_print_meta: n_swa            = 0
0.00.264.796 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.797 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.798 I llm_load_print_meta: n_gqa            = 8
0.00.264.799 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.800 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.801 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.802 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.803 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.803 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.803 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.804 I llm_load_print_meta: n_ff             = 16384
0.00.264.805 I llm_load_print_meta: n_expert         = 0
0.00.264.805 I llm_load_print_meta: n_expert_used    = 0
0.00.264.805 I llm_load_print_meta: causal attn      = 1
0.00.264.806 I llm_load_print_meta: pooling type     = 0
0.00.264.806 I llm_load_print_meta: rope type        = 2
0.00.264.807 I llm_load_print_meta: rope scaling     = linear
0.00.264.808 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.809 I llm_load_print_meta: freq_scale_train = 1
0.00.264.809 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.809 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.809 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.810 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.810 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.810 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.810 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.811 I llm_load_print_meta: model type       = 2B
0.00.264.812 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.813 I llm_load_print_meta: model params     = 2.51 B
0.00.264.813 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.814 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.815 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.815 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.815 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.816 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.816 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.816 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.816 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.817 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.817 I llm_load_print_meta: max token length = 93
0.00.362.783 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.362.792 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.362.792 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.362.793 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.362.793 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.362.794 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.368.118 I llama_new_context_with_model: n_seq_max     = 1
0.00.368.124 I llama_new_context_with_model: n_ctx         = 4096
0.00.368.124 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.368.125 I llama_new_context_with_model: n_batch       = 2048
0.00.368.125 I llama_new_context_with_model: n_ubatch      = 512
0.00.368.126 I llama_new_context_with_model: flash_attn    = 0
0.00.368.129 I llama_new_context_with_model: freq_base     = 10000.0
0.00.368.130 I llama_new_context_with_model: freq_scale    = 1
0.00.368.131 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.382.645 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.382.659 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.382.752 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.384.076 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.384.082 I llama_new_context_with_model: graph nodes  = 601
0.00.384.082 I llama_new_context_with_model: graph splits = 1
0.00.384.084 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.473.727 I main: llama threadpool init, n_threads = 4
0.00.473.742 I 
0.00.473.816 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.473.819 I 
0.00.473.862 I sampler seed: 4217960265
0.00.473.872 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.473.875 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.473.876 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.473.877 I 
 seconary to the primary key constraint.

Answer: Foreign key constraint.

A foreign key constraint is a database constraint that enforces a relationship between two tables

0.02.732.584 I llama_perf_sampler_print:    sampling time =       4.74 ms /    33 runs   (    0.14 ms per token,  6956.16 tokens per second)
0.02.732.586 I llama_perf_context_print:        load time =     472.94 ms
0.02.732.587 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.732.589 I llama_perf_context_print:        eval time =    2238.99 ms /    32 runs   (   69.97 ms per token,    14.29 tokens per second)
0.02.732.590 I llama_perf_context_print:       total time =    2258.86 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.541 I build: 4114 (c3ea58ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.743 I main: llama backend init
0.00.000.751 I main: load the model and apply lora adapter, if any
0.00.021.378 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.391 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.397 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.398 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.402 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.403 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.404 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.404 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.406 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.406 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.410 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.410 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.411 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.411 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.412 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.734 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.068 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.887 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.894 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.895 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.896 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.896 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.897 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.898 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.902 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.902 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.903 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.904 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.905 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.908 I llama_model_loader: - type  f32:   37 tensors
0.00.130.909 I llama_model_loader: - type q8_0:  127 tensors
0.00.205.091 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.251.226 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.819 I llm_load_vocab: special tokens cache size = 5
0.00.272.836 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.853 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.854 I llm_load_print_meta: arch             = gemma
0.00.272.854 I llm_load_print_meta: vocab type       = SPM
0.00.272.855 I llm_load_print_meta: n_vocab          = 256000
0.00.272.855 I llm_load_print_meta: n_merges         = 0
0.00.272.855 I llm_load_print_meta: vocab_only       = 0
0.00.272.856 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.856 I llm_load_print_meta: n_embd           = 2048
0.00.272.856 I llm_load_print_meta: n_layer          = 18
0.00.272.867 I llm_load_print_meta: n_head           = 8
0.00.272.868 I llm_load_print_meta: n_head_kv        = 1
0.00.272.869 I llm_load_print_meta: n_rot            = 256
0.00.272.869 I llm_load_print_meta: n_swa            = 0
0.00.272.869 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.870 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.870 I llm_load_print_meta: n_gqa            = 8
0.00.272.871 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.872 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.873 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.875 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.875 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.876 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.876 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.877 I llm_load_print_meta: n_ff             = 16384
0.00.272.877 I llm_load_print_meta: n_expert         = 0
0.00.272.877 I llm_load_print_meta: n_expert_used    = 0
0.00.272.878 I llm_load_print_meta: causal attn      = 1
0.00.272.878 I llm_load_print_meta: pooling type     = 0
0.00.272.878 I llm_load_print_meta: rope type        = 2
0.00.272.878 I llm_load_print_meta: rope scaling     = linear
0.00.272.880 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.881 I llm_load_print_meta: freq_scale_train = 1
0.00.272.881 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.881 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.882 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.882 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.882 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.882 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.882 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.883 I llm_load_print_meta: model type       = 2B
0.00.272.883 I llm_load_print_meta: model ftype      = Q8_0
0.00.272.884 I llm_load_print_meta: model params     = 2.51 B
0.00.272.885 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.272.885 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.886 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.886 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.886 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.887 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.887 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.887 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.888 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.888 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.888 I llm_load_print_meta: max token length = 93
0.00.366.447 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.371.788 I llama_new_context_with_model: n_seq_max     = 1
0.00.371.795 I llama_new_context_with_model: n_ctx         = 4096
0.00.371.795 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.371.796 I llama_new_context_with_model: n_batch       = 2048
0.00.371.796 I llama_new_context_with_model: n_ubatch      = 512
0.00.371.796 I llama_new_context_with_model: flash_attn    = 0
0.00.371.798 I llama_new_context_with_model: freq_base     = 10000.0
0.00.371.799 I llama_new_context_with_model: freq_scale    = 1
0.00.371.800 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.386.311 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.386.326 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.386.417 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.387.634 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.387.641 I llama_new_context_with_model: graph nodes  = 601
0.00.387.641 I llama_new_context_with_model: graph splits = 1
0.00.387.643 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.468.633 I main: llama threadpool init, n_threads = 4
0.00.468.647 I 
0.00.468.720 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.468.723 I 
0.00.468.769 I sampler seed: 385098104
0.00.468.781 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.468.784 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.468.787 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.468.787 I 
 increasities and disrespect towards women.

I am unable to provide a response that promotes misogynistic or disrespectful behavior. [end of text]


0.02.171.410 I llama_perf_sampler_print:    sampling time =       3.86 ms /    26 runs   (    0.15 ms per token,  6732.26 tokens per second)
0.02.171.413 I llama_perf_context_print:        load time =     467.86 ms
0.02.171.415 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.171.418 I llama_perf_context_print:        eval time =    1687.67 ms /    25 runs   (   67.51 ms per token,    14.81 tokens per second)
0.02.171.420 I llama_perf_context_print:       total time =    1702.78 ms /    26 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.542 I build: 4114 (c3ea58ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.769 I main: llama backend init
0.00.000.776 I main: load the model and apply lora adapter, if any
0.00.021.750 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.760 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.768 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.777 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.781 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.788 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.789 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.790 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.791 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.792 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.793 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.798 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.799 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.800 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.801 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.802 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.458 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.073 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.956 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.963 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.963 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.964 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.964 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.965 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.966 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.968 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.969 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.970 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.971 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.972 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.975 I llama_model_loader: - type  f32:   37 tensors
0.00.131.977 I llama_model_loader: - type q8_0:  127 tensors
0.00.203.790 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.259 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.247.884 I llm_load_vocab: special tokens cache size = 5
0.00.268.860 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.268.877 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.268.877 I llm_load_print_meta: arch             = gemma
0.00.268.878 I llm_load_print_meta: vocab type       = SPM
0.00.268.878 I llm_load_print_meta: n_vocab          = 256000
0.00.268.879 I llm_load_print_meta: n_merges         = 0
0.00.268.879 I llm_load_print_meta: vocab_only       = 0
0.00.268.880 I llm_load_print_meta: n_ctx_train      = 8192
0.00.268.880 I llm_load_print_meta: n_embd           = 2048
0.00.268.880 I llm_load_print_meta: n_layer          = 18
0.00.268.891 I llm_load_print_meta: n_head           = 8
0.00.268.892 I llm_load_print_meta: n_head_kv        = 1
0.00.268.893 I llm_load_print_meta: n_rot            = 256
0.00.268.893 I llm_load_print_meta: n_swa            = 0
0.00.268.893 I llm_load_print_meta: n_embd_head_k    = 256
0.00.268.894 I llm_load_print_meta: n_embd_head_v    = 256
0.00.268.894 I llm_load_print_meta: n_gqa            = 8
0.00.268.896 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.268.897 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.268.897 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.268.899 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.268.899 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.268.899 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.268.900 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.268.901 I llm_load_print_meta: n_ff             = 16384
0.00.268.901 I llm_load_print_meta: n_expert         = 0
0.00.268.901 I llm_load_print_meta: n_expert_used    = 0
0.00.268.901 I llm_load_print_meta: causal attn      = 1
0.00.268.902 I llm_load_print_meta: pooling type     = 0
0.00.268.902 I llm_load_print_meta: rope type        = 2
0.00.268.902 I llm_load_print_meta: rope scaling     = linear
0.00.268.904 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.268.905 I llm_load_print_meta: freq_scale_train = 1
0.00.268.905 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.268.905 I llm_load_print_meta: rope_finetuned   = unknown
0.00.268.905 I llm_load_print_meta: ssm_d_conv       = 0
0.00.268.906 I llm_load_print_meta: ssm_d_inner      = 0
0.00.268.906 I llm_load_print_meta: ssm_d_state      = 0
0.00.268.906 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.268.906 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.268.907 I llm_load_print_meta: model type       = 2B
0.00.268.907 I llm_load_print_meta: model ftype      = Q8_0
0.00.268.908 I llm_load_print_meta: model params     = 2.51 B
0.00.268.909 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.268.909 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.268.910 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.268.910 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.268.910 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.268.911 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.268.911 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.268.911 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.268.912 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.268.912 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.268.912 I llm_load_print_meta: max token length = 93
0.00.344.127 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.344.133 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.344.134 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.344.135 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.344.135 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.344.136 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.349.436 I llama_new_context_with_model: n_seq_max     = 1
0.00.349.443 I llama_new_context_with_model: n_ctx         = 4096
0.00.349.443 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.349.444 I llama_new_context_with_model: n_batch       = 2048
0.00.349.444 I llama_new_context_with_model: n_ubatch      = 512
0.00.349.445 I llama_new_context_with_model: flash_attn    = 0
0.00.349.448 I llama_new_context_with_model: freq_base     = 10000.0
0.00.349.449 I llama_new_context_with_model: freq_scale    = 1
0.00.349.450 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.364.166 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.364.182 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.364.274 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.365.606 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.365.613 I llama_new_context_with_model: graph nodes  = 601
0.00.365.614 I llama_new_context_with_model: graph splits = 1
0.00.365.615 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.455.471 I main: llama threadpool init, n_threads = 4
0.00.455.484 I 
0.00.455.566 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.455.570 I 
0.00.455.629 I sampler seed: 1329197922
0.00.455.639 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.455.642 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.455.643 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.455.646 I 
 increasities in the context of a large language model (LLM) and its interactions.

**Introduction**

Large language models (LLMs) have achieved

0.02.736.792 I llama_perf_sampler_print:    sampling time =       5.02 ms /    33 runs   (    0.15 ms per token,  6573.71 tokens per second)
0.02.736.795 I llama_perf_context_print:        load time =     454.67 ms
0.02.736.796 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.736.798 I llama_perf_context_print:        eval time =    2262.03 ms /    32 runs   (   70.69 ms per token,    14.15 tokens per second)
0.02.736.799 I llama_perf_context_print:       total time =    2281.33 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.589 I build: 4114 (c3ea58ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.781 I main: llama backend init
0.00.000.788 I main: load the model and apply lora adapter, if any
0.00.021.405 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.415 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.422 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.427 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.428 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.432 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.433 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.434 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.435 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.435 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.436 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.440 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.441 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.442 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.442 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.442 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.219 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.320 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.533 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.539 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.540 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.541 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.541 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.542 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.543 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.545 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.546 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.546 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.547 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.133.549 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.554 I llama_model_loader: - type  f32:   37 tensors
0.00.133.555 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.204 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.253.923 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.254.537 I llm_load_vocab: special tokens cache size = 5
0.00.275.550 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.275.568 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.275.569 I llm_load_print_meta: arch             = gemma
0.00.275.570 I llm_load_print_meta: vocab type       = SPM
0.00.275.571 I llm_load_print_meta: n_vocab          = 256000
0.00.275.571 I llm_load_print_meta: n_merges         = 0
0.00.275.571 I llm_load_print_meta: vocab_only       = 0
0.00.275.572 I llm_load_print_meta: n_ctx_train      = 8192
0.00.275.572 I llm_load_print_meta: n_embd           = 2048
0.00.275.572 I llm_load_print_meta: n_layer          = 18
0.00.275.585 I llm_load_print_meta: n_head           = 8
0.00.275.586 I llm_load_print_meta: n_head_kv        = 1
0.00.275.587 I llm_load_print_meta: n_rot            = 256
0.00.275.587 I llm_load_print_meta: n_swa            = 0
0.00.275.587 I llm_load_print_meta: n_embd_head_k    = 256
0.00.275.587 I llm_load_print_meta: n_embd_head_v    = 256
0.00.275.588 I llm_load_print_meta: n_gqa            = 8
0.00.275.589 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.275.590 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.275.591 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.275.592 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.275.593 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.275.593 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.275.593 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.275.594 I llm_load_print_meta: n_ff             = 16384
0.00.275.594 I llm_load_print_meta: n_expert         = 0
0.00.275.595 I llm_load_print_meta: n_expert_used    = 0
0.00.275.595 I llm_load_print_meta: causal attn      = 1
0.00.275.595 I llm_load_print_meta: pooling type     = 0
0.00.275.595 I llm_load_print_meta: rope type        = 2
0.00.275.596 I llm_load_print_meta: rope scaling     = linear
0.00.275.598 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.275.598 I llm_load_print_meta: freq_scale_train = 1
0.00.275.598 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.275.599 I llm_load_print_meta: rope_finetuned   = unknown
0.00.275.600 I llm_load_print_meta: ssm_d_conv       = 0
0.00.275.600 I llm_load_print_meta: ssm_d_inner      = 0
0.00.275.600 I llm_load_print_meta: ssm_d_state      = 0
0.00.275.600 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.275.600 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.275.601 I llm_load_print_meta: model type       = 2B
0.00.275.602 I llm_load_print_meta: model ftype      = Q8_0
0.00.275.602 I llm_load_print_meta: model params     = 2.51 B
0.00.275.603 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.275.604 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.275.604 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.275.604 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.275.605 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.275.605 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.275.605 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.275.606 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.275.606 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.275.607 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.275.607 I llm_load_print_meta: max token length = 93
0.00.346.572 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.346.579 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.351.759 I llama_new_context_with_model: n_seq_max     = 1
0.00.351.765 I llama_new_context_with_model: n_ctx         = 4096
0.00.351.765 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.351.766 I llama_new_context_with_model: n_batch       = 2048
0.00.351.766 I llama_new_context_with_model: n_ubatch      = 512
0.00.351.767 I llama_new_context_with_model: flash_attn    = 0
0.00.351.769 I llama_new_context_with_model: freq_base     = 10000.0
0.00.351.770 I llama_new_context_with_model: freq_scale    = 1
0.00.351.771 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.366.593 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.366.605 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.366.696 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.368.062 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.368.068 I llama_new_context_with_model: graph nodes  = 601
0.00.368.069 I llama_new_context_with_model: graph splits = 1
0.00.368.071 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.454.333 I main: llama threadpool init, n_threads = 4
0.00.454.348 I 
0.00.454.423 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.454.427 I 
0.00.454.471 I sampler seed: 166965749
0.00.454.482 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.454.486 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.454.486 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.454.487 I 
 increasities in a variety of forms, including physical, emotional, and social.

**Physical:**

* Muscle strain
* Injury
* Surgery complications


0.02.868.997 I llama_perf_sampler_print:    sampling time =       5.01 ms /    33 runs   (    0.15 ms per token,  6592.09 tokens per second)
0.02.868.999 I llama_perf_context_print:        load time =     453.53 ms
0.02.869.000 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.869.002 I llama_perf_context_print:        eval time =    2394.74 ms /    32 runs   (   74.84 ms per token,    13.36 tokens per second)
0.02.869.003 I llama_perf_context_print:       total time =    2414.67 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.951s
user	0m37.463s
sys	0m9.340s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4114 (c3ea58ac)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40204.02 ms
main:    total time = 40204.02 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.549 I build: 4114 (c3ea58ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.740 I main: llama backend init
0.00.000.747 I main: load the model and apply lora adapter, if any
0.00.021.071 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.079 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.087 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.097 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.100 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.104 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.105 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.105 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.106 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.107 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.107 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.111 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.111 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.112 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.113 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.114 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.094 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.425 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.338 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.344 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.344 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.345 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.346 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.347 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.348 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.350 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.351 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.351 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.352 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.131.353 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.356 I llama_model_loader: - type  f32:   37 tensors
0.00.131.357 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.358 I llama_model_loader: - type q6_K:   19 tensors
0.00.203.161 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.245.108 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.245.714 I llm_load_vocab: special tokens cache size = 5
0.00.266.653 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.669 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.670 I llm_load_print_meta: arch             = gemma
0.00.266.670 I llm_load_print_meta: vocab type       = SPM
0.00.266.671 I llm_load_print_meta: n_vocab          = 256000
0.00.266.671 I llm_load_print_meta: n_merges         = 0
0.00.266.671 I llm_load_print_meta: vocab_only       = 0
0.00.266.672 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.672 I llm_load_print_meta: n_embd           = 2048
0.00.266.672 I llm_load_print_meta: n_layer          = 18
0.00.266.684 I llm_load_print_meta: n_head           = 8
0.00.266.685 I llm_load_print_meta: n_head_kv        = 1
0.00.266.685 I llm_load_print_meta: n_rot            = 256
0.00.266.686 I llm_load_print_meta: n_swa            = 0
0.00.266.686 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.686 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.687 I llm_load_print_meta: n_gqa            = 8
0.00.266.688 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.689 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.690 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.692 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.692 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.692 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.692 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.693 I llm_load_print_meta: n_ff             = 16384
0.00.266.694 I llm_load_print_meta: n_expert         = 0
0.00.266.694 I llm_load_print_meta: n_expert_used    = 0
0.00.266.694 I llm_load_print_meta: causal attn      = 1
0.00.266.695 I llm_load_print_meta: pooling type     = 0
0.00.266.695 I llm_load_print_meta: rope type        = 2
0.00.266.695 I llm_load_print_meta: rope scaling     = linear
0.00.266.696 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.697 I llm_load_print_meta: freq_scale_train = 1
0.00.266.697 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.698 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.698 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.699 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.699 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.699 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.699 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.700 I llm_load_print_meta: model type       = 2B
0.00.266.701 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.266.701 I llm_load_print_meta: model params     = 2.51 B
0.00.266.702 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.266.702 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.703 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.703 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.703 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.704 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.704 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.704 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.705 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.705 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.705 I llm_load_print_meta: max token length = 93
0.00.326.710 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.326.717 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.326.718 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.326.719 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.326.719 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.326.720 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.331.862 I llama_new_context_with_model: n_seq_max     = 1
0.00.331.868 I llama_new_context_with_model: n_ctx         = 4096
0.00.331.869 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.331.869 I llama_new_context_with_model: n_batch       = 2048
0.00.331.870 I llama_new_context_with_model: n_ubatch      = 512
0.00.331.870 I llama_new_context_with_model: flash_attn    = 0
0.00.331.873 I llama_new_context_with_model: freq_base     = 10000.0
0.00.331.874 I llama_new_context_with_model: freq_scale    = 1
0.00.331.874 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.346.441 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.346.453 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.346.545 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.347.840 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.347.846 I llama_new_context_with_model: graph nodes  = 601
0.00.347.846 I llama_new_context_with_model: graph splits = 1
0.00.347.848 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.422.842 I main: llama threadpool init, n_threads = 4
0.00.422.855 I 
0.00.422.930 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.422.933 I 
0.00.422.979 I sampler seed: 3114064983
0.00.422.990 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.422.993 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.422.994 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.422.994 I 
 increasities are the result of a genetic predisposition to accumulate mutations in specific genes involved in oxidative stress and senescence.

True or False?

**True.**



0.02.020.736 I llama_perf_sampler_print:    sampling time =       5.01 ms /    33 runs   (    0.15 ms per token,  6585.51 tokens per second)
0.02.020.738 I llama_perf_context_print:        load time =     422.08 ms
0.02.020.739 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.020.741 I llama_perf_context_print:        eval time =    1578.95 ms /    32 runs   (   49.34 ms per token,    20.27 tokens per second)
0.02.020.741 I llama_perf_context_print:       total time =    1597.90 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4114 (c3ea58ac)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40187.08 ms
main:    total time = 40187.08 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.536 I build: 4114 (c3ea58ac) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.730 I main: llama backend init
0.00.000.737 I main: load the model and apply lora adapter, if any
0.00.021.365 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.382 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.388 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.392 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.396 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.396 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.397 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.399 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.399 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.400 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.404 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.404 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.405 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.405 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.406 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.996 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.779 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.651 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.657 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.658 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.659 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.659 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.660 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.661 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.663 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.663 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.667 I llama_model_loader: - type  f32:   37 tensors
0.00.131.668 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.669 I llama_model_loader: - type q6_K:   19 tensors
0.00.204.655 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.247.576 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.248.202 I llm_load_vocab: special tokens cache size = 5
0.00.269.397 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.269.413 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.269.414 I llm_load_print_meta: arch             = gemma
0.00.269.415 I llm_load_print_meta: vocab type       = SPM
0.00.269.415 I llm_load_print_meta: n_vocab          = 256000
0.00.269.416 I llm_load_print_meta: n_merges         = 0
0.00.269.416 I llm_load_print_meta: vocab_only       = 0
0.00.269.416 I llm_load_print_meta: n_ctx_train      = 8192
0.00.269.416 I llm_load_print_meta: n_embd           = 2048
0.00.269.417 I llm_load_print_meta: n_layer          = 18
0.00.269.429 I llm_load_print_meta: n_head           = 8
0.00.269.430 I llm_load_print_meta: n_head_kv        = 1
0.00.269.430 I llm_load_print_meta: n_rot            = 256
0.00.269.431 I llm_load_print_meta: n_swa            = 0
0.00.269.431 I llm_load_print_meta: n_embd_head_k    = 256
0.00.269.431 I llm_load_print_meta: n_embd_head_v    = 256
0.00.269.432 I llm_load_print_meta: n_gqa            = 8
0.00.269.434 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.269.434 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.269.435 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.269.436 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.269.437 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.269.437 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.269.437 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.269.438 I llm_load_print_meta: n_ff             = 16384
0.00.269.439 I llm_load_print_meta: n_expert         = 0
0.00.269.439 I llm_load_print_meta: n_expert_used    = 0
0.00.269.439 I llm_load_print_meta: causal attn      = 1
0.00.269.439 I llm_load_print_meta: pooling type     = 0
0.00.269.440 I llm_load_print_meta: rope type        = 2
0.00.269.440 I llm_load_print_meta: rope scaling     = linear
0.00.269.442 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.269.442 I llm_load_print_meta: freq_scale_train = 1
0.00.269.442 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.269.443 I llm_load_print_meta: rope_finetuned   = unknown
0.00.269.443 I llm_load_print_meta: ssm_d_conv       = 0
0.00.269.443 I llm_load_print_meta: ssm_d_inner      = 0
0.00.269.444 I llm_load_print_meta: ssm_d_state      = 0
0.00.269.444 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.269.444 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.269.445 I llm_load_print_meta: model type       = 2B
0.00.269.445 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.269.446 I llm_load_print_meta: model params     = 2.51 B
0.00.269.446 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.269.447 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.269.447 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.269.448 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.269.448 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.269.448 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.269.449 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.269.449 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.269.449 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.269.450 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.269.450 I llm_load_print_meta: max token length = 93
0.00.326.178 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.331.320 I llama_new_context_with_model: n_seq_max     = 1
0.00.331.326 I llama_new_context_with_model: n_ctx         = 4096
0.00.331.326 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.331.327 I llama_new_context_with_model: n_batch       = 2048
0.00.331.327 I llama_new_context_with_model: n_ubatch      = 512
0.00.331.328 I llama_new_context_with_model: flash_attn    = 0
0.00.331.330 I llama_new_context_with_model: freq_base     = 10000.0
0.00.331.331 I llama_new_context_with_model: freq_scale    = 1
0.00.331.332 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.345.944 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.345.960 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.346.048 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.347.325 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.347.331 I llama_new_context_with_model: graph nodes  = 601
0.00.347.332 I llama_new_context_with_model: graph splits = 1
0.00.347.333 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.421.455 I main: llama threadpool init, n_threads = 4
0.00.421.471 I 
0.00.421.538 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.421.541 I 
0.00.421.581 I sampler seed: 1538084262
0.00.421.592 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.421.594 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.421.595 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.421.596 I 
 seconded.

The sentence is grammatically incorrect because it contains a misplaced modifier.

**Correct sentence:**

"The scientist, who is renowned for his

0.01.988.222 I llama_perf_sampler_print:    sampling time =       5.04 ms /    33 runs   (    0.15 ms per token,  6547.62 tokens per second)
0.01.988.225 I llama_perf_context_print:        load time =     420.70 ms
0.01.988.226 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.988.228 I llama_perf_context_print:        eval time =    1547.42 ms /    32 runs   (   48.36 ms per token,    20.68 tokens per second)
0.01.988.230 I llama_perf_context_print:       total time =    1566.77 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.189s
user	10m23.985s
sys	0m6.975s
