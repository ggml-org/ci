+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.651 I build: 4035 (c3beb9b9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.852 I main: llama backend init
0.00.001.104 I main: load the model and apply lora adapter, if any
0.00.023.431 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.442 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.023.529 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.540 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.541 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.546 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.547 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.548 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.550 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.551 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.552 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.559 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.562 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.563 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.564 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.565 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.018 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.246.906 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.265.032 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.265.040 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.265.041 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.265.042 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.265.043 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.265.045 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.265.046 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.265.050 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.265.051 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.265.052 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.265.053 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.265.054 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.265.062 I llama_model_loader: - type  f32:   37 tensors
0.00.265.064 I llama_model_loader: - type q8_0:  127 tensors
0.00.451.640 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.514.784 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.515.690 I llm_load_vocab: special tokens cache size = 5
0.00.610.703 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.610.768 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.610.769 I llm_load_print_meta: arch             = gemma
0.00.610.770 I llm_load_print_meta: vocab type       = SPM
0.00.610.771 I llm_load_print_meta: n_vocab          = 256000
0.00.610.773 I llm_load_print_meta: n_merges         = 0
0.00.610.773 I llm_load_print_meta: vocab_only       = 0
0.00.610.774 I llm_load_print_meta: n_ctx_train      = 8192
0.00.610.774 I llm_load_print_meta: n_embd           = 2048
0.00.610.775 I llm_load_print_meta: n_layer          = 18
0.00.610.838 I llm_load_print_meta: n_head           = 8
0.00.610.845 I llm_load_print_meta: n_head_kv        = 1
0.00.610.845 I llm_load_print_meta: n_rot            = 256
0.00.610.846 I llm_load_print_meta: n_swa            = 0
0.00.610.848 I llm_load_print_meta: n_embd_head_k    = 256
0.00.610.848 I llm_load_print_meta: n_embd_head_v    = 256
0.00.610.853 I llm_load_print_meta: n_gqa            = 8
0.00.610.858 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.610.863 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.610.867 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.610.869 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.610.869 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.610.869 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.610.888 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.610.896 I llm_load_print_meta: n_ff             = 16384
0.00.610.897 I llm_load_print_meta: n_expert         = 0
0.00.610.897 I llm_load_print_meta: n_expert_used    = 0
0.00.610.897 I llm_load_print_meta: causal attn      = 1
0.00.610.898 I llm_load_print_meta: pooling type     = 0
0.00.610.898 I llm_load_print_meta: rope type        = 2
0.00.610.899 I llm_load_print_meta: rope scaling     = linear
0.00.610.900 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.610.901 I llm_load_print_meta: freq_scale_train = 1
0.00.610.901 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.610.902 I llm_load_print_meta: rope_finetuned   = unknown
0.00.610.903 I llm_load_print_meta: ssm_d_conv       = 0
0.00.610.903 I llm_load_print_meta: ssm_d_inner      = 0
0.00.610.903 I llm_load_print_meta: ssm_d_state      = 0
0.00.610.903 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.610.904 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.610.905 I llm_load_print_meta: model type       = 2B
0.00.610.906 I llm_load_print_meta: model ftype      = Q8_0
0.00.610.906 I llm_load_print_meta: model params     = 2.51 B
0.00.610.916 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.610.919 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.610.920 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.610.920 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.610.920 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.610.921 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.610.921 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.610.922 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.610.927 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.610.928 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.610.929 I llm_load_print_meta: max token length = 93
0.00.713.221 I llm_load_tensors: CPU_Mapped model buffer size =   865.98 MiB
0.00.713.231 I llm_load_tensors: CPU_Mapped model buffer size =   334.74 MiB
0.00.713.232 I llm_load_tensors: CPU_Mapped model buffer size =   402.73 MiB
0.00.713.233 I llm_load_tensors: CPU_Mapped model buffer size =   335.27 MiB
0.00.713.234 I llm_load_tensors: CPU_Mapped model buffer size =   338.98 MiB
0.00.713.234 I llm_load_tensors: CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.719.218 I llama_new_context_with_model: n_seq_max     = 1
0.00.719.225 I llama_new_context_with_model: n_ctx         = 4096
0.00.719.225 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.719.226 I llama_new_context_with_model: n_batch       = 2048
0.00.719.226 I llama_new_context_with_model: n_ubatch      = 512
0.00.719.226 I llama_new_context_with_model: flash_attn    = 0
0.00.719.228 I llama_new_context_with_model: freq_base     = 10000.0
0.00.719.229 I llama_new_context_with_model: freq_scale    = 1
0.00.719.230 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.735.511 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.735.547 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.735.669 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.738.202 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.738.207 I llama_new_context_with_model: graph nodes  = 601
0.00.738.207 I llama_new_context_with_model: graph splits = 1
0.00.738.230 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.342.971 I main: llama threadpool init, n_threads = 4
0.01.342.984 I 
0.01.343.091 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.343.095 I 
0.01.343.321 I sampler seed: 1331890054
0.01.343.335 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.343.341 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.343.345 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.343.345 I 
 increabling of a certain phrase, expression, or idea. [end of text]


0.06.793.049 I llama_perf_sampler_print:    sampling time =      20.06 ms /    14 runs   (    1.43 ms per token,   697.91 tokens per second)
0.06.793.052 I llama_perf_context_print:        load time =    1341.78 ms
0.06.793.054 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.06.793.055 I llama_perf_context_print:        eval time =    5412.25 ms /    13 runs   (  416.33 ms per token,     2.40 tokens per second)
0.06.793.057 I llama_perf_context_print:       total time =    5450.09 ms /    14 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.658 I build: 4035 (c3beb9b9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.875 I main: llama backend init
0.00.001.147 I main: load the model and apply lora adapter, if any
0.00.023.494 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.023.589 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.603 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.607 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.611 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.613 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.614 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.615 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.617 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.619 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.626 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.629 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.630 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.631 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.632 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.146.464 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.245.451 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.263.621 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.263.630 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.263.632 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.263.633 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.263.634 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.263.635 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.263.636 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.263.640 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.263.641 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.263.642 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.263.643 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.263.644 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.263.652 I llama_model_loader: - type  f32:   37 tensors
0.00.263.654 I llama_model_loader: - type q8_0:  127 tensors
0.00.451.435 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.510.345 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.511.341 I llm_load_vocab: special tokens cache size = 5
0.00.606.825 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.606.893 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.606.894 I llm_load_print_meta: arch             = gemma
0.00.606.894 I llm_load_print_meta: vocab type       = SPM
0.00.606.895 I llm_load_print_meta: n_vocab          = 256000
0.00.606.897 I llm_load_print_meta: n_merges         = 0
0.00.606.898 I llm_load_print_meta: vocab_only       = 0
0.00.606.898 I llm_load_print_meta: n_ctx_train      = 8192
0.00.606.898 I llm_load_print_meta: n_embd           = 2048
0.00.606.899 I llm_load_print_meta: n_layer          = 18
0.00.606.964 I llm_load_print_meta: n_head           = 8
0.00.606.971 I llm_load_print_meta: n_head_kv        = 1
0.00.606.972 I llm_load_print_meta: n_rot            = 256
0.00.606.972 I llm_load_print_meta: n_swa            = 0
0.00.606.973 I llm_load_print_meta: n_embd_head_k    = 256
0.00.606.974 I llm_load_print_meta: n_embd_head_v    = 256
0.00.606.978 I llm_load_print_meta: n_gqa            = 8
0.00.606.983 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.606.988 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.606.989 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.606.990 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.606.991 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.606.992 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.606.992 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.606.997 I llm_load_print_meta: n_ff             = 16384
0.00.606.998 I llm_load_print_meta: n_expert         = 0
0.00.606.999 I llm_load_print_meta: n_expert_used    = 0
0.00.606.999 I llm_load_print_meta: causal attn      = 1
0.00.607.000 I llm_load_print_meta: pooling type     = 0
0.00.607.000 I llm_load_print_meta: rope type        = 2
0.00.607.001 I llm_load_print_meta: rope scaling     = linear
0.00.607.002 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.607.003 I llm_load_print_meta: freq_scale_train = 1
0.00.607.004 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.607.014 I llm_load_print_meta: rope_finetuned   = unknown
0.00.607.015 I llm_load_print_meta: ssm_d_conv       = 0
0.00.607.016 I llm_load_print_meta: ssm_d_inner      = 0
0.00.607.016 I llm_load_print_meta: ssm_d_state      = 0
0.00.607.016 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.607.016 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.607.017 I llm_load_print_meta: model type       = 2B
0.00.607.019 I llm_load_print_meta: model ftype      = Q8_0
0.00.607.020 I llm_load_print_meta: model params     = 2.51 B
0.00.607.029 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.607.030 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.607.030 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.607.031 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.607.031 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.607.036 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.607.036 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.607.037 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.607.043 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.607.045 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.607.045 I llm_load_print_meta: max token length = 93
0.00.706.302 I llm_load_tensors: CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.712.499 I llama_new_context_with_model: n_seq_max     = 1
0.00.712.506 I llama_new_context_with_model: n_ctx         = 4096
0.00.712.506 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.712.507 I llama_new_context_with_model: n_batch       = 2048
0.00.712.507 I llama_new_context_with_model: n_ubatch      = 512
0.00.712.507 I llama_new_context_with_model: flash_attn    = 0
0.00.712.510 I llama_new_context_with_model: freq_base     = 10000.0
0.00.712.510 I llama_new_context_with_model: freq_scale    = 1
0.00.712.511 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.729.509 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.729.551 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.729.675 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.732.151 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.732.155 I llama_new_context_with_model: graph nodes  = 601
0.00.732.155 I llama_new_context_with_model: graph splits = 1
0.00.732.181 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.339.062 I main: llama threadpool init, n_threads = 4
0.01.339.073 I 
0.01.339.192 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.339.196 I 
0.01.339.436 I sampler seed: 196784288
0.01.339.449 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.339.456 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.339.459 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.339.460 I 
 increamically.

I am unable to generate a response as I am unable to comprehend the prompt. Please provide more information so I can assist you. [end of text]


0.14.493.745 I llama_perf_sampler_print:    sampling time =      47.47 ms /    32 runs   (    1.48 ms per token,   674.10 tokens per second)
0.14.493.749 I llama_perf_context_print:        load time =    1337.81 ms
0.14.493.751 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.493.753 I llama_perf_context_print:        eval time =   13067.45 ms /    31 runs   (  421.53 ms per token,     2.37 tokens per second)
0.14.493.754 I llama_perf_context_print:       total time =   13154.69 ms /    32 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.649 I build: 4035 (c3beb9b9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.854 I main: llama backend init
0.00.001.118 I main: load the model and apply lora adapter, if any
0.00.026.630 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.026.641 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.026.735 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.026.748 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.026.750 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.026.755 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.026.759 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.026.760 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.026.761 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.026.762 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.026.762 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.026.770 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.026.771 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.026.772 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.026.774 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.026.775 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.213 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.332 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.420 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.428 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.429 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.430 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.431 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.432 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.434 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.437 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.438 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.439 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.440 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.267.441 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.448 I llama_model_loader: - type  f32:   37 tensors
0.00.267.450 I llama_model_loader: - type q8_0:  127 tensors
0.00.448.680 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.504.948 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.505.821 I llm_load_vocab: special tokens cache size = 5
0.00.601.022 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.601.091 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.601.092 I llm_load_print_meta: arch             = gemma
0.00.601.093 I llm_load_print_meta: vocab type       = SPM
0.00.601.093 I llm_load_print_meta: n_vocab          = 256000
0.00.601.096 I llm_load_print_meta: n_merges         = 0
0.00.601.096 I llm_load_print_meta: vocab_only       = 0
0.00.601.097 I llm_load_print_meta: n_ctx_train      = 8192
0.00.601.097 I llm_load_print_meta: n_embd           = 2048
0.00.601.098 I llm_load_print_meta: n_layer          = 18
0.00.601.163 I llm_load_print_meta: n_head           = 8
0.00.601.170 I llm_load_print_meta: n_head_kv        = 1
0.00.601.172 I llm_load_print_meta: n_rot            = 256
0.00.601.172 I llm_load_print_meta: n_swa            = 0
0.00.601.172 I llm_load_print_meta: n_embd_head_k    = 256
0.00.601.173 I llm_load_print_meta: n_embd_head_v    = 256
0.00.601.177 I llm_load_print_meta: n_gqa            = 8
0.00.601.182 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.601.187 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.601.189 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.601.190 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.601.191 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.601.192 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.601.193 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.601.199 I llm_load_print_meta: n_ff             = 16384
0.00.601.199 I llm_load_print_meta: n_expert         = 0
0.00.601.200 I llm_load_print_meta: n_expert_used    = 0
0.00.601.201 I llm_load_print_meta: causal attn      = 1
0.00.601.201 I llm_load_print_meta: pooling type     = 0
0.00.601.201 I llm_load_print_meta: rope type        = 2
0.00.601.202 I llm_load_print_meta: rope scaling     = linear
0.00.601.203 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.601.204 I llm_load_print_meta: freq_scale_train = 1
0.00.601.205 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.601.205 I llm_load_print_meta: rope_finetuned   = unknown
0.00.601.206 I llm_load_print_meta: ssm_d_conv       = 0
0.00.601.206 I llm_load_print_meta: ssm_d_inner      = 0
0.00.601.207 I llm_load_print_meta: ssm_d_state      = 0
0.00.601.207 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.601.207 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.601.216 I llm_load_print_meta: model type       = 2B
0.00.601.217 I llm_load_print_meta: model ftype      = Q8_0
0.00.601.218 I llm_load_print_meta: model params     = 2.51 B
0.00.601.227 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.601.228 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.601.229 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.601.229 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.601.229 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.601.230 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.601.243 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.601.246 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.601.252 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.601.263 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.601.264 I llm_load_print_meta: max token length = 93
0.00.694.314 I llm_load_tensors: CPU_Mapped model buffer size =   967.99 MiB
0.00.694.323 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.694.323 I llm_load_tensors: CPU_Mapped model buffer size =   411.77 MiB
0.00.694.324 I llm_load_tensors: CPU_Mapped model buffer size =   437.27 MiB
0.00.694.325 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.694.326 I llm_load_tensors: CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.700.118 I llama_new_context_with_model: n_seq_max     = 1
0.00.700.126 I llama_new_context_with_model: n_ctx         = 4096
0.00.700.126 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.700.127 I llama_new_context_with_model: n_batch       = 2048
0.00.700.127 I llama_new_context_with_model: n_ubatch      = 512
0.00.700.128 I llama_new_context_with_model: flash_attn    = 0
0.00.700.130 I llama_new_context_with_model: freq_base     = 10000.0
0.00.700.130 I llama_new_context_with_model: freq_scale    = 1
0.00.700.131 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.716.306 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.716.344 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.716.472 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.719.000 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.719.004 I llama_new_context_with_model: graph nodes  = 601
0.00.719.004 I llama_new_context_with_model: graph splits = 1
0.00.719.029 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.322.779 I main: llama threadpool init, n_threads = 4
0.01.322.790 I 
0.01.322.898 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.322.902 I 
0.01.323.130 I sampler seed: 3575726469
0.01.323.143 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.323.149 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.323.153 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.323.153 I 
 increasities, and other forms of sexual harassment are a pervasive problem in the workplace.

**a) Identify the key factors that contribute to the prevalence of sexual

0.14.799.600 I llama_perf_sampler_print:    sampling time =      49.19 ms /    33 runs   (    1.49 ms per token,   670.90 tokens per second)
0.14.799.603 I llama_perf_context_print:        load time =    1321.56 ms
0.14.799.605 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.799.607 I llama_perf_context_print:        eval time =   13387.18 ms /    32 runs   (  418.35 ms per token,     2.39 tokens per second)
0.14.799.609 I llama_perf_context_print:       total time =   13476.83 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.627 I build: 4035 (c3beb9b9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.826 I main: llama backend init
0.00.001.086 I main: load the model and apply lora adapter, if any
0.00.023.248 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.257 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.340 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.351 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.352 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.356 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.357 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.359 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.361 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.362 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.363 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.369 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.370 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.371 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.372 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.373 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.146.027 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.245.042 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.263.194 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.263.201 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.263.202 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.263.203 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.263.204 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.263.206 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.263.208 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.263.212 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.263.212 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.263.214 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.263.216 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.263.227 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.263.237 I llama_model_loader: - type  f32:   37 tensors
0.00.263.239 I llama_model_loader: - type q8_0:  127 tensors
0.00.461.844 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.521.956 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.522.848 I llm_load_vocab: special tokens cache size = 5
0.00.617.773 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.617.843 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.617.844 I llm_load_print_meta: arch             = gemma
0.00.617.844 I llm_load_print_meta: vocab type       = SPM
0.00.617.845 I llm_load_print_meta: n_vocab          = 256000
0.00.617.848 I llm_load_print_meta: n_merges         = 0
0.00.617.848 I llm_load_print_meta: vocab_only       = 0
0.00.617.849 I llm_load_print_meta: n_ctx_train      = 8192
0.00.617.850 I llm_load_print_meta: n_embd           = 2048
0.00.617.850 I llm_load_print_meta: n_layer          = 18
0.00.617.914 I llm_load_print_meta: n_head           = 8
0.00.617.921 I llm_load_print_meta: n_head_kv        = 1
0.00.617.922 I llm_load_print_meta: n_rot            = 256
0.00.617.922 I llm_load_print_meta: n_swa            = 0
0.00.617.922 I llm_load_print_meta: n_embd_head_k    = 256
0.00.617.924 I llm_load_print_meta: n_embd_head_v    = 256
0.00.617.929 I llm_load_print_meta: n_gqa            = 8
0.00.617.934 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.617.939 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.617.949 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.617.951 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.617.952 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.617.952 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.617.955 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.617.961 I llm_load_print_meta: n_ff             = 16384
0.00.617.974 I llm_load_print_meta: n_expert         = 0
0.00.617.979 I llm_load_print_meta: n_expert_used    = 0
0.00.617.979 I llm_load_print_meta: causal attn      = 1
0.00.617.980 I llm_load_print_meta: pooling type     = 0
0.00.617.980 I llm_load_print_meta: rope type        = 2
0.00.617.981 I llm_load_print_meta: rope scaling     = linear
0.00.617.982 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.617.983 I llm_load_print_meta: freq_scale_train = 1
0.00.617.983 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.617.984 I llm_load_print_meta: rope_finetuned   = unknown
0.00.617.984 I llm_load_print_meta: ssm_d_conv       = 0
0.00.617.984 I llm_load_print_meta: ssm_d_inner      = 0
0.00.617.984 I llm_load_print_meta: ssm_d_state      = 0
0.00.617.985 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.617.985 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.617.986 I llm_load_print_meta: model type       = 2B
0.00.617.994 I llm_load_print_meta: model ftype      = Q8_0
0.00.617.995 I llm_load_print_meta: model params     = 2.51 B
0.00.618.004 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.618.004 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.618.004 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.618.012 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.618.013 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.618.013 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.618.015 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.618.015 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.618.022 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.618.024 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.618.024 I llm_load_print_meta: max token length = 93
0.00.690.085 I llm_load_tensors: CPU_Mapped model buffer size =  1904.18 MiB
0.00.690.095 I llm_load_tensors: CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.695.912 I llama_new_context_with_model: n_seq_max     = 1
0.00.695.919 I llama_new_context_with_model: n_ctx         = 4096
0.00.695.920 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.695.920 I llama_new_context_with_model: n_batch       = 2048
0.00.695.920 I llama_new_context_with_model: n_ubatch      = 512
0.00.695.921 I llama_new_context_with_model: flash_attn    = 0
0.00.695.923 I llama_new_context_with_model: freq_base     = 10000.0
0.00.695.924 I llama_new_context_with_model: freq_scale    = 1
0.00.695.925 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.711.939 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.711.979 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.712.098 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.714.630 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.714.634 I llama_new_context_with_model: graph nodes  = 601
0.00.714.634 I llama_new_context_with_model: graph splits = 1
0.00.714.659 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.322.968 I main: llama threadpool init, n_threads = 4
0.01.322.980 I 
0.01.323.096 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.323.100 I 
0.01.323.337 I sampler seed: 2305327262
0.01.323.350 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.323.357 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.323.358 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.323.358 I 
 increasities. 

I cannot answer this question as it contains sexually suggestive and inappropriate content. [end of text]


0.09.803.531 I llama_perf_sampler_print:    sampling time =      30.66 ms /    21 runs   (    1.46 ms per token,   684.98 tokens per second)
0.09.803.533 I llama_perf_context_print:        load time =    1321.78 ms
0.09.803.556 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.09.803.558 I llama_perf_context_print:        eval time =    8423.52 ms /    20 runs   (  421.18 ms per token,     2.37 tokens per second)
0.09.803.559 I llama_perf_context_print:       total time =    8480.57 ms /    21 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m55.883s
user	2m54.871s
sys	0m9.424s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4035 (c3beb9b9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199356.16 ms
main:    total time = 199356.16 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.648 I build: 4035 (c3beb9b9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.848 I main: llama backend init
0.00.001.112 I main: load the model and apply lora adapter, if any
0.00.023.943 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.023.952 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.045 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.056 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.058 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.063 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.067 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.068 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.070 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.071 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.072 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.078 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.079 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.080 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.081 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.083 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.146.946 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.246.609 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.264.881 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.264.890 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.264.892 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.264.893 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.264.894 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.264.895 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.264.896 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.264.901 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.264.902 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.264.903 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.264.903 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.264.916 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.264.927 I llama_model_loader: - type  f32:   37 tensors
0.00.264.930 I llama_model_loader: - type q4_K:  108 tensors
0.00.264.930 I llama_model_loader: - type q6_K:   19 tensors
0.00.441.405 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.500.834 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.501.815 I llm_load_vocab: special tokens cache size = 5
0.00.597.299 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.597.369 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.597.370 I llm_load_print_meta: arch             = gemma
0.00.597.371 I llm_load_print_meta: vocab type       = SPM
0.00.597.372 I llm_load_print_meta: n_vocab          = 256000
0.00.597.374 I llm_load_print_meta: n_merges         = 0
0.00.597.375 I llm_load_print_meta: vocab_only       = 0
0.00.597.375 I llm_load_print_meta: n_ctx_train      = 8192
0.00.597.375 I llm_load_print_meta: n_embd           = 2048
0.00.597.376 I llm_load_print_meta: n_layer          = 18
0.00.597.444 I llm_load_print_meta: n_head           = 8
0.00.597.452 I llm_load_print_meta: n_head_kv        = 1
0.00.597.452 I llm_load_print_meta: n_rot            = 256
0.00.597.453 I llm_load_print_meta: n_swa            = 0
0.00.597.453 I llm_load_print_meta: n_embd_head_k    = 256
0.00.597.453 I llm_load_print_meta: n_embd_head_v    = 256
0.00.597.458 I llm_load_print_meta: n_gqa            = 8
0.00.597.463 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.597.468 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.597.469 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.597.470 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.597.471 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.597.471 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.597.472 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.597.477 I llm_load_print_meta: n_ff             = 16384
0.00.597.478 I llm_load_print_meta: n_expert         = 0
0.00.597.479 I llm_load_print_meta: n_expert_used    = 0
0.00.597.488 I llm_load_print_meta: causal attn      = 1
0.00.597.501 I llm_load_print_meta: pooling type     = 0
0.00.597.502 I llm_load_print_meta: rope type        = 2
0.00.597.503 I llm_load_print_meta: rope scaling     = linear
0.00.597.504 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.597.505 I llm_load_print_meta: freq_scale_train = 1
0.00.597.505 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.597.506 I llm_load_print_meta: rope_finetuned   = unknown
0.00.597.506 I llm_load_print_meta: ssm_d_conv       = 0
0.00.597.506 I llm_load_print_meta: ssm_d_inner      = 0
0.00.597.507 I llm_load_print_meta: ssm_d_state      = 0
0.00.597.507 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.597.507 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.597.508 I llm_load_print_meta: model type       = 2B
0.00.597.509 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.597.510 I llm_load_print_meta: model params     = 2.51 B
0.00.597.519 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.597.519 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.597.520 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.597.521 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.597.521 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.597.522 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.597.522 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.597.523 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.597.529 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.597.531 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.597.531 I llm_load_print_meta: max token length = 93
0.00.661.818 I llm_load_tensors: CPU_Mapped model buffer size =   604.15 MiB
0.00.661.827 I llm_load_tensors: CPU_Mapped model buffer size =   185.62 MiB
0.00.661.828 I llm_load_tensors: CPU_Mapped model buffer size =   221.61 MiB
0.00.661.829 I llm_load_tensors: CPU_Mapped model buffer size =   185.89 MiB
0.00.661.829 I llm_load_tensors: CPU_Mapped model buffer size =   187.86 MiB
0.00.661.830 I llm_load_tensors: CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.667.781 I llama_new_context_with_model: n_seq_max     = 1
0.00.667.787 I llama_new_context_with_model: n_ctx         = 4096
0.00.667.787 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.667.787 I llama_new_context_with_model: n_batch       = 2048
0.00.667.788 I llama_new_context_with_model: n_ubatch      = 512
0.00.667.788 I llama_new_context_with_model: flash_attn    = 0
0.00.667.790 I llama_new_context_with_model: freq_base     = 10000.0
0.00.667.791 I llama_new_context_with_model: freq_scale    = 1
0.00.667.792 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.684.630 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.684.671 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.684.795 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.687.311 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.687.315 I llama_new_context_with_model: graph nodes  = 601
0.00.687.315 I llama_new_context_with_model: graph splits = 1
0.00.687.340 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.261.005 I main: llama threadpool init, n_threads = 4
0.01.261.017 I 
0.01.261.130 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.261.133 I 
0.01.261.366 I sampler seed: 2050938601
0.01.261.379 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.261.385 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.261.388 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.261.388 I 
 secon.

I am unable to access the requested information because it is currently unavailable. Please check back later or try again later. [end of text]


0.10.390.990 I llama_perf_sampler_print:    sampling time =      41.49 ms /    28 runs   (    1.48 ms per token,   674.80 tokens per second)
0.10.391.013 I llama_perf_context_print:        load time =    1259.80 ms
0.10.391.015 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.10.391.016 I llama_perf_context_print:        eval time =    9053.93 ms /    27 runs   (  335.33 ms per token,     2.98 tokens per second)
0.10.391.018 I llama_perf_context_print:       total time =    9130.00 ms /    28 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4035 (c3beb9b9)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199359.69 ms
main:    total time = 199359.69 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.635 I build: 4035 (c3beb9b9) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.845 I main: llama backend init
0.00.001.101 I main: load the model and apply lora adapter, if any
0.00.023.446 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.546 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.558 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.560 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.564 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.566 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.567 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.576 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.578 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.579 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.584 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.585 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.586 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.587 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.023.588 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.146.338 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.244.987 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.263.163 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.263.170 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.263.172 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.263.172 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.263.174 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.263.175 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.263.176 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.263.180 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.263.181 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.263.189 I llama_model_loader: - type  f32:   37 tensors
0.00.263.191 I llama_model_loader: - type q4_K:  108 tensors
0.00.263.192 I llama_model_loader: - type q6_K:   19 tensors
0.00.447.305 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.506.808 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.507.676 I llm_load_vocab: special tokens cache size = 5
0.00.603.162 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.603.234 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.603.234 I llm_load_print_meta: arch             = gemma
0.00.603.235 I llm_load_print_meta: vocab type       = SPM
0.00.603.236 I llm_load_print_meta: n_vocab          = 256000
0.00.603.238 I llm_load_print_meta: n_merges         = 0
0.00.603.239 I llm_load_print_meta: vocab_only       = 0
0.00.603.239 I llm_load_print_meta: n_ctx_train      = 8192
0.00.603.239 I llm_load_print_meta: n_embd           = 2048
0.00.603.240 I llm_load_print_meta: n_layer          = 18
0.00.603.305 I llm_load_print_meta: n_head           = 8
0.00.603.313 I llm_load_print_meta: n_head_kv        = 1
0.00.603.313 I llm_load_print_meta: n_rot            = 256
0.00.603.314 I llm_load_print_meta: n_swa            = 0
0.00.603.314 I llm_load_print_meta: n_embd_head_k    = 256
0.00.603.314 I llm_load_print_meta: n_embd_head_v    = 256
0.00.603.319 I llm_load_print_meta: n_gqa            = 8
0.00.603.323 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.603.329 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.603.331 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.603.332 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.603.332 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.603.334 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.603.334 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.603.339 I llm_load_print_meta: n_ff             = 16384
0.00.603.340 I llm_load_print_meta: n_expert         = 0
0.00.603.341 I llm_load_print_meta: n_expert_used    = 0
0.00.603.342 I llm_load_print_meta: causal attn      = 1
0.00.603.342 I llm_load_print_meta: pooling type     = 0
0.00.603.343 I llm_load_print_meta: rope type        = 2
0.00.603.343 I llm_load_print_meta: rope scaling     = linear
0.00.603.345 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.603.345 I llm_load_print_meta: freq_scale_train = 1
0.00.603.346 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.603.354 I llm_load_print_meta: rope_finetuned   = unknown
0.00.603.355 I llm_load_print_meta: ssm_d_conv       = 0
0.00.603.356 I llm_load_print_meta: ssm_d_inner      = 0
0.00.603.357 I llm_load_print_meta: ssm_d_state      = 0
0.00.603.357 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.603.357 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.603.358 I llm_load_print_meta: model type       = 2B
0.00.603.359 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.603.360 I llm_load_print_meta: model params     = 2.51 B
0.00.603.369 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.603.369 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.603.370 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.603.370 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.603.371 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.603.371 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.603.372 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.603.372 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.603.378 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.603.391 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.603.392 I llm_load_print_meta: max token length = 93
0.00.663.537 I llm_load_tensors: CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.669.241 I llama_new_context_with_model: n_seq_max     = 1
0.00.669.248 I llama_new_context_with_model: n_ctx         = 4096
0.00.669.248 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.669.249 I llama_new_context_with_model: n_batch       = 2048
0.00.669.249 I llama_new_context_with_model: n_ubatch      = 512
0.00.669.250 I llama_new_context_with_model: flash_attn    = 0
0.00.669.252 I llama_new_context_with_model: freq_base     = 10000.0
0.00.669.253 I llama_new_context_with_model: freq_scale    = 1
0.00.669.254 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.685.752 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.685.792 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.685.912 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.688.473 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.688.476 I llama_new_context_with_model: graph nodes  = 601
0.00.688.477 I llama_new_context_with_model: graph splits = 1
0.00.688.501 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.264.128 I main: llama threadpool init, n_threads = 4
0.01.264.139 I 
0.01.264.250 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.264.254 I 
0.01.264.481 I sampler seed: 1364342836
0.01.264.494 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.264.501 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.264.502 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.264.503 I 
 increasities, and other types of inappropriate behavior may occur in an environment where alcohol is present.

**Factors Contributing to Unsafe Behavior:**

* **Impaired

0.12.196.553 I llama_perf_sampler_print:    sampling time =      49.11 ms /    33 runs   (    1.49 ms per token,   672.03 tokens per second)
0.12.196.566 I llama_perf_context_print:        load time =    1262.94 ms
0.12.196.568 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.196.570 I llama_perf_context_print:        eval time =   10843.16 ms /    32 runs   (  338.85 ms per token,     2.95 tokens per second)
0.12.196.572 I llama_perf_context_print:       total time =   10932.44 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m4.230s
user	50m7.129s
sys	0m6.309s
