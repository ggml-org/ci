+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.675 I build: 3916 (13dca2a5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.879 I main: llama backend init
0.00.002.829 I main: load the model and apply lora adapter, if any
0.00.024.785 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.987 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.078 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.089 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.090 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.094 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.096 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.097 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.098 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.099 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.100 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.107 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.110 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.111 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.112 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.113 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.464 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.138 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.975 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.983 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.984 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.985 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.986 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.987 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.988 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.991 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.992 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.993 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.994 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.997 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.268.004 I llama_model_loader: - type  f32:   37 tensors
0.00.268.008 I llama_model_loader: - type q8_0:  127 tensors
0.00.442.142 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.483.269 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.484.905 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.489.790 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.500.036 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.500.935 I llm_load_vocab: special tokens cache size = 5
0.00.598.300 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.598.373 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.598.374 I llm_load_print_meta: arch             = gemma
0.00.598.374 I llm_load_print_meta: vocab type       = SPM
0.00.598.375 I llm_load_print_meta: n_vocab          = 256000
0.00.598.378 I llm_load_print_meta: n_merges         = 0
0.00.598.378 I llm_load_print_meta: vocab_only       = 0
0.00.598.379 I llm_load_print_meta: n_ctx_train      = 8192
0.00.598.379 I llm_load_print_meta: n_embd           = 2048
0.00.598.380 I llm_load_print_meta: n_layer          = 18
0.00.598.445 I llm_load_print_meta: n_head           = 8
0.00.598.453 I llm_load_print_meta: n_head_kv        = 1
0.00.598.454 I llm_load_print_meta: n_rot            = 256
0.00.598.455 I llm_load_print_meta: n_swa            = 0
0.00.598.455 I llm_load_print_meta: n_embd_head_k    = 256
0.00.598.455 I llm_load_print_meta: n_embd_head_v    = 256
0.00.598.460 I llm_load_print_meta: n_gqa            = 8
0.00.598.465 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.598.470 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.598.471 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.598.474 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.598.474 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.598.484 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.598.488 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.598.495 I llm_load_print_meta: n_ff             = 16384
0.00.598.496 I llm_load_print_meta: n_expert         = 0
0.00.598.496 I llm_load_print_meta: n_expert_used    = 0
0.00.598.496 I llm_load_print_meta: causal attn      = 1
0.00.598.497 I llm_load_print_meta: pooling type     = 0
0.00.598.498 I llm_load_print_meta: rope type        = 2
0.00.598.498 I llm_load_print_meta: rope scaling     = linear
0.00.598.500 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.598.504 I llm_load_print_meta: freq_scale_train = 1
0.00.598.504 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.598.505 I llm_load_print_meta: rope_finetuned   = unknown
0.00.598.505 I llm_load_print_meta: ssm_d_conv       = 0
0.00.598.505 I llm_load_print_meta: ssm_d_inner      = 0
0.00.598.506 I llm_load_print_meta: ssm_d_state      = 0
0.00.598.506 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.598.506 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.598.507 I llm_load_print_meta: model type       = 2B
0.00.598.508 I llm_load_print_meta: model ftype      = Q8_0
0.00.598.509 I llm_load_print_meta: model params     = 2.51 B
0.00.598.510 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.598.510 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.598.511 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.598.511 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.598.512 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.598.513 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.598.513 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.598.514 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.598.520 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.598.522 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.598.522 I llm_load_print_meta: max token length = 93
0.00.598.696 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.698.269 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.698.278 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.698.279 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.698.280 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.698.281 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.698.281 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.703.946 I llama_new_context_with_model: n_ctx      = 8192
0.00.703.953 I llama_new_context_with_model: n_batch    = 2048
0.00.703.954 I llama_new_context_with_model: n_ubatch   = 512
0.00.703.954 I llama_new_context_with_model: flash_attn = 0
0.00.703.957 I llama_new_context_with_model: freq_base  = 10000.0
0.00.703.958 I llama_new_context_with_model: freq_scale = 1
0.00.733.432 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.733.474 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.733.593 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.734.971 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.734.977 I llama_new_context_with_model: graph nodes  = 601
0.00.734.977 I llama_new_context_with_model: graph splits = 1
0.00.734.993 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.349.454 I main: llama threadpool init, n_threads = 4
0.01.349.464 I 
0.01.349.567 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.349.570 I 
0.01.349.753 I sampler seed: 3749015115
0.01.349.763 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.349.769 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.349.770 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.349.771 I 
 increasities. 

I am unable to generate the requested response as it contains sexually suggestive and inappropriate content. My purpose is to assist with tasks that are within

0.14.889.243 I llama_perf_sampler_print:    sampling time =      49.16 ms /    33 runs   (    1.49 ms per token,   671.28 tokens per second)
0.14.889.256 I llama_perf_context_print:        load time =    1346.54 ms
0.14.889.258 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.889.260 I llama_perf_context_print:        eval time =   13456.92 ms /    32 runs   (  420.53 ms per token,     2.38 tokens per second)
0.14.889.261 I llama_perf_context_print:       total time =   13539.80 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.647 I build: 3916 (13dca2a5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.841 I main: llama backend init
0.00.002.789 I main: load the model and apply lora adapter, if any
0.00.024.807 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.899 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.914 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.918 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.922 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.923 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.924 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.925 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.926 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.930 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.936 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.937 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.938 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.939 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.941 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.496 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.622 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.479 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.486 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.488 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.489 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.490 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.491 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.492 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.496 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.497 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.498 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.499 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.267.501 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.508 I llama_model_loader: - type  f32:   37 tensors
0.00.267.512 I llama_model_loader: - type q8_0:  127 tensors
0.00.447.957 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.491.827 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.493.613 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.498.953 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.510.410 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.511.359 I llm_load_vocab: special tokens cache size = 5
0.00.604.664 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.604.734 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.604.735 I llm_load_print_meta: arch             = gemma
0.00.604.735 I llm_load_print_meta: vocab type       = SPM
0.00.604.736 I llm_load_print_meta: n_vocab          = 256000
0.00.604.738 I llm_load_print_meta: n_merges         = 0
0.00.604.738 I llm_load_print_meta: vocab_only       = 0
0.00.604.739 I llm_load_print_meta: n_ctx_train      = 8192
0.00.604.739 I llm_load_print_meta: n_embd           = 2048
0.00.604.740 I llm_load_print_meta: n_layer          = 18
0.00.604.805 I llm_load_print_meta: n_head           = 8
0.00.604.812 I llm_load_print_meta: n_head_kv        = 1
0.00.604.813 I llm_load_print_meta: n_rot            = 256
0.00.604.814 I llm_load_print_meta: n_swa            = 0
0.00.604.815 I llm_load_print_meta: n_embd_head_k    = 256
0.00.604.815 I llm_load_print_meta: n_embd_head_v    = 256
0.00.604.820 I llm_load_print_meta: n_gqa            = 8
0.00.604.825 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.604.830 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.604.837 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.604.838 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.604.839 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.604.839 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.604.840 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.604.844 I llm_load_print_meta: n_ff             = 16384
0.00.604.845 I llm_load_print_meta: n_expert         = 0
0.00.604.845 I llm_load_print_meta: n_expert_used    = 0
0.00.604.846 I llm_load_print_meta: causal attn      = 1
0.00.604.846 I llm_load_print_meta: pooling type     = 0
0.00.604.846 I llm_load_print_meta: rope type        = 2
0.00.604.847 I llm_load_print_meta: rope scaling     = linear
0.00.604.850 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.604.850 I llm_load_print_meta: freq_scale_train = 1
0.00.604.851 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.604.851 I llm_load_print_meta: rope_finetuned   = unknown
0.00.604.852 I llm_load_print_meta: ssm_d_conv       = 0
0.00.604.852 I llm_load_print_meta: ssm_d_inner      = 0
0.00.604.852 I llm_load_print_meta: ssm_d_state      = 0
0.00.604.852 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.604.853 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.604.854 I llm_load_print_meta: model type       = 2B
0.00.604.855 I llm_load_print_meta: model ftype      = Q8_0
0.00.604.856 I llm_load_print_meta: model params     = 2.51 B
0.00.604.857 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.604.857 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.604.858 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.604.858 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.604.859 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.604.860 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.604.860 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.604.862 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.604.867 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.604.868 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.604.869 I llm_load_print_meta: max token length = 93
0.00.605.032 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.699.254 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.704.926 I llama_new_context_with_model: n_ctx      = 8192
0.00.704.932 I llama_new_context_with_model: n_batch    = 2048
0.00.704.933 I llama_new_context_with_model: n_ubatch   = 512
0.00.704.933 I llama_new_context_with_model: flash_attn = 0
0.00.704.936 I llama_new_context_with_model: freq_base  = 10000.0
0.00.704.936 I llama_new_context_with_model: freq_scale = 1
0.00.733.949 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.733.991 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.734.109 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.735.460 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.735.465 I llama_new_context_with_model: graph nodes  = 601
0.00.735.465 I llama_new_context_with_model: graph splits = 1
0.00.735.481 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.347.389 I main: llama threadpool init, n_threads = 4
0.01.347.400 I 
0.01.347.505 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.347.509 I 
0.01.347.676 I sampler seed: 3501130651
0.01.347.686 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.347.692 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.347.693 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.347.693 I 
 increasities with a touch of whimsy and a dash of absurdity.

These are the kind of stories that burrow beneath the surface, whispering secrets and sparking imaginations

0.14.973.051 I llama_perf_sampler_print:    sampling time =      49.60 ms /    33 runs   (    1.50 ms per token,   665.30 tokens per second)
0.14.973.054 I llama_perf_context_print:        load time =    1344.51 ms
0.14.973.055 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.973.057 I llama_perf_context_print:        eval time =   13542.03 ms /    32 runs   (  423.19 ms per token,     2.36 tokens per second)
0.14.973.058 I llama_perf_context_print:       total time =   13625.67 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.647 I build: 3916 (13dca2a5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.848 I main: llama backend init
0.00.002.780 I main: load the model and apply lora adapter, if any
0.00.024.456 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.660 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.744 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.755 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.756 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.761 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.762 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.764 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.765 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.766 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.767 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.774 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.777 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.778 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.779 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.780 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.347 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.002 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.866 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.873 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.874 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.875 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.876 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.877 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.879 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.266.882 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.266.883 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.266.884 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.266.885 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.266.886 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.266.901 I llama_model_loader: - type  f32:   37 tensors
0.00.266.905 I llama_model_loader: - type q8_0:  127 tensors
0.00.441.331 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.485.223 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.487.014 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.492.351 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.503.487 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.504.422 I llm_load_vocab: special tokens cache size = 5
0.00.609.618 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.609.691 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.609.691 I llm_load_print_meta: arch             = gemma
0.00.609.692 I llm_load_print_meta: vocab type       = SPM
0.00.609.693 I llm_load_print_meta: n_vocab          = 256000
0.00.609.695 I llm_load_print_meta: n_merges         = 0
0.00.609.695 I llm_load_print_meta: vocab_only       = 0
0.00.609.696 I llm_load_print_meta: n_ctx_train      = 8192
0.00.609.696 I llm_load_print_meta: n_embd           = 2048
0.00.609.696 I llm_load_print_meta: n_layer          = 18
0.00.609.761 I llm_load_print_meta: n_head           = 8
0.00.609.768 I llm_load_print_meta: n_head_kv        = 1
0.00.609.768 I llm_load_print_meta: n_rot            = 256
0.00.609.769 I llm_load_print_meta: n_swa            = 0
0.00.609.769 I llm_load_print_meta: n_embd_head_k    = 256
0.00.609.769 I llm_load_print_meta: n_embd_head_v    = 256
0.00.609.774 I llm_load_print_meta: n_gqa            = 8
0.00.609.779 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.609.804 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.609.806 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.609.807 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.609.807 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.609.808 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.609.808 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.609.814 I llm_load_print_meta: n_ff             = 16384
0.00.609.820 I llm_load_print_meta: n_expert         = 0
0.00.609.821 I llm_load_print_meta: n_expert_used    = 0
0.00.609.821 I llm_load_print_meta: causal attn      = 1
0.00.609.829 I llm_load_print_meta: pooling type     = 0
0.00.609.830 I llm_load_print_meta: rope type        = 2
0.00.609.831 I llm_load_print_meta: rope scaling     = linear
0.00.609.832 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.609.833 I llm_load_print_meta: freq_scale_train = 1
0.00.609.833 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.609.834 I llm_load_print_meta: rope_finetuned   = unknown
0.00.609.835 I llm_load_print_meta: ssm_d_conv       = 0
0.00.609.835 I llm_load_print_meta: ssm_d_inner      = 0
0.00.609.835 I llm_load_print_meta: ssm_d_state      = 0
0.00.609.836 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.609.844 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.609.845 I llm_load_print_meta: model type       = 2B
0.00.609.846 I llm_load_print_meta: model ftype      = Q8_0
0.00.609.847 I llm_load_print_meta: model params     = 2.51 B
0.00.609.848 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.609.848 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.609.849 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.609.854 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.609.854 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.609.855 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.609.855 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.609.862 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.609.869 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.609.870 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.609.871 I llm_load_print_meta: max token length = 93
0.00.610.039 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.687.053 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.687.061 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.687.061 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.687.062 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.687.063 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.687.063 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.692.717 I llama_new_context_with_model: n_ctx      = 8192
0.00.692.725 I llama_new_context_with_model: n_batch    = 2048
0.00.692.725 I llama_new_context_with_model: n_ubatch   = 512
0.00.692.726 I llama_new_context_with_model: flash_attn = 0
0.00.692.728 I llama_new_context_with_model: freq_base  = 10000.0
0.00.692.729 I llama_new_context_with_model: freq_scale = 1
0.00.722.773 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.722.819 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.722.963 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.724.346 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.724.350 I llama_new_context_with_model: graph nodes  = 601
0.00.724.351 I llama_new_context_with_model: graph splits = 1
0.00.724.367 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.335.688 I main: llama threadpool init, n_threads = 4
0.01.335.699 I 
0.01.335.805 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.335.812 I 
0.01.335.975 I sampler seed: 3332695830
0.01.335.985 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.335.991 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.335.993 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.335.993 I 
 seconally.

I am unable to generate a response because the provided context does not contain any information regarding the specific topic or task required. [end of text]


0.13.576.203 I llama_perf_sampler_print:    sampling time =      44.48 ms /    30 runs   (    1.48 ms per token,   674.48 tokens per second)
0.13.576.206 I llama_perf_context_print:        load time =    1332.82 ms
0.13.576.208 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.13.576.209 I llama_perf_context_print:        eval time =   12165.24 ms /    29 runs   (  419.49 ms per token,     2.38 tokens per second)
0.13.576.210 I llama_perf_context_print:       total time =   12240.52 ms /    30 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.638 I build: 3916 (13dca2a5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.909 I main: llama backend init
0.00.003.184 I main: load the model and apply lora adapter, if any
0.00.025.325 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.025.550 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.025.645 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.656 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.658 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.663 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.665 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.667 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.668 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.671 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.673 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.682 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.687 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.689 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.691 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.025.692 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.153.331 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.254.935 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.958 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.968 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.970 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.971 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.972 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.974 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.975 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.979 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.980 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.981 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.982 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.272.983 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.996 I llama_model_loader: - type  f32:   37 tensors
0.00.273.003 I llama_model_loader: - type q8_0:  127 tensors
0.00.449.666 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.491.356 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.493.054 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.498.086 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.508.741 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.509.714 I llm_load_vocab: special tokens cache size = 5
0.00.614.236 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.614.306 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.614.307 I llm_load_print_meta: arch             = gemma
0.00.614.308 I llm_load_print_meta: vocab type       = SPM
0.00.614.309 I llm_load_print_meta: n_vocab          = 256000
0.00.614.312 I llm_load_print_meta: n_merges         = 0
0.00.614.312 I llm_load_print_meta: vocab_only       = 0
0.00.614.313 I llm_load_print_meta: n_ctx_train      = 8192
0.00.614.313 I llm_load_print_meta: n_embd           = 2048
0.00.614.313 I llm_load_print_meta: n_layer          = 18
0.00.614.376 I llm_load_print_meta: n_head           = 8
0.00.614.385 I llm_load_print_meta: n_head_kv        = 1
0.00.614.386 I llm_load_print_meta: n_rot            = 256
0.00.614.388 I llm_load_print_meta: n_swa            = 0
0.00.614.389 I llm_load_print_meta: n_embd_head_k    = 256
0.00.614.390 I llm_load_print_meta: n_embd_head_v    = 256
0.00.614.405 I llm_load_print_meta: n_gqa            = 8
0.00.614.412 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.614.419 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.614.424 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.614.426 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.614.426 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.614.427 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.614.428 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.614.435 I llm_load_print_meta: n_ff             = 16384
0.00.614.436 I llm_load_print_meta: n_expert         = 0
0.00.614.436 I llm_load_print_meta: n_expert_used    = 0
0.00.614.437 I llm_load_print_meta: causal attn      = 1
0.00.614.438 I llm_load_print_meta: pooling type     = 0
0.00.614.438 I llm_load_print_meta: rope type        = 2
0.00.614.439 I llm_load_print_meta: rope scaling     = linear
0.00.614.441 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.614.442 I llm_load_print_meta: freq_scale_train = 1
0.00.614.443 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.614.443 I llm_load_print_meta: rope_finetuned   = unknown
0.00.614.444 I llm_load_print_meta: ssm_d_conv       = 0
0.00.614.445 I llm_load_print_meta: ssm_d_inner      = 0
0.00.614.446 I llm_load_print_meta: ssm_d_state      = 0
0.00.614.446 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.614.447 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.614.448 I llm_load_print_meta: model type       = 2B
0.00.614.450 I llm_load_print_meta: model ftype      = Q8_0
0.00.614.452 I llm_load_print_meta: model params     = 2.51 B
0.00.614.453 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.614.467 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.614.468 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.614.469 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.614.470 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.614.470 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.614.472 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.614.473 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.614.479 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.614.481 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.614.481 I llm_load_print_meta: max token length = 93
0.00.614.661 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.686.756 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.686.765 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.692.579 I llama_new_context_with_model: n_ctx      = 8192
0.00.692.586 I llama_new_context_with_model: n_batch    = 2048
0.00.692.586 I llama_new_context_with_model: n_ubatch   = 512
0.00.692.587 I llama_new_context_with_model: flash_attn = 0
0.00.692.589 I llama_new_context_with_model: freq_base  = 10000.0
0.00.692.590 I llama_new_context_with_model: freq_scale = 1
0.00.721.825 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.721.872 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.721.997 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.723.378 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.723.383 I llama_new_context_with_model: graph nodes  = 601
0.00.723.383 I llama_new_context_with_model: graph splits = 1
0.00.723.399 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.336.974 I main: llama threadpool init, n_threads = 4
0.01.336.984 I 
0.01.337.106 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.337.110 I 
0.01.337.292 I sampler seed: 297662515
0.01.337.303 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.337.311 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.337.312 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.337.316 I 
 increasities of the gods of Olympus, with the goddesses of Mount Olympus as their attendants.

**The Olympians and their attendants:**

* Zeus - Hera

0.14.863.185 I llama_perf_sampler_print:    sampling time =      49.33 ms /    33 runs   (    1.49 ms per token,   668.96 tokens per second)
0.14.863.188 I llama_perf_context_print:        load time =    1333.69 ms
0.14.863.190 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.863.205 I llama_perf_context_print:        eval time =   13443.52 ms /    32 runs   (  420.11 ms per token,     2.38 tokens per second)
0.14.863.206 I llama_perf_context_print:       total time =   13526.22 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	1m9.199s
user	3m44.367s
sys	0m9.387s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3916 (13dca2a5)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 200490.12 ms
main:    total time = 200490.12 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.635 I build: 3916 (13dca2a5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.830 I main: llama backend init
0.00.002.797 I main: load the model and apply lora adapter, if any
0.00.024.710 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.918 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.025.002 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.012 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.014 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.018 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.019 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.021 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.022 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.023 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.024 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.029 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.033 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.034 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.035 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.036 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.945 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.524 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.470 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.477 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.478 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.479 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.480 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.481 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.482 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.485 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.486 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.487 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.488 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.489 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.496 I llama_model_loader: - type  f32:   37 tensors
0.00.267.500 I llama_model_loader: - type q4_K:  108 tensors
0.00.267.501 I llama_model_loader: - type q6_K:   19 tensors
0.00.445.126 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.489.618 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.491.484 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.497.143 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.509.174 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.510.119 I llm_load_vocab: special tokens cache size = 5
0.00.603.604 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.603.674 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.603.675 I llm_load_print_meta: arch             = gemma
0.00.603.676 I llm_load_print_meta: vocab type       = SPM
0.00.603.677 I llm_load_print_meta: n_vocab          = 256000
0.00.603.679 I llm_load_print_meta: n_merges         = 0
0.00.603.679 I llm_load_print_meta: vocab_only       = 0
0.00.603.680 I llm_load_print_meta: n_ctx_train      = 8192
0.00.603.680 I llm_load_print_meta: n_embd           = 2048
0.00.603.680 I llm_load_print_meta: n_layer          = 18
0.00.603.744 I llm_load_print_meta: n_head           = 8
0.00.603.751 I llm_load_print_meta: n_head_kv        = 1
0.00.603.751 I llm_load_print_meta: n_rot            = 256
0.00.603.752 I llm_load_print_meta: n_swa            = 0
0.00.603.752 I llm_load_print_meta: n_embd_head_k    = 256
0.00.603.752 I llm_load_print_meta: n_embd_head_v    = 256
0.00.603.757 I llm_load_print_meta: n_gqa            = 8
0.00.603.762 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.603.767 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.603.768 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.603.769 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.603.770 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.603.770 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.603.770 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.603.775 I llm_load_print_meta: n_ff             = 16384
0.00.603.776 I llm_load_print_meta: n_expert         = 0
0.00.603.776 I llm_load_print_meta: n_expert_used    = 0
0.00.603.781 I llm_load_print_meta: causal attn      = 1
0.00.603.782 I llm_load_print_meta: pooling type     = 0
0.00.603.782 I llm_load_print_meta: rope type        = 2
0.00.603.782 I llm_load_print_meta: rope scaling     = linear
0.00.603.784 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.603.785 I llm_load_print_meta: freq_scale_train = 1
0.00.603.785 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.603.796 I llm_load_print_meta: rope_finetuned   = unknown
0.00.603.796 I llm_load_print_meta: ssm_d_conv       = 0
0.00.603.797 I llm_load_print_meta: ssm_d_inner      = 0
0.00.603.798 I llm_load_print_meta: ssm_d_state      = 0
0.00.603.798 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.603.798 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.603.800 I llm_load_print_meta: model type       = 2B
0.00.603.801 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.603.802 I llm_load_print_meta: model params     = 2.51 B
0.00.603.803 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.603.803 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.603.807 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.603.807 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.603.808 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.603.808 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.603.808 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.603.809 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.603.814 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.603.815 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.603.816 I llm_load_print_meta: max token length = 93
0.00.603.979 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.665.289 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.665.298 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.665.299 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.665.300 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.665.300 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.665.301 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.670.828 I llama_new_context_with_model: n_ctx      = 8192
0.00.670.834 I llama_new_context_with_model: n_batch    = 2048
0.00.670.835 I llama_new_context_with_model: n_ubatch   = 512
0.00.670.836 I llama_new_context_with_model: flash_attn = 0
0.00.670.838 I llama_new_context_with_model: freq_base  = 10000.0
0.00.670.839 I llama_new_context_with_model: freq_scale = 1
0.00.699.128 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.699.172 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.699.285 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.700.658 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.700.663 I llama_new_context_with_model: graph nodes  = 601
0.00.700.663 I llama_new_context_with_model: graph splits = 1
0.00.700.679 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.282.028 I main: llama threadpool init, n_threads = 4
0.01.282.040 I 
0.01.282.149 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.282.153 I 
0.01.282.324 I sampler seed: 574172086
0.01.282.335 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.282.342 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.282.344 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.282.344 I 
 seconded wings, a remarkable adaptation for aerial locomotion.

**a) How do dragonfly wings contribute to their ability to navigate?**
**b) Explain

0.12.212.780 I llama_perf_sampler_print:    sampling time =      49.10 ms /    33 runs   (    1.49 ms per token,   672.08 tokens per second)
0.12.212.783 I llama_perf_context_print:        load time =    1279.15 ms
0.12.212.785 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.212.786 I llama_perf_context_print:        eval time =   10848.75 ms /    32 runs   (  339.02 ms per token,     2.95 tokens per second)
0.12.212.798 I llama_perf_context_print:       total time =   10930.76 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3916 (13dca2a5)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199168.75 ms
main:    total time = 199168.75 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.678 I build: 3916 (13dca2a5) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.870 I main: llama backend init
0.00.002.812 I main: load the model and apply lora adapter, if any
0.00.024.970 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.025.057 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.025.071 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.025.073 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.025.077 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.025.079 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.025.081 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.025.089 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.025.091 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.025.092 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.025.097 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.025.098 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.025.107 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.025.111 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.025.112 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.151.359 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.250.095 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.268.031 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.268.038 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.268.039 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.268.041 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.268.042 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.268.043 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.268.044 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.268.048 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.268.049 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.268.056 I llama_model_loader: - type  f32:   37 tensors
0.00.268.060 I llama_model_loader: - type q4_K:  108 tensors
0.00.268.061 I llama_model_loader: - type q6_K:   19 tensors
0.00.443.404 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.484.442 W llm_load_vocab: control token:      2 '<bos>' is not marked as EOG
0.00.486.072 W llm_load_vocab: control token:      0 '<pad>' is not marked as EOG
0.00.490.966 W llm_load_vocab: control token:      1 '<eos>' is not marked as EOG
0.00.501.191 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.502.064 I llm_load_vocab: special tokens cache size = 5
0.00.595.654 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.595.722 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.595.723 I llm_load_print_meta: arch             = gemma
0.00.595.723 I llm_load_print_meta: vocab type       = SPM
0.00.595.724 I llm_load_print_meta: n_vocab          = 256000
0.00.595.726 I llm_load_print_meta: n_merges         = 0
0.00.595.727 I llm_load_print_meta: vocab_only       = 0
0.00.595.727 I llm_load_print_meta: n_ctx_train      = 8192
0.00.595.727 I llm_load_print_meta: n_embd           = 2048
0.00.595.728 I llm_load_print_meta: n_layer          = 18
0.00.595.792 I llm_load_print_meta: n_head           = 8
0.00.595.799 I llm_load_print_meta: n_head_kv        = 1
0.00.595.800 I llm_load_print_meta: n_rot            = 256
0.00.595.800 I llm_load_print_meta: n_swa            = 0
0.00.595.801 I llm_load_print_meta: n_embd_head_k    = 256
0.00.595.802 I llm_load_print_meta: n_embd_head_v    = 256
0.00.595.806 I llm_load_print_meta: n_gqa            = 8
0.00.595.811 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.595.816 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.595.817 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.595.818 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.595.819 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.595.819 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.595.820 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.595.825 I llm_load_print_meta: n_ff             = 16384
0.00.595.826 I llm_load_print_meta: n_expert         = 0
0.00.595.826 I llm_load_print_meta: n_expert_used    = 0
0.00.595.826 I llm_load_print_meta: causal attn      = 1
0.00.595.826 I llm_load_print_meta: pooling type     = 0
0.00.595.827 I llm_load_print_meta: rope type        = 2
0.00.595.828 I llm_load_print_meta: rope scaling     = linear
0.00.595.830 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.595.831 I llm_load_print_meta: freq_scale_train = 1
0.00.595.840 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.595.841 I llm_load_print_meta: rope_finetuned   = unknown
0.00.595.852 I llm_load_print_meta: ssm_d_conv       = 0
0.00.595.852 I llm_load_print_meta: ssm_d_inner      = 0
0.00.595.853 I llm_load_print_meta: ssm_d_state      = 0
0.00.595.853 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.595.854 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.595.854 I llm_load_print_meta: model type       = 2B
0.00.595.856 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.595.857 I llm_load_print_meta: model params     = 2.51 B
0.00.595.858 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.595.858 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.595.859 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.595.860 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.595.861 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.595.862 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.595.866 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.595.867 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.595.875 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.595.877 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.595.878 I llm_load_print_meta: max token length = 93
0.00.596.045 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.654.784 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.660.293 I llama_new_context_with_model: n_ctx      = 8192
0.00.660.299 I llama_new_context_with_model: n_batch    = 2048
0.00.660.300 I llama_new_context_with_model: n_ubatch   = 512
0.00.660.300 I llama_new_context_with_model: flash_attn = 0
0.00.660.303 I llama_new_context_with_model: freq_base  = 10000.0
0.00.660.304 I llama_new_context_with_model: freq_scale = 1
0.00.690.827 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.690.876 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.691.000 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.692.418 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.692.421 I llama_new_context_with_model: graph nodes  = 601
0.00.692.421 I llama_new_context_with_model: graph splits = 1
0.00.692.437 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.273.762 I main: llama threadpool init, n_threads = 4
0.01.273.774 I 
0.01.273.881 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.273.885 I 
0.01.274.049 I sampler seed: 2546785377
0.01.274.059 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.274.066 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.01.274.067 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.274.068 I 
 increamically.

I am a large language model, trained by Google. I am capable of generating human-quality text in response to a wide range of prompts

0.12.294.383 I llama_perf_sampler_print:    sampling time =      49.05 ms /    33 runs   (    1.49 ms per token,   672.76 tokens per second)
0.12.294.400 I llama_perf_context_print:        load time =    1270.87 ms
0.12.294.402 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.294.405 I llama_perf_context_print:        eval time =   10939.09 ms /    32 runs   (  341.85 ms per token,     2.93 tokens per second)
0.12.294.407 I llama_perf_context_print:       total time =   11020.63 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m7.056s
user	50m8.318s
sys	0m6.371s
